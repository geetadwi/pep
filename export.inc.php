<?php
include("includes/config.inc.php");
// ini_set("display_errors", "1");
// error_reporting(E_ALL);
$_objAdmin = new Admin();
$_objArrayList = new ArrayList();
ob_clean();

function distance($lat1, $lon1, $lat2, $lon2, $unit)
{
    $theta = $lon1 - $lon2;
    $dist = sin(deg2rad($lat1)) * sin(deg2rad($lat2)) + cos(deg2rad($lat1)) * cos(deg2rad($lat2)) * cos(deg2rad($theta));
    $dist = acos($dist);
    $dist = rad2deg($dist);
    $miles = $dist * 60 * 1.1515;
    $unit = strtoupper($unit);
    if ($unit == "K") {
        return ($miles * 1.609344);
    } else if ($unit == "N") {
        return ($miles * 0.8684);
    } else {
        return $miles;
    }
}


function dateDifference($date_1, $date_2)
{
    $datetime1 = date_create($date_1);
    $datetime2 = date_create($date_2);
    $interval = date_diff($datetime1, $datetime2);
    $day = $interval->format('%a');
    $hour = $interval->format('%h');
    $min = $interval->format('%i');
    $sec = $interval->format('%s');
    $timeDiff = '';
    if (isset($day) && !empty($day) && (intval($day) > 0)) {
        $timeDiff .= (($day > 1) ? $day . ' days ' : $day . ' day ');
    }
    if (isset($hour) && !empty($hour) && (intval($hour) > 0)) {
        $timeDiff .= (($hour > 1) ? $hour . ' hrs ' : $hour . ' hr ');
    }
    if (isset($min) && !empty($min) && (intval($min) > 0)) {
        $timeDiff .= $min . ' min ';
    }
    if (isset($sec) && !empty($sec) && (intval($sec) > 0)) {
        $timeDiff .= $sec . ' sec ';
    }
    if (empty($day) && empty($hour) && empty($min) && empty($sec)) {
        $timeDiff = "0";
    }
    return $timeDiff;
}

/******************************************** Start Export City List ******************************************************************/
//if(isset($_GET['export_city'])){
//	$data="State Name\t District\n";
//	$condi=	" 1=1";
//	$auRec=$_objAdmin->_getSelectList2('city as c left join state as s on c.state_id=s.state_id',"c.city_name,s.state_name",'',$condi);
//	if(is_array($auRec)){
//		for($i=0;$i<count($auRec);$i++){
//
//		//$data.="".$auRec[$i]->state_name."\t".$auRec[$i]->city_name."\n";
//			$data.='"'.$auRec[$i]->state_name.'"';
//			$data.="\t";
//			$data.='"'.$auRec[$i]->city_name.'"';
//			$data.="\n";
//		}
//	}
//	header("Content-type: application/octet-stream");
//	header("Content-Disposition: attachment; filename=\"district_list.xls\"");
//	echo $data;
//	exit;
//	}
/******************************************** End Export City List ******************************************************************/
/******************************************** Start Export Category List ******************************************************************/
if (isset($_GET['export_category'])) {
    $data = "Category Name\t Category Code\t Status\n";
    //Todo Start : sudhanshu 12 june 2024 : add status filter
    $statusCondi = '';
    if (isset($_SESSION['MasCat']) && $_SESSION['MasCat'] != 'all' && $_SESSION['MasCat'] != '') {
        $statusCondi = " AND status ='" . $_SESSION['MasCat'] . "'";
    }
    //Todo End : sudhanshu 12 june 2024 : add status filter
    $condi = " cat_type = 'C' and type='I' and account_id='" . $_SESSION['accountId'] . "' $statusCondi ORDER BY category_name";
    $auRec = $_objAdmin->_getSelectList('table_category', "*", '', $condi);
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            if ($auRec[$i]->status == 'A') {
                $status = "Active";
            } else {
                $status = "Inactive";
            }
            $data .= '"' . $auRec[$i]->category_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->category_code . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"category_list.xls\"");
    echo $data;
    exit;
}
/******************************************** End Export Category List ******************************************************************/
/******************************************** Start Export Marketing Category List ******************************************************************/
if (isset($_GET['export_marketing_category'])) {
    $data = "Category Name\t Category Code\t Status\n";
    //Todo Start : sudhanshu 17 june 2024 : add status filter
    $statusCondi = '';
    if (isset($_SESSION['MasMarketCate']) && $_SESSION['MasMarketCate'] != 'all' && $_SESSION['MasMarketCate'] != '') {
        $statusCondi = " AND status ='" . $_SESSION['MasMarketCate'] . "'";
    }
    //Todo End : sudhanshu 17 june 2024 : add status filter
    $condi = " cat_type = 'C' and type='M' and account_id='" . $_SESSION['accountId'] . "' $statusCondi ORDER BY category_name";
    $auRec = $_objAdmin->_getSelectList('table_category', "*", '', $condi);
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            if ($auRec[$i]->status == 'A') {
                $status = "Active";
            } else {
                $status = "Inactive";
            }
            $data .= '"' . $auRec[$i]->category_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->category_code . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"marketing_category_list.xls\"");
    echo $data;
    exit;
}
/******************************************** End Export Category List ******************************************************************/
/******************************************** Start Export Item Cases Size  for MED Project ******************************************************************/
if (isset($_GET['export_cases'])) {
    $data = "Cases Size\t Case Description\t Status\n";
    $condi = " account_id='" . $_SESSION['accountId'] . "' ORDER BY case_size";
    $auRec = $_objAdmin->_getSelectList('table_cases', "*", '', $condi);
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            if ($auRec[$i]->status == 'A') {
                $status = "Active";
            } else {
                $status = "Inactive";
            }

            //$data.="".$auRec[$i]->case_size."\t".$auRec[$i]->case_description."\t".$status."\n";
            $data .= '"' . $auRec[$i]->case_size . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->case_description . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->status . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"case_list.xls\"");
    echo $data;
    exit;
}

/******************************************** End Export Item Color List ******************************************************************/
/******************************************** Start Export Item List ******************************************************************/

/******************************************** Start Export Item List ******************************************************************/
if (isset($_GET['export_item'])) {
    //    $data = "Item Name \t Grams \t Item Code\t Category\t Brand Name\t Item PTR\t Item MRP\t " . $AliaseUsers['distributor'] . " Price\t " . $AliaseUsers['stockist'] . " Price\t Tax Rate\t Cases Size\t Erp Code\t Varient Name\t Sku Name\tBrand Name\t Status\n";
        $data = "Item Code\tItem Name\tBrand Name\t HSN Code \t Category Name\t Sub Category \t Grade Name\t Cases Size \t  Grams \t Tax Rate\t Item MRP \t Item PTR\t " .
            $AliaseUsers['distributor'] . " Price\t " . $AliaseUsers['stockist'] . " Price\tUpdated Date\tItem Rank Name\t Status\tItem Type\n";
    
        $RoleBrands = $_objAdmin->getUserRoleBrand();
        $brandCnd = '';
        if (!empty($RoleBrands)) {
            $brandCnd = " and b.brand_id IN(" . $RoleBrands . ")";
        }
        //Todo Start Sudhanshu 28 may 2024 : add status filtr
        if (isset($_SESSION['MasStatus']) && $_SESSION['MasStatus'] != '') {
            $status = " And i.status= '" . $_SESSION['MasStatus'] . "' ";
        }
        //Todo End Sudhanshu 28 may 2024 : add status filtr
        $condi = " c.status='A' and i.account_id='" . $_SESSION['accountId'] . "' and i.item_type IN('I','F') $brandCnd $status ORDER BY item_name";
        $auRec = $_objAdmin->_getSelectList('table_item as i 
        left join table_price as p on i.item_id = p.item_id 
        LEFT JOIN table_item_gst AS it ON it.item_id = i.item_id 
        left join table_category as c on i.category_id = c.category_id 
        left join table_subcategory as sc on i.subcategory_id = sc.subcategory_id
        left join table_brands as b on b.brand_id=i.brand_id 
        left join table_grade as gt on gt.grade_id=i.grade_id
        left join table_item_case_relationship re on re.item_id=i.item_id 
        left join table_cases as cas on cas.case_id=re.case_id
        left join table_variant as va on va.variant_id=i.variant_id 
        left join table_sku as sk on sk.sku_id=i.sku_id 
        Left join table_HSN_code_master as hsn on hsn.hsn_id = i.HSN_id
        LEFT JOIN table_item_ranking as ir ON ir.item_rank_id = i.rank_id',
            "i.*,p.item_mrp,p.item_dp,p.dist_price,p.stockist_price,it.tax,p.item_dp,cas.case_size,b.brand_name,va.variant_name,sk.sku_name,c.category_name,sc.subcategory_name,gt.grade_name,hsn.HSN_Code,ir.item_rank_name", '', $condi);
        if (is_array($auRec)) {
            for ($i = 0; $i < count($auRec); $i++) {
                if ($auRec[$i]->status == 'A') {
                    $status = "Active";
                } else {
                    $status = "Inactive";
                }
                $updated = $_objAdmin->_changeDate($auRec[$i]->last_update_date);
            
                $data .= '"' . $auRec[$i]->item_code . '"';
                $data .= "\t";
                $data .= '"' . $auRec[$i]->item_name . '"';
                $data .= "\t";
                $data .= '"' . $auRec[$i]->brand_name . '"';
                $data .= "\t";
                $data .= '"' . $auRec[$i]->HSN_Code . '"';
                $data .= "\t";
                $data .= '"' . $auRec[$i]->category_name . '"';
                $data .= "\t";
                $data .= '"' . $auRec[$i]->subcategory_name . '"';
                $data .= "\t";
                $data .= '"' . $auRec[$i]->grade_name . '"';
                $data .= "\t";
                $data .= '"' . $auRec[$i]->case_size . '"';
                $data .= "\t";
                $data .= '"' . $auRec[$i]->item_size . '"';
                $data .= "\t";
                $data .= '"' . $auRec[$i]->tax . '"';
                $data .= "\t";
                $data .= '"' . $auRec[$i]->item_dp . '"';
                $data .= "\t";
                $data .= '"' . $auRec[$i]->item_mrp . '"';
                $data .= "\t";
    
                $data .= '"' . $auRec[$i]->dist_price . '"';
                $data .= "\t";
                $data .= '"' . $auRec[$i]->stockist_price . '"';
                $data .= "\t";
    
                $data .= '"' . $updated . '"';
                $data .= "\t";
    
    //            $data .= '"' . $auRec[$i]->item_erp_code . '"';
    //            $data .= "\t";
    //            $data .= '"' . $auRec[$i]->variant_name . '"';
    //            $data .= "\t";
    //            $data .= '"' . $auRec[$i]->sku_name . '"';
    //            $data .= "\t";
    //            $data .= '"' . $auRec[$i]->brand_name . '"';
    //            $data .= "\t";
    //			$data.='"'.$auRec[$i]->offer_name.'"';
    //			$data.="\t";
                $data.='"'.$auRec[$i]->item_rank_name.'"';
                $data.="\t";
                $data .= '"' . $status . '"';
                $data.="\t";

                if($auRec[$i]->item_type == 'F'){
                    $itemType = 'FOC';
                }elseif($auRec[$i]->item_type == 'I'){
                    $itemType = 'Item';
                }

                $data .= '"' . $itemType . '"';
                $data .= "\n";
            }
        }
        header("Content-type: application/octet-stream");
        header("Content-Disposition: attachment; filename=\"item_list.xls\"");
        echo $data;
        exit;
    }
    /******************************************** End Export Item List ******************************************************************/
/******************************************** End Export Item List ******************************************************************/
/******************************************** Start Export Market Item List ******************************************************************/
if (isset($_GET['export_market_item'])) {
    $data = "Item Code\t Item Name\t Category\t Brand Name\t Status\n";

    $RoleBrands = $_objAdmin->getUserRoleBrand();
    $brandCnd = '';
    if (!empty($RoleBrands)) {
        $brandCnd = " and b.brand_id IN(" . $RoleBrands . ")";
    }
//Todo Start : sudhanshu 12 june 2024 : add status filter
    $statusCondi = '';
    if (isset($_SESSION['MasMrkt']) && $_SESSION['MasMrkt'] != 'all' && $_SESSION['MasMrkt'] != '') {
        $statusCondi = " AND i.status ='" . $_SESSION['MasMrkt'] . "'";
    }
    //Todo End : sudhanshu 12 june 2024 : add status filter
    $condi = " c.status='A' and i.account_id='" . $_SESSION['accountId'] . "' and i.item_type='M' $statusCondi $brandCnd ORDER BY i.item_name";
    $auRec = $_objAdmin->_getSelectList('table_item as i 
	left join table_category as c on i.category_id = c.category_id
	left join table_brands as b on b.brand_id = i.brand_id', "i.*,c.category_name,b.brand_name", '', $condi);
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            if ($auRec[$i]->status == 'A') {
                $status = "Active";
            } else {
                $status = "Inactive";
            }
        
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->category_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->brand_names . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"market_item_list.xls\"");
    echo $data;
    exit;
}
/******************************************** End Export Market Item List *******************************/
/******************************************** Start Export State List ******************************************************************/
if (isset($_GET['export_state'])) {
    $data = "Country Name\t State Name\t State Code\t Status\n";
    $auRec = $_objAdmin->_getSelectList2('state as st
	LEFT JOIN country as co ON co.country_id = st.country_id', "st.*,co.country_name", '', "");
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $status = ($auRec[$i]->status == 'A') ? "Active" : "Inactive";
            $data .= '"' . $auRec[$i]->country_name . '"';
            $data .= "\t";
//            $data .= '"' . $auRec[$i]->region_name . '"';
//            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_code . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"state_list.xls\"");
    echo $data;
    exit;
}
//Todo Start : Sagar : export district & city: 13th July 2022
if (isset($_GET['district_export'])) {
    $data = "District Name\tState Name\tCountry\tStatus\n";
    $auRec = $_objAdmin->_getSelectList2('city as ct
	LEFT JOIN state as st on st.state_id= ct.state_id 
    Left JOIN country AS cn ON cn.country_id = st.country_id', "ct.city_name,st.state_name,ct.status,cn.country_name", '', " ORDER BY ct.city_name ASC");
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $status = ($auRec[$i]->status == 'A') ? "Active" : "Inactive";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->country_name . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"district_list.xls\"");
    echo $data;
    exit;
}
if (isset($_GET['export_city'])) {
    $data = "City Name\tDistrict Name\tState Name\tCountry\tStatus\n";
    $auRec = $_objAdmin->_getSelectList2('table_location AS loc 
        Left JOIN state AS st ON st.state_id = loc.state_id 
        left join city as ct on ct.city_id = loc.city_id
        left join country as cn on cn.country_id = st.country_id', "loc.location_name, st.state_name, ct.city_name,loc.status,cn.country_name", '', " ORDER BY loc.location_name ASC ");
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $status = ($auRec[$i]->status == 'A') ? "Active" : "Inactive";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->country_name . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"city_list.xls\"");
    echo $data;
    exit;
}
//Todo End : Sagar : export district & city: 13th July 2022
/******************************************** End Export State List ******************************************************************/
/******************************************** Start Export Distributor ******************************************************************/
if (isset($_GET['export_distributors_list'])) {
//    $data = "" . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\tUsername\tSurvey Status\tGST NO \t " . $AliaseUsers['stockist'] . " Name \t Country\t State \t District \t City \t Address1 \t Address2 \t Routes\t Zipcode \t SMS Mobile Number \t Phone Number1 \t Phone Number2 \t Phone Number3 \t Landline Number \t Contact Person1 \t Contact Person Number1 \t Contact Person2 \t Contact Person Number2 \t Contact Person3 \t Contact Person Number3 \t Email ID1 \t Email ID2 \t Email ID3\t " . $AliaseUsers['distributor'] . " Type\t " . $AliaseUsers['distributor'] . " Region\tStart Date\tEnd Date\tStatus\n";

    $data = "" . $AliaseUsers['distributor'] . " Code\t" . $AliaseUsers['distributor'] . " Name\t Phone Number1 \t Phone Number2 \t " . $AliaseUsers['distributor'] . " Address \t Country\t Zone\tState \t District \t City \t " . $AliaseUsers['distributor'] . " Type\t Username\tSurvey Status\tSurvey Approval Status\tSurvey Remark\tSurvey Verified By User Type\tSurvey Verified By\tGST NO \t " . $AliaseUsers['stockist'] . " Name \t   Routes\t Zipcode \t   Landline Number \t Contact Person1 \t Contact Person Number1 \t Contact Person2 \t Contact Person Number2 \t Email ID1 \t Email ID2 \tStart Date\tEnd Date\tStatus\n";

    $salesmanStateCondi = '';
    if (isset($_SESSION['salesmanId']) && !empty($_SESSION['salesmanId']) && (intval($_SESSION['salesmanId']) > 0) && (intval($_SESSION['userLoginType']) == 5)) {
        //get logged in salesman state
        $stateRec = $_objAdmin->_getSelectList('table_salesman', 'state', '', 'salesman_id = ' . $_SESSION['salesmanId']);

        if (is_array($stateRec) && (count($stateRec) > 0)) {
            $salesmanStateId = $stateRec[0]->state;
            $salesmanStateCondi = ' AND d.state = ' . $salesmanStateId;
        }
    }

    $dis = '';
    if ($_SESSION['stockistId'] != "" && $_SESSION['stockistId'] != "0") {
        $dis = " and d.stockist_id='" . $_SESSION['stockistId'] . "'";
    }

    //Todo Start : sudhanshu 28 may 2024 : add status filet
    $statusCond = '';
    if (isset($_SESSION['disStatus']) && $_SESSION['disStatus'] != '') {
        $statusCond = " AND d.status='" . $_SESSION['disStatus'] . "'";
    }
    //Todo End : sudhanshu 28 may 2024 : add status filet
    $condi = " d.account_id='" . $_SESSION['accountId'] . "' $dis AND d.new = '' $salesmanStateCondi $statusCond GROUP BY d.distributor_id ORDER BY d.distributor_name ASC";
    $auRec = $_objAdmin->_getSelectList('table_distributors as d 
    LEFT JOIN table_route_retailer as rr ON rr.distributor_id = d.distributor_id
	LEFT JOIN table_route AS RT ON RT.route_id = rr.route_id
	left join country as con on con.country_id = d.country
	left join state as s on d.state=s.state_id 
	left join table_web_users as w on w.distributor_id=d.distributor_id 
	left join city as c on d.city=c.city_id
	LEFT JOIN table_zone_state_mapping as szsm on szsm.state_id = d.state and szsm.account_id = d.account_id
    LEFT JOIN table_zone as sz on sz.zone_id = szsm.zone_id 
	left join table_location as loc on loc.location_id = d.location
	left join table_stockist as ts on ts.stockist_id = d.stockist_id
	left join table_distributor_type_master as tdm on tdm.dis_type_id = d.distributor_type_id', "d.*,con.country_name,loc.location_name,s.state_name,tdm.dis_type_name,w.username,c.city_name,ts.stockist_name,GROUP_CONCAT(DISTINCT RT.route_name SEPARATOR ', ') AS routes,sz.zone_name", '', $condi);

    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $surveyStatus = '';
            if (strtolower($auRec[$i]->survey_status) == 'c') {
                $surveyStatus = 'Surveyed';
            } elseif (strtolower($auRec[$i]->survey_status) == 'i') {
                $surveyStatus = 'Not Surveyed';
            } elseif (strtolower($auRec[$i]->survey_status) == 'n') {
                $surveyStatus = 'Rejected';
            } else {
                $surveyStatus = '';
            }
            //Todo Start : sudhanshu 17 jubne 2024 : survey approval status and remark
            if ($auRec[$i]->survey_approval_status == "A") {
                $survey_approval_status = "Approved";
            } elseif ($auRec[$i]->survey_approval_status == "N") {
                $survey_approval_status = "Rejected";
            } else {
                $survey_approval_status = "Pending";
            }

            if (strtolower($auRec[$i]->survey_status) == 'i') {
                $survey_approval_status = "";
            }

            $verify_by = '';
            if ($auRec[$i]->survey_approve_by_user_type == 1) {
                $userType = "Admin";
                $verify_by = "Admin";
            } elseif ($auRec[$i]->survey_approve_by_user_type == 3) {
                $auApp = $_objAdmin->_getSelectList('table_distributors', "distributor_name", '', " distributor_id=" . $auRec[$i]->survey_approve_by);
                $userType = $AliaseUsers['distributor'];
                if (is_array($auApp) && count($auApp) > 0) {
                    $verify_by = $auApp[0]->distributor_name;
                }
            } elseif ($auRec[$i]->survey_approve_by_user_type == 4) {
                $auApp = $_objAdmin->_getSelectList('table_retailer', "retailer_name", '', " retailer_id=" . $auRec[$i]->survey_approve_by);
                $userType = $AliaseUsers['retailer'];
                if (is_array($auApp) && count($auApp) > 0) {
                    $verify_by = $auApp[0]->retailer_name;
                }
            } elseif ($auRec[$i]->survey_approve_by_user_type == 7) {
                $auApp = $_objAdmin->_getSelectList('table_stockist', "stockist_name", '', " stocksit_id=" . $auRec[$i]->survey_approve_by);
                $userType = $AliaseUsers['stockist'];
                if (is_array($auApp) && count($auApp) > 0) {
                    $verify_by = $auApp[0]->stockist_name;
                }
            } elseif ($auRec[$i]->survey_approve_by_user_type == 5) {
                $auApp = $_objAdmin->_getSelectList('table_salesman', "salesman_name", '', " salesman_id=" . $auRec[$i]->survey_approve_by);
                $userType = $AliaseUsers['salesman'];
                if (is_array($auApp) && count($auApp) > 0) {
                    $verify_by = $auApp[0]->salesman_name;
                }
            }
            //Todo End : sudhanshu 17 jubne 2024 : survey approval status and remark
            $distStatus = (strtolower($auRec[$i]->status) == 'a') ? 'Active' : 'Inactive';
            $start_date = $_objAdmin->_changeDate($auRec[$i]->start_date);
            $end_date = $_objAdmin->_changeDate($auRec[$i]->end_date);

            $data .= '"' . trim($auRec[$i]->distributor_code) . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->distributor_name) . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->distributor_phone_no) . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->distributor_phone_no2) . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->distributor_address) . '"';
            $data .= "\t";

            $data .= '"' . trim($auRec[$i]->country_name) . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->zone_name) . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->state_name) . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->city_name) . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->location_name) . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->dis_type_name) . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->username) . '"';
            $data .= "\t";
            $data .= '"' . $surveyStatus . '"';
            $data .= "\t";
            $data .= '"' . $survey_approval_status . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->survey_remark) . '"';
            $data .= "\t";
            $data .= '"' . $userType . '"';
            $data .= "\t";
            $data .= '"' . $verify_by . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->gst_no . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->stockist_name . '"';
            $data .= "\t";

            $data .= '"' . $auRec[$i]->routes . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->zipcode . '"';
            $data .= "\t";
            // $data .= '"' . $auRec[$i]->sms_number . '"';
            // $data .= "\t";

//            $data .= '"' . $auRec[$i]->distributor_phone_no3 . '"';
//            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_leadline_no . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->contact_person . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->contact_number . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->contact_person2 . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->contact_number2 . '"';
            $data .= "\t";
//            $data .= '"' . $auRec[$i]->contact_person3 . '"';
//            $data .= "\t";
//            $data .= '"' . $auRec[$i]->contact_number3 . '"';
//            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_email . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_email2 . '"';
            $data .= "\t";
//            $data .= '"' . $auRec[$i]->distributor_email3 . '"';
//            $data .= "\t";

//            $data .= '"' . $auRec[$i]->region_name . '"';
//            $data .= "\t";
            $data .= '"' . $start_date . '"';
            $data .= "\t";
            $data .= '"' . $end_date . '"';
            $data .= "\t";
            $data .= '"' . $distStatus . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['distributor'] . "_list.xls\"");
    echo $data;
    exit;
}

/******************************************** End Export Distributor ******************************************************************/
/******************************************** Start Export Retailor ******************************************************************/


if (isset($_GET['export_relailer_list'])) {
//    $data = "" . $AliaseUsers['retailer'] . " Name \t  " . $AliaseUsers['retailer'] . " Code \t " . $AliaseUsers['retailer'] . " Class \t " . $AliaseUsers['retailer'] . " Type \t " . $AliaseUsers['retailer'] . " Channel \tSurvey Status\t " . $AliaseUsers['distributor'] . " Name \t " . $AliaseUsers['distributor'] . " Code\t Display Outlet \t Country\t State \t District \t City\t Market \t Zipcode \t Address1 \t Address2 \t Phone Number1 \t Phone Number2 \t Landline Number \t GST No. \t Aadhar No. \t PAN No. \t Contact Person1 \t Contact Person Number1 \t Contact Person2 \t Contact Person Number2 \t Email ID1 \t Email ID2\t Added By\t New " . $AliaseUsers['retailer'] . " Status\t " . $AliaseUsers['retailer'] . " Status\t Routes\tStart Date\tEnd Date\n";
//    $condi = " r.new='' and  r.status!='D' and r.account_id='" . $_SESSION['accountId'] . "' GROUP BY r.retailer_id ORDER BY r.retailer_name ASC";
    $data = "" . $AliaseUsers['retailer'] . " Code \t" . $AliaseUsers['retailer'] . " Name \t " . $AliaseUsers['retailer'] . " Class \t " . $AliaseUsers['retailer'] . " Type \t " . $AliaseUsers['retailer'] . " Channel \tSurvey Status\tSurvey Approval Status\tSurvey Remark\tSurvey Verified By User Type\tSurvey Verified By\tlatitude\tlongitude\t  " . $AliaseUsers['distributor'] . " Code\t" . $AliaseUsers['distributor'] . " Name \t Display Outlet \t Country\tZone \tState \t District \t City\t Market \t Zipcode \t Address \t Phone Number 1\t  Phone Number 2\tGST No. \t Aadhar No. \t PAN No. \t Contact Person1 \t Contact Person Number1 \t Contact Person2 \t Contact Person Number2 \t Email ID1 \t Email ID2\tDate of Birth\tDate of Anniversary\t Added By\t New " . $AliaseUsers['retailer'] . " Status\t " . $AliaseUsers['retailer'] . " Status\t Routes\tStart Date\tEnd Date\t" . $AliaseUsers['retailer'] . " Group\n";
    //Todo Start : sudhanshu 28 may 2024 : add status filet
    $statusCond = '';
    if (isset($_SESSION['retStatus']) && $_SESSION['retStatus'] != '') {
        $statusCond = " AND r.status='" . $_SESSION['retStatus'] . "'";
    }
    //Todo End : sudhanshu 28 may 2024 : add status filet
    $condi = " r.new='' and  r.status!='D' and r.account_id='" . $_SESSION['accountId'] . "' $statusCond GROUP BY r.retailer_id ORDER BY r.retailer_name ASC";
    $auRec = $_objAdmin->_getSelectList('table_retailer as r 
		LEFT JOIN table_relationship as rr on rr.relationship_id=r.relationship_id 
		left join table_retailer_channel_master as cm on r.channel_id=cm.channel_id 
		LEFT JOIN table_salesman AS sm ON sm.salesman_id = r.salesman_id
        left join country as con on con.country_id = r.country
		left join state as s on r.state=s.state_id 
		left join table_web_users as w on w.retailer_id=r.retailer_id 
		left join city as c on r.city=c.city_id
		LEFT JOIN table_zone_state_mapping as szsm on szsm.state_id = r.state and szsm.account_id = r.account_id
        LEFT JOIN table_zone as sz on sz.zone_id = szsm.zone_id 
		left join table_location as loc ON loc.location_id = r.location_id
		left join table_retailer_type_master as tm on tm.type_id=r.type_id
		LEFT JOIN table_route_retailer AS RRT ON RRT.retailer_id = r.retailer_id
		LEFT JOIN table_route AS RT ON RT.route_id = RRT.route_id
        LEFT JOIN table_retailer_group AS rg ON rg.group_id = r.group_id
		left join table_distributors as d on d.distributor_id=r.distributor_id ', "r.*,GROUP_CONCAT(RT.route_name SEPARATOR ',') AS routes,rr.relationship_code, sm.salesman_name, con.country_name,s.state_name,w.email_id,tm.type_name,d.distributor_name,d.distributor_code,c.city_name,cm.channel_name,loc.location_name,sz.zone_name,rg.group_name", '', $condi);

    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $surveyStatus = '';

            if (strtolower($auRec[$i]->survey_status) == 'c') {
                $surveyStatus = 'Surveyed';
            } elseif (strtolower($auRec[$i]->survey_status) == 'i') {
                $surveyStatus = 'Not Surveyed';
            } elseif (strtolower($auRec[$i]->survey_status) == 'n') {
                $surveyStatus = 'Rejected';
            } else {
                $surveyStatus = '';
            }
            // Lat ,lng
            if (!empty($auRec[$i]->lat) && $auRec[$i]->lat != '0.0') {
                $lat = $auRec[$i]->lat;
            } else {
                $lat = '';
            }
            if (!empty($auRec[$i]->lng) && $auRec[$i]->lng != '0.0') {
                $lng = $auRec[$i]->lng;
            } else {
                $lng = '';
            }
            if ($auRec[$i]->retailer_dob == "0000-00-00") {
                $retailer_dob = "";
            } else {
                $retailer_dob = $_objAdmin->_changeDate($auRec[$i]->retailer_dob);
            }
            if ($auRec[$i]->anniversary_date == "0000-00-00") {
                $anniversary_date = "";
            } else {
                $anniversary_date = $_objAdmin->_changeDate($auRec[$i]->anniversary_date);
            }

            if ($auRec[$i]->display_outlet == 'Y') {
                $outlet = 'YES';
            } elseif ($auRec[$i]->display_outlet == 'N') {
                $outlet = 'No';
            } else {
                $outlet = '';
            }
            if ($auRec[$i]->new == '1') {
                $new = 'New Retailer';
            }

            $start_date = $_objAdmin->_changeDate($auRec[$i]->start_date);

//            if ($auRec[$i]->status == 'I') {
            $end_date = $_objAdmin->_changeDate($auRec[$i]->end_date);
//            } else {
//                $end_date = '';
//            }
            //Todo Start : sudhanshu 17 jubne 2024 : survey approval status and remark
            if ($auRec[$i]->survey_approval_status == "A") {
                $survey_approval_status = "Approved";
            } elseif ($auRec[$i]->survey_approval_status == "N") {
                $survey_approval_status = "Rejected";
            } else {
                $survey_approval_status = "Pending";
            }

            if (strtolower($auRec[$i]->survey_status) == 'i') {
                $survey_approval_status = "";
            }
            $verify_by = '';
            if ($auRec[$i]->survey_approve_by_user_type == 1) {
                $userType = "Admin";
                $verify_by = "Admin";
            } elseif ($auRec[$i]->survey_approve_by_user_type == 3) {
                $auApp = $_objAdmin->_getSelectList('table_distributors', "distributor_name", '', " distributor_id=" . $auRec[$i]->survey_approve_by);
                $userType = $AliaseUsers['distributor'];
                if (is_array($auApp) && count($auApp) > 0) {
                    $verify_by = $auApp[0]->distributor_name;
                }
            } elseif ($auRec[$i]->survey_approve_by_user_type == 4) {
                $auApp = $_objAdmin->_getSelectList('table_retailer', "retailer_name", '', " retailer_id=" . $auRec[$i]->survey_approve_by);
                $userType = $AliaseUsers['retailer'];
                if (is_array($auApp) && count($auApp) > 0) {
                    $verify_by = $auApp[0]->retailer_name;
                }
            } elseif ($auRec[$i]->survey_approve_by_user_type == 7) {
                $auApp = $_objAdmin->_getSelectList('table_stockist', "stockist_name", '', " stocksit_id=" . $auRec[$i]->survey_approve_by);
                $userType = $AliaseUsers['stockist'];
                if (is_array($auApp) && count($auApp) > 0) {
                    $verify_by = $auApp[0]->stockist_name;
                }
            } elseif ($auRec[$i]->survey_approve_by_user_type == 5) {
                $auApp = $_objAdmin->_getSelectList('table_salesman', "salesman_name", '', " salesman_id=" . $auRec[$i]->survey_approve_by);
                $userType = $AliaseUsers['salesman'];
                if (is_array($auApp) && count($auApp) > 0) {
                    $verify_by = $auApp[0]->salesman_name;
                }
            }
            //Todo End : sudhanshu 17 jubne 2024 : survey approval status and remark

            $data .= '"' . trim($auRec[$i]->retailer_code) . '"';
            $data .= "\t";
            
            $data .= '"' . trim($auRec[$i]->retailer_name) . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->relationship_code) . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->type_name) . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->channel_name) . '"';
            $data .= "\t";
            $data .= '"' . $surveyStatus . '"';
            //Todo Start : sudhanshu 17 june 2024 : add survey approval status and survey remark
            $data .= "\t";
            $data .= '"' . $survey_approval_status . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->survey_remark) . '"';
            $data .= "\t";
            $data .= '"' . $userType . '"';
            $data .= "\t";
            $data .= '"' . $verify_by . '"';
            //Todo Start : sudhanshu 17 june 2024 : add survey approval status and survey remark
            $data .= "\t";
            $data .= '"' . $lat . '"';
            $data .= "\t";
            $data .= '"' . $lng . '"';
            $data .= "\t";
           
            $data .= '"' . trim($auRec[$i]->distributor_code) . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->distributor_name) . '"';
            $data .= "\t";
            $data .= '"' . $outlet . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->country_name) . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->zone_name) . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->state_name) . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->city_name) . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->location_name) . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->retailer_location) . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->zipcode) . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->retailer_address) . '"';
            $data .= "\t";
//            $data .= '"' . $auRec[$i]->retailer_address2 . '"';
//            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->retailer_phone_no) . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->retailer_phone_no2) . '"';
            $data .= "\t";
//            $data .= '"' . $auRec[$i]->retailer_leadline_no . '"';
//            $data .= "\t";
            $data .= '"' . $auRec[$i]->gst_no . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->aadhar_no . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->pan_no . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->contact_person . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->contact_number . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->contact_person2 . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->contact_number2 . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->email_id . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->email_id2 . '"';
            $data .= "\t";
            $data .= '"' . $retailer_dob . '"';
            $data .= "\t";
            $data .= '"' . $anniversary_date . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->salesman_name) . '"';
            $data .= "\t";
            $data .= '"' . $new . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->status . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->routes . '"';
            $data .= "\t";
            $data .= '"' . $start_date . '"';
            $data .= "\t";
            $data .= '"' . $end_date . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->group_name . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['retailer'] . "_list.xls\"");
    echo $data;
    exit;
}


if (isset($_GET['export_new_retailer_list'])) {
    $data = "Approval Status\t" . $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['retailer'] . " Code \t " . $AliaseUsers['retailer'] . " Class \t " . $AliaseUsers['retailer'] . " Type \t " . $AliaseUsers['retailer'] . " Channel \t" . $AliaseUsers['retailer'] . " Group\t Added By\tAdded Date\t" . $AliaseUsers['distributor'] . " Name \t " . $AliaseUsers['distributor'] . " Code\t Display Outlet \t State \t District \t City\t Market \t Address \t Zipcode \t Phone Number \t  Email ID \t Landline Number \t GST No. \t Aadhar No. \t PAN No. \t Contact Person \t Contact Number \t DOB\t Anniversary Date\tRoutes\n";

    $where = " r.new!='' $salesman and r.status='I' and a.account_id =" . $_SESSION['accountId'];
    $sort = ' ORDER BY r.start_date DESC ';
    $auRec = $_objAdmin->_getSelectList('table_retailer as r 
        left join table_salesman as s on s.salesman_id=r.salesman_id
        LEFT JOIN table_relationship as tr on tr.relationship_id=r.relationship_id 
        left join table_account as a on a.account_id=r.account_id 
        left join table_web_users as w on w.retailer_id=r.retailer_id 
        LEFT JOIN table_retailer_group as rg ON rg.group_id = r.group_id
        left join country as con on con.country_id = r.country
        left join state as st on st.state_id=r.state 
        left join city as c on c.city_id=r.city 
        left join table_location as loc ON loc.location_id = r.location_id 
        left join table_retailer_channel_master as cm on r.channel_id=cm.channel_id 
        left join table_retailer_type_master as tm on tm.type_id=r.type_id 
        LEFT JOIN table_route_retailer AS RR ON RR.retailer_id = r.retailer_id
		LEFT JOIN table_route AS RT ON RT.route_id = RR.route_id
        left join table_distributors as d on d.distributor_id=r.distributor_id', "r.*,w.username,cm.channel_name,s.salesman_name,d.distributor_name,d.distributor_code,w.email_id,w.web_user_id,tr.relationship_code,tm.type_name, w.status as loginStatus,con.country_name,st.state_name,c.city_name,loc.location_name,GROUP_CONCAT(DISTINCT RT.route_name SEPARATOR ', ') AS routes,rg.group_name", '', $where . ' GROUP BY r.retailer_id ' . $sort);

    $remove = array("\n", "\r\n", "\r", "\t");

    if (is_array($auRec) && (count($auRec) > 0)) {
        for ($i = 0; $i < count($auRec); $i++) {

            if ($auRec[$i]->retailer_dob == "0000-00-00") {
                $retailer_dob = "-";
            } else {
                $retailer_dob = $_objAdmin->_changeDate($auRec[$i]->retailer_dob);
            }

            if ($auRec[$i]->anniversary_date == "0000-00-00") {
                $anniversary_date = "-";
            } else {
                $anniversary_date = $_objAdmin->_changeDate($auRec[$i]->anniversary_date);
            }

            if ($auRec[$i]->display_outlet == 'Y') {
                $outlet = 'YES';
            } elseif ($auRec[$i]->display_outlet == 'N') {
                $outlet = 'NO';
            } else {
                $outlet = '';
            }

            $start_date = $_objAdmin->_changeDate($auRec[$i]->start_date);

            $data .= '"' . ucfirst($auRec[$i]->approval_status) . '"';
            $data .= "\t";
            $data .= '"' . ucwords(str_replace($remove, '', $auRec[$i]->retailer_name)) . '"';
            $data .= "\t";
            $data .= '"' . ucwords(str_replace($remove, '', $auRec[$i]->retailer_code)) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->relationship_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->type_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->channel_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->group_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $start_date . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $outlet . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_location . '"';
            $data .= "\t";
            $data .= '"' . str_replace($remove, '', $auRec[$i]->retailer_address) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->zipcode . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_phone_no . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_email . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_leadline_no . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->gst_no . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->aadhar_no . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->pan_no . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->contact_person . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->contact_number . '"';
            $data .= "\t";
            $data .= '"' . $retailer_dob . '"';
            $data .= "\t";
            $data .= '"' . $anniversary_date . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->routes . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"New_" . $AliaseUsers['retailer'] . "_List.xls\"");
    echo $data;
    exit;
}

/******************************************** End Export Retailor ******************************************************************/
/******************************************** Start Export Salesman ******************************************************************/

if (isset($_GET['export_salesman_list'])) {
    $data = "" . $AliaseUsers['salesman'] . " Code \t" . $AliaseUsers['salesman'] . " Name \tJoining Date\tSalary\tUser Level \tReporting to \tReporting Person \tUsername \tEmail ID \tPhone Number \tCountry\tZone \tState \tDistrict \tCity \tAddress \tStart Date \tEnd Date \t" . $AliaseUsers['salesman'] . " Status\n";
    $salesman = '';
    if (isset($_SESSION['salesmanIds']) && !empty($_SESSION['salesmanIds'])) {
        $salesman = $_SESSION['salesmanIds'];
    }
    //Todo Start : sudhanshu 28 may 2024 : add status filet
    $statusCond = '';
    if (isset($_SESSION['salStatus']) && $_SESSION['salStatus'] != '') {
        $statusCond = " AND s.status='" . $_SESSION['salStatus'] . "'";
    }
    //Todo End : sudhanshu 28 may 2024 : add status filet
    $condi = " s.status!='D' $statusCond $salesman ORDER BY s.salesman_name ASC";
    $auRec = $_objAdmin->_getSelectList('table_salesman AS s 
		LEFT JOIN table_web_users AS w ON w.salesman_id = s.salesman_id
		LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
		LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
		LEFT JOIN table_salesman_hierarchy AS H2 ON H2.hierarchy_id = SH.rpt_hierarchy_id
		LEFT JOIN table_salesman AS S2 ON S2.salesman_id = SH.rpt_user_id
		LEFT JOIN country as con on con.country_id = s.country
		LEFT JOIN state AS ts ON ts.state_id = s.state
		LEFT JOIN table_zone_state_mapping as szsm on szsm.state_id = s.state and szsm.account_id = s.account_id
        LEFT JOIN table_zone as sz on sz.zone_id = szsm.zone_id
		LEFT JOIN city AS c ON c.city_id = s.city
		LEFT JOIN table_location AS loc ON loc.location_id = s.location', "s.*,w.username,w.email_id,H.description AS des1, H2.description AS des2, S2.salesman_name AS rptPerson,con.country_name,ts.state_name,c.city_name,loc.location_name,sz.zone_name", '', $condi);
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $start_date = $_objAdmin->_changeDate($auRec[$i]->start_date);
            //end date
//            if ($auRec[$i]->status == 'I') {
                $end_date = $_objAdmin->_changeDate($auRec[$i]->end_date);
//            } else {
//                $end_date = '';
//            }
            //end date
            $sts = ($auRec[$i]->status == 'A') ? "Active" : "Inactive";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $_objAdmin->_changeDate($auRec[$i]->joining_date) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->sal_salary . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->des1 . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->des2 . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->rptPerson . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->username . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_email . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_phome_no . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->country_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->zone_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_address . '"';
            $data .= "\t";
            $data .= '"' . $start_date . '"';
            $data .= "\t";
            $data .= '"' . $end_date . '"';
            $data .= "\t";
            $data .= '"' . $sts . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['salesman'] . "_list.xls\" ");
    echo $data;
    exit;
}

/******************************************** End Export Salesman ******************************************************************/
/******************************************** Start Export Route ******************************************************************/
if (isset($_GET['export_route'])) {
    $data = "Route Name\n";
    $condi = " status='A' ";
    $auRec = $_objAdmin->_getSelectList('table_route', "*", '', $condi);
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            //$data.="".$auRec[$i]->route_name."\n";
            $data .= '"' . $auRec[$i]->route_name . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"route_list.xls\"");
    echo $data;
    exit;
}

/******************************************** End Export Route ******************************************************************/
/*************** GEETA Start Export Route Assignment**************/

if (isset($_GET['export_route_assignment'])) {

    $data = "Route ID \t Route Name \t Salesperson Name \t Salesperson Code \t From Date\t End Date \tSun\tMon\tTue\tWed\tThu\tFri\tSat\tStatus\n";
    $_objArrayList = new ArrayList();
    $salsList = $_objArrayList->SalesmanArrayList();
    $salesman = $_objArrayList->getSalesCondition($salsList);
    //Todo Start : sudhanshu 13 june 2024 : add status filter
    $statusCondi = '';
    if (isset($_SESSION['MasRoutSch']) && $_SESSION['MasRoutSch'] != 'all' && $_SESSION['MasRoutSch'] != '') {
        $statusCondi = " AND r.status ='" . $_SESSION['MasRoutSch'] . "'";
    }

    

    $auRut = $_objAdmin->_getSelectList('table_route AS r LEFT JOIN table_user_relationships AS ur ON ur.route_id = r.route_id ', "r.route_id, r.route_name, r.status", '', " ORDER BY r.route_name ASC");
                        $inactiveRouteArr = [];
                        foreach ($auRut as $value) {
                            $getRouteList[$value->route_id] = $value->route_name;
                            if (strtolower($value->status) != 'a') {
                                $inactiveRouteArr[] = $value->route_id;
                            }
                            
                        }
    //Todo End : sudhanshu 13 june 2024 : add status filter
    $condi = " s.status='A' $salesman $statusCondi ";
    $auRec = $_objAdmin->_getSelectList('table_route_schedule as r left join table_salesman as s on r.salesman_id=s.salesman_id', "r.*,s.salesman_name,s.employee_code", '', $condi);
    $auRec = $_objAdmin->_getSelectList('table_route_schedule as rs  
    left join table_route_schedule_by_day as rd on rd.route_schedule_id=rs.route_schedule_id 
     
    left join table_salesman as s on rs.salesman_id=s.salesman_id 
    ', "rs.*, rd.id as ids,rd.Sun, rd.Mon, rd.Tue, rd.Wed, rd.Thu, rd.Fri, rd.Sat,s.salesman_name,s.employee_code", '', $condi);
   
    
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) { 
            if($auRec[$i]->ids!=''){
            $auchk = $_objAdmin->_getSelectList('table_route_schedule_by_day', "*", '', "id=" . $auRec[$i]->ids);
            if (is_array($auchk) && !empty($auchk)) {
                foreach ($auchk as $key => $value) {

                    $days = array();

                    $routeArr = array();

                    $days[] = $value->Mon;

                    $days[] = $value->Tue;

                    $days[] = $value->Wed;

                    $days[] = $value->Thu;

                    $days[] = $value->Fri;

                    $days[] = $value->Sat;

                    $days[] = $value->Sun;

                    $routeArr = array_values(array_unique(array_filter($days)));

                    $route_id = $routeArr[0];

                    $route_name = $getRouteList[$route_id];
                    $Sun = ($value->Sun!='') ? 'yes' : '-';
                    $Mon = ($value->Mon!='')  ? 'yes' : '-';
                    $Tue = ($value->Tue!='')  ? 'yes' : '-';
                    $Wed = ($value->Wed!='')  ? 'yes' : '-';
                    $Thu = ($value->Thu!='') ?  'yes' : '-';
                    $Fri = ($value->Fri!='') ?  'yes' : '-';
                    $Sat = ($value->Sat!='') ?  'yes' : '-';
                    if (in_array($route_id, $inactiveRouteArr)) {
                        $status_route='Inactive';
                    }else{
                        $status_route='Active';
                    }

                }
            }
        }else{
            $auchk = $_objAdmin->_getSelectList('table_route_schedule_by_day', "*", '', "id=" . $auRec[$i]->route_schedule_id);
            if (is_array($auchk) && !empty($auchk)) {
                foreach ($auchk as $key => $value) {

                    $days = array();

                    $routeArr = array();

                    $days[] = $value->Mon;

                    $days[] = $value->Tue;

                    $days[] = $value->Wed;

                    $days[] = $value->Thu;

                    $days[] = $value->Fri;

                    $days[] = $value->Sat;

                    $days[] = $value->Sun;

                    $routeArr = array_values(array_unique(array_filter($days)));

                    $route_id = $routeArr[0];

                    $route_name = $getRouteList[$route_id];
                    $Sun = ($value->Sun!='') ? 'yes' : '-';
                    $Mon = ($value->Mon!='')  ? 'yes' : '-';
                    $Tue = ($value->Tue!='')  ? 'yes' : '-';
                    $Wed = ($value->Wed!='')  ? 'yes' : '-';
                    $Thu = ($value->Thu!='') ?  'yes' : '-';
                    $Fri = ($value->Fri!='') ?  'yes' : '-';
                    $Sat = ($value->Sat!='') ?  'yes' : '-';
                    
                    if (in_array($route_id, $inactiveRouteArr)) {
                        $status_route='Inactive';
                    }else{
                        $status_route='Active';
                    }

                }
            }
        }

if($status_route=='Active'){
        if ($auRec[$i]->status=='I') {
            $status='Inactive';
        }else{
            $status='Active';
        }
    }else{
        $status='Inactive';
    }

        $data .= "" . $route_id . "\t" . $route_name . "\t" . $auRec[$i]->salesman_name .  "\t" . $auRec[$i]->employee_code . "\t" . $_objAdmin->_changeDate($auRec[$i]->from_date) . "\t" . $_objAdmin->_changeDate($auRec[$i]->to_date) .  "\t" . $Sun .
        "\t" . $Mon .
        "\t" . $Tue .
        "\t" . $Wed .
        "\t" . $Thu .
        "\t" . $Fri .
        "\t" . $Sat .
        "\t" . $status .
      
        "\n";

        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"".$AliaseUsers['route']."_assignment_list.xls\"");
    echo $data;
    exit;
}


/***********************GEETA End Export Route Assignment*******/
/******************************************** Start Export Manage User ******************************************************************/
if (isset($_GET['export_manageuser_list'])) {
    $data = "Name \t User Name \t Email ID \t Phone Number\t Manage Items \t Manage " . $AliaseUsers['distributor'] . "s \t Manage " . $AliaseUsers['retailer'] . " \t Manage " . $AliaseUsers['salesman'] . " \t Manage Route\t Manage " . $AliaseUsers['retailer'] . " Relationship\n";
    $condi = " a.status='A' and a.account_id='" . $_SESSION['accountId'] . "' and view_activity_report!='Yes'";
    $auRec = $_objAdmin->_getSelectList('table_account_admin as a left join table_web_users as w on w.operator_id=a.operator_id', "a.*,w.email_id,w.username", '', $condi);
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= "" . $auRec[$i]->operator_name . "\t" . $auRec[$i]->username . "\t" . $auRec[$i]->email_id . "\t" . $auRec[$i]->operator_phone_number . "\t" . $auRec[$i]->manage_items . "\t" . $auRec[$i]->manage_distributors . "\t" . $auRec[$i]->manage_retailer . "\t" . $auRec[$i]->manage_salesman . "\t" . $auRec[$i]->manage_route . "\t" . $auRec[$i]->manage_retailer_relationship . "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"manage_users_list.xls\"");
    echo $data;
    exit;
}

/******************************************** End Export Manage User ******************************************************************/
/******************************************** Start Export Message ******************************************************************/


if (isset($_GET['export_message'])) {
    $data = "" . $AliaseUsers['salesman'] . " Name \t Subject \t Message\t Reply\t Send Date\n";
    $condi = " m.status='A' and s.account_id=" . $_SESSION['accountId'] . " order by m.message_id desc ";
    $auRec = $_objAdmin->_getSelectList2('table_message as m left join table_salesman as s on s.salesman_id=m.salesman_id', "m.*,s.salesman_name ", '', $condi);
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $remove = array("\n", "\r\n", "\r");

            //$data.="".$auRec[$i]->salesman_name."\t".$auRec[$i]->subject."\t".str_replace($remove, ' ',$auRec[$i]->message)."\t".str_replace($remove, ' ',$auRec[$i]->reply)."\t".$_objAdmin->_changeDate($auRec[$i]->send_date)."\n";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->subject . '"';
            $data .= "\t";
            $data .= '"' . str_replace($remove, ' ', $auRec[$i]->message) . '"';
            $data .= "\t";
            $data .= '"' . str_replace($remove, ' ', $auRec[$i]->reply) . '"';
            $data .= "\t";
            $data .= '"' . $_objAdmin->_changeDate($auRec[$i]->send_date) . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"message_list.xls\"");
    echo $data;
    exit;
}
/******************************************** End Export Message ******************************************************************/
/******************************************** Start Export Salesman Activity ******************************************************************/

if (isset($_GET['export_act'])) {
    $data = "" . $AliaseUsers['salesman'] . " Name: " . $_SESSION['SalNameAct'] . "\t From Date: " . $_SESSION['FromAct'] . "\t To Date: " . $_SESSION['ToAct'] . "\n";
    $data .= "Date\t Day\t Market\t Total Calls\t Total Productive Calls\t Total No. of New " . $AliaseUsers['retailer'] . "\t Total Amount of Order\n";
    $auRet = $_objAdmin->_getSelectList('table_order', "date_of_order", '', " salesman_id='" . $_SESSION['SalAct'] . "' and (date_of_order BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromAct'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToAct'])) . "') Group by date_of_order ORDER BY date_of_order asc ");
    if (is_array($auRet)) {
        for ($i = 0; $i < count($auRet); $i++) {
            $td1 = $_objAdmin->_getSelectList('table_order as o left join table_retailer as r on o.retailer_id=r.retailer_id', 'count(order_id) as total_call, sum( o.total_invoice_amount ) as total_amt ', '', " o.date_of_order='" . $auRet[$i]->date_of_order . "' and r.new='' and o.salesman_id='" . $_SESSION['SalAct'] . "'");
            $td2 = $_objAdmin->_getSelectList('table_order as o left join table_retailer as r on o.retailer_id=r.retailer_id', 'count(order_id) as productive_call', '', " o.date_of_order='" . $auRet[$i]->date_of_order . "' and o.order_type != 'No' and r.new='' and o.salesman_id='" . $_SESSION['SalAct'] . "'");
            $td3 = $_objAdmin->_getSelectList('table_retailer', 'count(retailer_id) as total_retailer', '', " start_date='" . $auRet[$i]->date_of_order . "' and salesman_id='" . $_SESSION['SalAct'] . "'");
            $td4 = $_objAdmin->_getSelectList('table_retailer', 'DISTINCT(retailer_location)', '', " retailer_id in(Select DISTINCT(retailer_id) from table_order where salesman_id='" . $_SESSION['SalAct'] . "' and date_of_order='" . $auRet[$i]->date_of_order . "') Order by retailer_location asc");
            for ($a = 0; $a < count($td4); $a++) {
                $market .= $comma . $td4[$a]->retailer_location;
                $comma = ", ";
            }
            //$data.="".$_objAdmin->_changeDate($auRet[$i]->date_of_order)."\t".date("l",strtotime($auRet[$i]->date_of_order))."\t".strtoupper($market)."\t".$td1[0]->total_call."\t".$td2[0]->productive_call."\t".$td3[0]->total_retailer."\t".$td1[0]->total_amt."\n";
            $data .= '"' . $_objAdmin->_changeDate($auRet[$i]->date_of_order) . '"';
            $data .= "\t";
            $data .= '"' . date("l", strtotime($auRet[$i]->date_of_order)) . '"';
            $data .= "\t";
            $data .= '"' . strtoupper($market) . '"';
            $data .= "\t";
            $data .= '"' . $td1[0]->total_call . '"';
            $data .= "\t";
            $data .= '"' . $td2[0]->productive_call . '"';
            $data .= "\t";
            $data .= '"' . $td3[0]->total_retailer . '"';
            $data .= "\t";
            $data .= '"' . $td1[0]->total_amt . '"';
            $data .= "\n";
            unset($market);
            unset($comma);
        }
    } else {
        $data .= "Report Not Available";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Activity Report.xls\"");
    echo $data;
    exit;
}

/******************************************** End Export Salesman Activity ******************************************************************/
/******************************************** Start Export Retailer Vise Report ******************************************************************/
if (isset($_GET['export_ret_vise_report'])) {

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename= " . $AliaseUsers['retailer'] . "_Wise_Report.xls");
    header("Pragma: no-cache");
    header("Expires: 0");
    if ($_SESSION['globSalList'] != '') {
        $salesman = $_SESSION['globSalList'];
    }
    if ($_SESSION['SnameList'] != '') {
        //$salesman="AND o.salesman_id='".$_SESSION['SnameList']."'";
        $salesman = 'AND s.salesman_id = ' . $_SESSION['SnameList'];
//        $salArrList=$_SESSION['SnameList'];
//		$filterby=$_SESSION['retfilterBY'];
//		$salesman = $_objArrayList->getSalesmanConsolidatedList($salArrList,$filterby);
    }
    if ($_SESSION['state_id'] != '') {
        $list = "r.state = '" . $_SESSION['state_id'] . "'";
    } else {
        $list = " ";
    }

    if ($_SESSION['userLoginType'] == 3) {
        $disLogCond = "o.distributor_id='" . $_SESSION['distributorId'] . "' and ";
    }
    $auRet = $_objAdmin->_getSelectList('table_order as o left join table_retailer as r on o.retailer_id=r.retailer_id LEFT JOIN table_salesman AS s ON s.salesman_id = o.salesman_id LEFT JOIN table_retailer_channel_master as cm on cm.channel_id=r.channel_id', "COUNT(o.retailer_id) as total", '', " $disLogCond $list and (o.date_of_order BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromRetList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToRetList'])) . "') $salesman AND r.new='' GROUP BY o.retailer_id ORDER BY total desc LIMIT 1");
    if (is_array($auRet)) { ?>
        <table border="1">
            <tr>
                <td><?php echo $AliaseUsers['retailer'] ?> Name</td>
                <td><?php echo $AliaseUsers['retailer'] ?> Code</td>
                <td><?php echo $AliaseUsers['retailer'] ?> Group</td>
                <td><?php echo $AliaseUsers['retailer'] ?> Channel</td>
                <td><?php echo $AliaseUsers['retailer'] ?> Classification</td>
                <td><?php echo $AliaseUsers['retailer'] ?> Type</td>
                <td>Zone</td>
                <td>State</td>
                <td>District</td>
                <td><?php echo $AliaseUsers['distributor'] ?> Name</td>
                <td><?php echo $AliaseUsers['distributor'] ?> Code</td>
                <td><?php echo $AliaseUsers['distributor'] ?> Type</td>
                <td><?php echo $AliaseUsers['distributor'] ?> Region</td>

                <td>Display Outlet</td>
                <td>Market</td>
                <td>Total</td>
                <td>Pro / Tot</td>
                <td>% Share</td>
                <?php
                $row_total = $auRet[0]->total;
                for ($a = 0; $a < $auRet[0]->total; $a++) { ?>
                    <td>Date <?php echo $a + 1; ?></td>
                    <td> <?php echo $AliaseUsers['salesman'] ?> Name</td>
                    <td><?php echo $AliaseUsers['salesman'] ?> Code</td>
                    <td>Order Value <?php echo $a + 1; ?></td>
                <?php } ?>
            </tr>
            <?php
            $orderList = $_objAdmin->_getSelectList('table_order as o 
                            LEFT JOIN table_order_detail as od ON od.order_id = o.order_id
                            left join table_retailer as r on o.retailer_id=r.retailer_id 
                            left join table_retailer_type_master as rtm ON rtm.type_id=r.type_id
                            LEFT JOIN table_retailer_group as rg ON rg.group_id = r.group_id
                            left join table_relationship as rel ON rel.relationship_id=r.relationship_id 
                            LEFT JOIN table_salesman AS s ON s.salesman_id = o.salesman_id 
                            LEFT JOIN table_retailer_channel_master as cm on cm.channel_id=r.channel_id 
                            left join table_distributors as d on d.distributor_id=r.distributor_id 
                            left join table_distributor_type_master as dt on dt.dis_type_id = d.distributor_type_id
                            left join state as st on st.state_id=r.state 
                            left join city as c on c.city_id=r.city
                            LEFT JOIN table_zone_state_mapping as szsm on szsm.state_id = r.state and szsm.account_id = r.account_id
                            LEFT JOIN table_zone as sz on sz.zone_id = szsm.zone_id 
                            left join table_region as re on re.region_id=d.region_id', "sum(od.acc_total) as total_amt,o.order_id,o.retailer_id,r.retailer_name,r.retailer_code,r.retailer_location,cm.channel_name,r.display_outlet,d.distributor_name,d.distributor_code,st.state_name,c.city_name,re.region_name, sz.zone_name,rtm.type_name,rg.group_name,rel.relationship_code as relation,dt.dis_type_name", '', " $disLogCond $list and (o.date_of_order BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromRetList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToRetList'])) . "') $salesman AND r.new='' GROUP BY o.retailer_id  ORDER BY total_amt " . $_SESSION['order_by'] . "");
            $orderTotal = $_objAdmin->_getSelectList('table_order as o left join table_retailer as r on o.retailer_id=r.retailer_id LEFT JOIN table_salesman AS s ON s.salesman_id = o.salesman_id', "count(o.retailer_id) as total_cal,r.retailer_id", '', " $disLogCond $list and (o.date_of_order BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromRetList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToRetList'])) . "') $salesman AND r.new='' GROUP BY r.retailer_id ORDER BY o.date_of_order,r.retailer_id");
            $orderTotalPro = $_objAdmin->_getSelectList('table_order as o left join table_retailer as r on o.retailer_id=r.retailer_id LEFT JOIN table_salesman AS s ON s.salesman_id = o.salesman_id', "count(o.retailer_id) as total_cal_pro,r.retailer_id", '', " $disLogCond $list and (o.date_of_order BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromRetList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToRetList'])) . "') $salesman AND r.new='' AND order_type!='No' GROUP BY r.retailer_id ORDER BY o.date_of_order,r.retailer_id");
            $Netorder = $_objAdmin->_getSelectList('table_order as o 
                            LEFT JOIN table_order_detail as od ON od.order_id = o.order_id
                            left join table_retailer as r on o.retailer_id=r.retailer_id LEFT JOIN table_salesman AS s ON s.salesman_id = o.salesman_id', "sum(od.acc_total) as net_amt", '', " $disLogCond $list and (o.date_of_order BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromRetList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToRetList'])) . "') $salesman AND r.new='' ");
            $orderDet = $_objAdmin->_getSelectList('table_order as o 
                            LEFT JOIN table_order_detail as od ON od.order_id = o.order_id
                            left join table_retailer as r on o.retailer_id=r.retailer_id 
                            LEFT JOIN table_salesman AS s ON s.salesman_id = o.salesman_id', "o.order_id,r.retailer_id,r.retailer_name,o.date_of_order,SUM(od.acc_total) as acc_total_invoice_amount,o.order_type,s.salesman_name,s.employee_code", '', " $disLogCond $list and (o.date_of_order BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromRetList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToRetList'])) . "') $salesman AND r.new='' GROUP BY o.order_id ORDER BY r.retailer_id ASC,o.date_of_order ASC,o.time_of_order ASC");
            $TotalCallArray = array();
            foreach ($orderTotal as $key => $ttlOdr) {
                $TotalCallArray[$ttlOdr->retailer_id] = $ttlOdr->total_cal;
                ksort($TotalCallArray);
            }
            $TotalProductiveCallArray = array();
            foreach ($orderTotalPro as $key => $ttlProductiveOdr) {
                $TotalProductiveCallArray[$ttlProductiveOdr->retailer_id] = $ttlProductiveOdr->total_cal_pro;
                ksort($TotalProductiveCallArray);
            }
            $dateWiseOrderDetArry = array();
            foreach ($orderDet as $key => $dateWiseOrder) {
                $dateWiseOrderDetArry[$dateWiseOrder->retailer_id][$dateWiseOrder->order_id] = $dateWiseOrder;
            }
            if (is_array($orderList)) {
                foreach ($orderList as $key => $odrDet) {
                    $total_call = '';
                    $total_productive_call = '';
                    if ($odrDet->display_outlet == 'Y') {
                        $outlet = 'Yes';
                    } elseif ($odrDet->display_outlet == 'N') {
                        $outlet = 'No';
                    } else {
                        $outlet = '';
                    }
                    ?>
                    <tr>
                        <td><?php echo $odrDet->retailer_name; ?></td>
                        <td><?php echo $odrDet->retailer_code; ?></td>

                        <td><?php echo $odrDet->group_name; ?></td>
                        <td><?php echo $odrDet->channel_name; ?></td>
                        <td><?php echo $odrDet->relation; ?></td>
                        <td><?php echo $odrDet->type_name; ?></td>
                        <td><?php echo $odrDet->zone_name; ?></td>
                        <td><?php echo $odrDet->state_name; ?></td>
                        <td><?php echo $odrDet->city_name; ?></td>
                        <td><?php echo $odrDet->distributor_name; ?></td>
                        <td><?php echo $odrDet->distributor_code; ?></td>
                        <td><?php echo $odrDet->dis_type_name; ?></td>
                        <td><?php echo $odrDet->region_name; ?></td>
                        <td><?php echo $outlet; ?></td>
                        <td><?php echo $odrDet->retailer_location; ?></td>
                        <td><?php echo $odrDet->total_amt; ?></td>

                        <?php
                        if (isset($TotalCallArray[$odrDet->retailer_id])) {
                            $total_call = $TotalCallArray[$odrDet->retailer_id];
                        } else {
                            $total_call = 0;
                        }
                        if (isset($TotalProductiveCallArray[$odrDet->retailer_id])) {
                            $total_productive_call = $TotalProductiveCallArray[$odrDet->retailer_id];
                        } else {
                            $total_productive_call = 0;
                        } ?>
                        <td><?php echo $total_productive_call . ' | ' . $total_call; ?></td>
                        <td><?php echo round($odrDet->total_amt / $Netorder[0]->net_amt * 100, 2); ?></td>
                        <?php
                        if (is_array($dateWiseOrderDetArry[$odrDet->retailer_id]) && (count($dateWiseOrderDetArry[$odrDet->retailer_id]) > 0)) {
                            $count = 0;
                            foreach ($dateWiseOrderDetArry[$odrDet->retailer_id] as $orderId => $orderData) { ?>
                                <td><?php echo $_objAdmin->_changeDate($orderData->date_of_order); ?></td>
                                <td><?php echo $orderData->salesman_name; ?></td>
                                <td><?php echo $orderData->employee_code; ?></td>
                                <td><?php echo (isset($orderData->acc_total_invoice_amount) && !empty($orderData->acc_total_invoice_amount)) ? $orderData->acc_total_invoice_amount : '0.00' ?></td>
                                <?php
                                $count++;
                            }
                            for ($c1 = 0; $c1 < $row_total - $count; $c1++) { ?>
                                <td style="text-align: center">-</td>
                                <td style="text-align: center">-</td>
                                <td style="text-align: center">-</td>
                                <td style="text-align: center">-</td>
                            <?php }
                        } else {
                            for ($c = 0; $c < $row_total; $c++) { ?>
                                <td style="text-align: center">-</td>
                                <td style="text-align: center">-</td>
                                <td style="text-align: center">-</td>
                                <td style="text-align: center">-</td>
                            <?php }
                        } ?>
                    </tr>
                <?php }

            } ?>
        </table>
    <?php } else { ?>
        <tr>
            <td>Report Not Available</td>
        </tr>

    <?php }
}
/******************************************** End Export Retailer Vise Report ******************************************************************/
/******************************************** Start Export Distributor Vise Report ******************************************************************/

if (isset($_GET['export_dist_vise_report'])) {
    $data = "From Date: " . $_SESSION['FromDisList'] . "\t To Date: " . $_SESSION['ToDisList'] . "\n";
    $_objArrayList = new ArrayList();
    $salsList = $_objArrayList->SalesmanArrayList();
    $salesman = $_objArrayList->getSalesCondition($salsList);

    $whereCondi = '';
    if (isset($_SESSION['state']) && !empty($_SESSION['state']) && (intval($_SESSION['state']) > 0)) {
        $whereCondi .= " AND d.state = '" . $_SESSION['state'] . "'  AND s.state = '" . $_SESSION['state'] . "' ";
    }

    if (isset($_SESSION['SalnameList']) && !empty($_SESSION['SalnameList']) && (intval($_SESSION['SalnameList']) > 0)) {
        $whereCondi .= " AND o.salesman_id = '" . $_SESSION['SalnameList'] . "' ";
    }

    if (isset($_SESSION['DistList']) && !empty($_SESSION['DistList']) && (intval($_SESSION['DistList']) > 0)) {
        $whereCondi .= " AND o.distributor_id = '" . $_SESSION['DistList'] . "' ";
    }

    $auRet = $_objAdmin->_getSelectList('table_order as o 
    left join table_distributors as d on o.distributor_id=d.distributor_id 
    LEFT JOIN table_salesman AS s ON s.salesman_id = o.salesman_id', "COUNT(o.distributor_id) as total", '', "(o.date_of_order BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromDisList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToDisList'])) . "') $salesman AND o.order_type!='No' $whereCondi GROUP BY o.distributor_id ORDER BY total desc LIMIT 1");

    if (is_array($auRet)) {
        $data1 = "" . $AliaseUsers['distributor'] . " Code\t" . $AliaseUsers['distributor'] . " Name\t Zone \tState\t District \t Total\t % Share\t";
        $row_total = $auRet[0]->total;
        for ($a = 0; $a < $auRet[0]->total; $a++) {
            $no = $a + 1;
            $data1 .= "Date " . $no . "\t " . $AliaseUsers['salesman'] . " Name\t " . $AliaseUsers['salesman'] . " Code\t Order Value " . $no . "\t";
        }
        $data1 .= " \n";
        $data .= $data1;
        $orderList = $_objAdmin->_getSelectList('table_order as o 
        left join table_distributors as d on o.distributor_id=d.distributor_id 
        LEFT JOIN table_salesman AS s ON s.salesman_id = o.salesman_id 
        left join state as st on st.state_id=d.state
        LEFT JOIN table_zone_state_mapping as szsm on szsm.state_id = d.state and szsm.account_id = d.account_id
LEFT JOIN table_zone as sz on sz.zone_id = szsm.zone_id 
        left join city as c on c.city_id=d.city', "sum(o.acc_total_invoice_amount) as total_amt,o.order_id,o.distributor_id,d.distributor_name,d.distributor_code,st.state_name,c.city_name,sz.zone_name", '', " (o.date_of_order BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromDisList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToDisList'])) . "') $salesman AND o.order_type!='No' $whereCondi GROUP BY o.distributor_id  Order by total_amt DESC");
        //echo "<pre>";print_r($orderList);die;
        if (is_array($orderList)) {
            for ($i = 0; $i < count($orderList); $i++) {
                $data2 = "";
                $data2 = $orderList[$i]->distributor_code . "\t ";
                $data2 .= $orderList[$i]->distributor_name . "\t ";
                $data2 .= $orderList[$i]->zone_name . "\t ";
                $data2 .= $orderList[$i]->state_name . "\t ";
                $data2 .= $orderList[$i]->city_name . "\t ";
                $data2 .= $orderList[$i]->total_amt . "\t ";
                $orderTotal = $_objAdmin->_getSelectList('table_order as o 
                left join table_distributors as d on o.distributor_id=d.distributor_id 
                LEFT JOIN table_salesman AS s ON s.salesman_id = o.salesman_id', "count(o.distributor_id) as total_cal", '', " o.distributor_id='" . $orderList[$i]->distributor_id . "' and (o.date_of_order BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromDisList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToDisList'])) . "') $salesman AND o.order_type!='No' $whereCondi");

                /*$orderTotalPro=$_objAdmin->_getSelectList('table_order as o left join table_retailer as r on o.retailer_id=r.retailer_id',"count(o.retailer_id) as total_cal_pro",''," o.retailer_id='".$orderList[$i]->retailer_id."' and (o.date_of_order BETWEEN '".date('Y-m-d', strtotime($_SESSION['FromRetList']))."' AND '".date('Y-m-d', strtotime($_SESSION['ToRetList']))."') $sNameId AND r.new='' AND order_type!='No' ");

			$data2.=$orderTotalPro[0]->total_cal_pro."/".$orderTotal[0]->total_cal."\t ";*/

                $Netorder = $_objAdmin->_getSelectList('table_order as o 
                left join table_distributors as d on o.distributor_id=d.distributor_id 
                LEFT JOIN table_salesman AS s ON s.salesman_id = o.salesman_id', "sum(o.acc_total_invoice_amount) as net_amt", '', " (o.date_of_order BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromDisList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToDisList'])) . "') $salesman AND o.order_type!='No' $whereCondi ");

                $data2 .= round($orderList[$i]->total_amt / $Netorder[0]->net_amt * 100, 2) . "% \t ";

                $orderDet = $_objAdmin->_getSelectList('table_order as o 
                left join table_distributors as d on o.distributor_id=d.distributor_id 
                left join table_salesman as s on o.salesman_id=s.salesman_id', "o.order_id,o.date_of_order,o.acc_total_invoice_amount,o.order_type,s.salesman_name,s.employee_code", '', " o.distributor_id='" . $orderList[$i]->distributor_id . "' and (o.date_of_order BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromDisList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToDisList'])) . "') $salesman AND o.order_type!='No' $whereCondi ORDER BY o.date_of_order ASC");

                for ($b = 0; $b < count($orderDet); $b++) {
                    $data2 .= $_objAdmin->_changeDate($orderDet[$b]->date_of_order) . "\t ";
                    $data2 .= $orderDet[$b]->salesman_name . "\t ";
                    $data2 .= $orderDet[$b]->employee_code . "\t ";
                    if ($orderDet[$b]->order_type != 'No') {
                        $data2 .= $orderDet[$b]->acc_total_invoice_amount . "\t ";
                    } else {
                        $data2 .= $orderDet[$b]->acc_total_invoice_amount . "\t ";
                    }
                }
                for ($c = 0; $c < $row_total - count($orderDet); $c++) {
                    $data2 .= "-\t ";
                    $data2 .= "-\t ";
                    $data2 .= "-\t ";
                    $data2 .= "-\t ";
                }
                $orderAmount = $_objAdmin->_getSelectList('table_order as o 
                left join table_distributors as d on o.distributor_id=d.distributor_id 
                LEFT JOIN table_salesman AS s ON s.salesman_id = o.salesman_id', "sum(o.acc_total_invoice_amount) as total_amt", '', " o.distributor_id='" . $orderList[$i]->distributor_id . "' and (o.date_of_order BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromDisList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToDisList'])) . "') $salesman AND o.order_type!='No' $whereCondi ");
                $data2 .= "\n";

                $data .= $data2;
            }
        }
    } else {
        $data .= "Report Not Available \n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['distributor'] . " Wise Report.xls\"");
    echo $data;
    exit;
}
/******************************************** End Export Retailer Vise Report ******************************************************************/

/******************************************** Start Export Item Vise Report ******************************************************************/


if (isset($_GET['export_ret_item_vise_report'])) {
    $data = "" . $AliaseUsers['retailer'] . " Name: " . $_SESSION['ItemRetName'] . "\n";
    $data .= "Market: " . $_SESSION['ItemRetMarket'] . "\n";
    $data .= "City: " . $_SESSION['ItemRetCity'] . "\n";
    $data .= "From Date: " . $_SESSION['FromRetList'] . "\t To Date: " . $_SESSION['ToRetList'] . "\n";
    $auRet = $_objAdmin->_getSelectList('table_order as o left join table_salesman as s on o.salesman_id=s.salesman_id', "o.order_id,o.date_of_order,s.salesman_name", '', " o.retailer_id='" . $_SESSION['ItemRetID'] . "' and (o.date_of_order BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromRetList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToRetList'])) . "') AND o.order_type!='No' order by o.date_of_order asc");
    if (is_array($auRet)) {
        $data1 = "SNO. \t Item Code\t ";
        for ($a = 0; $a < count($auRet); $a++) {
            $no = $a + 1;
            $data1 .= "Visit " . $no . ", Date:" . $_objAdmin->_changeDate($auRet[$a]->date_of_order) . "," . $auRet[$a]->salesman_name . "\t ";
        }
        $data1 .= "Total Quantity \t Total Amount\t % Share\n";
        $data .= $data1;
        $itemList = $_objAdmin->_getSelectList2('table_order_detail as d left join table_order as o on o.order_id=d.order_id left join table_item as i on i.item_id=d.item_id', "sum(acc_quantity) as total_qty,sum(d.acc_total) as amt_total,i.item_code,i.item_id", '', " d.order_id in (SELECT order_id FROM table_order where o.retailer_id='" . $_SESSION['ItemRetID'] . "' and (o.date_of_order BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromRetList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToRetList'])) . "') ) GROUP BY d.item_id ORDER BY " . $_SESSION['List'] . "");

        $net_total_item = $_objAdmin->_getSelectList2('table_order_detail as d left join table_order as o on o.order_id=d.order_id', "sum(d.acc_quantity) as totalitem, sum(d.acc_total) as amt_total", '', " o.retailer_id='" . $_SESSION['ItemRetID'] . "' and (o.date_of_order BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromRetList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToRetList'])) . "')");

        for ($i = 0; $i < count($itemList); $i++) {
            $num = $i + 1;
            $data2 = $num . "\t" . $itemList[$i]->item_code . "\t";
            for ($a = 0; $a < count($auRet); $a++) {
                $item = $_objAdmin->_getSelectList2('table_order_detail', "sum(acc_quantity) as total_qty", '', " item_id='" . $itemList[$i]->item_id . "' and order_id='" . $auRet[$a]->order_id . "'");
                if (is_array($item)) {
                    $data2 .= $item[0]->total_qty . "\t";
                    //echo $item[0]->acc_quantity;
                } else {
                    $data2 .= "0 \t";
                }
            }
            $data2 .= $itemList[$i]->total_qty . "\t" . $itemList[$i]->amt_total . "\t" . round($itemList[$i]->amt_total / $net_total_item[0]->amt_total * 100, 2) . "% \n";
            $data .= $data2;
        }
        for ($z = 0; $z < count($auRet) + 1; $z++) {
            $data3 .= "\t";
        }
        $net_total_item = $_objAdmin->_getSelectList2('table_order_detail as d left join table_order as o on o.order_id=d.order_id', "sum(d.acc_quantity) as totalitem, sum(d.acc_total) as amt_total", '', " o.retailer_id='" . $_SESSION['ItemRetID'] . "' and (o.date_of_order BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromRetList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToRetList'])) . "')");
        $data3 .= "Total \t" . $net_total_item[0]->totalitem . "\t" . $net_total_item[0]->amt_total . "\n";
        $data .= $data3;

    } else {
        $data .= "Report Not Available";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['retailer'] . " Item Wise Report.xls\"");
    echo $data;
    exit;
}
if (isset($_GET['export_ret_his_report'])) {

    if ($_SESSION['RetId'] != '') {
        $list = "r.retailer_id='" . $_SESSION['RetId'] . "'";
    }
    //$Name=$_objAdmin->_getSelectList('table_retailer','retailer_name',''," retailer_id='".$_SESSION['RetId']."'");
    $data = "From Date: " . $_SESSION['FromRetList'] . "\t To Date: " . $_SESSION['ToRetList'] . "\n";
    $auRet = $_objAdmin->_getSelectList('table_order as o left join table_retailer as r on o.retailer_id=r.retailer_id', "COUNT(o.retailer_id) as total", '', " $list and (o.date_of_order BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromRetList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToRetList'])) . "') AND r.new='' GROUP BY o.retailer_id ORDER BY total desc LIMIT 1");
    if (is_array($auRet)) {
        $data1 = "" . $AliaseUsers['retailer'] . " Name\t Market\t ";
        $row_total = $auRet[0]->total;
        for ($a = 0; $a < $auRet[0]->total; $a++) {
            $no = $a + 1;
            $data1 .= "Date " . $no . "\t " . $AliaseUsers['salesman'] . "\t Order Value " . $no . "\t";
        }
        $data1 .= "Total\t Pro / Tot\n";
        $data .= $data1;
        $pro = array();
        $tot = array();
        $orderList = $_objAdmin->_getSelectList('table_order as o left join table_retailer as r on o.retailer_id=r.retailer_id', "o.order_id,o.retailer_id,r.retailer_name,r.retailer_location", '', " $list and (o.date_of_order BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromRetList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToRetList'])) . "') AND r.new='' GROUP BY o.retailer_id Order by retailer_location asc ");
        if (is_array($orderList)) {
            for ($i = 0; $i < count($orderList); $i++) {
                $data2 = $orderList[$i]->retailer_name . "\t ";
                $data2 .= $orderList[$i]->retailer_location . "\t ";
                $orderDet = $_objAdmin->_getSelectList('table_order as o left join table_retailer as r on o.retailer_id=r.retailer_id left join table_salesman as s on o.salesman_id=s.salesman_id', "o.order_id,o.date_of_order,o.acc_total_invoice_amount,o.order_type,s.salesman_name", '', " o.retailer_id='" . $orderList[$i]->retailer_id . "' and (o.date_of_order BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromRetList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToRetList'])) . "') AND r.new='' Order by o.date_of_order asc ");
                for ($b = 0; $b < count($orderDet); $b++) {
                    $tot[] = $b;
                    $data2 .= $_objAdmin->_changeDate($orderDet[$b]->date_of_order) . "\t ";
                    $data2 .= $orderDet[$b]->salesman_name . "\t ";
                    if ($orderDet[$b]->order_type != 'No') {
                        $pro[] = $orderDet[$b]->order_id;
                        $data2 .= $orderDet[$b]->acc_total_invoice_amount . "\t ";
                    } else {
                        $data2 .= $orderDet[$b]->acc_total_invoice_amount . "\t ";
                    }
                }
                for ($c = 0; $c < $row_total - count($orderDet); $c++) {
                    $data2 .= "-\t ";
                    $data2 .= "-\t ";
                    $data2 .= "-\t ";
                }
                $orderAmount = $_objAdmin->_getSelectList('table_order as o left join table_retailer as r on o.retailer_id=r.retailer_id', "sum(o.acc_total_invoice_amount) as total_amt", '', " o.retailer_id='" . $orderList[$i]->retailer_id . "' and (o.date_of_order BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromRetList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToRetList'])) . "') AND r.new='' ");
                $tatal_pro = count($pro);
                $tatal_tot = count($tot);
                $data2 .= $orderAmount[0]->total_amt . "\t" . $tatal_pro . "/" . $tatal_tot . "\n";
                unset($pro);
                unset($tot);
                $data .= $data2;
            }
        }


    } else {
        $data .= "Report Not Available /n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['retailer'] . " Wise Report.xls\"");
    echo $data;
    exit;
}
/******************************************** End Export Item Vise Report ******************************************************************/
/******************************************** Start Export Retailer PHOTO ******************************************************************/
if (isset($_GET['export_relailer_photo'])) {
    $data = "" . $AliaseUsers['retailer'] . " Name \t Number of Photos \t Address \t Market \t State \t City \t Contact Person \t Contact Person Number\n";
    $condi = " r.status='A' and r.account_id='" . $_SESSION['accountId'] . "' and s.state_name!='' and c.city_name!='' ORDER BY s.state_name, c.city_name, r.retailer_name";
    $auRec = $_objAdmin->_getSelectList('table_retailer as r left join state as s on r.state=s.state_id left join city as c on r.city=c.city_id', "r.retailer_id,r.retailer_name,r.retailer_address,r.retailer_location,r.contact_person,r.contact_number,s.state_name,c.city_name", '', $condi);
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $photo_list = $_objAdmin->_getSelectList('table_image as i left join table_survey as s on s.survey_id=i.ref_id', 'count(i.image_url) as total_img', '', " s.retailer_id='" . $auRec[$i]->retailer_id . "'  and i.image_type=3 ");
            if ($photo_list[0]->total_img != '') {
                $photo = $photo_list[0]->total_img;
            } else {
                $photo = NULL;
            }

            $data .= "" . $auRec[$i]->retailer_name . "\t";
            $data .= "" . $photo . "\t";
            $data .= "" . $auRec[$i]->retailer_address . "\t" . $auRec[$i]->retailer_location . "\t" . $auRec[$i]->state_name . "\t" . $auRec[$i]->city_name . "\t" . $auRec[$i]->contact_person . "\t" . $auRec[$i]->contact_number . "\n";
        }
    }

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"retailer_photo_list.xls\"");
    echo $data;
    exit;
}
/******************************************** End Export Retailer Report ******************************************************************/
/************************************************************ Start Export Price Details ****************************************************/


if (isset($_GET['export_price_list'])) {
    $data = "State \t City \t Price Applicable\n";
    $condi = " pca.account_id='" . $_SESSION['accountId'] . "' ORDER BY s.state_name,cs.city_name";
    $auRec = $_objAdmin->_getSelectList('price_city_applicable as pca left join state as s on pca.state_id=s.state_id left join city as cs on pca.city_id=cs.city_id', "s.state_name,cs.city_name,pca.*", '', $condi);
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            if ($auRec[$i]->price_type == "1") {
                $price_type = "MRP";
            } else if ($auRec[$i]->price_type == "2") {
                $price_type = "DP";
            } else {
                $price_type = "PTR";
            }
            $data .= "" . $auRec[$i]->state_name . "\t" . $auRec[$i]->city_name . "\t" . $price_type . "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"price_details_list.xls\"");
    echo $data;
    exit;
}

if (isset($_GET['trouble_tickets'])) {
    $data = "Date \t " . $AliaseUsers['salesman'] . " Name \t Message\t Reply \t Reply Date \t Status\n";
    if ($_SESSION['SalTroubleList'] != '') {
        $salesman = " and t.salesman_id='" . $_SESSION['SalTroubleList'] . "'";
    }
    if ($_SESSION['FromTroubleList'] != '') {
        $fromdate = " t.trouble_tickets_date >= '" . $_SESSION['FromTroubleList'] . "'";
    } else {
        $fromdate = " t.trouble_tickets_date >= '" . date("Y-m-d", strtotime("-1 day")) . "'";
    }
    if ($_SESSION['ToTroubleList'] != '') {
        $todate = " and t.trouble_tickets_date <= '" . $_SESSION['ToTroubleList'] . "'";
    } else {
        $todate = " and t.trouble_tickets_date <= '" . date("Y-m-d", strtotime("-1 day")) . "'";
    }
    $condi = " $fromdate $todate $salesman and s.account_id=" . $_SESSION['accountId'] . " Order by trouble_tickets_date desc";
    $auRec = $_objAdmin->_getSelectList2('table_trouble_tickets as t left join table_salesman as s on s.salesman_id=t.salesman_id', "t.*,s.salesman_name", '', $condi);
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            /*if($auRec[$i]->reply_date!='0000-00-00'){
			$reply_date=date('Y-m-d', strtotime($auRec[$i]->reply_date));
			} else {
			$reply_date="";
			}*/
            $remove = array("\n", "\r\n", "\r");
            $data .= "" . $_objAdmin->_changeDate($auRec[$i]->trouble_tickets_date) . "\t" . $auRec[$i]->salesman_name . "\t" . str_replace($remove, ' ', $auRec[$i]->message) . "\t" . str_replace($remove, ' ', $auRec[$i]->reply) . "\t" . $_objAdmin->_changeDate($auRec[$i]->reply_date) . "\t" . $auRec[$i]->status . "\n";
            //$data.="<br>";
        }
    } else {
        $data .= "Trouble Tickets List Not Available /n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"trouble_tickets_list.xls\"");
    echo $data;
    exit;
}


// Export Quality Checker List
if (isset($_GET['export_dispatched_order_list'])) {
    $data = "" . $AliaseUsers['distributor'] . " Name\t Category Name\t Item Name\t Item Code\t Item Quantity\t Date Of Dispatch\n";
    $condi = " 1=1";
    $auRec = $_objAdmin->_getSelectList('table_dispatch_order as tdo left join table_distributors as d on d.distributor_id=tdo.distributor_id left join table_category as c on c.category_id=tdo.category_id left join table_item as i on i.item_id=tdo.item_id', "tdo.*,d.distributor_name,c.category_name,i.item_name,i.item_code,tdo.item_quantity,tdo.date_of_dispatch", '', $condi);
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= "" . $auRec[$i]->distributor_name . "\t" . $auRec[$i]->category_name . "\t" . $auRec[$i]->item_name . "\t" . $auRec[$i]->item_code . "\t" . $auRec[$i]->item_quantity . "\t" . $auRec[$i]->date_of_dispatch . "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"dispatch_order_list.xls\"");
    echo $data;
    exit;
}


if (isset($_GET['export_admin_ret_his_report'])) {

    if ($_SESSION['RetHistoryId'] != '') {
        $list = "r.retailer_id='" . $_SESSION['RetHistoryId'] . "'";
    }
    //$Name=$_objAdmin->_getSelectList('table_retailer','retailer_name',''," retailer_id='".$_SESSION['RetId']."'");
    $data = "From Date: " . $_SESSION['FromRetOrderList'] . "\t To Date: " . $_SESSION['ToRetOrderList'] . "\n";
    $auRet = $_objAdmin->_getSelectList('table_order as o left join table_retailer as r on o.retailer_id=r.retailer_id', "COUNT(o.retailer_id) as total", '', " $list and (o.date_of_order BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromRetOrderList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToRetOrderList'])) . "') AND r.new='' GROUP BY o.retailer_id ORDER BY total desc LIMIT 1");
    if (is_array($auRet)) {
        $data1 = "" . $AliaseUsers['retailer'] . " Name\t Market\t ";
        $row_total = $auRet[0]->total;
        for ($a = 0; $a < $auRet[0]->total; $a++) {
            $no = $a + 1;
            $data1 .= "Date " . $no . "\t " . $AliaseUsers['salesman'] . "\t Order Value " . $no . "\t";
        }
        $data1 .= "Total\t Pro / Tot\n";
        $data .= $data1;
        $pro = array();
        $tot = array();
        $orderList = $_objAdmin->_getSelectList('table_order as o left join table_retailer as r on o.retailer_id=r.retailer_id', "o.order_id,o.retailer_id,r.retailer_name,r.retailer_location", '', " $list and (o.date_of_order BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromRetOrderList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToRetOrderList'])) . "') AND r.new='' GROUP BY o.retailer_id Order by retailer_location asc ");
        if (is_array($orderList)) {
            for ($i = 0; $i < count($orderList); $i++) {
                $data2 = $orderList[$i]->retailer_name . "\t ";
                $data2 .= $orderList[$i]->retailer_location . "\t ";
                $orderDet = $_objAdmin->_getSelectList('table_order as o left join table_retailer as r on o.retailer_id=r.retailer_id left join table_salesman as s on o.salesman_id=s.salesman_id', "o.order_id,o.date_of_order,o.acc_total_invoice_amount,o.order_type,s.salesman_name", '', " o.retailer_id='" . $orderList[$i]->retailer_id . "' and (o.date_of_order BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromRetOrderList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToRetOrderList'])) . "') AND r.new='' Order by o.date_of_order asc ");
                for ($b = 0; $b < count($orderDet); $b++) {
                    $tot[] = $b;
                    $data2 .= $_objAdmin->_changeDate($orderDet[$b]->date_of_order) . "\t ";
                    $data2 .= $orderDet[$b]->salesman_name . "\t ";
                    if ($orderDet[$b]->order_type != 'No') {
                        $pro[] = $orderDet[$b]->order_id;
                        $data2 .= $orderDet[$b]->acc_total_invoice_amount . "\t ";
                    } else {
                        $data2 .= $orderDet[$b]->acc_total_invoice_amount . "\t ";
                    }
                }
                for ($c = 0; $c < $row_total - count($orderDet); $c++) {
                    $data2 .= "-\t ";
                    $data2 .= "-\t ";
                    $data2 .= "-\t ";
                }
                $orderAmount = $_objAdmin->_getSelectList('table_order as o left join table_retailer as r on o.retailer_id=r.retailer_id', "sum(o.acc_total_invoice_amount) as total_amt", '', " o.retailer_id='" . $orderList[$i]->retailer_id . "' and (o.date_of_order BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromRetOrderList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToRetOrderList'])) . "') AND r.new='' ");
                $tatal_pro = count($pro);
                $tatal_tot = count($tot);
                $data2 .= $orderAmount[0]->total_amt . "\t" . $tatal_pro . "/" . $tatal_tot . "\n";
                unset($pro);
                unset($tot);
                $data .= $data2;
            }
        }


    } else {
        $data .= "Report Not Available /n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['retailer'] . " Wise Report.xls\"");
    echo $data;
    exit;
}


if (isset($_GET['export_distributor_monthly_sale'])) {
    //echo hello;exit;

    $data = " " . $AliaseUsers['retailer'] . " Code\t " . $AliaseUsers['retailer'] . " Name\t " . $AliaseUsers['distributor'] . " Code\t " . $AliaseUsers['distributor'] . " Name\t Region\t State\t City\t Item\t Item Code\t Brand Name\t Month\t Year\t Day1\t  Day2\t Day3\t Day4\t Day5\t Day6\t Day7\t Day8\t Day9\t Day10\t Day11\t Day12\t Day13\t Day14\t Day15\t Day16\t Day17\t Day18\t Day19\t Day20\t Day21\t Day22\t Day23\t Day24\t Day25\t Day26\t Day27\t Day28\t Day29\t Day30\t Day31\n";

    //echo $_SESSION['distributorIDSale'].$_SESSION['itemID'].$_SESSION['dismonth'].$_SESSION['disCyear'];

    if ($_SESSION['distributorIDSale'] != '') {
        $distributor = " and D.distributor_id ='" . $_SESSION['distributorIDSale'] . "'";
    }

    if ($_SESSION['itemID'] != '') {
        $Item = " and V.item_id ='" . $_SESSION['itemID'] . "'";
    }

    if ($_SESSION['dismonth'] != '') {
        $fromdate = " and V.month = '" . $_SESSION['dismonth'] . "'";
    } else {
        $fromdate = "and V.month = " . date('m');
    }

    if ($_SESSION['disCyear'] != '') {
        $todate = " and V.year = '" . $_SESSION['disCyear'] . "'";
    } else {
        $todate = " and V.year = " . date('Y');
    }

    $sortname = 'month';
    $sortorder = 'ASC';
    $sort = " ORDER BY $sortname $sortorder";

    $RoleBrands = $_objAdmin->getUserRoleBrand();
    $brandCnd = '';
    if (!empty($RoleBrands)) {
        $brandCnd = " and B.brand_id IN(" . $RoleBrands . ")";
    }
    $where = "  $distributor $Item $fromdate $todate $brandCnd AND R.new=''";
    $groupby = " GROUP BY R.retailer_id , item_id, month";

    $auRec = $_objAdmin->_getSelectList('disretdailywiseitemreport AS V 
					LEFT JOIN table_retailer AS R ON V.retailer_id = R.retailer_id 
					LEFT JOIN table_distributors AS D ON V.distributor_id = D.distributor_id
					LEFT JOIN table_region as re on re.region_id=D.region_id
					LEFT JOIN state as st on st.state_id=D.state
					LEFT JOIN city as c on c.city_id=D.city	
					LEFT JOIN table_item AS i ON V.item_id = i.item_id
					LEFT JOIN table_brands AS B ON B.brand_id=i.brand_id',
        "V.retailer_id AS RID,
			 DATE_FORMAT(V.date_of_order, '%b') AS DOODR,
			 V.Day AS Day,
			 V.item_name AS item_name,
			 i.item_code AS item_code,
			 V.item_id AS item_id,
			 B.brand_name,
			 V.month AS month,
			 V.year AS year,
			 R.retailer_name AS retailer_name,R.retailer_code,
			 D.distributor_name As distributor_name,D.distributor_code,
			 re.region_name,
			 c.city_name,
			 st.state_name,
			 R.retailer_address,
			 R.retailer_address2", '', $where . $groupby . $sort, '');
    for ($i = 0; $i < count($auRec); $i++) {
        $auRec2 = $_objAdmin->_getSelectList('disretdailywiseitemreport AS V', "totalSaleUnit,Day,retailer_id,item_name", '', " retailer_id = " . $auRec[$i]->RID . " AND item_id = " . $auRec[$i]->item_id . " AND month = " . $auRec[$i]->month . "");
        $row1 = '-';
        $row2 = '-';
        $row3 = '-';
        $row4 = '-';
        $row5 = '-';
        $row6 = '-';
        $row7 = '-';
        $row8 = '-';
        $row9 = '-';
        $row10 = '-';
        $row11 = '-';
        $row12 = '-';
        $row13 = '-';
        $row14 = '-';
        $row15 = '-';
        $row16 = '-';
        $row17 = '-';
        $row18 = '-';
        $row19 = '-';
        $row20 = '-';
        $row21 = '-';
        $row22 = '-';
        $row23 = '-';
        $row24 = '-';
        $row25 = '-';
        $row26 = '-';
        $row27 = '-';
        $row28 = '-';
        $row29 = '-';
        $row30 = '-';
        $row31 = '-';
        for ($j = 0; $j < count($auRec2); $j++) {

            ${'row' . $auRec2[$j]->Day} = $auRec2[$j]->totalSaleUnit;
        }

        $data .= "" . $auRec[$i]->retailer_code . "\t" . $auRec[$i]->retailer_name . "\t" . $auRec[$i]->distributor_code . $auRec[$i]->distributor_name . "\t" . "\t" . $auRec[$i]->region_name . "\t" . $auRec[$i]->state_name . "\t" . $auRec[$i]->city_name . "\t" . $auRec[$i]->item_name . "\t" . $auRec[$i]->item_code . "\t" . $auRec[$i]->brand_name . "\t" . $auRec[$i]->DOODR . "\t" . $auRec[$i]->year . "\t" . $row1 . "\t" . $row2 . "\t" . $row3 . "\t" . $row4 . "\t" . $row5 . "\t" . $row6 . "\t" . $row7 . "\t" . $row8 . "\t" . $row9 . "\t" . $row10 . "\t" . $row11 . "\t" . $row12 . "\t" . $row13 . "\t" . $row14 . "\t" . $row15 . "\t" . $row16 . "\t" . $row17 . "\t" . $row18 . "\t" . $row19 . "\t" . $row20 . "\t" . $row21 . "\t" . $row22 . "\t" . $row23 . "\t" . $row24 . "\t" . $row25 . "\t" . $row26 . "\t" . $row27 . "\t" . $row28 . "\t" . $row29 . "\t" . $row30 . "\t" . $row31 . "\n";
    }

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['distributor'] . " Monthly Sale.xls\"");
    echo $data;
    exit;
}

if (isset($_GET['export_order_list'])) {
    $data = " Date of Order\t Time of Order\t Order Number\t Total Invoice Amount\t Total Number Of Item\t " .
        $AliaseUsers['distributor'] . " Name\t " . $AliaseUsers['distributor'] . " Code\t Distributor Type\tZone\tState\t District\t " .
        $AliaseUsers['salesman'] . " Name\t " . $AliaseUsers['salesman'] . " Code\t Reporting To\t " . $AliaseUsers['retailer'] . " Name\t " . $AliaseUsers['retailer'] . " Code\t " . $AliaseUsers['retailer'] . " Market\t " . $AliaseUsers['retailer'] . " Address\t " . $AliaseUsers['retailer'] . " Group\t" . $AliaseUsers['retailer'] . " Channel\t " . $AliaseUsers['retailer'] . " Classification\t " . $AliaseUsers['retailer'] . " Type \tRetailer Phone No\t Display Outlet\t Comments\t Reason\t Order Status\t Order By\t Delivery Date\tPhoto Count\n";

    $sort = " ORDER BY date_of_order desc,time_of_order desc";
    if ($_SESSION['SalOrderList'] != '') {
        $salesman = " and s.salesman_id='" . $_SESSION['SalOrderList'] . "'";
    } else if (($_SESSION['salesmanId'] > 0) && ($_SESSION['role_id'] > 0)) {
        $RoleBrands = $_objAdmin->getUserRoleBrand();
        if (!empty($RoleBrands)) {
            $salesman = " AND i.brand_id IN(" . $RoleBrands . ")";
        }
    } else {
        $_objArrayList = new ArrayList();
        $salsList = $_objArrayList->SalesmanArrayList();
        $salesman = $_objArrayList->getSalesCondition($salsList);
    }
//	echo $salesman;die(' die here');
    if ($_SESSION['FromOrderList'] != '') {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['FromOrderList'])) . "'";
    } else {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['ToOrderList'] != '') {
        $todate = " and o.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToOrderList'])) . "'";
    } else {
        $todate = " and o.date_of_order <= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['OrderBy'] != '') {
        if ($_SESSION['OrderBy'] == 1) {
            $orderby = "";
        }
        if ($_SESSION['OrderBy'] == 2) {
            $orderby = " and o.order_type='Adhoc' ";
        }
        if ($_SESSION['OrderBy'] == 3) {
            $orderby = " and o.order_type!='Adhoc' ";
        }
    } else {
        $orderby = "";
    }
    switch ($_SESSION['userLoginType']) {
        case '1':
            $disLogCond = '';
            $salesman = '';
            break;
        case '3':
            $disLogCond = " AND r.distributor_id='" . $_SESSION['distributorId'] . "' ";
            $salesman = '';
            break;
        case '4':
            $disLogCond = " AND o.retailer_id='" . $_SESSION['retailerId'] . "' ";
            $salesman = '';
            break;
        case '7':
            $dList = $_objAdmin->getStockistWiseDistributor($_SESSION['stockistId']);
            $salesman = '';
            if (is_array($dList) && sizeof($dList) > 0) {
                $disStr = implode(',', array_unique($dList));
                $disLogCond = " AND o.distributor_id IN($disStr)";
            }
            break;
    }

    // Todo Start : add order type filter : sudhanhsu : 06 march
    $ordrTypeCond = " ";
    if ($_SESSION['orderType'] != '' && $_SESSION['orderType'] != 'all' && count($_SESSION['orderType']) > 0) {
        $orderCategory = $_SESSION['orderType'];
        $orderCate = "'" . implode("', '", $orderCategory) . "'";
        if (implode(',', $orderCategory) != 'all') {
            $ordrTypeCond = " AND LOWER(o.order_type) IN (" . $orderCate . ")";
        }

    }

    // Todo End : add order type filter : sudhanhsu : 06 march
    $where = " $disLogCond $fromdate $todate $salesman and r.new='' $ordrTypeCond $orderby ";
//    $whereret = " $disLogCond  $fromdate $todate and r.new='' and o.type='R' $orderby ";

    /*	$auRec=$_objAdmin->_getSelectList('table_order as o left join table_retailer as r on o.retailer_id=r.retailer_id left join table_salesman as s on o.salesman_id=s.salesman_id left join table_distributors as d on o.distributor_id=d.distributor_id left join table_retailer_channel_master as cm on cm.channel_id=r.channel_id left join state as st on st.state_id=d.state left join city as c on c.city_id=d.city left join table_region as re on re.region_id=d.region_id',"o.*,r.retailer_name,r.retailer_address,r.retailer_location,cm.channel_name,r.display_outlet,r.lat as retlat,r.lng as retlng,s.salesman_name,d.distributor_name,st.state_name,c.city_name,re.region_name ",'',$where.$sort,'');*/

    $auRec = $_objAdmin->_getSelectList('table_order as o 
    left join table_order_detail as ord on ord.order_id = o.order_id 
    left join table_item as i on i.item_id = ord.item_id 
  	left join table_retailer as r on o.retailer_id=r.retailer_id 
  	left join table_salesman as s on o.salesman_id=s.salesman_id 
  	left join table_salesman_hierarchy_relationship as shr on shr.salesman_id = s.salesman_id
  	left join table_salesman as s2 on s2.salesman_id=shr.rpt_user_id
  	left join table_distributors as d on o.distributor_id=d.distributor_id 
  	left join table_retailer_channel_master as cm on r.channel_id=cm.channel_id 
      LEFT JOIN table_retailer_group as rg ON rg.group_id = r.group_id
      left join table_retailer_type_master as rtm ON rtm.type_id=r.type_id
     
      left join table_relationship as rel ON rel.relationship_id=r.relationship_id 
  	left join state as st on st.state_id=r.state
  	left join table_zone_state_mapping as zsm on zsm.state_id = r.state and zsm.account_id = r.account_id
    left join table_zone as z on z.zone_id = zsm.zone_id 
  	left join city as c on c.city_id=r.city 
      left join table_distributor_type_master as dt on dt.dis_type_id = d.distributor_type_id
  	', "o.*,r.retailer_name,r.retailer_code,r.retailer_address,r.retailer_location,r.lat as retlat,cm.channel_name,r.display_outlet,r.lng as retlng,s.salesman_name,s.employee_code,s2.salesman_name as rpt_to,d.distributor_name,d.distributor_code,st.state_name,c.city_name,z.zone_name,rg.group_name,rtm.type_name,rel.relationship_code as relation,dt.dis_type_name,r.retailer_phone_no", '', $where . " GROUP BY o.order_id " . $sort, '');

//    $auRecRet = $_objAdmin->_getSelectList('table_order as o
//  	left join table_retailer as r on o.retailer_id=r.retailer_id
//  	left join table_salesman as s on o.salesman_id=s.salesman_id
//  	left join table_salesman_hierarchy_relationship as shr on shr.salesman_id = s.salesman_id
//  	left join table_salesman as s2 on s2.salesman_id=shr.rpt_user_id
//  	left join table_distributors as d on o.distributor_id=d.distributor_id
//  	left join table_retailer_channel_master as cm on r.channel_id=cm.channel_id
//  	left join state as st on st.state_id=d.state left join city as c on c.city_id=d.city left join table_region as re on re.region_id=d.region_id', "o.*,r.retailer_name,r.retailer_code,r.retailer_address,r.retailer_location,r.lat as retlat,cm.channel_name,r.display_outlet,r.lng as retlng,s.salesman_name,s.employee_code,s2.salesman_name as rpt_to,d.distributor_name,d.distributor_code,st.state_name,c.city_name,re.region_name", '', $whereret . $sort, '');
//    if (!empty($auRecSal) && empty($auRecRet)) {
//        $auRec = $auRecSal;
//    } else if (empty($auRecSal) && !empty($auRecRet)) {
//        $auRec = $auRecRet;
//    } else if (!empty($auRecSal) && !empty($auRecRet)) {
//        $auRec = array_merge($auRecSal, $auRecRet);
//    }
    if (is_array($auRec) && (count($auRec) > 0)) {
        for ($i = 0; $i < count($auRec); $i++) {
            if ($auRec[$i]->order_type == 'Yes') {
                if ($auRec[$i]->order_status == 'A') {
                    $status = "New Order";
                }
                if ($auRec[$i]->order_status == 'I') {
                    $status = "Processed";
                }
                if ($auRec[$i]->order_status == 'D') {
                    $status = "Dispatched";
                }
                $color = ($auRec[$i]->order_status == 'A') ? "A" : "P";
            }
            if ($auRec[$i]->order_type == 'No') {

                $status = ($auRec[$i]->order_status == 'A') ? "No Order" : "Processed";
                $color = ($auRec[$i]->order_status == 'A') ? "I" : "P";
            }
            if ($auRec[$i]->order_type == 'Adhoc') {
                if ($auRec[$i]->order_status == 'A') {
                    //Todo Sudhanshu 27 may 2024 : adhoc Nomenclature
                    $status = "New " . $AliaseUsers['adhoc'] . " Order";

                }
                if ($auRec[$i]->order_status == 'I') {
                    $status = "Processed";
                }
                if ($auRec[$i]->order_status == 'D') {
                    $status = "Dispatched";
                }
                //$status=($auRec[$i]->order_status=='A')?"New Adhoc Order":"Processed";
                $color = ($auRec[$i]->order_status == 'A') ? "O" : "P";
            }
            // display oulet
            if ($auRec[$i]->display_outlet == 'Y') {
                $outlet = 'Yes';
            } elseif ($auRec[$i]->display_outlet == 'N') {
                $outlet = 'No';
            }
            switch ($auRec[$i]->order_by) {
                case 'S':
                    $order_by = $AliaseUsers['salesman'];
                    break;
                case "D":
                    $order_by = $AliaseUsers['distributor'];
                    break;
                case "R":
                    $order_by = $AliaseUsers['retailer'];
                    break;
                default :
                    $order_by = '';
            }

            $auRec2 = $_objAdmin->_getSelectList2('table_order_detail', "COUNT(DISTINCT(item_id)) as total_item", '', " order_id = " . $auRec[$i]->order_id . " and type = 1");

            $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);
            $date_of_delivery = $_objAdmin->_changeDate($auRec[$i]->delivery_date);
            $remove = array("\n", "\r");
            $data .= "" . $date_of_order . "\t" . $auRec[$i]->time_of_order . "\t" . $auRec[$i]->order_id . "\t" .
                $auRec[$i]->acc_total_invoice_amount . "\t" . $auRec2[0]->total_item . "\t" .
                $auRec[$i]->distributor_name . "\t" . $auRec[$i]->distributor_code . "\t" . $auRec[$i]->dis_type_name . "\t" . $auRec[$i]->zone_name . "\t" .
                $auRec[$i]->state_name . "\t" . $auRec[$i]->city_name . "\t" . $auRec[$i]->salesman_name . "\t" .
                $auRec[$i]->employee_code . "\t" . $auRec[$i]->rpt_to . "\t" . $auRec[$i]->retailer_name . "\t" .
                $auRec[$i]->retailer_code . "\t" . str_replace($remove, ' ', $auRec[$i]->retailer_location) . "\t" .
                $auRec[$i]->retailer_address . "\t" . $auRec[$i]->group_name . "\t" . $auRec[$i]->channel_name . "\t" . $auRec[$i]->relation . "\t" . $auRec[$i]->type_name . "\t" . $auRec[$i]->retailer_phone_no . "\t" . $outlet . "\t" . str_replace
                ($remove, ' ', $auRec[$i]->comments) . "\t" . $auRec[$i]->tag_description . "\t" . $status . "\t"
                . $order_by
                . "\t" . $date_of_delivery . "\t" . $auRec[$i]->photo_count . "\n";
        }
    }

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Order List.xls\"");
    echo $data;
    exit;
}
// Code by jatin 2 Nov 2022
//  export order_wise_list

if (isset($_GET['order_wise_list'])) {
    $data = " Date of Order\t Time of Order\t Order Number\t Total Invoice Amount\t Total Number Of Item\t " .
        $AliaseUsers['distributor'] . " Name\t " . $AliaseUsers['distributor'] . " Code\tDistributor Type\t Zone\t State\t District\t " .
        $AliaseUsers['salesman'] . " Name\t " . $AliaseUsers['salesman'] . " Code\t Reporting To\t " . $AliaseUsers['retailer'] . " Name\t " . $AliaseUsers['retailer'] . " Code\t " . $AliaseUsers['retailer'] . " Market\t " . $AliaseUsers['retailer'] . " Address\t" . $AliaseUsers['retailer'] . " Group\t" . $AliaseUsers['retailer'] . " Channel\t" . $AliaseUsers['retailer'] . " Classification\t" . $AliaseUsers['retailer'] . " Type\tRetailer Phone No\t  Display Outlet\t Comments\tItem Remark\t Reason\t Order Status\tOrder By\tItem Name\tItem Code\tItem Grade\tCategory\tBrand\tUOM\tQuantity\tPrice\tTotal\tDelivery Date\n";


    $sort = " ORDER BY date_of_order desc,time_of_order desc";
    if ($_SESSION['SalOrderList'] != '') {
        $salesman = " and s.salesman_id='" . $_SESSION['SalOrderList'] . "'";
    } else if (($_SESSION['salesmanId'] > 0) && ($_SESSION['role_id'] > 0)) {
        $RoleBrands = $_objAdmin->getUserRoleBrand();
        if (!empty($RoleBrands)) {
            $salesman = " AND i.brand_id IN(" . $RoleBrands . ")";
        }
    } else {
        $_objArrayList = new ArrayList();
        $salsList = $_objArrayList->SalesmanArrayList();
        $salesman = $_objArrayList->getSalesCondition($salsList);
    }
//	echo $salesman;die(' die here');
    if ($_SESSION['FromOrderList'] != '') {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['FromOrderList'])) . "'";
    } else {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['ToOrderList'] != '') {
        $todate = " and o.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToOrderList'])) . "'";
    } else {
        $todate = " and o.date_of_order <= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['OrderBy'] != '') {
        if ($_SESSION['OrderBy'] == 1) {
            $orderby = "";
        }
        if ($_SESSION['OrderBy'] == 2) {
            $orderby = " and o.order_type='Adhoc' ";
        }
        if ($_SESSION['OrderBy'] == 3) {
            $orderby = " and o.order_type!='Adhoc' ";
        }
    } else {
        $orderby = "";
    }
    switch ($_SESSION['userLoginType']) {
        case '1':
            $disLogCond = '';
            $salesman = '';
            break;
        case '3':
            $disLogCond = " AND r.distributor_id='" . $_SESSION['distributorId'] . "' ";
            $salesman = '';
            break;
        case '4':
            $disLogCond = " AND o.retailer_id='" . $_SESSION['retailerId'] . "' ";
            $salesman = '';
            break;
        case '7':
            $dList = $_objAdmin->getStockistWiseDistributor($_SESSION['stockistId']);
            $salesman = '';
            if (is_array($dList) && sizeof($dList) > 0) {
                $disStr = implode(',', array_unique($dList));
                $disLogCond = " AND o.distributor_id IN($disStr)";
            }
            break;
    }

    // Todo Start : add order type filter : sudhanhsu : 06 march
    $ordrTypeCond = " ";
    if ($_SESSION['orderType'] != '' && $_SESSION['orderType'] != 'all' && count($_SESSION['orderType']) > 0) {
        $orderCategory = $_SESSION['orderType'];
        $orderCate = "'" . implode("', '", $orderCategory) . "'";
        if (implode(',', $orderCategory) != 'all') {
            $ordrTypeCond = " AND LOWER(o.order_type) IN (" . $orderCate . ")";
        }

    }
    // Todo End : add order type filter : sudhanhsu : 06 march

    $where = " $salesman $fromdate $todate $salesman and r.new='' $ordrTypeCond $orderby ";
//    $whereret = " $disLogCond  $fromdate $todate and r.new='' and o.type='R' $orderby ";
    $auRec = $_objAdmin->_getSelectList('table_order as o 
    left join table_order_detail as ord on ord.order_id = o.order_id 
    left join table_item as i on i.item_id = ord.item_id 
    left join table_grade as tg on tg.grade_id = i.grade_id
    left join table_category as tc on tc.category_id = i.category_id
    left join table_brands as tb on tb.brand_id = i.brand_id
  	left join table_retailer as r on o.retailer_id=r.retailer_id 
  	left join table_salesman as s on o.salesman_id=s.salesman_id 
  	left join table_salesman_hierarchy_relationship as shr on shr.salesman_id = s.salesman_id
  	left join table_salesman as s2 on s2.salesman_id=shr.rpt_user_id
  	left join table_distributors as d on o.distributor_id=d.distributor_id 
  	left join table_retailer_channel_master as cm on r.channel_id=cm.channel_id 
      LEFT JOIN table_retailer_group as rg ON rg.group_id = r.group_id
      left join table_retailer_type_master as rtm ON rtm.type_id=r.type_id
      left join table_relationship as rel ON rel.relationship_id=r.relationship_id
  	left join state as st on st.state_id=r.state
  	left join table_zone_state_mapping as zsm on zsm.state_id = r.state and zsm.account_id = r.account_id
    left join table_zone as z on z.zone_id = zsm.zone_id 
  	left join city as c on c.city_id=r.city 
    left join table_distributor_type_master as dt on dt.dis_type_id = d.distributor_type_id
  	', "o.*,r.retailer_name,r.retailer_code,r.retailer_address,r.retailer_location,r.lat as retlat,cm.channel_name,r.display_outlet,r.lng as retlng,s.salesman_name,s.employee_code,s2.salesman_name as rpt_to,d.distributor_name,d.distributor_code,st.state_name,c.city_name,i.item_name,i.item_code, ord.quantity,ord.price,ord.total,ord.remarks,z.zone_name,rg.group_name,rtm.type_name,rel.relationship_code as relation,tg.grade_name,tc.category_name,tb.brand_name,dt.dis_type_name,ord.item_unit_type,r.retailer_phone_no", '', $where . " " . $sort, '');
//    echo "<pre>";
//    print_r($auRec);
//    die;
//    $auRecRet = $_objAdmin->_getSelectList('table_order as o
//  	left join table_retailer as r on o.retailer_id=r.retailer_id
//  	left join table_salesman as s on o.salesman_id=s.salesman_id
//  	left join table_salesman_hierarchy_relationship as shr on shr.salesman_id = s.salesman_id
//  	left join table_salesman as s2 on s2.salesman_id=shr.rpt_user_id
//  	left join table_distributors as d on o.distributor_id=d.distributor_id
//  	left join table_retailer_channel_master as cm on r.channel_id=cm.channel_id
//  	left join state as st on st.state_id=d.state
//  	left join table_zone_state_mapping as zsm on zsm.state_id = r.state and zsm.account_id = r.account_id
//    left join table_zone as z on z.zone_id = zsm.zone_id
//  	left join city as c on c.city_id=d.city
//  	', "o.*,r.retailer_name,r.retailer_code,r.retailer_address,r.retailer_location,r.lat as retlat,cm.channel_name,r.display_outlet,r.lng as retlng,s.salesman_name,s.employee_code,s2.salesman_name as rpt_to,d.distributor_name,d.distributor_code,st.state_name,c.city_name", '', $whereret . $sort, '');
//    if (!empty($auRecSal) && empty($auRecRet)) {
//        $auRec = $auRecSal;
//    } else if (empty($auRecSal) && !empty($auRecRet)) {
//        $auRec = $auRecRet;
//    } else if (!empty($auRecSal) && !empty($auRecRet)) {
//        $auRec = array_merge($auRecSal, $auRecRet);
//    }
    for ($i = 0; $i < count($auRec); $i++) {


        if ($auRec[$i]->order_type == 'Yes') {
            if ($auRec[$i]->order_status == 'A') {
                $status = "New Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }
            $color = ($auRec[$i]->order_status == 'A') ? "A" : "P";
        }
        if ($auRec[$i]->order_type == 'No') {

            $status = ($auRec[$i]->order_status == 'A') ? "No Order" : "Processed";
            $color = ($auRec[$i]->order_status == 'A') ? "I" : "P";
        }
        if ($auRec[$i]->order_type == 'Adhoc') {
            if ($auRec[$i]->order_status == 'A') {
                //Todo Sudhanshu 27 may 2024 : adhoc Nomenclature
                $status = "New " . $AliaseUsers['adhoc'] . " Order";

            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }
            //$status=($auRec[$i]->order_status=='A')?"New Adhoc Order":"Processed";
            $color = ($auRec[$i]->order_status == 'A') ? "O" : "P";
        }
        // display oulet
        if ($auRec[$i]->display_outlet == 'Y') {
            $outlet = 'Yes';
        } elseif ($auRec[$i]->display_outlet == 'N') {
            $outlet = 'No';
        }

        switch ($auRec[$i]->order_by) {
            case 'S':
                $order_by = $AliaseUsers['salesman'];
                break;
            case "D":
                $order_by = $AliaseUsers['distributor'];
                break;
            case "R":
                $order_by = $AliaseUsers['retailer'];
                break;
            default :
                $order_by = '';
        }

        //Todo Start :  Sudhanshu 21 march 2024 : aadd collumn UOM
        $uom = ($auRec[$i]->item_unit_type != '') ? $auRec[$i]->item_unit_type : 'Pcs';
        //Todo End : Sudhanshu 21 march 2024 : aadd collumn UOM
        $auRec2 = $_objAdmin->_getSelectList2('table_order_detail', "count( distinct(item_id)) as total_item", '', " order_id = " . $auRec[$i]->order_id . " and type = 1");


        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);
        $date_of_delivery = $_objAdmin->_changeDate($auRec[$i]->delivery_date);
        $remove = array("\n", "\r");
        $data .= "" . $date_of_order . "\t" . $auRec[$i]->time_of_order . "\t" . $auRec[$i]->order_id . "\t" .
            $auRec[$i]->acc_total_invoice_amount . "\t" . $auRec2[0]->total_item . "\t" .
            trim($auRec[$i]->distributor_name) . "\t" . trim($auRec[$i]->distributor_code) . "\t" . trim($auRec[$i]->dis_type_name) . "\t" . trim($auRec[$i]->zone_name) . "\t" .
            trim($auRec[$i]->state_name) . "\t" . trim($auRec[$i]->city_name) . "\t" . trim($auRec[$i]->salesman_name) . "\t" .
            trim($auRec[$i]->employee_code) . "\t" . $auRec[$i]->rpt_to . "\t" . trim($auRec[$i]->retailer_name) . "\t" .
            trim($auRec[$i]->retailer_code) . "\t" . str_replace($remove, ' ', $auRec[$i]->retailer_location) . "\t" .
            $auRec[$i]->retailer_address . "\t" . $auRec[$i]->group_name . "\t" . $auRec[$i]->channel_name . "\t" . $auRec[$i]->relation . "\t" . $auRec[$i]->type_name . "\t" . $auRec[$i]->retailer_phone_no . "\t" . $outlet . "\t" . str_replace
            ($remove, ' ', $auRec[$i]->comments) . "\t" . str_replace($remove, ' ', $auRec[$i]->remarks) . "\t" .
            $auRec[$i]->tag_description . "\t" . $status . "\t" .
            $order_by . "\t" . trim($auRec[$i]->item_name) . "\t" . trim($auRec[$i]->item_code) . "\t" . $auRec[$i]->grade_name . "\t" . $auRec[$i]->category_name . "\t" . $auRec[$i]->brand_name . "\t" . $uom . "\t" .
            $auRec[$i]->quantity
            . "\t" . $auRec[$i]->price . "\t" . $auRec[$i]->total . "\t" . $date_of_delivery . "\n";

    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Order Item List.xls\"");
    echo $data;
    exit;


}


/*if(isset($_GET['export_salesman_monthly_sale'])){
	//echo hello;exit;

	$data=" Salesman\t Retailer\t Item\t Item Code\t Month\t Year\t Day1\t  Day2\t Day3\t Day4\t Day5\t Day6\t Day7\t Day8\t Day9\t Day10\t Day11\t Day12\t Day13\t Day14\t Day15\t Day16\t Day17\t Day18\t Day19\t Day20\t Day21\t Day22\t Day23\t Day24\t Day25\t Day26\t Day27\t Day28\t Day29\t Day30\t Day31\n";

	//echo $_SESSION['distributorIDSale'].$_SESSION['itemID'].$_SESSION['dismonth'].$_SESSION['disCyear'];

	if($_SESSION['itemID']!=''){
			$Item=" and V.item_id ='".$_SESSION['itemID']."'";
		}

		if($_SESSION['dismonth']!=''){
			$fromdate=" and V.month = '".$_SESSION['dismonth']."'";
		} else {
			$fromdate = "and V.month = ".date('m');
		}

		if($_SESSION['disCyear']!=''){
			$todate=" and V.year = '".$_SESSION['disCyear']."'";
		} else {
			$todate="and V.year = ".date('Y');
		}

		if($_SESSION['salesmanID']!=''){
			$salesman =" and V.salesman_id ='".$_SESSION['salesmanID']."'";
		}
		//$sortname = 'month';
		//$sortorder = 'ASC';
		$sort = " ORDER BY month ASC";

		$where = " $salesman $Item $fromdate $todate AND R.new=''";
		$groupby = ' GROUP BY R.retailer_id, s.salesman_id, item_id, month';

		$auRec=$_objAdmin->_getSelectList('salereldailywiseitemreport AS V
					LEFT JOIN table_retailer AS R ON V.retailer_id = R.retailer_id
					LEFT JOIN table_salesman AS s ON V.salesman_id = s.salesman_id
					LEFT JOIN table_item AS i ON V.item_id = i.item_id',
			"V.retailer_id AS RID,
			V.salesman_id AS SID,
			 DATE_FORMAT(V.date_of_order, '%b') AS DOODR,
			 V.Day AS Day,
			 V.item_name AS item_name,
			 i.item_code AS item_code,
			 s.salesman_name AS s_name,
			 V.item_id AS item_id,
			 V.month AS month,
			 V.year AS year,
			 R.retailer_name AS retailer_name,
			 R.retailer_address,
			 R.retailer_address2",'',$where.$groupby.$sort,'');
			 for($i=0;$i<count($auRec);$i++){

		if(isset($auRec[$i]->item_id)){
	$auRec2=$_objAdmin->_getSelectList('salereldailywiseitemreport AS V',"totalSaleUnit,Day,retailer_id,salesman_id,item_name",''," retailer_id = ".$auRec[$i]->RID." AND salesman_id = ".$auRec[$i]->SID." AND item_id = ".$auRec[$i]->item_id." AND month = ".$auRec[$i]->month."");
			$row1  = '-';
			$row2  = '-';
			$row3  = '-';
			$row4  = '-';
			$row5  = '-';
			$row6  = '-';
			$row7  = '-';
			$row8  = '-';
			$row9  = '-';
			$row10 = '-';
			$row11 = '-';
			$row12 = '-';
			$row13 = '-';
			$row14 = '-';
			$row15 = '-';
			$row16 = '-';
			$row17 = '-';
			$row18 = '-';
			$row19 = '-';
			$row20 = '-';
			$row21 = '-';
			$row22 = '-';
			$row23 = '-';
			$row24 = '-';
			$row25 = '-';
			$row26 = '-';
			$row27 = '-';
			$row28 = '-';
			$row29 = '-';
			$row30 = '-';
			$row31 = '-';
			for($j=0;$j<count($auRec2);$j++){

				${'row'.$auRec2[$j]->Day} = $auRec2[$j]->totalSaleUnit;

			}

		$data.="".$auRec[$i]->s_name."\t".$auRec[$i]->retailer_name."\t".$auRec[$i]->item_name."\t".$auRec[$i]->item_code."\t".$auRec[$i]->DOODR."\t".$auRec[$i]->year."\t".$row1."\t".$row2."\t".$row3."\t".$row4."\t".$row5."\t".$row6."\t".$row7."\t".$row8."\t".$row9."\t".$row10."\t".$row11."\t".$row12."\t".$row13."\t".$row14."\t".$row15."\t".$row16."\t".$row17."\t".$row18."\t".$row19."\t".$row20."\t".$row21."\t".$row22."\t".$row23."\t".$row24."\t".$row25."\t".$row26."\t".$row27."\t".$row28."\t".$row29."\t".$row30."\t".$row31."\n";
		}
		}

	header("Content-type: application/octet-stream");
	header("Content-Disposition: attachment; filename=\"Salesman Monthly Sale.xls\"");
	echo $data;
	exit;
	}*/


if (isset($_GET['export_salesman_monthly_sale'])) {
    $datasetString = array();
    $datasetString = " " . $AliaseUsers['salesman'] . "\t " . $AliaseUsers['distributor'] . "\t Region\t State\t City \t " . $AliaseUsers['retailer'] . "\t Item\t Item Code\t Month\t Year\t Day1\t  Day2\t Day3\t Day4\t Day5\t Day6\t Day7\t Day8\t Day9\t Day10\t Day11\t Day12\t Day13\t Day14\t Day15\t Day16\t Day17\t Day18\t Day19\t Day20\t Day21\t Day22\t Day23\t Day24\t Day25\t Day26\t Day27\t Day28\t Day29\t Day30\t Day31\n";
    $monthtext = date('M');
    $yeartext = date('Y');

    if ($_SESSION['itemID'] != '') {
        $Item = " and V.item_id ='" . $_SESSION['itemID'] . "'";
    }

    if ($_SESSION['dismonth'] != '') {
        $fromdate = " and V.month = '" . $_SESSION['dismonth'] . "'";
    } else {
        $fromdate = "and V.month = " . date('m');
    }

    if ($_SESSION['disCyear'] != '') {
        $todate = " and V.year = '" . $_SESSION['disCyear'] . "'";
    } else {
        $todate = "and V.year = " . date('Y');
    }

    if ($_SESSION['monthSalesmanID'] != '') {
        $salesman = " and V.salesman_id ='" . $_SESSION['monthSalesmanID'] . "'";
    }
    $sort = " ORDER BY month ASC";
    $data = array();


    for ($i = 1; $i <= 31; $i++) {

        $where = " $salesman $Item $fromdate $todate AND V.Day = " . $i . " AND R.new=''";
        $groupby = ' GROUP BY V.retailer_id, V.salesman_id, V.item_id';

        $auRec = $_objAdmin->_getSelectList('salereldailywiseitemreport AS V 
					LEFT JOIN table_retailer AS R ON V.retailer_id = R.retailer_id
					LEFT JOIN table_distributors as d on d.distributor_id=R.distributor_id
					LEFT JOIN state as st on st.state_id=d.state
					LEFT JOIN city as c on c.city_id=d.city
					LEFT JOIN table_region as re on re.region_id=d.region_id 
					LEFT JOIN table_salesman AS s ON V.salesman_id = s.salesman_id
					LEFT JOIN table_item AS i ON V.item_id = i.item_id',
            "V.retailer_id AS RID,
			V.salesman_id AS SID,
			 DATE_FORMAT(V.date_of_order, '%b') AS DOODR,
			 V.Day AS Day,
			 SUM(V.totalSaleUnit) AS quantity,
			 V.item_name AS item_name,
			 i.item_code AS item_code,
			 s.salesman_name AS s_name,
			 V.item_id AS item_id,
			 V.month AS month,
			 V.year AS year,
			 d.distributor_name,
			 st.state_name,
			 c.city_name,
			 re.region_name,
			 R.retailer_name AS retailer_name,
			 R.retailer_address,
			 R.retailer_address2", '', $where . $groupby . $sort, '');

        foreach ($auRec as $key => $value) :

            $monthtext = $value->DOODR;
            $yeartext = $value->year;
            $data[$value->SID]['s_name'] = $value->s_name;
            $data[$value->SID]['retailers'][$value->RID]['items'][$value->item_id]['days'][$value->Day] = array('retailer_name' => $value->retailer_name, 'item_name' => $value->item_name, 'item_code' => $value->item_code, 'qty' => $value->quantity, 'distributor_name' => $value->distributor_name, 'region_name' => $value->region_name, 'state_name' => $value->state_name, 'city_name' => $value->city_name);
        endforeach;


    }


    foreach ($data as $skey => $svalue) :

        $s_name = "";

        $s_name = $svalue['s_name'];


        foreach ($svalue['retailers'] as $rkey => $rvalue) :

            $retailer_name = "";

            foreach ($rvalue['items'] as $ikey => $ivalue) :

                $item_name = "";
                $item_code = "";
                $row1 = '-';
                $row2 = '-';
                $row3 = '-';
                $row4 = '-';
                $row5 = '-';
                $row6 = '-';
                $row7 = '-';
                $row8 = '-';
                $row9 = '-';
                $row10 = '-';
                $row11 = '-';
                $row12 = '-';
                $row13 = '-';
                $row14 = '-';
                $row15 = '-';
                $row16 = '-';
                $row17 = '-';
                $row18 = '-';
                $row19 = '-';
                $row20 = '-';
                $row21 = '-';
                $row22 = '-';
                $row23 = '-';
                $row24 = '-';
                $row25 = '-';
                $row26 = '-';
                $row27 = '-';
                $row28 = '-';
                $row29 = '-';
                $row30 = '-';
                $row31 = '-';


                foreach ($ivalue['days'] as $dkey => $dvalue) :
                    //echo $dvalue['qty'];
                    ${'row' . $dkey} = $dvalue['qty'];

                    $retailer_name = $dvalue['retailer_name'];
                    $distributor_name = $dvalue['distributor_name'];
                    $state_name = $dvalue['state_name'];
                    $city_name = $dvalue['city_name'];
                    $region = $dvalue['region_name'];
                    $item_name = $dvalue['item_name'];
                    $item_code = $dvalue['item_code'];
                endforeach;

                $datasetString .= "" . $s_name . "\t" . $distributor_name . "\t" . $region . "\t" . $state_name . "\t" . $city_name . "\t" . $retailer_name . "\t" . $item_name . "\t" . $item_code . "\t" . $monthtext . "\t" . $yeartext . "\t" . $row1 . "\t" . $row2 . "\t" . $row3 . "\t" . $row4 . "\t" . $row5 . "\t" . $row6 . "\t" . $row7 . "\t" . $row8 . "\t" . $row9 . "\t" . $row10 . "\t" . $row11 . "\t" . $row12 . "\t" . $row13 . "\t" . $row14 . "\t" . $row15 . "\t" . $row16 . "\t" . $row17 . "\t" . $row18 . "\t" . $row19 . "\t" . $row20 . "\t" . $row21 . "\t" . $row22 . "\t" . $row23 . "\t" . $row24 . "\t" . $row25 . "\t" . $row26 . "\t" . $row27 . "\t" . $row28 . "\t" . $row29 . "\t" . $row30 . "\t" . $row31 . "\n";

            endforeach;

        endforeach;


    endforeach;

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['salesman'] . " Monthly Sale.xls\"");
    echo $datasetString;
    exit;
}


if (isset($_GET['export_retailer_opening_stock'])) {
    $data = " " . $AliaseUsers['salesman'] . " Code\t" . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['retailer'] . " Code\t " . $AliaseUsers['retailer'] . " Name\t " . $AliaseUsers['retailer'] . " Channel\t" . $AliaseUsers['retailer'] . " Group\t" . $AliaseUsers['retailer'] . " Classification\t" . $AliaseUsers['retailer'] . " Type\t" . $AliaseUsers['retailer'] . " Display Outlet\tCategory\t Item\t Item Code\t Brand\tItem Grade\t Quantity\tStock Value (PTR)\tStock Value (MRP)\tDate\t Time\t Previous Available Stock\tSale\n";

    $sort = " ORDER BY date_of_order desc,time_of_order desc";

    if ($_SESSION['SalOrderList'] != '') {
        $retailer .= " AND s.salesman_id='" . $_SESSION['SalOrderList'] . "'";
    }
    if ($_SESSION['RetailerID'] != '') {
        $retailer .= " AND r.retailer_id='" . $_SESSION['RetailerID'] . "'";
    }

    if (isset($_SESSION['userLoginType']) && in_array($_SESSION['userLoginType'], array(6, 7, 8, 9))) {

        $condwhere = $_objAdmin->getSalesMenID();
    }
    //$where = " 1=1 ";
    if ($_SESSION['FromOS'] != '') {
        $fromdate = " and ot.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['FromOS'])) . "'";
    } else {
        $fromdate = " and ot.date_of_order >= '" . date('Y-m-d') . "'";
    }

    if ($_SESSION['ToOS'] != '') {
        $todate = " and ot.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToOS'])) . "'";
    } else {
        $todate = " and ot.date_of_order <= '" . date('Y-m-d') . "'";
    }
    $where = " ot.ostype='R' $retailer $fromdate $todate ";
    if (isset($_SESSION['salsInCond']) && !empty($_SESSION['salsInCond'])) {
        $salesman = $_SESSION['salsInCond'];
    }
    $auRec = $_objAdmin->_getSelectList('table_order_os AS ot
		  	LEFT JOIN table_order_detail_os AS tod ON tod.os_id=ot.os_id
			LEFT JOIN table_retailer AS r ON r.retailer_id=ot.retailer_id
            LEFT JOIN table_retailer_group as rg ON rg.group_id = r.group_id
            left join table_retailer_type_master as rtm ON rtm.type_id=r.type_id
            left join table_relationship as rel ON rel.relationship_id=r.relationship_id 
			LEFT JOIN table_salesman AS s ON s.salesman_id=ot.salesman_id
			LEFT JOIN table_item AS i ON i.item_id=tod.item_id
            left join table_grade as bg on bg.grade_id=i.grade_id
            left join table_brands as b on b.brand_id=i.brand_id
			LEFT JOIN table_price AS p ON p.item_id=tod.item_id
			LEFT JOIN table_category AS c ON c.category_id=i.category_id
			LEFT JOIN table_retailer_channel_master AS cm on cm.channel_id=r.
			channel_id',
        "ot.*,tod.*,r.retailer_name,r.retailer_code,cm.channel_name,r.display_outlet,s.salesman_name,s.employee_code,i.item_name,i.item_code,c.category_name,(p.item_mrp * tod.quantity) as stockValuePTR, (p.item_dp * tod.quantity) as stockValueMRP,b.brand_name,bg.grade_name,rg.group_name,rtm.type_name,rel.relationship_code as relation", '', $where . $condwhere . $salesman . $sort, '');

    for ($i = 0; $i < count($auRec); $i++) {
        if ($auRec[$i]->display_outlet == 'Y') {
            $outlet = 'Yes';
        } elseif ($auRec[$i]->display_outlet == 'No') {
            $outlet = 'No';
        } else {
            $outlet = '';
        }

        // change item conditon when item id is blank 04 oct 2023 : sudhanshu
        $itemCond = '';
        if ($auRec[$i]->item_id != '') {
            $itemCond = " AND tod.item_id =" . $auRec[$i]->item_id;
        }
        // end

//        $closingStock = $_objAdmin->_getSelectList("table_order_os AS ot
//		  LEFT JOIN table_order_detail_os AS tod ON tod.os_id=ot.os_id
//		  LEFT JOIN table_order AS O ON O.salesman_id = ot.salesman_id AND O.retailer_id = ot.retailer_id LEFT JOIN table_order_detail AS OD ON OD.order_id = O.order_id", "tod.quantity AS closing_stock ,OD.quantity AS order_quantity ", "", "ot.salesman_id =" . $auRec[$i]->salesman_id . " AND ot.retailer_id =" . $auRec[$i]->retailer_id . " AND ot.date_of_order <='" . $auRec[$i]->date_of_order . $itemCond . "' AND O.order_status!='D' ORDER BY ot.os_id, O.order_id DESC LIMIT 1,1");


        $closingStock = $_objAdmin->_getSelectList("table_order_os AS ot
		  LEFT JOIN table_order_detail_os AS tod ON tod.os_id=ot.os_id
		  ", "tod.quantity ", "", " 
                 AND ot.retailer_id =" . $auRec[$i]->retailer_id . " AND tod.item_id = '" . $auRec[$i]->item_id . "'  AND os_detail_id < '" . $auRec[$i]->os_detail_id . "' ORDER BY ot.os_id desc limit 1 ");

        if (is_array($closingStock) && count($closingStock) > 0) {
            $closingstk = $closingStock[0]->quantity;
        } else {
            $closingstk = "NA";
        }
        //echo "<pre>";print_R($closingStock);


        $orderStock = $_objAdmin->_getSelectList("table_order AS O 
		  LEFT JOIN table_order_detail AS tod ON tod.order_id = O.order_id
		  ", "sum(tod.quantity) AS order_quantity  ", "", " AND O.retailer_id =" .
            $auRec[$i]->retailer_id . " AND O.date_of_order ='" . $auRec[$i]->date_of_order . "' AND tod.item_id = '" . $auRec[$i]->item_id . "'  ORDER BY O.order_id DESC ");

        $odrstk = (isset($orderStock[0]->order_quantity) && !empty($orderStock[0]->order_quantity)) ?
            $orderStock[0]->order_quantity : 0;

        $data .= "" . $auRec[$i]->employee_code . "\t" . $auRec[$i]->salesman_name . "\t" . $auRec[$i]->retailer_code . "\t" . $auRec[$i]->retailer_name . "\t" . $auRec[$i]->channel_name . "\t" . $auRec[$i]->group_name . "\t" . $auRec[$i]->relation . "\t" . $auRec[$i]->type_name . "\t" . $outlet . "\t" . $auRec[$i]->category_name . "\t" . $auRec[$i]->item_name . "\t" . $auRec[$i]->item_code . "\t" . $auRec[$i]->brand_name . "\t" . $auRec[$i]->grade_name . "\t" . $auRec[$i]->quantity . "\t" . round($auRec[$i]->stockValuePTR, 2) . "\t" . round($auRec[$i]->stockValueMRP, 2) . "\t" . $_objAdmin->_changeDate($auRec[$i]->date_of_order) . "\t" . $auRec[$i]->time_of_order . "\t" . $closingstk . "\t" . $odrstk . "\n";
    }

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['retailer'] . " Available Stock.xls\"");
    echo $data;
    exit;
}


if (isset($_GET['export_product_wise_report'])) {
    //echo hello;exit;

    $data = " Category\t " . $AliaseUsers['salesman'] . "\tItem\t Item Code\t Brand\t Erp Code\t Number Of Order\t Quantity\t Total Price\n";

    $sort = " ORDER BY date_of_order desc,time_of_order desc";

    if ($_SESSION['categoryID'] != '' && $_SESSION['categoryID'] != 'all') {

        $condition .= " c.category_id = " . $_SESSION['categoryID'] . " AND ";
    }

    if ($_SESSION['itemID'] != '' && $_SESSION['itemID'] != 'all') {

        $condition .= " od.item_id = " . $_SESSION['itemID'] . " AND ";
    }


    if ($_SESSION['FromProductList'] != '') {
        $fromdate = "  o.date_of_order  >= '" . date('Y-m-d', strtotime($_SESSION['FromProductList'])) . "' AND ";
    } else {
        $fromdate = " o.date_of_order  >= '" . date('Y-m-d') . "' AND ";
    }


    if ($_SESSION['ToProductList'] != '') {
        $todate = " o.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToProductList'])) . "' ";
    } else {
        $todate = "  o.date_of_order <= '" . date('Y-m-d') . "'";
    }
    $RoleBrands = $_objAdmin->getUserRoleBrand();
    $brandCnd = '';
    if (!empty($RoleBrands)) {
        $brandCnd = " and b.brand_id IN(" . $RoleBrands . ")";
        $salesman = '';
    }
    if ($_SESSION['salesman_Id'] != '' && $_SESSION['salesman_Id'] != 'All') {
        $salesman = $_SESSION['salesman_Id'];
    }

    //$groupby  = " GROUP BY table_order_detail.item_id having SUM(table_order_detail.quantity)!=0";
    //$groupby  = " AND o.order_id in (select order_id from table_order where ostype in ('D','R') AND order_type = 'Yes' AND order_status='A' AND $fromdate $todate ) group by o.item_id having SUM(o.quantity)!=0 ";
    $groupby = " GROUP BY od.item_id having od.item_id!=''";
    $where = " od.type=1 and c.account_id='" . $_SESSION['accountId'] . "' $brandCnd and $salesman $condition $fromdate $todate ";

    $auRec = $_objAdmin->_getSelectList2('table_order AS o
					LEFT JOIN table_order_detail AS od ON od.order_id = o.order_id
					LEFT JOIN table_salesman as s ON s.salesman_id=o.salesman_id
					LEFT JOIN table_item AS i ON i.item_id = od.item_id
					LEFT JOIN table_brands AS b ON b.brand_id=i.brand_id
					LEFT JOIN table_category AS c ON c.category_id = i.category_id',
        "COUNT(od.item_id) AS total, sum(od.quantity) AS Quantity, SUM(od.total) AS ttlprice, category_name, od.item_id, i.item_name,i.item_code,b.brand_name,i.item_erp_code,s.salesman_id,s.salesman_name,date_of_order", '', $where . $groupby . $sort, '');

    for ($i = 0; $i < count($auRec); $i++) {

        $data .= "" . $auRec[$i]->category_name . "\t" . $auRec[$i]->salesman_name . "\t" . $auRec[$i]->item_name . "\t" . $auRec[$i]->item_code . "\t" . $auRec[$i]->brand_name . "\t" . $auRec[$i]->item_erp_code . "\t" . $auRec[$i]->total . "\t" . $auRec[$i]->Quantity . "\t" . $auRec[$i]->ttlprice . "\n";
    }

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Product Wise Report .xls\"");
    echo $data;
    exit;
}
// Distributor Order List
//product export
if (isset($_GET['export_product_report'])) {
    $data = "" . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\t Distributor Type\t" . $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['retailer'] . " Code\t" . $AliaseUsers['retailer'] . " Group\t" . $AliaseUsers['retailer'] . " Channel\t" . $AliaseUsers['retailer'] . " Classification\t" . $AliaseUsers['retailer'] . " Type\t" . $AliaseUsers['retailer'] . " Zone\t" . $AliaseUsers['retailer'] . " State\t" . $AliaseUsers['retailer'] . " District\t" . $AliaseUsers['retailer'] . " City\t" . $AliaseUsers['retailer'] . " Address\t" . $AliaseUsers['retailer'] . " Pin Code\t" . $AliaseUsers['retailer'] . " Market\t" . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['salesman'] . " Code\tOrder No.\tCategory Name\tItem Name\tItem Code\tBrand Name\t Item Grade\t Item ERP Code\tPrice\tQuantity\tTotal\tTax\tTax Amount\tDate of Order\tTime of Order\tRemarks\n";
    $sort = " ORDER BY date_of_order desc,time_of_order desc";

    if (isset($_SESSION['SalOrderList']) && $_SESSION['SalOrderList'] != '') {
        $salesman = " AND s.salesman_id IN (" . $_SESSION['SalOrderList'] . ")";
    } else if (($_SESSION['salesmanId'] > 0) && ($_SESSION['role_id'] > 0)) {
        $RoleBrands = $_objAdmin->getUserRoleBrand();
        if (!empty($RoleBrands)) {
            $salesman = " AND b.brand_id IN(" . $RoleBrands . ")";
        }
    } else {
        $_objArrayList = new ArrayList();
        $salsList = $_objArrayList->SalesmanArrayList();
        $salesman = $_objArrayList->getSalesCondition($salsList);
    }
    if ($_SESSION['categoryID'] != '' && $_SESSION['categoryID'] != 'all') {
        $condition .= " c.category_id = " . $_SESSION['categoryID'] . " AND ";
    }
    if ($_SESSION['itemID'] != '' && $_SESSION['itemID'] != 'all') {
        $condition .= " D.item_id = " . $_SESSION['itemID'] . " AND ";
    }
    if ($_SESSION['FromProductList'] != '') {
        $fromdate = "  O.date_of_order  >= '" . date('Y-m-d', strtotime($_SESSION['FromProductList'])) . "' AND ";
    } else {
        $fromdate = " O.date_of_order  >= '" . date('Y-m-d') . "' AND ";
    }
    if ($_SESSION['ToProductList'] != '') {
        $todate = " O.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToProductList'])) . "' ";
    } else {
        $todate = "  O.date_of_order <= '" . date('Y-m-d') . "'";
    }

    $groupby = " GROUP BY D.item_id having D.item_id!='' ";
    $where = " D.type=1 and O.account_id='" . $_SESSION['accountId'] . "' $brandCnd and $condition $fromdate $todate  $salesman ";
    $auRec = $_objAdmin->_getSelectList2('table_order_detail AS D 
		LEFT JOIN table_order AS O ON D.order_id = O.order_id
		LEFT JOIN table_item AS I ON D.item_id = I.item_id
		LEFT JOIN table_brands as b ON b.brand_id=I.brand_id
		LEFT JOIN table_category AS c ON c.category_id = I.category_id 
		LEFT JOIN table_price AS P ON D.item_id = P.item_id
        LEFT JOIN table_grade AS ig ON I.grade_id =ig.grade_id
		LEFT JOIN table_salesman AS s ON O.salesman_id = s.salesman_id
		LEFT JOIN table_retailer AS R ON O.retailer_id = R.retailer_id
		LEFT JOIN table_retailer_channel_master as cm ON cm.channel_id=R.channel_id
        LEFT JOIN table_retailer_group as rg ON rg.group_id = R.group_id
        left join table_retailer_type_master as rtm ON rtm.type_id=R.type_id
        left join table_relationship as rel ON rel.relationship_id=R.relationship_id
		LEFT JOIN table_distributors AS Dis ON O.distributor_id = Dis.distributor_id
		LEFT JOIN state as st on st.state_id=R.state
		LEFT JOIN city as ct on ct.city_id=R.city
		LEFT JOIN table_zone_state_mapping as szsm on szsm.state_id = R.state and szsm.account_id = R.account_id
        LEFT JOIN table_zone as sz on sz.zone_id = szsm.zone_id
		LEFT JOIN table_location as loc on loc.location_id=R.location_id
        LEFT JOIN table_item_gst as gst on gst.item_id=I.item_id
        left join table_distributor_type_master as dt on dt.dis_type_id = Dis.distributor_type_id',
        'D.price, D.quantity, D.total,R.new, I.item_name,I.item_code,b.brand_name,cm.channel_name,I.item_erp_code,P.item_mrp, O.order_id, s.salesman_name,s.employee_code, Dis.distributor_name,Dis.distributor_code,R.retailer_name,R.retailer_code,R.retailer_address,R.retailer_location,sz.zone_name,R.zipcode,c.category_name, O.date_of_order, O.time_of_order,st.state_name,ct.city_name, loc.location_name, D.remarks,rg.group_name,rtm.type_name,rel.relationship_code as relation,ig.grade_name,gst.tax,dt.dis_type_name', '', $where . $sort);
    $remove = array("\n", "\r\n", "\r", ",");
    for ($i = 0; $i < count($auRec); $i++) {

        $taxamt = round(($auRec[$i]->total * $auRec[$i]->tax / 100));

        $data .= "" . $auRec[$i]->distributor_name . "\t"
            . $auRec[$i]->distributor_code . "\t"
            . $auRec[$i]->dis_type_name . "\t"
            . $auRec[$i]->retailer_name . "\t"
            . $auRec[$i]->retailer_code . "\t"
            . ucwords(addslashes(preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace($remove, '', $auRec[$i]->group_name)))) . "\t"
            . ucwords(addslashes(preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace($remove, '', $auRec[$i]->channel_name)))) . "\t"
            . ucwords(addslashes(preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace($remove, '', $auRec[$i]->relation)))) . "\t"
            . ucwords(addslashes(preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace($remove, '', $auRec[$i]->type_name)))) . "\t"
            . $auRec[$i]->zone_name . "\t"
            . $auRec[$i]->state_name . "\t"
            . $auRec[$i]->city_name . "\t"
            . $auRec[$i]->location_name . "\t"
            . ucwords(addslashes(preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace($remove, ' ', $auRec[$i]->retailer_address)))) . "\t"
            . $auRec[$i]->zipcode . "\t"
            . $auRec[$i]->retailer_location . "\t"
            . $auRec[$i]->salesman_name . "\t"
            . $auRec[$i]->employee_code . "\t"
            . $auRec[$i]->order_id . "\t"
            . $auRec[$i]->category_name . "\t"
            . ucwords(addslashes(preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace($remove, '', $auRec[$i]->item_name)))) . "\t"
            . ucwords(addslashes(preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace($remove, '', $auRec[$i]->item_code)))) . "\t"
            . ucwords(addslashes(preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace($remove, '', $auRec[$i]->brand_name)))) . "\t"
            . ucwords(addslashes(preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace($remove, '', $auRec[$i]->grade_name)))) . "\t"
            . ucwords(addslashes(preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace($remove, '', $auRec[$i]->item_erp_code)))) . "\t"
            . $auRec[$i]->price . "\t"
            . $auRec[$i]->quantity . "\t"
            . $auRec[$i]->total . "\t"
            . $auRec[$i]->tax . "\t"
            . $taxamt . "\t"
            . $_objAdmin->_changeDate($auRec[$i]->date_of_order) . "\t"
            . $auRec[$i]->time_of_order . "\t"
            . ucwords(addslashes(preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace($remove, '', $auRec[$i]->remarks)))) . "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Product Report.xls\"");
    echo $data;
    exit;
}//Ends product export


if (isset($_GET['export_distributor_order_list'])) {
    $data = "Date\t Time\t Order Number\tOrder Status\t Total Invoice Amount\t " . $AliaseUsers['distributor'] . " Code\t " .
        $AliaseUsers['distributor'] . " Name\tZone \tState\t City\t " . $AliaseUsers['salesman'] . " Code \t " .
        $AliaseUsers['salesman'] . " Name\t " . $AliaseUsers['retailer'] . " Code\t  " . $AliaseUsers['retailer'] . " Name\t " . $AliaseUsers['retailer'] . " Market\t" . $AliaseUsers['retailer'] . " Channel\tDisplay Outlet\tAddress\tOrder By\tOrder Status\n";

    $sort = " ORDER BY date_of_order desc,time_of_order desc";


    if ($_SESSION['FromDisList'] != '') {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['FromDisList'])) . "'";
    } else {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['ToDisList'] != '') {
        $todate = " and o.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToDisList'])) . "'";
    } else {
        $todate = " and o.date_of_order <= '" . date('Y-m-d') . "'";
    }


    if ($_SESSION['distributorId'] != "A") {
        $disList = " o.distributor_id=" . $_SESSION['distributorId'] . " and";
    } else {
        $disList = "";
    }
    if ($_SESSION['OrderBy'] != '') {
        if ($_SESSION['OrderBy'] == 1) {
            $orderby = " and order_status IN('A','I') ";
        }
        if ($_SESSION['OrderBy'] == 2) {
            $orderby = " and o.order_status='A' ";
        }
        if ($_SESSION['OrderBy'] == 3) {
            $orderby = " and o.order_status='I' ";
        }
        if ($_SESSION['OrderBy'] == 4) {
            $orderby = " and o.order_status='D' ";
        }
    } else {
        $orderby = " and order_status IN('A','I') ";
    }
    //$where = " 1=1 ";
    if ($_SESSION['userLoginType'] == 7) {
        $stkList = " d.stockist_id=" . $_SESSION['stockistId'] . " and";
    } else {
        $stkList = "";
    }


    //Added condition for role based access at brand lavel.
    $RoleBrands = $_objAdmin->getUserRoleBrand();
    $orderIds = '';
    if (is_array($_SESSION['SalDisList']) && (count($_SESSION['SalDisList']) > 0)) {
        $salectedSalIds = implode(',', $_SESSION['SalDisList']);
        $salesman = " AND s.salesman_id IN(" . $salectedSalIds . ") ";
    } else if (!empty($RoleBrands)) {
        $salesman = "";
    } else {
//        $salesman = $_SESSION['salsInCondi'];
        $salesman = "";
    }
    if (!empty($RoleBrands)) {

        $brandWhere = " o.order_for='R' and o.order_status !='C' and o.order_type !='Return' and o.distributor_id !='' $fromdate $todate ";
        $orderIds = $_objAdmin->getBrandsOrder($RoleBrands, $brandWhere);
    }

    $where = " $disList $stkList and o.order_for='R' and o.order_status !='C' and r.new='' and o.order_type !='Return' and o.distributor_id!='' $salesman $orderIds $fromdate $todate $orderby and o.account_id =" . $_SESSION['accountId'];

    $auRec = $_objAdmin->_getSelectList('table_order as o left join table_retailer as r on o.retailer_id=r.retailer_id 
    left join table_salesman as s on o.salesman_id=s.salesman_id 
    left join table_distributors as d on d.distributor_id=o.distributor_id 
    left join table_retailer_channel_master as cm on cm.channel_id=r.channel_id  
    left join state as st on st.state_id=d.state
    LEFT JOIN table_zone_state_mapping as szsm on szsm.state_id = d.state and szsm.account_id = d.account_id
    LEFT JOIN table_zone as sz on sz.zone_id = szsm.zone_id 
    left join city as c on c.city_id=d.city', "o.*,r.retailer_name,r.retailer_code,r.retailer_address,r.retailer_location,cm.channel_name,r.display_outlet,s.employee_code ,s.salesman_name,d.distributor_code,d.distributor_name,st.state_name,c.city_name,sz.zone_name", '', $where . $sort, '');

    for ($i = 0; $i < count($auRec); $i++) {
        if ($auRec[$i]->order_status == 'A') {
            $status = "New Order";
            $color = "N";
        }
        if ($auRec[$i]->order_status == 'I') {
            $status = "Processed";
            $color = "I";
        }
        if ($auRec[$i]->order_status == 'D') {
            $status = "Dispatched";
            $color = "A";
        }
        if ($auRec[$i]->display_outlet == 'Y') {
            $outlet = 'Yes';
        } else if ($auRec[$i]->display_outlet == 'N') {
            $outlet = 'No';
        } else {
            $outlet = '';
        }
        switch ($auRec[$i]->order_by) {
            case 'S':
                $order_by = $AliaseUsers['salesman'];
                break;
            case "D":
                $order_by = $AliaseUsers['distributor'];
                break;
            case "R":
                $order_by = $AliaseUsers['retailer'];
                break;
            default :
                $order_by = '';
        }

        $CheckOrderSts = $_objAdmin->_getSelectList2('table_order_accept_reject as c', "SUM(c.effected_qty) as total,(select sum(effected_qty) FROM table_order_accept_reject WHERE order_id='" . $auRec[$i]->order_id . "' and action='rej' ) as reject_qty",
            '', "order_id=" . $auRec[$i]->order_id . " ");

        $CheckOrderQuantity = $_objAdmin->_getSelectList2('`table_order` as o 
            inner join table_order_detail as odr on odr.order_id = o.order_id', "sum(odr.quantity) as total_odr_quantity",
            '', "o.order_id=" . $auRec[$i]->order_id . " and odr.order_detail_status NOT IN(4,6) group by o.order_id");


        if ($CheckOrderSts[0]->total <= 0) {
            $orderStatus = 'Fully Pending';
        } else if ($CheckOrderSts[0]->total == $CheckOrderSts[0]->reject_qty) {
            $orderStatus = 'Fully Rejected';
        } else if ($CheckOrderQuantity[0]->total_odr_quantity != $CheckOrderSts[0]->total) {
            $orderStatus = 'Partially Pending';
        } else {
            $orderStatus = 'Fully Accepted';
        }

        //$status=($auRec[$i]->order_status=='A')?"New Adhoc Order":"Processed";
        //$color=($auRec[$i]->order_status=='A')?"O":"P";
        //$status=($auRec[$i]->order_status=='A')?"New Order":"Processed";
        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);

        $data .= "" . $date_of_order . "\t" . $auRec[$i]->time_of_order . "\t" . $auRec[$i]->order_id . "\t" . $orderStatus . "\t" .
            $auRec[$i]->acc_total_invoice_amount . "\t" . $auRec[$i]->distributor_code . "\t" .
            $auRec[$i]->distributor_name . "\t" . $auRec[$i]->zone_name . "\t" . $auRec[$i]->state_name . "\t" .
            $auRec[$i]->city_name . "\t" .
            $auRec[$i]->employee_code . "\t" . $auRec[$i]->salesman_name . "\t" . $auRec[$i]->retailer_code . "\t" .
            $auRec[$i]->retailer_name . "\t" . str_replace($remove, ' ', $auRec[$i]->retailer_location) . "\t" .
            $auRec[$i]->channel_name . "\t" . $outlet . "\t" . $auRec[$i]->retailer_address . "\t" . $order_by . "\t" .
            $status .
            "\n";
    }

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['retailer'] . " Order List.xls\"");
    echo $data;
    exit;
}


if (isset($_GET['export_sales_return'])) {

    $data = "" . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['salesman'] . " Code\t " . $AliaseUsers['distributor'] . " Name\t " . $AliaseUsers['distributor'] . " Code\t Distributor Zone\t Distributor State\t Distributor District\t " . $AliaseUsers['retailer'] . " Name\t " . $AliaseUsers['retailer'] . " Code\t Retailer Zone\tRetailer State\tRetailer District\t Number Of Item\t Date\t  Time\tPhoto Count\n";
    $sort = " ORDER BY date_of_order desc,time_of_order desc";
    if ($_SESSION['FromSalesOrderList'] != '') {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['FromSalesOrderList'])) . "'";
    } else {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['ToSalesOrderList'] != '') {
        $todate = " and o.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToSalesOrderList'])) . "'";
    } else {
        $todate = " and o.date_of_order <= '" . date('Y-m-d') . "'";
    }
    $where = " o.account_id =" . $_SESSION['accountId'] . "  AND o.order_status='A' AND ostype IN ('Q') $salesman $fromdate $todate";


    $auRec = $_objAdmin->_getSelectList('table_sales_return AS o 
			LEFT JOIN table_retailer AS r ON o.retailer_id=r.retailer_id 
			LEFT JOIN table_salesman AS s ON o.salesman_id=s.salesman_id 
			LEFT JOIN table_distributors AS d ON r.distributor_id=d.distributor_id
			LEFT JOIN state as st on st.state_id=d.state
			LEFT JOIN city as ct on ct.city_id=d.city
			LEFT JOIN table_zone_state_mapping as szsm on szsm.state_id = d.state and szsm.account_id = d.account_id
            LEFT JOIN table_zone as sz on sz.zone_id = szsm.zone_id
            LEFT JOIN state as str on str.state_id=r.state
			LEFT JOIN city as ctr on ctr.city_id=r.city
			LEFT JOIN table_zone_state_mapping as szsmr on szsmr.state_id = r.state and szsmr.account_id = r.account_id
            LEFT JOIN table_zone as szr on szr.zone_id = szsmr.zone_id',
        "o.*,
			r.retailer_name,
			r.retailer_code,
			r.retailer_address,
			r.retailer_location,
			r.lat AS retlat,
			r.lng AS retlng,
			st.state_name,str.state_name as ret_state,
			ct.city_name,ctr.city_name as ret_city,szr.zone_name as ret_zone,
			s.salesman_name,
			s.employee_code,
			d.distributor_name ,d.distributor_code,sz.zone_name", '', $where . $sort, '');
//echo "<pre>";print_r($auRec);die;
    for ($i = 0; $i < count($auRec); $i++) {

        if (ucwords(strtolower($auRec[$i]->order_type)) == 'Yes') {
            if ($auRec[$i]->order_status == 'A') {
                $status = "New Sales Return";
            }

            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }

            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }
        }

        $auRec2 = $_objAdmin->_getSelectList2('table_sales_return_detail INNER JOIN table_item ON table_item.item_id = table_sales_return_detail.item_id INNER JOIN table_price on table_sales_return_detail.item_id=table_price.item_id', "count(table_sales_return_detail.item_id) AS total_item, SUM(quantity * item_mrp) AS Total ", '', " sales_order_id = " . $auRec[$i]->sales_order_id . "");


        $data .= "" . $auRec[$i]->salesman_name . "\t" . $auRec[$i]->employee_code . "\t" .
            $auRec[$i]->distributor_name . "\t" . $auRec[$i]->distributor_code . "\t " . $auRec[$i]->zone_name . " \t" .
            $auRec[$i]->state_name .
            "\t" . $auRec[$i]->city_name . "\t" . $auRec[$i]->retailer_name . "\t" . $auRec[$i]->retailer_code . "\t" . $auRec[$i]->ret_zone . "\t" . $auRec[$i]->ret_state . "\t" . $auRec[$i]->ret_city . "\t" . $auRec2[0]->total_item . "\t" . $_objAdmin->_changeDate($auRec[$i]->date_of_order) . "\t" . $auRec[$i]->time_of_order . "\t" . $auRec[$i]->photo_count . "\n";
    }


    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Sales Return.xls\"");
    echo $data;
    exit;
}


if (isset($_GET['export_transaction_list'])) {

    $data = "" . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['salesman'] . " Code\t " . $AliaseUsers['retailer'] . " Name\t " . $AliaseUsers['retailer'] . " Code\t " . $AliaseUsers['distributor'] . " Name\t " . $AliaseUsers['distributor'] . " Code\tZone\t State\t City\t  Transaction Type\t Bank\t Amount\t Date\t Time\tPhoto Count\n";
    $sort = " ORDER BY transaction_date desc,transaction_time desc";

    if ($_SESSION['retailerID'] != '') {
        $retailer = " AND r.retailer_id = '" . $_SESSION['retailerID'] . "'";

    }
    if ($_SESSION['distributorId'] != 0) {
        $disList = " d.distributor_id=" . $_SESSION['distributorId'];
    } else {
        $disList = "";
    }
    if ($_SESSION['transsalesmanID'] != '') {
        $salesman = " AND td.salesman_id = '" . $_SESSION['transsalesmanID'] . "'";
    }

    if ($_SESSION['FromTransList'] != '') {
        $fromdate = " and td.transaction_date >= '" . date('Y-m-d', strtotime($_SESSION['FromTransList'])) . "'";
    } else {
        $fromdate = " and td.transaction_date >= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['ToTransList'] != '') {
        $todate = " and td.transaction_date <= '" . date('Y-m-d', strtotime($_SESSION['ToTransList'])) . "'";
    } else {
        $todate = " and td.transaction_date <= '" . date('Y-m-d') . "'";
    }
    $where = " $salesman $disList $retailer $fromdate $todate";

    $auRec = $_objAdmin->_getSelectList('table_transaction_details as td 
    left join table_retailer as r on td.retailer_id=r.retailer_id 
    left join table_salesman as s on td.salesman_id=s.salesman_id 
    left join table_distributors as d on d.distributor_id=r.distributor_id 
    left join state as st on st.state_id=d.state 
    LEFT JOIN table_zone_state_mapping as szsm on szsm.state_id = d.state and szsm.account_id = d.account_id
    LEFT JOIN table_zone as sz on sz.zone_id = szsm.zone_id
    left join city as c on c.city_id=d.city', "td.*,s.salesman_name,s.employee_code,r.retailer_name,r.retailer_code,r.retailer_location,r.retailer_address,sz.zone_name,d.distributor_name,d.distributor_code,st.state_name,c.city_name", '', $where . $sort, '');

    for ($i = 0; $i < count($auRec); $i++) {

        if ($auRec[$i]->transaction_type == 1) {
            $type = "Cash";
        } else {
            $type = "Cheque";
        }

        $data .= "" . $auRec[$i]->salesman_name . "\t" . $auRec[$i]->employee_code . "\t" . $auRec[$i]->retailer_name
            . "\t" . $auRec[$i]->retailer_code . "\t" . $auRec[$i]->distributor_name . "\t" .
            $auRec[$i]->distributor_code . "\t " . $auRec[$i]->zone_name . "\t" . $auRec[$i]->state_name . "\t" .
            $auRec[$i]->city_name
            . "\t" .
            $type . "\t" . $auRec[$i]->issuing_bank . "\t" . round($auRec[$i]->total_sale_amount) . "\t" . $_objAdmin->_changeDate($auRec[$i]->transaction_date) . "\t" . $auRec[$i]->transaction_time . "\t" . $auRec[$i]->photo_count . "\n";
    }

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Transaction Details.xls\"");
    echo $data;
    exit;
}
/**************************************
 **    Export consolidated_activity_report
 **  by Gyanendra
 **  Date: 15th jan 2015
 ***************************************/
if (isset($_GET['export_activity_report'])) {
    $from_date = $_REQUEST['fdate'];
    $to_date = $_REQUEST['tdate'];

    $data = "Start Date: " . $_objAdmin->_changeDate($from_date) . "\t\t End Date: " . $_objAdmin->_changeDate($to_date) . "\n";
    $data .= "Ind :- Individual\t\t HL :- Hierarchy Level\n";
    $data .= "Level\t Reporting To\t Total Calls(Ind)\t Productive Calls(Ind)\t New " . $AliaseUsers['retailer'] . " Added(Ind)\t Amount of Order(Ind)\t Total Calls(HL)\t Productive Calls(HL)\t New " . $AliaseUsers['retailer'] . " Added(HL)\t Amount of Order(HL)\n\n";
    echo $data;
    $from_date = $_REQUEST['fdate'];
    $to_date = $_REQUEST['tdate'];
    $total_call = "";
    $total_amount = "";
    $productive_call = "";
    $total_retailer = "";

    if (isset($_SESSION['rptSal']) && $_SESSION['rptSal'] != "All") {

        $qrySet = "select SH.sort_order from table_salesman_hierarchy_relationship as SHR LEFT JOIN table_salesman_hierarchy as SH ON SHR.hierarchy_id=SH.hierarchy_id WHERE SH.account_id=" . $_SESSION['accountId'] . " AND SHR.salesman_id='" . $_SESSION['rptSal'] . "'";

        $resultSet = mysql_query($qrySet);
        $row = mysql_fetch_assoc($resultSet);
        $curLevelOrder = $row['sort_order'];
        $salID = array($_SESSION['rptSal']);
        $getList = $_objArrayList->getSalesbottomhierarchy($salID, $curLevelOrder);
        if (!empty($getList)) {
            $getList = implode(',', $getList);
            $salesman = " AND SHR.salesman_id IN ($getList)";
        } else {
            $salesman = " AND SHR.salesman_id ='" . $_SESSION['rptSal'] . "'";

        }

    }
    $qry = "select s.salesman_id, s.salesman_name, SHR.rpt_user_id AS parent_id, SH.description AS SalLevel,SH.sort_order, S2.salesman_name AS rptPerson, H2.description AS rptLevel
  	  from table_salesman_hierarchy_relationship AS SHR 
      LEFT JOIN table_salesman AS s ON s.salesman_id = SHR.salesman_id 
  
		LEFT JOIN table_salesman_hierarchy AS SH ON SH.hierarchy_id = SHR.hierarchy_id
		LEFT JOIN table_salesman_hierarchy AS H2 ON H2.hierarchy_id = SHR.rpt_hierarchy_id
		LEFT JOIN table_salesman AS S2 ON S2.salesman_id = SHR.rpt_user_id
  WHERE SH.account_id=" . $_SESSION['accountId'] . " $salesman ORDER BY SH.sort_order";
    $result = mysql_query($qry);
    $salesmanHirearchySet = array();
    while ($row = mysql_fetch_assoc($result)) {

        $td1 = $_objAdmin->_getSelectList('table_order as o left join table_retailer as r on o.retailer_id=r.retailer_id', 'count(order_id) as total_call, sum( o.total_invoice_amount ) as total_amt ', '', " (o.date_of_order BETWEEN '" . date('Y-m-d', strtotime($from_date)) . "' AND '" . date('Y-m-d', strtotime($to_date)) . "') and r.new='' and o.salesman_id='" . $row['salesman_id'] . "'");

        $td2 = $_objAdmin->_getSelectList('table_order as o left join table_retailer as r on o.retailer_id=r.retailer_id', 'count(order_id) as productive_call', '', " (o.date_of_order BETWEEN '" . date('Y-m-d', strtotime($from_date)) . "' AND '" . date('Y-m-d', strtotime($to_date)) . "') and o.order_type != 'No' and r.new='' and o.salesman_id='" . $row['salesman_id'] . "'");
        $td3 = $_objAdmin->_getSelectList2('table_activity', 'count(activity_id) as total_retailer', '', "(activity_date BETWEEN '" . date('Y-m-d', strtotime($from_date)) . "' AND '" . date('Y-m-d', strtotime($to_date)) . "') and salesman_id='" . $row['salesman_id'] . "' and activity_type = '5'");
        $salesmanHirearchySet[$row['salesman_id']] = array("parent_id" => $row['parent_id'], "rptPerson" => $row['rptPerson'], 'rptLevel' => $row['rptLevel'], "salesman_name" => $row['salesman_name'], 'level' => $row['SalLevel'], 'salesman_id' => $row['salesman_id'], 'sort_order' => $row['sort_order'], 'total_call' => $td1[0]->total_call, 'total_amount' => $td1[0]->total_amt, 'productive_call' => $td2[0]->productive_call, 'total_retailer' => $td3[0]->total_retailer);

    }
    function createTree($array, $currentParent, $currLevel = 0, $prevLevel = -1, $sort_order = 0)
    {

        foreach ($array as $key => $value) {

            if ($currentParent == $value['parent_id'] && $sort_order < $value['sort_order']) {
                $salID = array($value['salesman_id']);
                $sortOrder = $value['sort_order'];
                $objArrayList = new ArrayList();
                $_objAdmin = new Admin();
                $getList = $objArrayList->getSalesbottomhierarchy($salID, $sortOrder);

                $levelTotalSalCount = sizeof($getList);
                $getList = implode(',', $getList);

                $level_call_amount = $_objAdmin->_getSelectList('table_order as o left join table_retailer as r on o.retailer_id=r.retailer_id', 'count(order_id) as level_total_call, sum( o.total_invoice_amount ) as level_total_amt ', '', " (o.date_of_order BETWEEN '" . $_SESSION['rptForm'] . "' AND '" . $_SESSION['rptTo'] . "') and r.new='' and o.salesman_id IN ($getList)");
                $productive_call = $_objAdmin->_getSelectList('table_order as o left join table_retailer as r on o.retailer_id=r.retailer_id', 'count(order_id) as level_productive_call', '', " (o.date_of_order BETWEEN '" . $_SESSION['rptForm'] . "' AND '" . $_SESSION['rptTo'] . "') and o.order_type != 'No' and r.new='' and o.salesman_id IN ($getList)");
                $retailer = $_objAdmin->_getSelectList2('table_activity', 'count(activity_id) as level_total_retailer', '', "(activity_date BETWEEN '" . $_SESSION['rptForm'] . "' AND '" . $_SESSION['rptTo'] . "') and salesman_id IN ($getList) and activity_type = '5'");

                $level_total_call = $level_call_amount[0]->level_total_call;
                $level_total_amount = $level_call_amount[0]->level_total_amt;
                $level_productive_call = $productive_call[0]->level_productive_call;
                $level_total_retailer = $retailer[0]->level_total_retailer;
                $total_call = $value['total_call'] ? $value['total_call'] : 0;
                $productive_call = $value['productive_call'] ? $value['productive_call'] : 0;
                $total_retailer = $value['total_retailer'] ? $value['total_retailer'] : 0;
                $total_amount = $value['total_amount'] ? $value['total_amount'] : '0.00';

                $level_total_call = $level_total_call ? $level_total_call : 0;
                $level_productive_call = $level_productive_call ? $level_productive_call : 0;
                $level_total_retailer = $level_total_retailer ? $level_total_retailer : 0;
                $level_total_amount = $level_total_amount ? $level_total_amount : '0.00';

                $exportFormatArray['salesman_name'] = $value['salesman_name'];
                $exportFormatArray['level'] = $value['level'];
                if ($value['parent_id'] == 0) {
                    $value['rptLevel'] = 'N/A';
                }
                header("Content-type: application/octet-stream");
                $data = "" . $value['salesman_name'] . " (" . $value['level'] . ")\t" . $value['rptPerson'] . " (" . $value['rptLevel'] . ")\t" . $total_call . "\t" . $productive_call . "\t" . $total_retailer . "\t" . $total_amount . "\t" . $level_total_call . "\t" . $level_productive_call . "\t" . $level_total_retailer . "\t" . $level_total_amount . "\n";
                echo $data;
                if ($currLevel > $prevLevel) {
                    $prevLevel = $currLevel;
                }
                $currLevel++;

                createTree($array, $key, $currLevel, $prevLevel, $value['sort_order']);
                $currLevel--;
            }
        }
    }

    if (mysql_num_rows($result) != 0) {
        if ($_SESSION['userLoginType'] == '5' || $_SESSION['rptSal'] != '') {


            if (isset($_SESSION['userLoginType'])) {
                $salesmanID = $_SESSION['salesmanId'];
            }
            if (isset($_SESSION['rptSal'])) {
                $salesmanID = $_SESSION['rptSal'];
            }
            $qrySetResult = "select rpt_user_id
  from table_salesman_hierarchy_relationship 
  WHERE account_id=" . $_SESSION['accountId'] . " AND salesman_id='" . $salesmanID . "'";
            $resultSetquery = mysql_query($qrySetResult);
            $row = mysql_fetch_assoc($resultSetquery);
            $curLevel = $row['rpt_user_id'];
            if ($row['rpt_user_id'] == '') {
                $curLevel = 0;
            }
        } else {
            $curLevel = 0;
        }
        createTree($salesmanHirearchySet, $curLevel);
    }
    header("Content-Disposition: attachment; filename=\"Consolidated Activity.xls\"");
    exit;
}
/******************************
 **  Export consolidated_report
 **  by Gyanendra
 **  Date: 16th jan 2015
 ********************************/
if (isset($_GET['export_consolidated_report'])) {
    $from_date = $_REQUEST['fdate'];
    $to_date = $_REQUEST['tdate'];

    $data = "Start Date: " . $_objAdmin->_changeDate($from_date) . "\t\t End Date: " . $_objAdmin->_changeDate($to_date) . "\n";
    $data .= "Hierarchy Level\t Reporting to\t Individual Total Quantity\t Individual Total Amount\t Hierarchy Total Quantity\t Hierarchy Total Amount\n\n";
    echo $data;
    if (isset($_SESSION['rptSal']) && $_SESSION['rptSal'] != "All") {

        $qrySet = "select SH.sort_order from table_salesman_hierarchy_relationship as SHR LEFT JOIN table_salesman_hierarchy as SH ON SHR.hierarchy_id=SH.hierarchy_id WHERE SH.account_id=" . $_SESSION['accountId'] . " AND SHR.salesman_id='" . $_SESSION['rptSal'] . "'";

        $resultSet = mysql_query($qrySet);
        $row = mysql_fetch_assoc($resultSet);
        $curLevelOrder = $row['sort_order'];
        $salID = array($_SESSION['rptSal']);
        $getList = $_objArrayList->getSalesbottomhierarchy($salID, $curLevelOrder);
        if (!empty($getList)) {
            $getList = implode(',', $getList);
            $salesman = " AND SHR.salesman_id IN ($getList)";
        } else {
            $salesman = " AND SHR.salesman_id ='" . $_SESSION['rptSal'] . "'";

        }

    }
    $qry = "select s.salesman_id, s.salesman_name, SHR.rpt_user_id AS parent_id, SH.description AS SalLevel,SH.sort_order, S2. 	salesman_name AS rptPerson, H2.description AS rptLevel
 	    from table_salesman_hierarchy_relationship AS SHR 
        LEFT JOIN table_salesman AS s ON s.salesman_id = SHR.salesman_id 
        LEFT JOIN table_salesman_hierarchy AS SH ON SH.hierarchy_id = SHR.hierarchy_id
        LEFT JOIN table_salesman_hierarchy AS H2 ON H2.hierarchy_id = SHR.rpt_hierarchy_id
		LEFT JOIN table_salesman AS S2 ON S2.salesman_id = SHR.rpt_user_id
  WHERE SH.account_id=" . $_SESSION['accountId'] . " $salesman ORDER BY SH.sort_order";

    $result = mysql_query($qry);
    $salesmanHirearchySet = array();
    while ($row = mysql_fetch_assoc($result)) {
        $salesmanHirearchySet[$row['salesman_id']] = array("parent_id" => $row['parent_id'], "rptPerson" => $row['rptPerson'], 'rptLevel' => $row['rptLevel'], "salesman_name" => $row['salesman_name'], 'level' => $row['SalLevel'], 'salesman_id' => $row['salesman_id'], 'sort_order' => $row['sort_order']);
    }
    function createTree($array, $currentParent, $currLevel = 0, $prevLevel = -1, $sort_order = 0)
    {


        foreach ($array as $key => $value) {

            if ($currentParent == $value['parent_id'] && $sort_order < $value['sort_order']) {

                $qrySelAmount = "SELECT SUM(O.acc_total_invoice_amount) as total
		FROM table_order as O
		left join table_retailer as R on O.retailer_id=R.retailer_id
		left join table_salesman as s on O.salesman_id=s.salesman_id 
		left join table_distributors as d on O.distributor_id=d.distributor_id
		WHERE O.salesman_id='" . $value['salesman_id'] . "' and R.new='' AND O.date_of_order >='" . $_SESSION['rptForm'] . "' AND O.date_of_order <='" . $_SESSION['rptTo'] . "'";


                $qrySelQuantity = "SELECT SUM(OD.acc_quantity) as totalQuantity
		FROM table_order as O
		left join table_order_detail as OD on O.order_id=OD.order_id 
		left join table_retailer as R on O.retailer_id=R.retailer_id
		left join table_salesman as s on O.salesman_id=s.salesman_id 
		left join table_distributors as d on O.distributor_id=d.distributor_id
		WHERE O.salesman_id='" . $value['salesman_id'] . "' and R.new='' and OD.total_free_quantity='' AND O.date_of_order >='" . $_SESSION['rptForm'] . "' AND O.date_of_order <='" . $_SESSION['rptTo'] . "'";


                $resultSelAmount = mysql_query($qrySelAmount);
                $rowSelAmount = mysql_fetch_assoc($resultSelAmount);

                $resultSelQuantity = mysql_query($qrySelQuantity);
                $rowSelQuantity = mysql_fetch_assoc($resultSelQuantity);

                $salesmanTotal = $rowSelAmount['total'];
                $salesmanTotalQuantity = $rowSelQuantity['totalQuantity'];

                $salID = array($value['salesman_id']);
                $sortOrder = $value['sort_order'];

                $objArrayList = new ArrayList();
                $getList = $objArrayList->getSalesbottomhierarchy($salID, $sortOrder);
                $getList = implode(',', $getList);

                $levelWiseAmountSum = "SELECT SUM(O.acc_total_invoice_amount) as total
		FROM table_order as O		
		left join table_retailer as R ON O.retailer_id=R.retailer_id
		left join table_salesman as s on O.salesman_id=s.salesman_id 
		left join table_distributors as d on O.distributor_id=d.distributor_id
		WHERE O.salesman_id IN ($getList) AND R.new='' AND O.date_of_order >='" . $_SESSION['rptForm'] . "' AND O.date_of_order <='" . $_SESSION['rptTo'] . "'";

                $levelWiseQuantitySum = "SELECT SUM(OD.acc_quantity) as totalQuantity
		FROM table_order as O
		left join table_order_detail as OD on O.order_id=OD.order_id
		left join table_retailer as R ON O.retailer_id=R.retailer_id
		left join table_salesman as s on O.salesman_id=s.salesman_id 
		left join table_distributors as d on O.distributor_id=d.distributor_id
		WHERE O.salesman_id IN ($getList) AND R.new='' AND OD.total_free_quantity='' AND O.date_of_order >='" . $_SESSION['rptForm'] . "' AND O.date_of_order <='" . $_SESSION['rptTo'] . "'";


                $resultAmountSum = mysql_query($levelWiseAmountSum);
                $salAmountSum = mysql_fetch_assoc($resultAmountSum);

                $resultQuantitySum = mysql_query($levelWiseQuantitySum);
                $salQuantitySum = mysql_fetch_assoc($resultQuantitySum);

                $levelTotal = $salAmountSum['total'];
                $levelTotalQuantity = $salQuantitySum['totalQuantity'];

                $selfTotalQuantity = $salesmanTotalQuantity ? $salesmanTotalQuantity : 0;
                $selfTotalAmount = $salesmanTotal ? $salesmanTotal : '0.00';
                $levelTotalQuantity = $levelTotalQuantity ? $levelTotalQuantity : 0;
                $levelTotalAmount = $levelTotal ? $levelTotal : '0.00';
                if ($value['parent_id'] == 0) {
                    $value['rptLevel'] = 'N/A';
                }
                header("Content-type: application/octet-stream");
                $data = "" . $value['salesman_name'] . " (" . $value['level'] . ")\t" . $value['rptPerson'] . " (" . $value['rptLevel'] . ")\t" . $selfTotalQuantity . "\t" . $selfTotalAmount . "\t" . $levelTotalQuantity . "\t" . $levelTotalAmount . "\n";
                echo $data;

                if ($currLevel > $prevLevel) {
                    $prevLevel = $currLevel;
                }
                $currLevel++;

                createTree($array, $key, $currLevel, $prevLevel, $value['sort_order']);

                $currLevel--;
            }
        }
    }

    if (mysql_num_rows($result) != 0) {
        if ($_SESSION['userLoginType'] == '5' || $_SESSION['rptSal'] != '') {


            if (isset($_SESSION['userLoginType'])) {
                $salesmanID = $_SESSION['salesmanId'];
            }
            if (isset($_SESSION['rptSal'])) {
                $salesmanID = $_SESSION['rptSal'];
            }
            $qrySetResult = "select rpt_user_id
  from table_salesman_hierarchy_relationship 
  WHERE account_id=" . $_SESSION['accountId'] . " AND salesman_id='" . $salesmanID . "'";
            $resultSetquery = mysql_query($qrySetResult);
            $row = mysql_fetch_assoc($resultSetquery);
            $curLevel = $row['rpt_user_id'];
            if ($row['rpt_user_id'] == '') {
                $curLevel = 0;
            }
        } else {
            $curLevel = 0;
        }
        createTree($salesmanHirearchySet, $curLevel);
    }
    header("Content-Disposition: attachment; filename=\"Consolidated Sales Report.xls\"");
    exit;
}
/****************************************
 **  Export consolidated_attendance_report
 **  by Gyanendra
 **  Date: 16th jan 2015
 *****************************************/
if (isset($_GET['export_consolidated_attendance_report'])) {
    $from_date = $_REQUEST['fdate'];
    $to_date = $_REQUEST['tdate'];

    $data = "Start Date: " . $_objAdmin->_changeDate($from_date) . "\t\t End Date: " . $_objAdmin->_changeDate($to_date) . "\n";
    $data .= "Ind :- Individual\t\t HL :- Hierarchy Level\n";
    //$data.="Hierarchy Level\t Reporting to\t Working Hours (Ind)\t Missing Hours (Ind)\t Present (Ind)\t Absent (Ind)\t Working Hours (HL)\t Missing Hours (HL)\t Present (HL)\t Absent (HL)\n";
    $data .= "Hierarchy Level\t Reporting to\t Present (Ind)\t Absent (Ind)\t Present (HL)\t Absent (HL)\n\n";
    echo $data;
    /******************************* get bottom level from hierarchy *************************/
    $horder = "select TSH.sort_order AS sort_order from table_salesman_hierarchy AS TSH WHERE TSH.account_id=" . $_SESSION['accountId'] . " ORDER BY TSH.sort_order DESC LIMIT 1";

    $lastLevel = mysql_query($horder);
    while ($lastLevelOrder = mysql_fetch_assoc($lastLevel)) {
        $bottomLevel = $lastLevelOrder['sort_order'];
    }
    if (isset($_SESSION['rptSal']) && $_SESSION['rptSal'] != "All") {
        $appUserActivityID = "";
        $qrySet = "select SH.sort_order from table_salesman_hierarchy_relationship as SHR LEFT JOIN table_salesman_hierarchy as SH ON SHR.hierarchy_id=SH.hierarchy_id WHERE SH.account_id=" . $_SESSION['accountId'] . " AND SHR.salesman_id='" . $_SESSION['rptSal'] . "'";

        $resultSet = mysql_query($qrySet);
        $row = mysql_fetch_assoc($resultSet);
        $curLevelOrder = $row['sort_order'];
        $salID = array($_SESSION['rptSal']);
        $getList = $_objArrayList->getSalesbottomhierarchy($salID, $curLevelOrder);
        if (!empty($getList)) {
            $getList = implode(',', $getList);
            $salesman = " AND SHR.salesman_id IN ($getList)";
        } else {
            $salesman = " AND SHR.salesman_id ='" . $_SESSION['rptSal'] . "'";
        }

    }

    function DateCheck($start_date, $end_date)
    {
        $start = strtotime($start_date);
        $end = strtotime($end_date);
        $new_date = array($start_date);
        $date_arr = array();
        $days_count = ceil(abs($end - $start) / 86400) + 1;
        for ($i = 0; $i < $days_count; $i++) {
            $date = strtotime('+1 days', strtotime($start_date));
            $start_date = date('Y-m-d', $date);
            $date_arr[$i] = $start_date;
            $week_last_date = $start_date;
            array_push($new_date, $week_last_date);
            $get_newdate[] = array($new_date[$i], $new_date[$i + 1]);
        }
        return $get_newdate;
    }

    $dayArray = array();

    $d1 = "" . $_SESSION['rptForm'] . "";
    $d2 = "" . $_SESSION['rptTo'] . "";
    $duration_dates = DateCheck($d1, $d2);
    foreach ($duration_dates as $value) {
        $duration_start_date = $value[0];
        $dayArray[] = date('D', strtotime($duration_start_date));

    }

    $dayCount = count($dayArray);

    function convertToHoursMins($time, $format = '%d:%d')
    {
        settype($time, 'integer');
        if ($time < 1) {
            return;
        }
        $hours = floor($time / 60);
        $minutes = $time % 60;
        return sprintf($format, $hours, $minutes);
    }

    $qry = "select s.salesman_id, s.salesman_name, SHR.rpt_user_id AS parent_id, SH.description AS SalLevel,SH.sort_order, S2.salesman_name AS rptPerson, H2.description AS rptLevel
 	    from table_salesman_hierarchy_relationship AS SHR 
        LEFT JOIN table_salesman AS s ON s.salesman_id = SHR.salesman_id 
        LEFT JOIN table_salesman_hierarchy AS SH ON SH.hierarchy_id = SHR.hierarchy_id
        LEFT JOIN table_salesman_hierarchy AS H2 ON H2.hierarchy_id = SHR.rpt_hierarchy_id
		LEFT JOIN table_salesman AS S2 ON S2.salesman_id = SHR.rpt_user_id
  WHERE SH.account_id=" . $_SESSION['accountId'] . " $salesman ORDER BY SH.sort_order";
    $result = mysql_query($qry);
    $salesmanHirearchySet = array();
    while ($row = mysql_fetch_assoc($result)) {

        /********************** Start Calculation For Individual Salesman **************************/

        $getTotalWorkingHours = mysql_query("SELECT SEC_TO_TIME(SUM(TIME_TO_SEC(diffe))) as timeSum FROM salesman_working_time WHERE salesman_id='" . $row['salesman_id'] . "' AND activity_date >='" . $_SESSION['rptForm'] . "' AND activity_date <='" . $_SESSION['rptTo'] . "'");
        $individualWorkinghours = mysql_fetch_assoc($getTotalWorkingHours);

        if ($individualWorkinghours['timeSum'] > 0 && !empty($individualWorkinghours['timeSum'])) {

            $salIndiWorkingTime = date("H:i:s", strtotime("-20 minutes", strtotime($individualWorkinghours['timeSum'])));

        } else {
            $salIndiWorkingTime = "NA";
        }


        $getTotalPresent = mysql_query("SELECT count(activity_id) as totalPresent FROM act_in WHERE salesman_id='" . $row['salesman_id'] . "' AND activity_date >='" . $_SESSION['rptForm'] . "' AND activity_date <='" . $_SESSION['rptTo'] . "'");
        $individualPresent = mysql_fetch_assoc($getTotalPresent);

        if ($individualPresent['totalPresent'] > 0 && !empty($individualPresent['totalPresent'])) {
            $salIndiPresent = $individualPresent['totalPresent'];
        } else {
            $salIndiPresent = "NA";
        }

        $salIndividualAbsent = $dayCount - $salIndiPresent;
        $getIndividualGap = mysql_query("SELECT salesman_id,ref_type,ref_id,activity_date,end_time,activity_id,Sec_to_time(@diff) AS starttime,end_time,IF(@diff = 0, 0,Time_to_sec(end_time) - @diff)/60 AS diff,@diff := Time_to_sec(end_time) FROM table_activity,(SELECT @diff := 0) AS x WHERE salesman_id='" . $row['salesman_id'] . "' and activity_date>='" . $_SESSION['rptForm'] . "' and activity_date<='" . $_SESSION['rptTo'] . "' and activity_type in (3,4,5,10,11,12) ORDER  BY table_activity.activity_date asc, table_activity.end_time asc");

        while ($resultIndividualGap = mysql_fetch_assoc($getIndividualGap)) {
            if ($resultIndividualGap['diff'] > $_SESSION['GapTime']) {

                if ($resultIndividualGap['diff'] > 60) {
                    $individualMissingHours = convertToHoursMins(floor($resultIndividualGap['diff']), '%d hours %d minutes');
                    //echo floor($row['diff'])." minutes";
                } else {
                    $individualMissingHours = floor($resultIndividualGap['diff']) . " minutes";
                }
            } else {

                $individualMissingHours = "NA";
            }
        }

        /************************************ End Calculation For Individual Salesman **************************************/
        /******************** Start Calculation For Hirearchy Of Salesman ****************************/

        $salID = array($row['salesman_id']);
        $sortOrder = $row['sort_order'];
        $objArrayList = new ArrayList();
        $getList = $objArrayList->getSalesbottomhierarchy($salID, $sortOrder);
        $getHierList = $getList;

        /******************** find out whether user level is app user or not *******************************/
        unset($appUser);
        unset($appUserSalID);
        for ($i = 0; $i < count($getHierList); $i++) {

            $getActivityId = mysql_query("SELECT activity_id as activity_id FROM table_activity WHERE salesman_id =" . $getHierList[$i] . " AND activity_date >='" . $_SESSION['rptForm'] . "' AND activity_date <='" . $_SESSION['rptTo'] . "' AND activity_type in (3,4,5,10,11,12)");

            $activityID = mysql_fetch_assoc($getActivityId);
            if ($activityID['activity_id'] > 0) {
                $appUser[] = $activityID['activity_id'];
                $appUserSalID[] = $getHierList[$i];
            }
        }
        $appUserCount = count($appUser);
        $getList = implode(',', $appUserSalID);
        /************************************ Calculate Hierarchy Working Hours ********************************/
        $getTotalWorkingHoursHierarchy = mysql_query("SELECT SEC_TO_TIME(SUM(TIME_TO_SEC(diffe))) as timeSumHier FROM salesman_working_time WHERE salesman_id in (" . $getList . ") AND activity_date >='" . $_SESSION['rptForm'] . "' AND activity_date <='" . $_SESSION['rptTo'] . "'");

        $hierarchyWorkinghours = mysql_fetch_assoc($getTotalWorkingHoursHierarchy);

        if ($hierarchyWorkinghours['timeSumHier'] > 0 && !empty($hierarchyWorkinghours['timeSumHier'])) {
            $salHierWorkingTime = $hierarchyWorkinghours['timeSumHier'];
            $salHierWorkingTime = date("H:i:s", strtotime("-20 minutes", strtotime($hierarchyWorkinghours['timeSumHier'])));
        } else {
            $salHierWorkingTime = "NA";
        }


        $getTotalHirearchyPresent = mysql_query("SELECT count(activity_id) as totalhierPresent FROM act_in WHERE salesman_id in (" . $getList . ") AND activity_date >='" . $_SESSION['rptForm'] . "' AND activity_date <='" . $_SESSION['rptTo'] . "'");
        $hierarchyPresent = mysql_fetch_assoc($getTotalHirearchyPresent);

        if ($hierarchyPresent['totalhierPresent'] > 0 && !empty($hierarchyPresent['totalhierPresent'])) {
            $salhiearchyPresent = $hierarchyPresent['totalhierPresent'];
        } else {
            $salhiearchyPresent = "NA";
        }

        /************* Calculation of total Absent of Hirearchy ****************/
        $salHierarchyAbsent = $dayCount * $appUserCount - $salhiearchyPresent;

        $hierarchyMissingHours = "";
        $getHierarchyGap = mysql_query("SELECT Sec_to_time(@diff) AS starttime,end_time,IF(@diff = 0, 0,Time_to_sec(end_time) - @diff)/60 AS diff,@diff := Time_to_sec(end_time) FROM table_activity,(SELECT @diff := 0) AS x WHERE salesman_id IN (" . $getList . ") and activity_date>='" . $_SESSION['rptForm'] . "' and activity_date<='" . $_SESSION['rptTo'] . "' and activity_type in (3,4,5,10,11,12) ORDER  BY table_activity.activity_date asc, table_activity.end_time asc");

        while ($resultHierarchyGap = mysql_fetch_assoc($getHierarchyGap)) {

            if ($resultHierarchyGap['diff'] > $_SESSION['GapTime']) {
                if ($resultHierarchyGap['diff'] > 60) {
                    $hierarchyMissingHours = convertToHoursMins(floor($resultHierarchyGap['diff']), '%d hours %d minutes');
                } else {
                    $hierarchyMissingHours = floor($resultHierarchyGap['diff']) . " minutes";
                }
            } else {
                $hierarchyMissingHours = "NA";
            }
        }
        /************************** End Calculation For Hirearchy Of Salesman ******************************/
        $salesmanHirearchySet[$row['salesman_id']] = array("parent_id" => $row['parent_id'], "rptPerson" => $row['rptPerson'], 'rptLevel' => $row['rptLevel'], "salesman_name" => $row['salesman_name'], 'level' => $row['SalLevel'], 'salesman_id' => $row['salesman_id'], 'sort_order' => $row['sort_order'], 'individualWorking' => $salIndiWorkingTime, 'hierarchyWorking' => $salHierWorkingTime, 'individualTotalPresent' => $salIndiPresent, 'hierarchyTotalPresent' => $salhiearchyPresent, 'individualAbsent' => $salIndividualAbsent, 'hierarchyAbsent' => $salHierarchyAbsent, 'individualMissingWorkingTime' => $individualMissingHours, 'hierarchyMissingWorkingTime' => $hierarchyMissingHours, 'bottomLevel' => $bottomLevel, 'appSalId' => $appUserSalID);
    }
    function createTree($array, $currentParent, $currLevel = 0, $prevLevel = -1, $sort_order = 0)
    {

        foreach ($array as $key => $value) {

            if ($currentParent == $value['parent_id'] && $sort_order < $value['sort_order']) {

                $salesmanWorkingTime = $value['individualWorking'];
                $salesmanHierarchyWorkingTime = $value['hierarchyWorking'];
                $salesmanPresentTotal = $value['individualTotalPresent'];
                $salesmanHierarchyPresentTotal = $value['hierarchyTotalPresent'];
                $salesmanAbsentTotal = $value['individualAbsent'];
                $salesmanHierarchyAbsentTotal = $value['hierarchyAbsent'];
                $salesmanMissingWorkingTime = $value['individualMissingWorkingTime'];
                $salesmanHierarchyMissingWorkingTime = $value['hierarchyMissingWorkingTime'];

                if ($value['parent_id'] == 0) {
                    $value['rptLevel'] = 'N/A';
                }

                header("Content-type: application/octet-stream");
                $data = "" . $value['salesman_name'] . " (" . $value['level'] . ")\t" . $value['rptPerson'] . " (" . $value['rptLevel'] . ")\t";
                if (in_array($value['salesman_id'], $value['appSalId'])) {
                    //$data.=$salesmanWorkingTime."\t".$salesmanMissingWorkingTime."\t".$salesmanPresentTotal."\t".$salesmanAbsentTotal."\t";
                    $data .= $salesmanPresentTotal . "\t" . $salesmanAbsentTotal . "\t";
                } else  $data .= '-' . "\t" . '-' . "\t";
                //else  $data.='-'."\t".'-'."\t".'-'."\t".'-'."\t";
                if ($value['sort_order'] != $value['bottomLevel']) {
                    //$data.=$salesmanHierarchyWorkingTime."\t".$salesmanHierarchyMissingWorkingTime."\t".$salesmanHierarchyPresentTotal."\t".$salesmanHierarchyAbsentTotal."\n";
                    $data .= $salesmanHierarchyPresentTotal . "\t" . $salesmanHierarchyAbsentTotal . "\n";
                } else $data .= '-' . "\t" . '-' . "\t\n";
                //$data.='-'."\t".'-'."\t".'-'."\t".'-'."\t\n";
                echo $data;


                if ($currLevel > $prevLevel) {
                    $prevLevel = $currLevel;
                }
                $currLevel++;

                createTree($array, $key, $currLevel, $prevLevel, $value['sort_order']);

                $currLevel--;
            }
        }
    }

    if (mysql_num_rows($result) != 0) {
        if ($_SESSION['userLoginType'] == '5' || $_SESSION['rptSal'] != '') {


            if (isset($_SESSION['userLoginType'])) {
                $salesmanID = $_SESSION['salesmanId'];
            }
            if (isset($_SESSION['rptSal'])) {
                $salesmanID = $_SESSION['rptSal'];
            }
            //echo $salesmanID;
            $qrySetResult = "select rpt_user_id
  from table_salesman_hierarchy_relationship 
  WHERE account_id=" . $_SESSION['accountId'] . " AND salesman_id='" . $salesmanID . "'";
            $resultSetquery = mysql_query($qrySetResult);
            $row = mysql_fetch_assoc($resultSetquery);
            $curLevel = $row['rpt_user_id'];
            if ($row['rpt_user_id'] == '') {
                $curLevel = 0;
            }
        } else {
            $curLevel = 0;
        }
        createTree($salesmanHirearchySet, $curLevel);
    }
    header("Content-Disposition: attachment; filename=\"Consolidated Attendance Report.xls\"");
    exit;
}
/********************************** Export Distributor Target Vs Achievement Gaurav (08 June 2015)***************************/
if (isset($_GET['export_target_achivement_list'])) {

    if ($_SESSION['targetType'] != '' && $_SESSION['targetType'] == 1) {
        $data = "" . $AliaseUsers['distributor'] . " Name\t " . $AliaseUsers['distributor'] . " Code\t Target Type\t Item Code\t Brand\t Offer\t Item Erp\t Case Size\t Target(In No. Of Cases)\t Achievement(In No. Of Cases)\t Month\t Year\n";
    } else if ($_SESSION['targetType'] != '' && $_SESSION['targetType'] == 2) {
        $data = "" . $AliaseUsers['distributor'] . " Name\t " . $AliaseUsers['distributor'] . " Code\t Target Type\t Item Code\t Brand\t Offer\t Item Erp\t Target(In No. Of Cases)\t Achievement(In Quantity)\t Month\t Year\n";

        $groupCond = "GROUP BY dt.distributor_id,dti.item_id";
    }

    if ($_SESSION['targetType'] != '') {
        $target_type = $_SESSION['targetType'];
    } else {
        $target_type = "1";
    }
    $targetMonth = $_SESSION['dismonth'];
    $targetYear = $_SESSION['disCyear'];
    $itemId = 'null';
    $caseId = 'null';
    if ($_SESSION['distributorIDSale'] != '') {
        $disCond = "and dt.distributor_id='" . $_SESSION['distributorIDSale'] . "'";
    }
    if ($_SESSION['itemID'] != '') {
        $itemCond = "and dti.item_id='" . $_SESSION['itemID'] . "'";
    }
//echo $disCond;
//exit;
    $getDistributorDetails = $_objAdmin->_getSelectList('table_distributors_target AS dt 
LEFT JOIN table_distributors_target_item  AS dti ON dt.distributor_target_id = dti.distributor_target_id 
LEFT JOIN table_distributors as d on d.distributor_id=dt.distributor_id
', "dti.no_of_cases,dti.total_quantity,dti.item_id,dti.case_id,d.distributor_id,d.distributor_name,distributor_code,dt.target_type,dt.distributor_target_id", '', " dt.target_month='" . $targetMonth . "' and dt.target_year='" . $targetYear . "' and dt.target_type='" . $target_type . "' $disCond $itemCond $groupCond", '');
    if (sizeof($getDistributorDetails) > 0) {
        foreach ($getDistributorDetails as $disKey => $disValue) {
            $getBrandList = $_objAdmin->_getSelectList('table_item as i left join table_brands as b on b.brand_id=i.item_id left join table_offer as o on o.offer_id=i.offer_id', "o.offer_name,b.brand_name,i.item_erp_code,i.item_name,i.item_code", '', " i.item_id='" . $disValue->item_id . "'", '');

            $disTargetType = ($disValue->target_type == 1) ? " Primary" : " Secondary";

            $getCaseList = $_objAdmin->_getSelectList2('table_item_case_relationship as c left join table_cases as ca on c.case_id=ca.case_id', "*", '', " c.item_id='" . $disValue->item_id . "' and ca.case_id='" . $disValue->case_id . "'", '');

            $getAchivementsByItemCase = $_objAdmin->getDistributorsAchivements($disValue->distributor_id, $targetMonth, $targetYear, $target_type, $disValue->item_id, $disValue->case_id);


            if ($_SESSION['targetType'] != '' && $_SESSION['targetType'] == 1) {
                $data .= "" . $disValue->distributor_name . "\t" . $disValue->distributor_code . "\t" . $disTargetType . "\t" . $getBrandList[0]->item_code . "\t" . $getBrandList[0]->brand_name . "\t" . $getBrandList[0]->offer_name . "\t" . $getBrandList[0]->item_erp_code . "\t" . $getCaseList[0]->case_size . "\t" . $disValue->no_of_cases . "\t" . $getAchivementsByItemCase . "\t" . $targetMonth . "\t" . $targetYear . "\n";
            } else if ($_SESSION['targetType'] != '' && $_SESSION['targetType'] == 2) {
                $data .= "" . $disValue->distributor_name . "\t" . $disValue->distributor_code . "\t" . $disTargetType . "\t" . $getBrandList[0]->item_code . "\t" . $getBrandList[0]->brand_name . "\t" . $getBrandList[0]->offer_name . "\t" . $getBrandList[0]->item_erp_code . "\t" . $disValue->total_quantity . "\t" . $getAchivementsByItemCase . "\t" . $targetMonth . "\t" . $targetYear . "\n";
            }


        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Target Vs Acievement.xls\"");
    echo $data;
    exit;
}
/********************************** Export Distributor Target Vs Achievement Gaurav (08 June 2015)***************************/
/********************************** Export Distributor Target Vs Achievement Gaurav (08 June 2015)***************************/
if (isset($_GET['export_achivement_list'])) {

    if ($_SESSION['targetType'] != '' && $_SESSION['targetType'] == 1) {
        $data = "" . $AliaseUsers['distributor'] . " Name\t " . $AliaseUsers['distributor'] . " Code\t Item Code\t Brand\t Offer\t Item Erp\t Case Size\t Achievement(In No. Of Cases)\n";
    } else if ($_SESSION['targetType'] != '' && $_SESSION['targetType'] == 2) {
        $data = "" . $AliaseUsers['distributor'] . " Name\t " . $AliaseUsers['distributor'] . " Code\t Item Code\t Brand\t Offer\t Item Erp\t Achievement(In quantity)\n";

        $groupCond = "GROUP BY od.distributor_id,dti.item_id";
    }

    if ($_SESSION['targetType'] != '') {
        $target_type = $_SESSION['targetType'];
    } else {
        $target_type = "1";
    }
    $itemId = 'null';
    $caseId = 'null';
//echo $disCond;
//exit;
    if ($_SESSION['FromOrderList'] != '') {
        $frmNew = $_SESSION['FromOrderList'];
    } else {
        $frmNew = date('Y-m-d');
    }
    if ($_SESSION['ToOrderList'] != '') {
        $toNew = $_SESSION['ToOrderList'];
    } else {
        $toNew = date('Y-m-d');
    }
    if ($target_type == 1) {
        if ($_SESSION['distributorIDSale'] != '') {
            $disCond = "and dt.distributor_id='" . $_SESSION['distributorIDSale'] . "'";
        }
        if ($_SESSION['itemID'] != '') {
            $itemCond = "and dt.item_id='" . $_SESSION['itemID'] . "'";
        }
        $getDistributorDetails = $_objAdmin->_getSelectList('table_item_dis_stk_inprocess AS dt LEFT JOIN table_distributors as d on d.distributor_id=dt.distributor_id', "dt.acpt_stock_value,dt.item_id,dt.attribute_value_id,dt.item_id,dt.dis_stk_inpro_id,d.distributor_id,d.distributor_name,d.distributor_code", '', "  DATE(dt.last_update_datetime) >= '" . date('Y-m-d', strtotime(mysql_escape_string($frmNew))) . "' and DATE(dt.last_update_datetime) <= '" . date('Y-m-d', strtotime(mysql_escape_string($toNew))) . "' $disCond $itemCond and dt.status='A'", '');
    } else {
        if ($_SESSION['distributorIDSale'] != '') {
            $disCond = "and o.distributor_id='" . $_SESSION['distributorIDSale'] . "'";
        }
        if ($_SESSION['itemID'] != '') {
            $itemCond = "and od.item_id='" . $_SESSION['itemID'] . "'";
        }
        $getDistributorDetails = $_objAdmin->_getSelectList('table_order as o left join table_order_detail as od on o.order_id=od.order_id LEFT JOIN table_distributors as d on d.distributor_id=o.distributor_id', "acc_quantity,d.distributor_id,d.distributor_name,d.distributor_code,od.item_id", '', "  DATE(o.date_of_order) >= '" . date('Y-m-d', strtotime(mysql_escape_string($frmNew))) . "' and DATE(o.date_of_order) <= '" . date('Y-m-d', strtotime(mysql_escape_string($toNew))) . "' $disCond $itemCond GROUP BY o.distributor_id,od.item_id", '');

    }
//echo "<pre>";
//print_r($getDistributorDetails);
//exit;
    if (sizeof($getDistributorDetails) > 0) {
        foreach ($getDistributorDetails as $disKey => $disValue) {
            $getBrandList = $_objAdmin->_getSelectList('table_item as i left join table_brands as b on b.brand_id=i.item_id left join table_offer as o on o.offer_id=i.offer_id', "o.offer_name,b.brand_name,i.item_erp_code,i.item_name,i.item_code", '', " i.item_id='" . $disValue->item_id . "'", '');

            $disTargetType = ($disValue->target_type == 1) ? " Primary" : " Secondary";

            $getCaseList = $_objAdmin->_getSelectList2('table_item_case_relationship as c left join table_cases as ca on c.case_id=ca.case_id', "*", '', " c.item_id='" . $disValue->item_id . "' and ca.case_id='" . $disValue->attribute_value_id . "'", '');

            if ($target_type == 2) {
                $caseId = 'null';
            } else {
                $caseId = $disValue->attribute_value_id;
            }

            $getAchivementsByItemCase = $_objAdmin->getDistributorsAchivementsByDate($disValue->distributor_id, $frmNew, $toNew, $target_type, $disValue->item_id, $caseId);


            if ($_SESSION['targetType'] != '' && $_SESSION['targetType'] == 1) {
                $data .= "" . $disValue->distributor_name . "\t" . $disValue->distributor_code . "\t" . $getBrandList[0]->item_code . "\t" . $getBrandList[0]->brand_name . "\t" . $getBrandList[0]->offer_name . "\t" . $getBrandList[0]->item_erp_code . "\t" . $getCaseList[0]->case_size . "\t" . $getAchivementsByItemCase . "\n";
            } else if ($_SESSION['targetType'] != '' && $_SESSION['targetType'] == 2) {
                $data .= "" . $disValue->distributor_name . "\t" . $disValue->distributor_code . "\t" . $getBrandList[0]->item_code . "\t" . $getBrandList[0]->brand_name . "\t" . $getBrandList[0]->offer_name . "\t" . $getBrandList[0]->item_erp_code . "\t" . $getAchivementsByItemCase . "\n";
            }


        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Acievement.xls\"");
    echo $data;
    exit;
}
/********************************** Export Distributor Target Vs Achievement Gaurav (08 June 2015)***************************/
/********************************** Export Order Vs Supply Gaurav (29 Sep 2015)***************************/
if (isset($_GET['export_order_vs_supply'])) {

    $data = "" . $AliaseUsers['salesman'] . "\t " . $AliaseUsers['distributor'] . "\t retailer\t Item \t Order Number\t Order Quantity\t Order Value\t Dispatched Quantity\t Dispatched Value\n";


    if (isset($_SESSION['OrderDisId']) && $_SESSION['OrderDisId'] != "A") {
        $disList = " and o.distributor_id=" . $_SESSION['OrderDisId'] . " ";
    } else {

        $disList = "";

    }

    if (isset($_SESSION['retDisId']) && $_SESSION['retDisId'] != "A") {
        $retList = " and o.retailer_id=" . $_SESSION['retDisId'] . "";
    } else {

        $retList = "";

    }
    if (isset($_SESSION['SalDisList']) && $_SESSION['SalDisList'] != "") {
        $salList = " and o.salesman_id=" . $_SESSION['SalDisList'] . "";
    } else {
        $salList = "";

    }
    if (isset($_SESSION['itemDisId']) && $_SESSION['itemDisId'] != "A") {
        $itemList = " and od.item_id=" . $_SESSION['itemDisId'] . "";
    } else {
        $itemList = "";

    }
    $getSalList = $_objAdmin->_getSelectList('table_salesman as sal left join table_order as o on sal.salesman_id=o.salesman_id', 'DISTINCT(sal.salesman_id),sal.salesman_name', '', " $salList $disList $retList  and sal.status!='D' and o.order_status='D' and o.date_of_order >= '" . date('Y-m-d', strtotime(mysql_escape_string($_SESSION['FromDisList']))) . "' and o.date_of_order <= '" . date('Y-m-d', strtotime(mysql_escape_string($_SESSION['ToDisList']))) . "'  ORDER BY sal.salesman_name");
    if (sizeof($getSalList) > 0) {
        foreach ($getSalList as $salKey => $salValue) {

            $salesman_id = $salValue->salesman_id;//echo "-";
            $salesman_name = $salValue->salesman_name; //echo "<br>";

            $getSalesmanWiseOrder = $_objAdmin->_getSelectList('table_order as o', 'o.order_id', '', " o.salesman_id='" . $salesman_id . "' $disList $retList and o.date_of_order >= '" . date('Y-m-d', strtotime(mysql_escape_string($_SESSION['FromDisList']))) . "' and o.date_of_order <= '" . date('Y-m-d', strtotime(mysql_escape_string($_SESSION['ToDisList']))) . "' and o.order_status='D'");


            foreach ($getSalesmanWiseOrder as $orderKey => $orderValue) {

                $getSalesmanWiseOrderDetail = $_objAdmin->_getSelectList('table_order as o left join table_order_detail as od on od.order_id=o.order_id left join table_item as i on i.item_id=od.item_id left join table_retailer as r on r.retailer_id=o.retailer_id left join table_distributors as d on d.distributor_id=o.distributor_id ', 'i.item_name,od.quantity,od.acc_quantity,od.total,od.acc_total,r.retailer_name,d.distributor_name,o.order_id', '', " $itemList and o.order_id='" . $orderValue->order_id . "' ");

                if (sizeof($getSalesmanWiseOrderDetail) > 0) {
                    foreach ($getSalesmanWiseOrderDetail as $orderDetailKey => $orderDetailValue) {

                        $data .= "" . $salesman_name . "\t" . $orderDetailValue->distributor_name . "\t" . $orderDetailValue->retailer_name . "\t" . $orderDetailValue->item_name . "\t" . $orderDetailValue->order_id . "\t" . $orderDetailValue->quantity . "\t" . $orderDetailValue->total . "\t" . $orderDetailValue->acc_quantity . "\t" . $orderDetailValue->acc_total . "\n";
                    }
                } else {
                    $data .= "Dispatch list not available";
                }
            }
        }
    } else {
        $data .= "Dispatch list not available";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"OrderVsSupply.xls\"");
    echo $data;
    exit;
}
/********************************** Export Order Vs Supply Gaurav (29 Sep 2015)***************************/
/******************************************** Start Export Customer Geo Tagging Report
 * Maninder Kumar / Sohan
 * on: 16th May 2016
 ******************************************************************/
if (isset($_GET['export_geo_tagging_list'])) {
    $data = "Customer Name \t Customer Address \t State\t District\t Customer Status \n";
    //$divisionRec=$_objAdmin->_getSelectList2('table_division',"division_name as division,division_id",'',$condition1);
    $stateRec = $_objAdmin->_getSelectList2('state', "state_name,state_id", '', '');
    // Conditions

    $retailerActiveInactiveCond = "";


    $stateCondition = "";


    if (isset($_SESSION['activeCust']) && $_SESSION['activeCust'] != 'all') {
        $retailerActiveInactiveCond = " AND R.status='" . $_SESSION['activeCust'] . "'";

    }
    if (isset($_SESSION['stateCust']) && $_SESSION['stateCust'] != "all") {
        $stateCondition = " AND ST.state_id IN(" . $_SESSION['stateCust'] . ")";
    }
    if (isset($_SESSION['districtCust']) && $_SESSION['districtCust'] != "all") {
        $cityCondition = " AND CT.city_id IN(" . $_SESSION['districtCust'] . ")";
    }
    /*if(isset($_SESSION['tehsilCust']) && $_SESSION['tehsilCust']!="all"){
		    $talukaCondition = " AND TL.taluka_id IN(".$_SESSION['tehsilCust'].")";
		}*/
    if (!isset($_SESSION['findCust']) || $_SESSION['findCust'] == 'all' || $_SESSION['findCust'] == 'R') {
        $retailerData = $_objAdmin->_getSelectList("table_retailer AS R
    LEFT JOIN viewRetDisCusSurvey AS S1 ON S1.retailer_id = R.retailer_id 
    LEFT JOIN table_relationship as rr on rr.relationship_id=R.relationship_id     
    LEFT join state as ST on ST.state_id=R.state 
    LEFT join city as CT on CT.city_id=R.city 
    ",
            'R.retailer_id AS id, R.retailer_name AS name, R.retailer_address AS address, R.display_outlet AS outlet, R.lat_lng_capcure_accuracy AS accuracy, R.lat, R.lng, S1.lat AS survey_lat, S1.lng AS survey_lng, "Retailer" AS customer_type,rr.relationship_code,ST.state_name,CT.city_name,R.status ', '', " R.status!='D' AND (S1.lat is NOT NULL)   $retailerActiveInactiveCond  $stateCondition $cityCondition  ");
    } else {
        $retailerData = array();
    }
    /*if( !isset($_SESSION['findCust']) || $_SESSION['findCust'] == 'all' || $_SESSION['findCust'] == 'D' ) {
		$distributorData = $_objAdmin->_getSelectList("table_distributors AS D
		    LEFT JOIN viewRetDisCusSurvey AS S1 ON S1.distributor_id = D.distributor_id
		     LEFT JOIN table_relationship as rr on rr.relationship_id=D.relationship_id
		    left join table_division AS dV ON dV.division_id = D.division_id
		     left join state as ST on ST.state_id=D.state
		    left join city as CT on CT.city_id=D.city
		    left join table_taluka as TL on TL.taluka_id=D.taluka_id",
		    'D.distributor_id AS id, D.distributor_name AS name, D.distributor_address AS address, D.display_outlet AS outlet,D.lat_lng_capcure_accuracy AS accuracy, D.division_id, D.lat, D.lng, S1.lat AS survey_lat, S1.lng AS survey_lng, "Distributor" AS customer_type,dV.division_name,rr.relationship_code,ST.state_name,CT.city_name,TL.taluka_name,D.status ',''," D.status!='D' AND (S1.lat !='') $intrestedCondition $classCondition $distributorActiveInactiveCond  $divisionCondition  $stateCondition $cityCondition $talukaCondition");
		} else {
		    $distributorData  = array();
		}
		if( !isset($_SESSION['findCust']) || $_SESSION['findCust'] == 'all' || !in_array($_SESSION['findCust'], array('R','D')) ) {
		$typeCondition = "";
		//echo $_SESSION['findCust'];
		if( isset($_SESSION['findCust']) AND !in_array($_SESSION['findCust'], array('R','D', 'all'))) {
		  $typeCondition = " AND C.customer_type='".$_SESSION['findCust']."'";
		}
		$customerData = $_objAdmin->_getSelectList("table_customer AS C
		    LEFT JOIN viewRetDisCusSurvey AS S1 ON S1.customer_id = C.customer_id
		    left join table_division AS dV ON dV.division_id = C.division_id
		     left join state as ST on ST.state_id=C.state
		    left join city as CT on CT.city_id=C.city
		    left join table_taluka as TL on TL.taluka_id=C.taluka_id",
		    'C.customer_id AS id, C.customer_name AS name, C.customer_address AS address, C.display_outlet AS outlet, C.lat_lng_capcure_accuracy AS accuracy, C.division_id, C.lat, C.lng, S1.lat AS survey_lat, S1.lng AS survey_lng, C.customer_type,dV.division_name,"-" as relationship_code,ST.state_name,CT.city_name,TL.taluka_name,C.status ','',"  C.status!='D' AND (S1.lat !='' || C.lat !='') $intrestedCondition  $customerActiveInactiveCond  $divisionCondition  $stateCondition $cityCondition $talukaCondition $typeCondition ");
		} else {
		    $customerData  = array();
		}*/
    if (sizeof($retailerData) > 0 /*&& sizeof($distributorData)>0 && sizeof($customerData)>0 */) {
        /*$custData = array_merge($retailerData, $distributorData, $customerData);
		} else if(sizeof($retailerData)> 0 && sizeof($distributorData)>0 && sizeof($customerData)==0) {
		    $custData = array_merge($retailerData, $distributorData);
		} else if(sizeof($retailerData)> 0 && sizeof($distributorData)==0 && sizeof($customerData)>0) {
		    $custData = array_merge($retailerData, $customerData);
		} else if(sizeof($retailerData)== 0 && sizeof($distributorData)>0 && sizeof($customerData)>0) {
		    $custData = array_merge($distributorData, $customerData);
		} else if(sizeof($retailerData)> 0 && sizeof($distributorData)==0 && sizeof($customerData)==0) {
		    $custData = $retailerData;
		} else if(sizeof($retailerData)== 0 && sizeof($distributorData)>0 && sizeof($customerData)==0) {
		    $custData = $distributorData;
		} else if(sizeof($retailerData)== 0 && sizeof($distributorData)==0 && sizeof($customerData)>0) {*/
        $custData = $retailerData;
    }
    if (sizeof($custData) > 0) {
        foreach ($custData as $key => $value) {
            if ($value->status == "I") {
                $status = "Inactive";
            } else {
                $status = "Active";
            }
            //   	if($value->customer_type=="C"){
            //   		$customer_type="Shakti-Partner";
            // }elseif ($value->customer_type=="P") {
            // 	$customer_type="Pump Installer";
            // }elseif ($value->customer_type=="S"){
            // 	$customer_type="Solar Pumps Installer";
            // }else{
            // 	$customer_type=$value->customer_type;
            // }
            $remove = array(",", "-", "/", "_", ":", ";", "`", "!", "?");
            //$data.="".$value->name."\t".str_replace($remove,' ',$value->address)."\t".$value->division_name."\t".$value->state_name."\t".$value->city_name."\t".str_replace($remove,' ',$value->taluka_name)."\t".$value->outlet."\n";
            $data .= '"' . $value->name . '"';
            $data .= "\t";
            $data .= '"' . str_replace($remove, ' ', $value->address) . '"';
            $data .= "\t";
            $data .= '"' . $value->state_name . '"';
            $data .= "\t";
            $data .= '"' . $value->city_name . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"customer geo tagging report.xls\"");
    echo $data;
    exit;
}

/******************************************** End Start Export Customer Geo Tagging Report******************************************************************/
/***************************** Start Export Stockist ***************************************/

if (isset($_GET['export_stockist_list'])) {
//    $data = "" . $AliaseUsers['stockist'] . " Name \t " . $AliaseUsers['stockist'] . " Code \t Country\t State \t District \t City \t Address1 \t Address2 \t Zipcode \t SMS Mobile Number \t Phone Number1 \t Phone Number2 \t Phone Number3 \t Landline Number \t Contact Person1 \t Contact Person Number1 \t Contact Person2 \t Contact Person Number2 \t Contact Person3 \t Contact Person Number3 \t Email ID1 \t Email ID2 \t Email ID3\t " . $AliaseUsers['stockist'] . " Class\t " . $AliaseUsers['stockist'] . " Region\n";
    $data = "" . $AliaseUsers['stockist'] . " Name \t " . $AliaseUsers['stockist'] . " Code \tUsername\tPhone Number \t Country\tZone\tState \t District \t City \t  Zipcode \t " . $AliaseUsers['stockist'] . " Address\t Contact Person \t Contact Phone No \tEmail ID1\tStart Date\t End Date\t Status \n";
    // as told by ritu remove status codintion from stocksit export : sudhanshu : 07 march
    //Todo Start : sudhanshu 28 may 2024 : add status filet
    $statusCond = '';
    if (isset($_SESSION['stkStatus']) && $_SESSION['stkStatus'] != '') {
        $statusCond = " AND d.status='" . $_SESSION['stkStatus'] . "'";
    }
    //Todo End : sudhanshu 28 may 2024 : add status filet
    $condi = "  d.account_id='" . $_SESSION['accountId'] . "' $statusCond ORDER BY d.stockist_name ASC";
    $auRec = $_objAdmin->_getSelectList('table_stockist as d 
	left join state as s on d.state=s.state_id 
	left join table_web_users as w on w.stockist_id=d.stockist_id 
	left join city as c on d.city=c.city_id 
	left join country as con on con.country_id = d.country
	LEFT JOIN table_zone_state_mapping as szsm on szsm.state_id = d.state and szsm.account_id = d.account_id
    LEFT JOIN table_zone as sz on sz.zone_id = szsm.zone_id
    left join table_location as loc on loc.location_id = d.location 
	left join table_relationship as tr on tr.relationship_id=d.relationship_id 
	', "d.*,con.country_name,s.state_name,w.email_id,c.city_name,loc.location_name,tr.relationship_code,sz.zone_name,w.username", '', $condi);
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            //todo start : sudhanshu : add username , start date ,end date and status columns : 07 march 2024
            $start_date = $_objAdmin->_changeDate($auRec[$i]->start_date);
            $end_date = $_objAdmin->_changeDate($auRec[$i]->end_date);
            $status = ($auRec[$i]->status == 'A') ? "Active" : "Inactive";
            //todo start : sudhanshu : add username , start date ,end date and status columns : 07 march 2024
            $data .= '"' . $auRec[$i]->stockist_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->stockist_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->username . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->stockist_phone_no . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->country_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->zone_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->zipcode . '"';
            $data .= "\t";
//            $data .= '"' . $auRec[$i]->sms_number . '"';
//            $data .= "\t";
            $data .= '"' . $auRec[$i]->stockist_address . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->contact_person . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->contact_number . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->stockist_email . '"';
            $data .= "\t";
            $data .= '"' . $start_date . '"';
            $data .= "\t";
            $data .= '"' . $end_date . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
//            $data .= "\t";
//            $data .= '"' . $auRec[$i]->region_name . '"';
            $data .= "\n";


//            $data .= '"' . $auRec[$i]->stockist_address2 . '"';
//            $data .= "\t";


//            $data .= '"' . $auRec[$i]->stockist_phone_no2 . '"';
//            $data .= "\t";
//            $data .= '"' . $auRec[$i]->stockist_phone_no3 . '"';
//            $data .= "\t";
//            $data .= '"' . $auRec[$i]->stockist_leadline_no . '"';
//            $data .= "\t";


//            $data .= '"' . $auRec[$i]->contact_person2 . '"';
//            $data .= "\t";
//            $data .= '"' . $auRec[$i]->contact_number2 . '"';
//            $data .= "\t";
//            $data .= '"' . $auRec[$i]->contact_person3 . '"';
//            $data .= "\t";
//            $data .= '"' . $auRec[$i]->contact_number3 . '"';
//            $data .= "\t";

//            $data .= '"' . $auRec[$i]->stockist_email2 . '"';
//            $data .= "\t";
//            $data .= '"' . $auRec[$i]->stockist_email3 . '"';
//            $data .= "\t";
//            $data .= '"' . $auRec[$i]->relationship_code . '"';
//            $data .= "\t";

        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['stockist'] . "_list.xls\"");
    echo $data;
    exit;
}

/************************* End Export Stockist *********************************************/
/***************************** Start Export Company Stock ***************************************/

if (isset($_GET['export_company_stock_list'])) {
    $data = "Category Name \tBrand Name \t Item Name \t Item Code \t Cases Size \tQuantity (In Cases)\tQuantity (In Pcs.)\t Stock Value \t Last Update Date \n";

    //Added condition for role based access at brand lavel.
    $RoleBrands = $_objAdmin->getUserRoleBrand();
    $brandCnd = '';
    if (!empty($RoleBrands)) {
        $brandCnd = " b.brand_id IN(" . $RoleBrands . ")";
    }

    $auRec = $_objAdmin->_getSelectList('table_item_ndc_stock AS s 
		LEFT JOIN table_item_case_relationship AS icr ON icr.item_id = s.item_id
		LEFT JOIN table_cases AS clr ON clr.case_id = icr.case_id
		LEFT JOIN table_category AS c ON c.category_id = s.category_id
		LEFT JOIN table_item AS i ON i.item_id = s.item_id
        LEFT JOIN table_price AS P ON P.item_id = i.item_id
		left join table_color as col on col.color_id = s.color_id
		left join table_brands as b on b.brand_id = i.brand_id
		', "c.category_name,b.brand_name, clr.case_description, clr.case_size, 
		i.item_name, i.item_code, s.stock_value, s.last_updated_date,s.stock_id, col.color_code,P.item_dp as item_mrp",
        "", $brandCnd . " ORDER BY s.last_updated_date desc");
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {

            $company_stock_value = 0;
            if ($auRec[$i]->stock_value > 0) {
                $company_stock_value = ($auRec[$i]->stock_value * $auRec[$i]->item_mrp);
            }
            if ($auRec[$i]->case_size != '') {
                $qty_in_cases = round(($auRec[$i]->stock_value / $auRec[$i]->case_size), 2);;
            } else {
                $qty_in_cases = '';
            }
            $data .= '"' . $auRec[$i]->category_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->brand_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->case_size . '"';
            $data .= "\t";
            $data .= '"' . $qty_in_cases . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->stock_value . '"';
            $data .= "\t";
            $data .= '"' . $company_stock_value . '"';
            $data .= "\t";
            // $data .= '"' . $auRec[$i]->color_code . '"';
            // $data .= "\t";
            $data .= '"' . $auRec[$i]->last_updated_date . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"company_stock_list.xls\"");
    echo $data;
    exit;
}

/************************* End Export Company Stock *********************************************/
/***************************** Start Export Stockist Stock ***************************************/

if (isset($_GET['export_stockist_stock_list'])) {
    $data = "" . $AliaseUsers['stockist'] . " Name \t " . $AliaseUsers['stockist'] . " Code \t Category Name\t Brand Name \t Item Name \t Item Code \t Cases Size \t Quantity (In Cases)\t Quantity (In Pcs.)\tStock Value \t Last Update Date \n";
    if ($_SESSION['stockistId'] != "" && $_SESSION['stockistId'] != "0") {
        $dis = " s.stockist_id='" . $_SESSION['stockistId'] . "'";
    }

    //Added condition for role based access at brand lavel.
    $RoleBrands = $_objAdmin->getUserRoleBrand();
    $brandCnd = '';
    if (!empty($RoleBrands)) {
        $brandCnd = " b.brand_id IN(" . $RoleBrands . ") ";
    }
    //Todo Start : Sudhanshu 10 May 2024 : add stockist filter
    if ($_SESSION['stockist_id'] != "" && $_SESSION['stockist_id'] > 0) {
        $dis = " and s.stockist_id='" . $_SESSION['stockist_id'] . "'";
    }
    //Todo End : Sudhanshu 10 May 2024 : add stockist filter
    $where = $brandCnd;
    $auRec = $_objAdmin->_getSelectList('table_item_stockist_stock AS s
		LEFT JOIN table_item_case_relationship AS icr ON icr.item_id = s.item_id
		LEFT JOIN table_cases AS clr ON clr.case_id = icr.case_id
		LEFT JOIN table_category AS c ON c.category_id = s.category_id
		LEFT JOIN table_item AS i ON i.item_id = s.item_id
        LEFT JOIN table_price as p ON p.item_id = i.item_id
		left join table_brands as b on b.brand_id = i.brand_id
		LEFT JOIN table_stockist AS d ON d.stockist_id = s.stockist_id
		LEFT JOIN table_color AS col ON col.color_id = s.color_id', "d.stockist_name, d.stockist_code, c.category_name, 
		clr.case_size, i.item_name, i.item_code,b.brand_name, s.stockist_stock_value, s.status, s.last_update_datetime,s.stockist_stk_id,
		col.color_code,p.stockist_price,p.item_dp as item_mrp", "", $where . $dis . ' GROUP BY s.stockist_id, s.item_id,s.attribute_value_id,s.color_id ORDER BY d.stockist_name ASC');
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {

            $stockist_stock_price_value = 0;
            if ($auRec[$i]->stockist_stock_value > 0) {
                if ($auRec[$i]->stockist_price > 0) {
                    $price = $auRec[$i]->stockist_price;
                } else {
                    $price = $auRec[$i]->item_mrp;
                }

                $stockist_stock_price_value = ($auRec[$i]->stockist_stock_value * $price);
            }

            $case_qty = round(($auRec[$i]->stockist_stock_value / $auRec[$i]->case_size), 2);


            $data .= '"' . $auRec[$i]->stockist_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->stockist_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->category_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->brand_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->case_size . '"';
            $data .= "\t";
            $data .= '"' . $case_qty . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->stockist_stock_value . '"';
            $data .= "\t";
            $data .= '"' . $stockist_stock_price_value . '"';
            $data .= "\t";
            // $data .= '"' . $auRec[$i]->color_code . '"';
            // $data .= "\t";
            $data .= '"' . $auRec[$i]->last_update_datetime . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"stockist_stock_list.xls\"");
    echo $data;
    exit;
}

/************************* End Export Stockist Stock *********************************************/
/***************************** Start Export Distributor Stock ***************************************/

if (isset($_GET['export_distributor_stock_list'])) {
    $data = "" . $AliaseUsers['distributor'] . " Name \t " . $AliaseUsers['distributor'] . " Code \t Category Name\t Brand Name \t Item Name \t Item Code \t Cases Size \tQuantity (In Cases)\t Quantity (In Pcs.)\t Stock Value \t Last Update Date \n";
    if ($_SESSION['distributorId'] != "" && $_SESSION['distributorId'] != "0") {
        $dis = " and d.distributor_id='" . $_SESSION['distributorId'] . "'";
    }
    if ($_SESSION['stockistId'] != "" && $_SESSION['stockistId'] != "0") {
//        $dis = " and d.stockist_id='" . $_SESSION['stockistId'] . "'";
        //Todo Start : sudhanshu 09 may 2024 : multi stockist
        $_objArrayList = new ArrayList();
        $mapedDis = $_objArrayList->getDistributorMultiStockistMapped();
        if ($mapedDis != '') {
            $dis = " and d.distributor_id IN (" . $mapedDis . ")";
        }
        //Todo End : sudhanshu 09 may 2024 : multi stockist
    }
    //Todo Start: Sudhanshu 10 may 2024 : add distributor filter
    if (isset($_SESSION['disId']) && $_SESSION['disId'] > 0) {
        $dis = " and d.distributor_id='" . $_SESSION['disId'] . "'";
    }
    //Todo Start: Sudhanshu 10 may 2024 : add distributor filter
    //Added condition for role based access at brand lavel.
    $RoleBrands = $_objAdmin->getUserRoleBrand();
    $brandCnd = '';
    if (!empty($RoleBrands)) {
        $brandCnd = " b.brand_id IN(" . $RoleBrands . ")";
    }
    $where = $brandCnd;

    $auRec = $_objAdmin->_getSelectList('table_item_distributor_stock AS s 
		LEFT JOIN table_item_case_relationship AS icr ON icr.item_id = s.item_id
		LEFT JOIN table_cases AS clr ON clr.case_id = icr.case_id
		LEFT JOIN table_category AS c ON c.category_id = s.category_id
		LEFT JOIN table_item AS i ON i.item_id = s.item_id
		 LEFT JOIN table_price AS p ON p.item_id = i.item_id
		left join table_brands as b on b.brand_id = i.brand_id
		LEFT JOIN table_distributors AS d ON d.distributor_id = s.distributor_id
		LEFT JOIN table_color AS col ON col.color_id = s.color_id', "d.distributor_name, d.distributor_code, b.brand_name,c.category_name,
		clr.case_size, i.item_name, i.item_code, s.dis_stock_value, s.status, s.last_update_datetime,s.dis_stk_id,
		col.color_code,p.dist_price,p.item_dp as item_mrp", "", $where . $dis . ' GROUP BY s.distributor_id, s.item_id,s.attribute_value_id, s.color_id ORDER BY c.category_name ASC');
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {

            $case_qty = round(($auRec[$i]->dis_stock_value / $auRec[$i]->case_size), 2);
            $dis_stock_price_value = 0;
            if ($auRec[$i]->dis_stock_value > 0) {
                if ($auRec[$i]->dist_price > 0) {
                    $price = $auRec[$i]->dist_price;
                } else {
                    $price = $auRec[$i]->item_mrp;
                }

                $dis_stock_price_value = ($auRec[$i]->dis_stock_value * $price);
            }

            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->category_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->brand_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->case_size . '"';
            $data .= "\t";
            $data .= '"' . $case_qty . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->dis_stock_value . '"';
            $data .= "\t";
            $data .= '"' . $dis_stock_price_value . '"';
            $data .= "\t";
            // $data .= '"' . $auRec[$i]->color_code . '"';
            // $data .= "\t";
            $data .= '"' . $_objAdmin->_changeDate($auRec[$i]->last_update_datetime) . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Distributor_stock_list.xls\"");
    echo $data;
    exit;
}

/************************* End Export Distributor Stock *********************************************/
/************************* Start Export Salesman Summery Report *********************************************/
if (isset($_REQUEST['export_salesman_summary_report'])) {
    $itemList = $_objAdmin->_getSelectList('table_item', 'item_id, item_name', '', " status= 'A' ORDER BY item_name");
    $salCond = "";
    if ($_SESSION['salRepID'] != "") {
        $salCond = " AND s.salesman_id = '" . $_SESSION['salRepID'] . "' ";
    } else {
        $salCond = $_SESSION['salsInCondi'];
    }
    // $salArr = $_objAdmin->_getSelectList('table_salesman AS s ',' s.salesman_id, s.salesman_name',''," s.status='A' AND s.salesman_id>0 AND s.salesman_name !='' $salCond ORDER BY s.salesman_name");
    $salArr = $_objAdmin->_getSelectList('table_salesman AS s 
	LEFT join state as st on st.state_id = s.state
	left join city as ci on ci.city_id = s.city
	LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
	LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
	LEFT JOIN table_salesman_hierarchy AS H2 ON H2.hierarchy_id = SH.rpt_hierarchy_id
	LEFT JOIN table_salesman AS S2 ON S2.salesman_id = SH.rpt_user_id
	', ' s.salesman_id, s.salesman_name,s.employee_code, H.description AS des1, H2.description AS des2, S2.salesman_name AS rptPerson, st.state_name, ci.city_name', '', " s.status='A' AND s.salesman_id>0 AND s.salesman_name !='' $salCond ORDER BY s.salesman_name");
    if (is_array($salArr)) {
        foreach ($salArr as $value) {
            // $salesmanList[$value->salesman_id] = array('salesman_id'=>$value->salesman_id, 'salesman_name'=>$value->salesman_name);
            $salesmanList[$value->salesman_id] = array('salesman_id' => $value->salesman_id, 'employee_code' => $value->employee_code, 'salesman_name' => $value->salesman_name, 'des1' => $value->des1, 'des2' => $value->des2, 'rptPerson' => $value->rptPerson, 'state_name' => $value->state_name, 'city_name' => $value->city_name);
            if ($_SESSION['salRepID'] != "") {
                $sal_name = $value->salesman_name;
            } else {
                $sal_name = 'All';
            }
        }
    } else {
        $salArr = "";
    }
    $data = " " . $AliaseUsers['salesman'] . " Code\t" . $AliaseUsers['salesman'] . " Name \t Designation \t Reporting To \t Reporting Person \t State \t City  \t Date \t".$AliaseUsers['route']." Name \t Planned Customers \t Visited Customers \t No. of Customer Placed Order \t No. of New Customer Added ";
    foreach ($itemList as $key => $value) {
        $data .= " \t " . $value->item_name;
    }
    $data .= " \t Total \n";
    $startTime = strtotime($_SESSION['FromAttList']);
    $endTime = strtotime($_SESSION['ToAttList']);
    $dateArr = array();
    for ($i = $startTime; $i <= $endTime; $i = $i + 86400) {
        $dateArr[date('Y-m-d', $i)] = date('Y-m-d', $i);
    }
    $remove = array("\n", "\r", "\r\n", "\t", ",");
    $account_id = $_SESSION['accountId'];
    $featureList = $_objAdmin->getAccountFeaturesList($account_id);
    foreach ($dateArr as $dateKey => $DateValue) {
        foreach ($salesmanList as $salKey => $SalValue) {
            $salesman_code = $SalValue['employee_code'];
            $salesman_name = $SalValue['salesman_name'];
            $salesman_id = $SalValue['salesman_id'];
            $des1 = $SalValue['des1'];
            $des2 = $SalValue['des2'];
            $rptPerson = $SalValue['rptPerson'];
            $state_name = $SalValue['state_name'];
            $city_name = $SalValue['city_name'];
            $RouteNameArray = array();
            $RouteIDArray = array();
            $RetailerIDArray = array();
            $totalVisits = 0;
            if (count($featureList) > 0 && in_array(94, $featureList)) {
                $routeData = $_objAdmin->_getSelectList("table_route_scheduled as sd 
                                left join table_route_schedule_details as d on sd.route_schedule_id=d.route_schedule_id 
                                left join table_route as r on r.route_id=d.route_id", 'd.route_id,r.route_name', '', " sd.status='A' AND r.status='A' and  sd.month='" . date('n', strtotime($dateKey)) . "' and  sd.year='" . date('Y', strtotime($dateKey)) . "' and sd.salesman_id='" . $salKey . "' and d.assign_day='" . date('j', strtotime($dateKey)) . "' ");
            } else if (count($featureList) > 0 && in_array(95, $featureList)) {
                $routeData = $_objAdmin->_getSelectList("table_salesman_retailer_assignment as rs
		left join table_salesman_retailer_assignment_details as rsd on rs.route_schedule_id=rsd.route_schedule_id ", 'COUNT(DISTINCT rsd.retailer_id) as ttlRetailersOnRoute', '', " rsd.assign_day='" . date('j', strtotime($dateKey)) . "' and rs.salesman_id = '" . $salKey . "' and rs.month='" . date('n', strtotime($dateKey)) . "' and rs.year='" . date('Y', strtotime($dateKey)) . "' and rs.status='A' and rsd.status='A' GROUP BY rsd.assign_day");
            } else {
                $day = date('D', strtotime($dateKey));
                $routeData = $_objAdmin->_getSelectList("table_route_schedule AS RS
                                        LEFT JOIN table_route_schedule_by_day AS RSD ON RSD.route_schedule_id = RS.route_schedule_id
                                        LEFT JOIN table_route AS R ON R.route_id = RSD.$day", 'RS.route_schedule_id, R.route_id, R.route_name', '', " RS.from_date <= '" . $dateKey . "' AND RS.to_date >= '" . $dateKey . "' AND RS.salesman_id = '" . $salKey . "' AND RSD.$day > 0 AND R.status = 'A'");
            }
//            $day = date('D',strtotime($dateKey));
//            $routeData = $_objAdmin->_getSelectList2("table_route_schedule AS RS
//				LEFT JOIN table_route_schedule_by_day AS RSD ON RSD.route_schedule_id = RS.route_schedule_id
//				LEFT JOIN table_route AS R ON R.route_id = RSD.$day",'RS.route_schedule_id, R.route_id, R.route_name',''," RS.from_date <= '".$dateKey."' AND RS.to_date >= '".$dateKey."' AND RS.salesman_id = '".$salKey."' AND RSD.$day > 0 AND R.status = 'A'");
            if (is_array($routeData) && !empty($routeData)) {
//                foreach ($routeData as $RoKey => $Rvalue)
//                {
//                    $RouteNameArray[] =  $Rvalue->route_name;
//                    $RouteIDArray[] =  $Rvalue->route_id;
//                }
//                $route_name = implode(',',$RouteNameArray);
//                $route_id = implode(',',$RouteIDArray);
//                $routeRetailers = $_objAdmin->_getSelectList2("table_route_retailer AS rr
//					LEFT JOIN table_retailer as r on r.retailer_id = rr.retailer_id",'DISTINCT(rr.retailer_id) AS retailer_id',''," rr.route_id IN($route_id) AND r.status ='A' ");
//                foreach ($routeRetailers as $Routekey => $routeValue) {
//                    $RetailerIDArray[] =  $routeValue->retailer_id;
//                }
//                $encodeDate = base64_encode($dateKey);
//                $sal_id = base64_encode($salKey);
//                /*$reatilersOnRoute = "<a href='salesman_summary_details.php?date=$encodeDate&sal_id=$sal_id' target='_blank'>".count($RetailerIDArray).'</a>';*/
//                $reatilersOnRoute = count($RetailerIDArray);
//                $retailer_id = implode(',',$RetailerIDArray);
                if (in_array(94, $featureList) || in_array(93, $featureList)) {
                    foreach ($routeData as $RoKey => $Rvalue) {
                        $RouteNameArray[] = $Rvalue->route_name;
                        $RouteIDArray[] = $Rvalue->route_id;
                    }
                    $route_name = implode(', ', $RouteNameArray);
                    $route_id = implode(',', $RouteIDArray);
                    $routeRetailers = $_objAdmin->_getSelectList("table_route_retailer AS rr 
                                            LEFT JOIN table_retailer as r on r.retailer_id = rr.retailer_id", 'DISTINCT(rr.retailer_id) AS retailer_id', '', " rr.route_id IN($route_id) AND r.status ='A' ");
                    foreach ($routeRetailers as $Routekey => $routeValue) {
                        $RetailerIDArray[] = $routeValue->retailer_id;
                    }
                    $reatilersOnRoute = count($RetailerIDArray);
                } else {
                    $reatilersOnRoute = $routeData[0]->ttlRetailersOnRoute;
                    $route_name = '-';
                }
                $ActivtiyRes = $_objAdmin->_getSelectList2("table_activity as A 
					LEFT JOIN table_order as O on O.order_id = A.ref_id and A.activity_type = 3 
					LEFT JOIN table_retailer as R on R.retailer_id = A.ref_id AND A.activity_type = 4 
					LEFT JOIN table_retailer as R1 on R1.retailer_id = A.ref_id AND A.activity_type = 5 
					LEFT JOIN table_retailer AS COMRET ON COMRET.retailer_id = O.retailer_id OR COMRET.retailer_id = R.retailer_id OR COMRET.retailer_id = R1.retailer_id ", 'COUNT(DISTINCT(O.retailer_id)) as total_retailer_placed_order, COUNT(DISTINCT(R1.retailer_id)) as total_newadded_retailers, COUNT(DISTINCT(COMRET.retailer_id)) AS ttlVisitedRetailer', '', " A.activity_date ='" . $dateKey . "' AND A.activity_type IN(3,4,5) AND A.salesman_id='" . $salKey . "' ");
                $OrderRes = $_objAdmin->_getSelectList2("table_order as o 
										inner join table_retailer as rr on rr.retailer_id = o.retailer_id", 'COUNT(DISTINCT(rr.retailer_id)) as ttl_retailer_placed_order', '', " o.date_of_order ='" . $dateKey . "' AND  o.salesman_id='" . $salKey . "' AND rr.retailer_id>0 AND o.order_type !='No' ");
                if (is_array($OrderRes) && sizeof($OrderRes) > 0) {
                    $total_retailer_placed_order = $OrderRes[0]->ttl_retailer_placed_order;
                } else {
                    $total_retailer_placed_order = '-';
                }
                $ttlVisitedRetailer = $ActivtiyRes[0]->ttlVisitedRetailer;
                // $total_retailer_placed_order = $ActivtiyRes[0]->total_retailer_placed_order;
                $total_newadded_retailers = $ActivtiyRes[0]->total_newadded_retailers;
            } else {
                $route_name = 'Route Not Assign';
                $reatilersOnRoute = '-';
                $ttlVisitedRetailer = '-';
                $total_retailer_placed_order = '-';
                $total_newadded_retailers = '-';
                // $RetNotTakingOrderLink = '-';
            }
            $data .= $salesman_code;
            $data .= "\t";
            $data .= $salesman_name;
            $data .= "\t";
            $data .= $des1;
            $data .= "\t";
            $data .= $des2;
            $data .= "\t";
            $data .= $rptPerson;
            $data .= "\t";
            $data .= $state_name;
            $data .= "\t";
            $data .= $city_name;
            $data .= "\t";
            $data .= $_objAdmin->_changeDate($dateKey);;
            $data .= "\t";
            $data .= str_replace($remove, " ", $route_name);
            $data .= "\t";
            $data .= $reatilersOnRoute;
            $data .= "\t";
            $data .= $ttlVisitedRetailer;
            $data .= "\t";
            $data .= $total_retailer_placed_order;
            $data .= "\t";
            $data .= $total_newadded_retailers;
            $odrData = $_objAdmin->_getSelectList2('table_order as o 
									inner join table_retailer as rr on rr.retailer_id = o.retailer_id
									left join table_order_detail as od on od.order_id = o.order_id 
									left join table_salesman as s on s.salesman_id = o.salesman_id 
									left join table_item as i on i.item_id = od.item_id
									left join table_category as c on c.category_id = i.category_id', 'o.order_id, o.salesman_id, o.date_of_order, c.category_id, SUM(od.acc_quantity) as acc_quantity, i.item_id', '', " o.date_of_order = '" . $dateKey . "' AND o.salesman_id = '" . $salKey . "' AND rr.retailer_id >0 GROUP BY i.item_id ORDER BY i.item_name");
            $dataSet = array();
            foreach ($odrData as $odrKey => $odrValue) {
                $dataSet[$odrValue->item_id] = $odrValue;
            }
            $acc_quantity = 0;
            $total = 0;
            foreach ($itemList as $key => $value) {
                if (isset($dataSet[$value->item_id])) {
                    $acc_quantity = $dataSet[$value->item_id]->acc_quantity;
                    $total = $total + $acc_quantity;
                } else {
                    $acc_quantity = 0;
                }
                $data .= "\t";
                $data .= $acc_quantity;
            }
            $data .= "\t";
            $data .= $total;
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['salesman'] . " Summary.xls\"");
    echo $data;
    exit;
}
/* Export call punch functionality */
if (isset($_GET['export_call_punch_report'])) {
    $data = "From Date: " . $_SESSION['FromOrderList'] . "\t To Date: " . $_SESSION['ToOrderList'] . "\n";
    $data .= "Activity Date\t Activity Time\t" . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['salesman'] . " Code\tCall Type\t " . $AliaseUsers['retailer'] . " Name\t " . $AliaseUsers['retailer'] . " Code\tCustomer Designation\t" . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\t" . $AliaseUsers['retailer'] . " Class\tZone\tState\tContact Person Name\tContact Number\t Contact Number2\t Customer Email\t Category\t Detail Discussion\t Next Step Plan\t Reminder Date\tReminder Time\tReminder Remark\tPhoto Count\n";
    $sort = " GROUP BY ca.cust_activity_id ORDER BY ca.app_date DESC";

    if (isset($_SESSION['call_salesman_id']) && $_SESSION['call_salesman_id'] != '') {
        $salesman = " AND s.salesman_id IN (" . $_SESSION['call_salesman_id'] . ")";
    } else {
        $_objArrayList = new ArrayList();
        $salsList = $_objArrayList->SalesmanArrayList();
        $salesman = $_objArrayList->getSalesCondition($salsList);
    }
    if (isset($_SESSION['state']) && $_SESSION['state'] != "") {
        $where .= " r.state='" . $_SESSION['state'] . "' ";
    }
    $where .= ' AND ca.cust_action_id=2';
    if ($_SESSION['FromOrderList'] != '') {
        $fromdate = "'" . date('Y-m-d', strtotime($_SESSION['FromOrderList'])) . "'";
    } else {
        $fromdate = "'" . date('Y-m-d') . "'";
    }
    if ($_SESSION['ToOrderList'] != '') {
        $todate = "'" . date('Y-m-d', strtotime($_SESSION['ToOrderList'])) . "'";
    } else {
        $todate = "'" . date('Y-m-d') . "'";
    }

    $where .= " AND ca.app_date >=" . $fromdate . " AND ca.app_date <=" . $todate . " ";
//		$auRec=$_objAdmin->_getSelectList('table_customer_activity AS ca
//			LEFT JOIN table_customer_activity_detail AS cad ON cad.cust_activity_id = ca.cust_activity_id LEFT JOIN table_retailer AS r ON ca.retailer_id = r.retailer_id LEFT JOIN table_relationship as rel on rel.relationship_id=r.relationship_id LEFT JOIN table_retailer_channel_master as rc on rc.channel_id = r.channel_id LEFT JOIN state as st on st.state_id=r.state LEFT JOIN table_customer AS c ON ca.customer_id = c.customer_id LEFT JOIN table_designation AS d ON c.designation_id = d.designation_id
//			LEFT JOIN table_salesman AS s ON ca.salesman_id = s.salesman_id
//			LEFT JOIN table_tags AS t ON ca.tag_id = t.tag_id LEFT JOIN table_master_call as mc on mc.master_call_id=ca.master_call_id',"ca.cust_activity_id,ca.category_id,ca.color_id,ca.status,r.retailer_name,rel.relationship_desc,st.state_name,c.customer_name,c.customer_phone_no,c.customer_phone_no2, c.customer_email,d.designation_name, t.tag_description,ca.reminder_date,ca.reminder_time,ca.reminder_remark, ca.comments, ca.last_updated_on, ca.app_date,ca.app_time, ca.status, s.salesman_name, count(cad.cust_activity_id) as total_item, mc.call_type,rc.channel_name",$rp,$where.$salesman.$sort,'');
    $auRec = $_objAdmin->_getSelectList('table_customer_activity AS ca 
			LEFT JOIN table_customer_activity_detail AS cad ON cad.cust_activity_id = ca.cust_activity_id 
			LEFT JOIN table_retailer AS r ON ca.retailer_id = r.retailer_id
			LEFT JOIN table_distributors as dd on dd.distributor_id = r.distributor_id
			LEFT JOIN table_relationship as rel on r.relationship_id=rel.relationship_id 
			LEFT JOIN state as st on st.state_id=r.state 
			LEFT JOIN table_customer AS c ON ca.customer_id = c.customer_id 
			LEFT JOIN table_designation AS d ON c.designation_id = d.designation_id 
			LEFT JOIN table_salesman AS s ON ca.salesman_id = s.salesman_id 
			LEFT JOIN table_next_step_master AS t ON ca.tag_id = t.next_step_id
			LEFT JOIN table_zone_state_mapping as szsm on szsm.state_id = r.state and szsm.account_id = r.account_id
            LEFT JOIN table_zone as sz on sz.zone_id = szsm.zone_id 
			LEFT JOIN table_master_call as mc on mc.master_call_id=ca.master_call_id', "ca.cust_activity_id,ca.category_id,ca.color_id,ca.status,r.retailer_name,r.retailer_code,rel.relationship_desc,st.state_name,dd.distributor_name,dd.distributor_code,c.customer_name, c.customer_phone_no,c.customer_phone_no2, c.customer_email,d.designation_name, t.next_step as tag_description,ca.reminder_date,ca.reminder_time,ca.reminder_remark, ca.comments, ca.last_updated_on, ca.app_date,ca.app_time, ca.status, s.salesman_name,s.employee_code,count(cad.cust_activity_id) as total_item, mc.call_type,sz.zone_name,ca.photo_count", '', $where . $salesman . $sort);
    for ($i = 0; $i < count($auRec); $i++) {
        $category_name = '';
        $category_id = $auRec[$i]->category_id;
        if (!empty($category_id)) {
            $where = "c.category_id IN ($category_id) ";
            $categoryData = $_objAdmin->_getSelectList2("table_category AS c", 'c.category_id, c.category_name', '', "$where");
            if (is_array($categoryData) && !empty($categoryData)) {
                $CatNameArray = [];
                foreach ($categoryData as $CKey => $Cvalue) {
                    $CatNameArray[$CKey] = $Cvalue->category_name;
                }
                $category_name = implode(',', $CatNameArray);
            }
        }
        // $color_code ='';
        // $color_id = $auRec[$i]->color_id;
        // if(!empty($color_id)){
        // 	$where="co.color_id IN ($color_id) ";
        // 	$colorData = $_objAdmin->_getSelectList2("table_color AS co",'co.color_id, co.color_code','',"$where");
        // 	if(is_array($colorData) && !empty($colorData)) {
        // 		$ColNameArray = [];
        //            foreach ($colorData as $CoKey => $Covalue) {
        //                $ColNameArray[$CoKey] =  $Covalue->color_code;
        //            }
        //             $color_code = implode(',', $ColNameArray);
        // 	}
        // }
//        $status=($auRec[$i]->status=='A')?"Active":"Inactive";
        $remDate = '';
        if ($auRec[$i]->reminder_date != '0000-00-00') {
            $remDate = $auRec[$i]->reminder_date;
        }
        $remTime = '';
        if ($auRec[$i]->reminder_time != '00:00:00') {
            $remTime = $auRec[$i]->reminder_time;
        }
        $data .= '"' . $_objAdmin->_changeDate($auRec[$i]->app_date) . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->app_time . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->salesman_name . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->employee_code . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->call_type . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->retailer_name . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->retailer_code . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->designation_name . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->distributor_name . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->distributor_code . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->relationship_desc . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->zone_name . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->state_name . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->customer_name . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->customer_phone_no . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->customer_phone_no2 . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->customer_email . '"';
        $data .= "\t";
        // $data.= '"'.$auRec[$i]->total_item.'"';
        // $data.= "\t";
        $data .= '"' . str_replace(',', ' , ', $category_name) . '"';
        $data .= "\t";
        // $data.= '"'.str_replace(',', ' , ', $color_code).'"';
        // $data.= "\t";
        $data .= '"' . $auRec[$i]->comments . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->tag_description . '"';
        $data .= "\t";
        $data .= '"' . $remDate . '"';
        $data .= "\t";
        $data .= '"' . $remTime . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->reminder_remark . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->photo_count . '"';
        $data .= "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Call_Punch_Report.xls\"");
    echo $data;
    exit;
}
/******************* Start Export Retailer Message ******************/
if (isset($_GET['export_retailer_message'])) {
    $data = "" . $AliaseUsers['retailer'] . " Name \t Subject \t Message\t Reply\t Send Date\n";
    $condi = " rm.status='A' and r.account_id=" . $_SESSION['accountId'] . " order by rm.message_id desc ";
    $auRec = $_objAdmin->_getSelectList2('table_ret_message as rm left join table_retailer as r on r.retailer_id=rm.retailer_id', "rm.*,r.retailer_name ", '', $condi);
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $remove = array("\n", "\r\n", "\r");
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->subject . '"';
            $data .= "\t";
            $data .= '"' . str_replace($remove, ' ', $auRec[$i]->message) . '"';
            $data .= "\t";
            $data .= '"' . str_replace($remove, ' ', $auRec[$i]->reply) . '"';
            $data .= "\t";
            $data .= '"' . $_objAdmin->_changeDate($auRec[$i]->send_date) . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"retailer_message_list.xls\"");
    echo $data;
    exit;
}
/******************* End Export Retailer Message ******************/
/************************* Start Export Distributor Stock *********************************************/
if (isset($_GET['export_distributor_stock'])) {
    $data = " " . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['salesman'] . " Code\t" . $AliaseUsers['distributor'] . " Code \t" . $AliaseUsers['distributor'] . " Name \t Zone\tState  \tDistrict\t City \t Item Name \t Item Code\t Category\t Brand Name \t Comment \t Stock ID \t Stock Quantity \t Date \t Time \n";

    $distributorId = "";
    $stateId = "";
    $location_id = '';
    if ($_SESSION['FromDate'] != '') {
        $fromdate = "  ods.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['FromDate'])) . "'";
    } else {
        $fromdate = "  ods.date_of_order >= '" . date('Y-m-d') . "'";
    }

    if ($_SESSION['ToDate'] != '') {
        $todate = " and ods.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToDate'])) . "'";
    } else {
        $todate = " and ods.date_of_order <= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['distributor_ID'] != '' && $_SESSION['distributor_ID'] != 'All') {
        $distributorId = " and d.distributor_id='" . $_SESSION['distributor_ID'] . "'";
    } else if ($_SESSION['stockistId'] != "" && $_SESSION['stockistId'] != "0") {
        $distributorId = " and d.stockist_id='" . $_SESSION['stockistId'] . "'";
    }
    if ($_SESSION['Disstate'] != '') {
        $stateId = " and st.state_id='" . $_SESSION['Disstate'] . "'";
    }
    if ($_SESSION['Dislocation_id'] != '') {
        $location_id = " and d.city = '" . $_SESSION['Dislocation_id'] . "'";
    }
    $_objArrayList = new ArrayList();
    $salsList = $_objArrayList->SalesmanArrayList();
    $salesman = $_objArrayList->getSalesCondition($salsList);

    $RoleBrands = $_objAdmin->getUserRoleBrand();
    $brandCnd = '';
    if (!empty($RoleBrands)) {
        $brandCnd = " and b.brand_id IN(" . $RoleBrands . ")";
        $salesman = '';
    }


    $where = " $fromdate  $todate $distributorId $stateId $location_id $salesman $brandCnd and d.distributor_name!='' ";
    $auRec = $_objAdmin->_getSelectList('table_order_distributor_stock as ods 
  		inner join table_order_detail_distributor_stock as ods_detail on ods.stock_id=ods_detail.stock_id 
  		left join table_distributors as d on d.distributor_id=ods.distributor_id 
  		left join state as st on st.state_id=d.state left join city as ci on ci.city_id=d.city
  		LEFT JOIN table_zone_state_mapping as szsm on szsm.state_id = d.state and szsm.account_id = d.account_id
        LEFT JOIN table_zone as sz on sz.zone_id = szsm.zone_id
        left join table_location as loc on loc.location_id=d.location
  		left join table_item as i on i.item_id=ods_detail.item_id
		LEFT JOIN table_brands AS b ON b.brand_id=i.brand_id
  		left join table_category as c on c.category_id=i.category_id
  		left join table_salesman as s on s.salesman_id=ods.salesman_id',
        "ods.*,ods_detail.*,d.distributor_id,d.distributor_name,d.distributor_code,i.item_name,i.item_id,i.item_code,b.brand_name,sz.zone_name ,
		c.category_name,c.category_id,st.state_id,st.state_name,ci.city_name,ci.city_id ,s.salesman_id,s.salesman_name,s.employee_code,loc.location_name", "", $where . ' ORDER BY  ods.date_of_order ASC');
    //echo "<pre>";print_r($auRec);die;
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->zone_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->category_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->brand_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->comments . '"';
            $data .= "\t";
            // geeta changes
            $data .= '"' . $auRec[$i]->stock_id . '"';
            $data .= "\t";
            // end geeta changes
            $data .= '"' . $auRec[$i]->openning_stock_volume . '"';
            $data .= "\t";
            $data .= '"' . $_objAdmin->_changeDate($auRec[$i]->date_of_order) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->time_of_order . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['distributor'] . "_stock_list.xls\"");
    echo $data;
    exit;
}
/************************* End Export Distributor Stock *********************************************/
/***********************************Start Export Distributor Primary Stock************************/
if (isset($_GET['export_distributor_primary_stock'])) {

    $data = "" . $AliaseUsers['distributor'] . " Name \t" . $AliaseUsers['distributor'] . " Code\t Date Of Order \t Time of Order\tTotal Invoice Amount\tTotal No Of items\tOrder Qty\t Zone \t State \t District \t City \t" . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['salesman'] . " Code\t Reporting To\tPhoto Count \n";

    $distributorId = "";
    $stateId = "";
    $location_id = '';
    if ($_SESSION['FromDate'] != '') {
        $fromdate = " ods.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['FromDate'])) . "'";
    } else {
        $fromdate = " ods.date_of_order >= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['ToDate'] != '') {
        $todate = " and ods.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToDate'])) . "'";
    } else {
        $todate = " and ods.date_of_order <= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['disID'] != '' & $_SESSION['disID'] != 'All') {
        $distributorId = " and d.distributor_id='" . $_SESSION['disID'] . "'";
    } else if ($_SESSION['stockistId'] != "" && $_SESSION['stockistId'] != "0") {
        $distributorId = " and d.stockist_id='" . $_SESSION['stockistId'] . "'";
    }
    if ($_SESSION['Disstate'] != '') {
        $stateId = " and st.state_id='" . $_SESSION['Disstate'] . "'";
    }
    if ($_SESSION['Dislocation_id'] != '') {
        $location_id = " and ct.city_id='" . $_SESSION['Dislocation_id'] . "'";
    }
    $RoleBrands = $_objAdmin->getUserRoleBrand();
    $brandCnd = '';
    if (!empty($RoleBrands)) {
        $brandCnd = " and b.brand_id IN(" . $RoleBrands . ")";
    }
    $where = " $fromdate $todate $distributorId $stateId $location_id $brandCnd and d.distributor_name!='' ";
    $auRec = $_objAdmin->_getSelectList('table_primary_order_distributor_stock as ods 
	inner join table_primary_order_detail_distributor_stock as ods_detail on ods.stock_id=ods_detail.stock_id 
	left join table_distributors as d on d.distributor_id=ods.distributor_id 
	left join state as st on st.state_id=d.state 
	left join city as ct on ct.city_id=d.city
	LEFT join table_zone_state_mapping as zsm on zsm.state_id = d.state and d.account_id = zsm.account_id
	LEFT join table_zone as z on z.zone_id = zsm.zone_id 
	left join table_item as i on i.item_id=ods_detail.item_id
	left join table_location as c on c.location_id = d.location   
	LEFT join table_salesman as s on s.salesman_id=ods.salesman_id
	LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
	LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
	LEFT JOIN table_salesman_hierarchy AS H2 ON H2.hierarchy_id = SH.rpt_hierarchy_id
	LEFT JOIN table_salesman AS S2 ON S2.salesman_id = SH.rpt_user_id
	', "ods.*,ods_detail.*,d.distributor_id,d.distributor_name,d.distributor_code,i.item_name,i.item_id,i.item_code,c.location_name,st.state_id,st.state_name,ct.city_name,s.salesman_name,S2.salesman_name AS rptPerson,s.employee_code,sum(ods_detail.openning_stock_volume) as total_qty, ifNULL(sum(ods_detail.openning_stock_volume * ods_detail.price) ,0) as total_amount,count(ods_detail.item_id) as total_item,z.zone_name", "", $where . ' group by ods.stock_id order by ods.time_of_order desc', '');


    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . date("Y-m-d", strtotime($auRec[$i]->date_of_order)) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->time_of_order . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->total_amount . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->total_item . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->total_qty . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->zone_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->rptPerson . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->photo_count . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['distributor'] . "_primary_order_report.xls\"");
    echo $data;
    exit;
}
/***********************************End Export Distributor Primary Stock**************************/
/*********************Start Export Asset Management*******************/
if (isset($_GET['export_asset_management_report'])) {
    $data = "Activity Date \t " . $AliaseUsers['salesman'] . " Code \t " . $AliaseUsers['salesman'] . " Name \t  " .
        $AliaseUsers['retailer'] . " Code \t" . $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['retailer'] . " Group \t" . $AliaseUsers['retailer'] . " Channel \t" . $AliaseUsers['retailer'] . " Classification  \t" . $AliaseUsers['retailer'] . " Type \t" . $AliaseUsers['distributor'] .
        " Code \t " . $AliaseUsers['distributor'] . " Name \tAsset Type \t Asset Owner \t Quantity\t Remark\t Photo Count\n";
    if ($_SESSION['FromOrderList'] != '') {
        $fromdate = "'" . date('Y-m-d', strtotime($_SESSION['FromOrderList'])) . "'";
    } else {
        $fromdate = "'" . date('Y-m-d') . "'";
    }
    if ($_SESSION['ToOrderList'] != '') {
        $todate = "'" . date('Y-m-d', strtotime($_SESSION['ToOrderList'])) . "'";
    } else {
        $todate = "'" . date('Y-m-d') . "'";
    }

    $_objArrayList = new ArrayList();
    $salsList = $_objArrayList->SalesmanArrayList();
    $salesman = $_objArrayList->getSalesCondition($salsList);
    if ($_SESSION['salesman_id'] != '') {
        $salesman = "AND am.salesman_id='" . $_SESSION['salesman_id'] . "'";
    } else {
        $salesman = $salesman;
    }

    $where = " am.created_date >=" . $fromdate . " AND am.created_date <=" . $todate . " $salesman";
    $auRec = $_objAdmin->_getSelectList2('table_asset_management AS am 
        LEFT JOIN table_salesman AS s ON am.salesman_id = s.salesman_id 
        LEFT JOIN table_retailer AS r ON am.retailer_id = r.retailer_id 
        LEFT JOIN table_retailer_group as rg ON rg.group_id = r.group_id
        left join table_retailer_type_master as rtm ON rtm.type_id=r.type_id
        left join table_retailer_channel_master as rc ON rc.channel_id=r.channel_id 
        left join table_relationship as rel ON rel.relationship_id=r.relationship_id
        LEFT JOIN table_asset_master as m on am.asset_id=m.asset_id
        LEFT JOIN table_distributors as d on d.distributor_id = r.distributor_id
', "am.*,s.salesman_name,s.employee_code,r.retailer_code,d.distributor_name,d.distributor_code,r.retailer_name, m.asset_name,rg.group_name,rtm.type_name,rc.channel_name,rel.relationship_desc as relation", "", $where, '');
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . date("d M", strtotime($auRec[$i]->created_date)) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->group_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->channel_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->relation . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->type_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->asset_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->competitor_type . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->quantity . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->remark . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->photo_count . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"asset_management_report.xls\"");
    echo $data;
    exit;
}
/**************End Export Asset Management*************/
/***********************New integration****************************************/
//Todo: Sagar: 20 April 2021
//export_delete_retailer_report
if (isset($_GET['export_delete_retailer_report'])) {
    $data = "Activity Date\t" . $AliaseUsers['salesman'] . " Code\t" . $AliaseUsers['salesman'] . " Name\t" .
        $AliaseUsers['retailer'] . " Code\t" . $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['distributor'] . " Code\t"
        . $AliaseUsers['distributor'] . " Name\tReason\tRemark\tPhoto Count\tStatus\n";
    $salCond = "";
    if ($_SESSION['salRepID'] != "") {
        $salCond = " AND s.salesman_id = '" . $_SESSION['salRepID'] . "' ";
    } else {
        $salCond = $_SESSION['salsInCondi'];
    }
    $auRec = $_objAdmin->_getSelectList('table_customer_delete_request as dcr
        LEFT JOIN table_delete_customer_reason_master as dcrm on dcrm.id = dcr.reason_type
        LEFT JOIN table_salesman as s ON s.salesman_id = dcr.salesman_id
        LEFT JOIN table_retailer as r ON r.retailer_id = dcr.customer_id
        LEFT JOIN table_distributors as d on d.distributor_id = r.distributor_id
', 'dcr.id as request_id, dcr.app_date as activity_date, s.salesman_name,s.employee_code,dcr.customer_id,r.retailer_name,d.distributor_name,d.distributor_code,r.retailer_code,dcr.reason as remark,dcrm.reason as reason_type_desc,dcr.status,dcr.photo_count', '', "  dcr.app_date BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromAttList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToAttList'])) . "'  $salCond ORDER BY dcr.app_date DESC");
    if (is_array($auRec) && (count($auRec) > 0)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . date('d M Y', strtotime($auRec[$i]->activity_date)) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->reason_type_desc . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->remark . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->photo_count . '"';
            $data .= "\t";
            $data .= '"' . ucfirst($auRec[$i]->status) . '"';
            $data .= "\n";

        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"delete_" . $AliaseUsers['retailer'] . "_report.xls\"");
    echo $data;
    exit;
}
/*********************************Integration start from here*******************************************************************************************/
//Todo: Sagar: 12 April 2021
//export must sell products
if (isset($_GET['export_state_wise_must_sell_items_list'])) {
    $data = "State Name \t Product Name \t Product Code \t Created At \t Updated At \t Status\n";
    $sort = " ORDER BY msi.state_id ASC, msi.item_id ASC";
    //Todo Start : sudhanshu 12 june 2024 : add status filter
    $statusCondi = '';
    if (isset($_SESSION['MasstMustSell']) && $_SESSION['MasstMustSell'] != 'all' && $_SESSION['MasstMustSell'] != '') {
        $statusCondi = " msi.status ='" . $_SESSION['MasstMustSell'] . "'";
    }
    //Todo End : sudhanshu 12 june 2024 : add status filter
    $auRec = $_objAdmin->_getSelectList('table_must_sell_items as msi
INNER JOIN state as st ON st.state_id = msi.state_id
INNER JOIN table_item as it ON it.item_id = msi.item_id', "msi.id as must_sell_id,msi.state_id,st.state_name,msi.item_id,it.item_code,it.item_name,msi.created_at,msi.updated_at,msi.status", '', $statusCondi . $sort);
    if (is_array($auRec) && (count($auRec) > 0)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $status = ($auRec[$i]->status == 'A') ? "Active" : "Inactive";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . date('d M Y H:i A', strtotime($auRec[$i]->created_at)) . '"';
            $data .= "\t";
            $data .= '"' . ((isset($auRec[$i]->updated_at) && !empty($auRec[$i]->updated_at)) ? date('d M Y H:i A', strtotime($auRec[$i]->updated_at)) : "") . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"state_wise_must_sell_items_list.xls\"");
    echo $data;
    exit;
}
//export statewise_minimum_item_price
if (isset($_GET['export_statewise_minimum_item_price_list'])) {
    $data = "State Name\tProduct Name\tProduct Code\tMinimum Price\tStatus\tCreated At\tUpdated At\n";
    $sort = " ORDER BY st.state_name ASC, it.item_name ASC";
    //Todo Start : sudhanshu 12 june 2024 : add status filter
    $statusCondi = '';
    if (isset($_SESSION['MasstItmPrice']) && $_SESSION['MasstItmPrice'] != 'all' && $_SESSION['MasstItmPrice'] != '') {
        $statusCondi = " msi.status ='" . $_SESSION['MasstItmPrice'] . "'";
    }
    //Todo End : sudhanshu 12 june 2024 : add status filter
    $where = " $statusCondi  ";
    $auRec = $_objAdmin->_getSelectList('table_minimum_item_price as msi
INNER JOIN state as st ON st.state_id = msi.state_id
INNER JOIN table_item as it ON it.item_id = msi.item_id', "msi.id as min_price_id,msi.state_id,st.state_name,msi.item_id,it.item_code,it.item_name,msi.min_price,msi.created_at,msi.updated_at,msi.status", '', $where . $sort);
    if (is_array($auRec) && (count($auRec) > 0)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $status = ($auRec[$i]->status == 'A') ? "Active" : "Inactive";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->min_price . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\t";
            $data .= '"' . date('d M Y H:i A', strtotime($auRec[$i]->created_at)) . '"';
            $data .= "\t";
            $data .= '"' . ((isset($auRec[$i]->updated_at) && !empty($auRec[$i]->updated_at)) ? date('d M Y H:i A', strtotime($auRec[$i]->updated_at)) : "") . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"statewise_minimum_item_price_list.xls\"");
    echo $data;
    exit;
}
//export_distributor_change_request_report
if (isset($_GET['export_distributor_change_request_report'])) {
    $data = "Activity Date\t" . $AliaseUsers['salesman'] . " Code\t" . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['retailer'] . " Code\t" . $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['distributor'] . " Code\t" . $AliaseUsers['distributor'] . " Name\tReason\tRemark\n";
    $sort = " ORDER BY dcr.app_date DESC ";
    $salCond = "";
    if ($_SESSION['salRepID'] != "") {
        $salCond = " AND s.salesman_id = '" . $_SESSION['salRepID'] . "' ";
    } else {
        $salCond = $_SESSION['salsInCondi'];
    }
    $auRec = $_objAdmin->_getSelectList('table_distributor_change_request as dcr
LEFT JOIN table_salesman as s ON s.salesman_id = dcr.salesman_id
LEFT JOIN table_retailer as r ON r.retailer_id = dcr.retailer_id
LEFT JOIN table_distributors as dis ON dis.distributor_id = dcr.distributor_id
LEFT JOIN table_distributor_change_reason_master as dcrm ON dcrm.id = dcr.reason_id', 'dcr.app_date as activity_date,s.employee_code, s.salesman_name,r.retailer_name,r.retailer_code,dis.distributor_name,dis.distributor_code,dcr.reason_id,dcrm.reason,dcr.remark', '', "  dcr.app_date BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromAttList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToAttList'])) . "'  $salCond $sort");
    if (is_array($auRec) && (count($auRec) > 0)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . date('d M Y', strtotime($auRec[$i]->activity_date)) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->reason . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->remark . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['distributor'] . "_change_request_report.xls\"");
    echo $data;
    exit;
}
/*************************Sheenlac features integration*********************************************************/
if (isset($_GET['export_credit_debit_note'])) {
    $data = "Date\tCompany Name\tDocument No\t" . $AliaseUsers['distributor'] . " Code\t" . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['retailer'] . " Code\t" . $AliaseUsers['retailer'] . " Name\tNote Type\tReason\tAmount\tDescription\tPayment Adjustment\tNote Status\n";
    if ($_SESSION['userLoginType'] == 3 && $_SESSION['distributorId'] > 0) {
        $distributor_id = " AND o.distributor_id =" . $_SESSION['distributorId'];
    }
    if ($_SESSION['FromAttList'] != '') {
        $fromdate = date('Y-m-d', strtotime($_SESSION['FromAttList']));
    } else {
        $fromdate = date('Y-m-d');
    }
    if ($_SESSION['ToAttList'] != '') {
        $todate = date('Y-m-d', strtotime($_SESSION['ToAttList']));
    } else {
        $todate = date('Y-m-d');
    }
//    $sort = " ORDER BY O.date_of_note DESC,O.time_of_note desc";
//    // $where = $distributor_id;
//    $where = "  O.date_of_note BETWEEN '" . $fromdate . "' AND '" . $todate . "' and R.status='A' and D.status='A' $distributor_id ";
//    $auRec = $_objAdmin->_getSelectList('table_credit_debit_note AS O
//  	LEFT JOIN table_account AS ac ON ac.account_id = O.account_id
//  	LEFT JOIN table_distributors AS D ON O.distributor_id = D.distributor_id
//  	left join table_retailer as R on R.retailer_id = O.retailer_id
//  	left join table_tags AS T on T.tag_id = O.tag_id
//  	', " O.*, D.distributor_name, R.retailer_name, T.tag_description, ac.company_name, D.distributor_code, R.retailer_code  ", "", $where . $sort, '');

    $auRec = $_objAdmin->_getSelectList2("((SELECT o.invoice_id as note_id, 'Sales Return' as note_type,substr(o.bill_no, -10) as document_no
	,o.bill_date,o.due_date, 
	o.acc_total_invoice_amount as total_amount, COALESCE(sum(p.received_amount), 0) as adjusted_amount, 
	o.acc_total_invoice_amount-COALESCE(sum(p.received_amount), 0) AS pending_amount, o.bill_date as document_date,
	ac.company_name,D.distributor_name, R.retailer_name, 'Sales Return CN' as tag_description, D.distributor_code, R.retailer_code ,o.date_of_order as date,o.time_of_order as time,o.remark as remarks ,case when o.clearing_status ='' Then 'Unadjusted' 
	     when o.clearing_status ='Full' Then 'Fully Adjusted'
	     when o.clearing_status ='Partial' Then 'Partially Adjusted'
	     ELSE o.clearing_status 
	End as clearing_status, '' as note_status
	FROM single_invoice_record as o 
	left join table_payment_received as p on p.return_order_id = o.invoice_id 
	LEFT JOIN table_account AS ac ON ac.account_id = o.account_id
 	LEFT JOIN table_distributors AS D ON o.distributor_id = D.distributor_id
 	LEFT JOIN table_retailer as R on R.retailer_id = o.retailer_id
	LEFT JOIN table_tags AS T on T.tag_id = o.tag_id
	WHERE o.order_type='Return' AND o.order_for='R' AND o.invoice_status='A' 
	AND o.order_status='D' and o.date_of_order BETWEEN '" . $fromdate . "' AND '" . $todate . "' $distributor_id Group by o.invoice_id)
	
	Union
	
	(SELECT o.note_id , o.note_type ,substr(o.document_no, -10) as document_no, o.date_of_note as bill_date,
	o.due_date, o.total_amount as total_amount, COALESCE(sum(p.received_amount), 0) as adjusted_amount, 
	o.total_amount-COALESCE(sum(p.received_amount), 0) AS pending_amount, o.date_of_note as document_date ,
	ac.company_name,D.distributor_name, R.retailer_name, T.tag_description, D.distributor_code, R.retailer_code,o.date_of_note as date,o.time_of_note as time,o.remarks,
	case when o.clearing_status ='' Then 'Unadjusted' 
	     when o.clearing_status ='Full' Then 'Fully Adjusted'
	     when o.clearing_status ='Partial' Then 'Partially Adjusted'
	     ELSE o.clearing_status 
	End as clearing_status
	, o.note_status
	FROM table_credit_debit_note as o 
	left join table_payment_received as p on p.credit_note_id = o.note_id 
	LEFT JOIN table_account AS ac ON ac.account_id = o.account_id
 	LEFT JOIN table_distributors AS D ON o.distributor_id = D.distributor_id
 	LEFT JOIN table_retailer as R on R.retailer_id = o.retailer_id
	LEFT JOIN table_tags AS T on T.tag_id = o.tag_id
	WHERE o.date_of_note BETWEEN '" .
        $fromdate . "' AND '" . $todate . "' $distributor_id Group by o.note_id)
	) as tm", "tm.*", $rp, '', ' ORDER BY tm.document_date ASC');

    $remove = array("\n", "\r\n", "\r", ",");
    for ($i = 0; $i < count($auRec); $i++) {

        if ($auRec[$i]->note_type == 'C') {
            $note_type = "Credit";
        } else if ($auRec[$i]->note_type == 'D') {
            $note_type = "Debit";
        } else {
            $note_type = "Sales Return";
        }
        $note_status = ($auRec[$i]->note_status == 'C') ? "Canceled Note" : "Active";
        $data .= $_objAdmin->_changeDate($auRec[$i]->date);
        $data .= "\t";
//        $data .= $auRec[$i]->time;
//        $data .= "\t";
        $data .= $auRec[$i]->company_name;
        $data .= "\t";
        $data .= $auRec[$i]->document_no;
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->distributor_code);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->distributor_name);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->retailer_code);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->retailer_name);
        $data .= "\t";
        $data .= $note_type;
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->tag_description);
        $data .= "\t";
        $data .= (ROUND($auRec[$i]->total_amount, 2));
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->description);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->clearing_status);
        $data .= "\t";
        $data .= $note_status;
        $data .= "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Credit_Debit_Note.xls\"");
    echo $data;
    exit;
}
if (isset($_GET['export_retailer_order_list'])) {
    $data = $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['retailer'] . " Code\tOrder For\tOrder Status\tDate\tTime\tOrder Number\tOrder by\tOrder By User Type\tRemark\tTotal No Of Items\tTotal Order Qty\tTotal Order Amount\tBill Type\tBill Description\t" .
        $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\t" . $AliaseUsers['salesman'] . "\t" . "Route Name\tState\tDistrict\tMarket\tAddress\tOrder Type\tCancel By User Type\t Cancel By\t Delivery Date\n";
    $sort = " ORDER BY date_of_order desc,time_of_order desc";
    if ($_SESSION['SalDisList'] != '') {
        $salesman = " and s.salesman_id='" . $_SESSION['SalDisList'] . "'";
    }
    if ($_SESSION['FromDisList'] != '') {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['FromDisList'])) . "'";
    } else {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['ToDisList'] != '') {
        $todate = " and o.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToDisList'])) . "'";
    } else {
        $todate = " and o.date_of_order <= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['distributorId'] != "A") {
        $disList = " and o.distributor_id=" . $_SESSION['distributorId'];
    } else {
        $disList = "";
    }
    if ($_SESSION['OrderBy'] != '') {
        if ($_SESSION['OrderBy'] == 1) {
            $orderby = "";
        }
        if ($_SESSION['OrderBy'] == 2) {
            $orderby = " and o.order_status='A' ";
        }
        if ($_SESSION['OrderBy'] == 3) {
            $orderby = " and o.order_status='I' ";
        }
        if ($_SESSION['OrderBy'] == 4) {
            $orderby = " and o.order_status='D' ";
        }
    } else {
        $orderby = "";
    }
    if ($_SESSION['userLoginType'] == 3 && $_SESSION['distributorId'] > 0) {
        $distributorCond = " AND o.distributor_id ='" . $_SESSION['distributorId'] . "' ";
    }
    //get the partial pending orders till 31st March 2020
    mysql_query("SET SESSION group_concat_max_len = 100000000");
    $validated_default_date = date("Y-m-d", strtotime("-2 Months"));
    $where = " o.order_for='R' AND o.order_status !='D' and o.distributor_id!='' $salesman $fromdate $todate  
		 $distributorCond $disList $orderby and o.account_id =" . $_SESSION['accountId'];
    $auRec = $_objAdmin->_getSelectList('table_order as o
            left join table_retailer as r on o.retailer_id=r.retailer_id
            left join table_salesman as s on o.salesman_id=s.salesman_id
            left join table_distributors as d on d.distributor_id=o.distributor_id
            left join state as st on st.state_id=r.state
            left join city as c on c.city_id=r.city', "o.*,r.retailer_name, r.retailer_code,r.retailer_address,r.retailer_location,r.display_outlet,s.salesman_name,d.distributor_name,d.distributor_code, st.state_name,c.city_name", $rp, $where . $sort, '');
    $retIdArr = [];
    if (is_array($auRec) && (count($auRec) > 0)) {
        foreach ($auRec as $key => $auRecData) {
            if (isset($auRecData->retailer_id) && !empty($auRecData->retailer_id) && (intval($auRecData->retailer_id) > 0)) {
                $retIdArr[] = $auRecData->retailer_id;
            }
        }
        $retIds = implode(',', array_unique($retIdArr));
        $getRetailerRoutes = $_objAdmin->_getSelectList("table_route_retailer as rr 
LEFT JOIN table_route as r ON r.route_id = rr.route_id", "rr.retailer_id, GROUP_CONCAT(DISTINCT r.route_name SEPARATOR ' | ') as route_names", "", " rr.retailer_id IN($retIds) GROUP BY rr.retailer_id ORDER BY rr.retailer_id ASC ");
        $retailerWiseRoutesArr = [];
        if (is_array($getRetailerRoutes) && (count($getRetailerRoutes) > 0)) {
            foreach ($getRetailerRoutes as $key => $retRoutes) {
                if (isset($retRoutes->route_names) && !empty($retRoutes->route_names)) {
                    $retailerWiseRoutesArr[$retRoutes->retailer_id] = $retRoutes->route_names;
                }
            }
        }
    }
    $remove = array("\n", "\r", "\n \r", "\t", ",");
    for ($i = 0; $i < count($auRec); $i++) {
        if ($auRec[$i]->order_status == 'A') {
            $status = "New Order";
            $color = "N";
        }
        if ($auRec[$i]->order_status == 'I') {
            $status = "Processed";
            $color = "I";
        }
        if ($auRec[$i]->order_status == 'D') {
            $status = "Dispatched";
            $color = "A";
        }


        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);
        $date_of_delivery = $_objAdmin->_changeDate($auRec[$i]->delivery_date);
        /* Bill Type */
        $billTYPE = '';
        $billTYPE = '';
        switch (strtolower($auRec[$i]->order_for)) {
            case 'r':
                $order_for = 'Retailer';
                break;
            case 'd':
                $order_for = 'Distributor';
                break;
        }
        if ($auRec[$i]->order_type == 'Yes') {
            if ($auRec[$i]->order_status == 'A') {
                $orderType = "Sales Order";
            }
        }
        if ($auRec[$i]->order_type == 'Return') {
            //if ($auRec[$i]->order_status == 'A') {
            $orderType = "Return Order";
            // }
        }
        //Todo Start : sudhanshu add order by column 19 march 2024

        if ($auRec[$i]->order_by == 'salesman') {
            $orderBy = 'Salesman';
            $ordTakeBy = $auRec[$i]->salesman_name;
        }
        if ($auRec[$i]->order_by == 'D') {
            $orderBy = 'Distributor';
            $ordTakeBy = $auRec[$i]->distributor_name;
        }
        if ($auRec[$i]->order_by == 'R') {
            $orderBy = 'Salesman';
            $ordTakeBy = $auRec[$i]->retailer_name;
        }
        //Todo End : sudhanshu add order by column 19 march 2024

        $CheckOrderSts = $_objAdmin->_getSelectList2('table_order as o inner join table_order_detail as od on o.order_id = od.order_id', "od.quantity, od.acc_quantity, od.is_processed ", '', " o.order_id='" . $auRec[$i]->order_id . "' AND (((CAST(od.quantity AS DECIMAL(10,2)) = CAST(od.acc_quantity AS DECIMAL(10,2))) AND od.is_processed=0) OR ((CAST(od.quantity AS DECIMAL(10,2)) > CAST(od.acc_quantity AS DECIMAL(10,2))) AND od.is_processed = 1)) AND od.free_item_id = 0 ");

        $TotalItem = $_objAdmin->_getSelectList('table_order as o 
	  inner join table_order_detail as od on o.order_id = od.order_id',
            "count(od.order_id) as total_item,sum(od.quantity) as total_qty", '', " o.order_id='" . $auRec[$i]->order_id . "' group by od.order_id");

        if ($auRec[$i]->order_status == 'A') {
            $orderStatus = 'Fully Pending';
        } else if ($auRec[$i]->order_status == 'C') {
            $orderStatus = 'Cancelled Order';
        } else if (is_array($CheckOrderSts) && count($CheckOrderSts) > 0) {
            $orderStatus = 'Partially Invoiced';
        } else {
            $orderStatus = 'Fully Invoiced';
        }
        //Todo Start : Sudhanshu 15 April : add cancel by column
        $cancelByUserType = '';
        $cancel_by = '';
        if (strtolower($auRec[$i]->cancel_by_user_type) == 'admin') {
            $cancelByUserType = 'Admin';
            $cancel_by = 'Admin';
        } elseif (strtolower($auRec[$i]->cancel_by_user_type) == 'stockist') {
            $cancelByUserType = $AliaseUsers['stockist'];
            $cancel_by = $auRec[$i]->stockist_name;
        } elseif (strtolower($auRec[$i]->cancel_by_user_type) == 'distributor') {
            $cancelByUserType = $AliaseUsers['distributor'];
            $cancel_by = $auRec[$i]->distributor_name;
        } elseif (strtolower($auRec[$i]->cancel_by_user_type) == 'salesman') {
            $cancelByUserType = $AliaseUsers['salesman'];
            $cancel_by = $auRec[$i]->salesman_name;
        }
        //Todo End : Sudhanshu 15 April : add cancel by column
        $routeName = (isset($retailerWiseRoutesArr[$auRec[$i]->retailer_id]) && !empty($retailerWiseRoutesArr[$auRec[$i]->retailer_id])) ? $retailerWiseRoutesArr[$auRec[$i]->retailer_id] : '';
        $data .= $auRec[$i]->retailer_name . "\t" . $auRec[$i]->retailer_code . "\t" . $order_for . "\t" . $orderStatus . "\t" . $date_of_order . "\t" . $auRec[$i]->time_of_order .
            "\t" . $auRec[$i]->order_id .
            "\t" . $ordTakeBy .
            "\t" . $orderBy .
            "\t" . ucwords($auRec[$i]->remark) . "\t" . $TotalItem[0]->total_item . "\t" . $TotalItem[0]->total_qty . "\t" .
            number_format
            ($auRec[$i]->acc_total_invoice_amount, 2) .
            "\t" .
            $billTYPE . "\t" .
            $bill_desc . "\t" . $auRec[$i]->distributor_name . "\t" . $auRec[$i]->distributor_code . "\t" . $auRec[$i]->salesman_name . "\t" . $routeName . "\t" . $auRec[$i]->state_name . "\t" . str_replace($remove, ' ', $auRec[$i]->city_name) . "\t" . str_replace($remove, ' ', $auRec[$i]->retailer_location) . "\t" . str_replace($remove, ' ', $auRec[$i]->retailer_address) . "\t" . $orderType . "\t" . $cancelByUserType . "\t" . $cancel_by . "\t" . $date_of_delivery . "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['retailer'] . " Order List.xls\"");
    echo $data;
    exit;
}
if (isset($_GET['export_distributor_order_listing'])) {
    //echo hello;exit;
    $data = "Order For\tDate of Order\tTime of Order\tOrder Number\tOrder By\tOrder By User Type\t Remark\tInvoice Status\t Total Order Amount\tTotal No. Of Items\t Total Order Qty\t" .
        $AliaseUsers['stockist'] . " Name\t " .
        $AliaseUsers['stockist'] . " Code\t " .
        $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\t " . $AliaseUsers['salesman'] . "\t  State\t District\t Market \t Address \t Order Status \tCancel By User Type\t Cancel By\t Comments\t Reason\n";
    $sort = " ORDER BY date_of_order desc,time_of_order desc";
    if ($_SESSION['SalDisList'] != '') {
        $salesman = " and s.salesman_id='" . $_SESSION['SalDisList'] . "'";
    }
    if ($_SESSION['FromOrderList'] != '') {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['FromOrderList'])) . "'";
    } else {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['ToOrderList'] != '') {
        $todate = " and o.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToOrderList'])) . "'";
    } else {
        $todate = " and o.date_of_order <= '" . date('Y-m-d') . "'";
    }
    //Todo Sudhasnhu 16 may 2024 : add distributor coditon also  changes in query need to check live conditon changes in query
    if (isset($_SESSION['sel_dis']) && $_SESSION['sel_dis'] != '') {
        $disList = " AND o.distributor_id=" . $_SESSION['sel_dis'] . " ";
    } else {
        $disList = "";
    }
    //Todo Sudhasnhu 16 may 2024 : add distributor coditon also  changes in query  need to check live conditon
    if ($_SESSION['OrderBy'] != '') {
        if ($_SESSION['OrderBy'] == 1) {
            $orderby = "";
        }
        if ($_SESSION['OrderBy'] == 2) {
            $orderby = " and o.order_status='A' ";
        }
        if ($_SESSION['OrderBy'] == 3) {
            $orderby = " and o.order_status='I' ";
        }
        if ($_SESSION['OrderBy'] == 4) {
            $orderby = " and o.order_status='D' ";
        }
    } else {
        $orderby = "";
    }

    if ($_SESSION['userLoginType'] == 3 && $_SESSION['distributorId'] > 0) {
        $distributorCond = " AND o.distributor_id ='" . $_SESSION['distributorId'] . "' ";
    }
    if ($_SESSION['userLoginType'] == 7 && $_SESSION['stockistId'] > 0) {
        $distributorCond .= " AND o.stockist_id ='" . $_SESSION['stockistId'] . "' ";
    }
    $where = " o.order_for='D' and o.order_type IN('Yes', 'Return', 'Adhoc') and o.distributor_id!=''  $salesman $fromdate $todate $disList $distributorCond $orderby";
    $auRec = $_objAdmin->_getSelectList('table_distributor_order as o
			left join table_salesman as s on o.salesman_id=s.salesman_id
			left join table_distributors as d on d.distributor_id=o.distributor_id			
			left join table_stockist as stk on stk.stockist_id=o.stockist_id		
			left join state as st on st.state_id=d.state
			left join city as c on c.city_id=d.city
			', "o.*,s.salesman_name,d.distributor_name,d.distributor_code,st.state_name,c.city_name, d.distributor_location, d.distributor_address,stk.stockist_name,stk.stockist_code", $rp, $where . $sort, '');
    $remove = array("\n", "\r", "\n \r", "\t", ",");
    for ($i = 0; $i < count($auRec); $i++) {
        if ($auRec[$i]->order_type == 'Yes') {
            if ($auRec[$i]->order_status == 'A') {
                $status = "New Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }
            if ($auRec[$i]->order_status == 'C') {
                $status = "Cancelled";
            }
            $color = ($auRec[$i]->order_status == 'A') ? "A" : "P";
        }
        if ($auRec[$i]->order_type == 'No') {
            $status = ($auRec[$i]->order_status == 'A') ? "No Order" : "Processed";
            $color = ($auRec[$i]->order_status == 'A') ? "I" : "P";
        }
        if ($auRec[$i]->order_type == 'Adhoc') {
            if ($auRec[$i]->order_status == 'A') {
                $status = "New Adhoc Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }

            $color = ($auRec[$i]->order_status == 'A') ? "O" : "P";
        }
        if ($auRec[$i]->order_type == 'Return') {
            if ($auRec[$i]->order_status == 'A') {
                $status = "Return Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }

            $color = ($auRec[$i]->order_status == 'A') ? "O" : "P";
        }
        //Todo Start : sudhanshu add order by column 15 march 2024
        if ($auRec[$i]->order_by == 'S') {
            $orderBy = 'Salesman';
            $ordTakeBy = $auRec[$i]->salesman_name;
        }
        if ($auRec[$i]->order_by == 'stockist') {
            $orderBy = 'Stockist';
            $ordTakeBy = $auRec[$i]->stockist_name;
        }
        if ($auRec[$i]->order_by == 'distributor') {
            $orderBy = 'Distributor';
            $ordTakeBy = $auRec[$i]->distributor_name;
        }
        //Todo End : sudhanshu add order by column 15 march 2024

        // Todo start : add column invoice status : 06 oct 2023 : sudhanshu
        $CheckOrderSts = $_objAdmin->_getSelectList2('table_distributor_order as o 
        inner join table_distributor_order_detail as od on o.order_id = od.order_id',
            "od.quantity, od.acc_quantity,od.is_processed ", '', " o.order_id='" . $auRec[$i]->order_id . "' 
          AND ((od.quantity = od.acc_quantity AND od.is_processed=0) OR (od.quantity >od.acc_quantity AND od.is_processed=1)) 
          and od.free_item_id = 0");
        if ($auRec[$i]->order_status == 'A') {
            $orderStatus = 'Fully Pending';
        } else if (is_array($CheckOrderSts) && count($CheckOrderSts) > 0) {
            $orderStatus = 'Partially Invoiced';
        } else {
            $orderStatus = 'Fully Invoiced';
        }

        if ($auRec[$i]->order_status == 'C') {
            $orderStatus = '';
        }
        // Todo end : add column invoice status : 06 oct 2023 : sudhanshu
        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);
        $auRec2 = $_objAdmin->_getSelectList2('table_distributor_order_detail', "count( distinct(item_id)) as total_item,sum(quantity) as total_qty", '', " order_id = " . $auRec[$i]->order_id . " and type = 1");
        switch (strtolower($auRec[$i]->order_for)) {
            case 'r':
                $order_for = 'Retailer';
                break;
            case 'd':
                $order_for = 'Distributor';
                break;
        }

        //Todo Start : Sudhanshu 15 April : add cancel by column
        $cancelByUserType = '';
        $cancel_by = '';
        if (strtolower($auRec[$i]->cancel_by_user_type) == 'admin') {
            $cancelByUserType = 'Admin';
            $cancel_by = 'Admin';
        } elseif (strtolower($auRec[$i]->cancel_by_user_type) == 'stockist') {
            $cancelByUserType = $AliaseUsers['stockist'];
            $cancel_by = $auRec[$i]->stockist_name;
        } elseif (strtolower($auRec[$i]->cancel_by_user_type) == 'distributor') {
            $cancelByUserType = $AliaseUsers['distributor'];
            $cancel_by = $auRec[$i]->distributor_name;
        } elseif (strtolower($auRec[$i]->cancel_by_user_type) == 'salesman') {
            $cancelByUserType = $AliaseUsers['salesman'];
            $cancel_by = $auRec[$i]->salesman_name;
        }
        //Todo End : Sudhanshu 15 April : add cancel by column

        $data .= $order_for . "\t" . $date_of_order . "\t" . $auRec[$i]->time_of_order . "\t" . $auRec[$i]->order_id
            . "\t" . ucwords($ordTakeBy) . "\t" . ucwords($orderBy) . "\t" . ucwords($auRec[$i]->remark) . "\t" . $orderStatus . "\t" . $auRec[$i]->acc_total_invoice_amount . "\t" . $auRec2[0]->total_item . "\t"
            . $auRec2[0]->total_qty
            . "\t"
            . str_replace($remove, ' ', $auRec[$i]->stockist_name) . "\t" . $auRec[$i]->stockist_code . "\t"
            . str_replace($remove, ' ', $auRec[$i]->distributor_name) . "\t" . $auRec[$i]->distributor_code . "\t" .
            $auRec[$i]->salesman_name . "\t" . $auRec[$i]->state_name . "\t" . $auRec[$i]->city_name . "\t" .
            str_replace($remove, ' ', $auRec[$i]->distributor_location) . "\t" . str_replace($remove, ' ',
                $auRec[$i]->distributor_address) . "\t" . $status . "\t" . $cancelByUserType . "\t" . $cancel_by . "\t" . $auRec[$i]->comments . "\t" .
            $auRec[$i]->reason_remark
            . "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['distributor'] . " Order List.xls\"");
    echo $data;
    exit;
}

if (isset($_GET['export_retailer_invoice_list'])) {
    //echo hello;exit;
    $data = "Order Date\tInvoice Date\tInvoice Number\tInvoice Remark\t" . $AliaseUsers['retailer'] . " Code \t" .
        $AliaseUsers['retailer'] . " Name\tInvoice Amount\tPayment Status\t" . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\tOrder Ref\tInvoice For \t" . $AliaseUsers['salesman'] . "\tBill Type \tBill Description  \tState\tDistrict\tMarket \tAddress\tOrder Status\tReturn Order Remark\tShipping Address\tBilling Address\n";
    if ($_SESSION['SalDisList'] != '') {
        $salesman = " and s.salesman_id='" . $_SESSION['SalDisList'] . "'";
    }
    if ($_SESSION['FromDisList'] != '') {
        $fromdate = " and o.bill_date >= '" . date('Y-m-d', strtotime($_SESSION['FromDisList'])) . "'";
    } else {
        $fromdate = " and o.bill_date >= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['ToDisList'] != '') {
        $todate = " and o.bill_date <= '" . date('Y-m-d', strtotime($_SESSION['ToDisList'])) . "'";
    } else {
        $todate = " and o.bill_date <= '" . date('Y-m-d') . "'";
    }

    if ($_SESSION['userLoginType'] == 3 && $_SESSION['distributorId'] > 0) {
        $distributorCond = " AND o.distributor_id ='" . $_SESSION['distributorId'] . "' ";
    }
    if (isset($_SESSION['invoice_type']) && $_SESSION['invoice_type'] != '' && $_SESSION['invoice_type'] != 'All') {
        if (strtolower($_SESSION['invoice_type']) == 'invoice') {
            $distributorCond .= " AND o.order_type='Yes' AND o.invoice_status='A' ";
        } elseif (strtolower($_SESSION['invoice_type']) == 'return') {
            $distributorCond .= " AND o.order_type='return' AND o.invoice_status='A' ";
        } elseif (strtolower($_SESSION['invoice_type']) == 'cancel') {
            $distributorCond .= " AND o.invoice_status='C' ";
        }
    }
    $where = " AND o.order_for='R' AND o.order_status ='D' and o.distributor_id!=''   $fromdate $todate $distributorCond $orderby and o.account_id =" . $_SESSION['accountId'];
    $ordertime = ',time_of_order desc';
    $sortname = 'bill_date';
    $sortorder = 'desc';
    $sort = " ORDER BY $sortname $sortorder $ordertime";
    $groupBy = " GROUP BY o.invoice_id ";
    $auRec = $_objAdmin->_getSelectList('table_invoice as o
	LEFT JOIN table_invoice_detail as OD ON OD.order_id = o.order_id
    left join table_retailer as r on o.retailer_id=r.retailer_id
    left join table_salesman as s on o.salesman_id=s.salesman_id   
    left join table_distributors as dd on dd.distributor_id=r.distributor_id
    left join state as st on st.state_id=r.state
    left join city as c on c.city_id=r.city
     left join table_retailer_address as sp ON sp.address_id=o.shipping_address
    left join table_retailer_address as bp ON bp.address_id=o.billing_address', "o.*,GROUP_CONCAT(DISTINCT o.ref_order_id SEPARATOR '/') as ref_orders,r.retailer_name, r.retailer_code, r.retailer_location,
    r.lat as retlat,r.display_outlet,r.lng as retlng,s.salesman_name, dd.distributor_name,
    dd.distributor_code,dd.distributor_name,st.state_name,
    c.city_name,r.country as retailer_country,r.retailer_address, r.retailer_location,sp.address as shipping_address,bp.address as billing_address,bp.zipcode as billing_zip,sp.zipcode as shipping_zip", $rp, $where . $groupBy . $sort, '');

    $remove = array("\n", "\r", "\n \r", "\t", ",");
    $gTotalAmount = 0;
    for ($i = 0; $i < count($auRec); $i++) {
        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);
        $date_of_invoice = $_objAdmin->_changeDate($auRec[$i]->bill_date);
        /* Bill Type */
        $billTYPE = '';
        $billTYPE = '';
        switch (strtolower($auRec[$i]->bill_type)) {
            case 'apc':
                $billTYPE = "Advance Payment Collection";
                $bill_desc = $auRec[$i]->bill_desc;
                break;
            case 'ac':
                $billTYPE = "Advance Cheque";
                $bill_desc = $auRec[$i]->bill_desc;
                break;
            case 'fp':
                $billTYPE = "Flexible Plan";
                $bill_desc = $auRec[$i]->bill_desc;
                break;
        }
        switch (strtolower($auRec[$i]->order_for)) {
            case 'r':
                $order_for = 'Retailer';
                break;
            case 'd':
                $order_for = 'Distributor';
                break;
        }
        if ($auRec[$i]->order_status == 'D' && $auRec[$i]->invoice_status == 'A') {
            $status = "Invoiced";
            $payment_sts = ($auRec[$i]->payment_received == 0) ? "Payment Pending" : "Payment Received";
            if ($auRec[$i]->order_type == 'Return') {
                $status = "Return Invoiced";

                $payment_sts = "";
            }
            $due_date = $_objAdmin->_changeDate($auRec[$i]->due_date);
        } elseif ($auRec[$i]->order_status == 'D' && $auRec[$i]->invoice_status == 'C') {
            $status = 'Cancelled Invoice';
            $payment_sts = "";
        }
        //Todo Start :sudhanshu 21 may 2024 : shipping address and billing address with zipcode also change in query
        $shipping_address = $auRec[$i]->shipping_address . ' ' . $auRec[$i]->shipping_zip;
        $billing_address = $auRec[$i]->billing_address . ' ' . $auRec[$i]->billing_zip;
        //Todo End :sudhanshu 21 may 2024 : shipping address and billing address with zipcode
        $data .= $date_of_order;
        $data .= "\t";
        $data .= $date_of_invoice;
        $data .= "\t";
        $data .= $auRec[$i]->bill_no;
        $data .= "\t";
        $data .= $auRec[$i]->ref_inv_no;
        $data .= "\t";
        $data .= $auRec[$i]->retailer_code;
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->retailer_name);
        $data .= "\t";
        $data .= number_format(floor($auRec[$i]->acc_total_invoice_amount), 2);
        $data .= "\t";
        $data .= $payment_sts;
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->distributor_name);
        $data .= "\t";
        $data .= $auRec[$i]->distributor_code;
        $data .= "\t";
        $data .= $auRec[$i]->ref_orders;
        $data .= "\t";
        $data .= $order_for;
        $data .= "\t";
        $data .= $auRec[$i]->salesman_name;
        $data .= "\t";
        $data .= $billTYPE;
        $data .= "\t";
        $data .= $bill_desc;
        $data .= "\t";
//        $data .= $auRec[$i]->region_name;
//        $data .= "\t";
        $data .= $auRec[$i]->state_name;
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->city_name);
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->retailer_location);
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->retailer_address);
        $data .= "\t";
        $data .= $status;
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->remark);
        $data .= "\t";
        $data .= str_replace($remove, ' ', $shipping_address);
        $data .= "\t";
        $data .= str_replace($remove, ' ', $billing_address);
        $data .= "\n";
        $gTotalAmount = $gTotalAmount + floor($auRec[$i]->acc_total_invoice_amount);
    }
    $data .= "\t\t\t\t\tGrand Total\t";
    $data .= $gTotalAmount;
    $data .= "\n";
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Retailer Invoice List.xls\"");
    echo $data;
    exit;
}
if (isset($_GET['export_distributor_invoice_list'])) {
    //echo hello;exit;
    $data = "Order Date\tInvoice Date\tInvoice Number \t " . $AliaseUsers['stockist'] . " Code \t " . $AliaseUsers['stockist'] . " Name\tInvoice Amount\tPayment Status\t " . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\tOrder Ref\tRef Invoice Number\tInvoice For \t" . $AliaseUsers['salesman'] . "\tBill Type \tBill Description \tState\tDistrict\tMarket \tAddress\tOrder Status\tRemarks\tShipping Address\t Billing Address\n";
    if ($_SESSION['SalDisList'] != '') {
        $salesman = " and s.salesman_id='" . $_SESSION['SalDisList'] . "'";
    }
    if ($_SESSION['FromDisList'] != '') {
        $fromdate = " and o.bill_date >= '" . date('Y-m-d', strtotime($_SESSION['FromDisList'])) . "'";
    } else {
        $fromdate = " and o.bill_date >= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['ToDisList'] != '') {
        $todate = " and o.bill_date <= '" . date('Y-m-d', strtotime($_SESSION['ToDisList'])) . "'";
    } else {
        $todate = " and o.bill_date <= '" . date('Y-m-d') . "'";
    }

    if ($_SESSION['userLoginType'] == 3 && $_SESSION['distributorId'] > 0) {
        $distributorCond = " AND o.distributor_id ='" . $_SESSION['distributorId'] . "' ";
    }

    if ($_SESSION['dis'] != "A" && $_SESSION['dis'] > 0) {
        $distributorCond = " AND o.distributor_id=" . $_SESSION['dis'];
    }


    if ($_SESSION['userLoginType'] == 7 && $_SESSION['stockistId'] > 0) {
        $distributorCond .= " AND o.stockist_id ='" . $_SESSION['stockistId'] . "' ";
    }
    if (isset($_SESSION['invoice_type']) && $_SESSION['invoice_type'] != '' && $_SESSION['invoice_type'] != 'All') {
        if (strtolower($_SESSION['invoice_type']) == 'invoice') {
            $distributorCond .= " AND o.order_type='Yes' AND o.invoice_status='A' ";
        } elseif (strtolower($_SESSION['invoice_type']) == 'return') {
            $distributorCond .= " AND o.order_type='return' AND o.invoice_status='A' ";
        } elseif (strtolower($_SESSION['invoice_type']) == 'cancel') {
            $distributorCond .= " AND o.invoice_status='C' ";
        }
    }
    $where = " AND o.order_for='D' AND o.order_status ='D' and o.distributor_id!=''   $fromdate $todate $distributorCond $orderby and o.account_id =" . $_SESSION['accountId'];
    $ordertime = ',time_of_order desc';
    $sortname = 'bill_date';
    $sortorder = 'desc';
    $sort = " ORDER BY $sortname $sortorder $ordertime";
    $groupBy = " GROUP BY o.invoice_id ";
    // HIDE THIS JOIN :- LEFT JOIN table_distributor_invoice_detail as OD ON OD.order_id = o.order_id
    $auRec = $_objAdmin->_getSelectList('table_distributor_invoice as o
    left join table_stockist as stc on o.stockist_id=stc.stockist_id
    left join table_salesman as s on o.salesman_id=s.salesman_id   
    left join table_distributors as r on r.distributor_id=o.distributor_id
    left join state as st on st.state_id=r.state
    left join city as c on c.city_id=r.city
    left join table_distributor_address as ad on ad.address_id=o.shipping_address
    left join table_distributor_address as ad2 on ad2.address_id=o.billing_address
    ', "o.*,GROUP_CONCAT(o.ref_order_id) as ref_orders,
	r.distributor_name, r.distributor_code, r.distributor_location,
    r.lat as retlat,r.lng as retlng,s.salesman_name, stc.stockist_name,
    stc.stockist_code,stc.stockist_name,st.state_name,
    c.city_name,r.country as retailer_country,r.distributor_address, r.distributor_location,ad.address as shipping_address,ad2.address as billing_address,ad.zipcode as shipping_zip,ad2.zipcode as billing_zip", $rp, $where . $groupBy . $sort, '');
    //echo "<pre>";print_r($auRec);die;
    $remove = array("\n", "\r", "\n \r", "\t", ",");
    $gTotalAmount = 0;
    for ($i = 0; $i < count($auRec); $i++) {
        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);
        $date_of_invoice = $_objAdmin->_changeDate($auRec[$i]->bill_date);
        /* Bill Type */
        $billTYPE = '';
        $billTYPE = '';
        switch (strtolower($auRec[$i]->bill_type)) {
            case 'apc':
                $billTYPE = "Advance Payment Collection";
                $bill_desc = $auRec[$i]->bill_desc;
                break;
            case 'ac':
                $billTYPE = "Advance Cheque";
                $bill_desc = $auRec[$i]->bill_desc;
                break;
            case 'fp':
                $billTYPE = "Flexible Plan";
                $bill_desc = $auRec[$i]->bill_desc;
                break;
        }
        switch (strtolower($auRec[$i]->order_for)) {
            case 'r':
                $order_for = 'Retailer';
                break;
            case 'd':
                $order_for = 'Distributor';
                break;
        }
        if ($auRec[$i]->order_status == 'D' && $auRec[$i]->invoice_status == 'A') {
            $status = "Invoiced";
            $payment_sts = ($auRec[$i]->payment_received == 0) ? "Payment Pending" : "Payment Received";
            if ($auRec[$i]->order_type == 'Return') {
                $status = "Return Invoiced";

                $payment_sts = "";
            }
            $due_date = $_objAdmin->_changeDate($auRec[$i]->due_date);
        } elseif ($auRec[$i]->order_status == 'D' && $auRec[$i]->invoice_status == 'C') {
            $status = 'Cancelled Invoice';
            $payment_sts = "";
        }
        //Todo Start :sudhanshu 21 may 2024 : shipping address and billing address also change in query
        $shipping_address = $auRec[$i]->shipping_address . ' ' . $auRec[$i]->shipping_zip;
        $billing_address = $auRec[$i]->billing_address . ' ' . $auRec[$i]->billing_zip;
        //Todo End :sudhanshu 21 may 2024 : shipping address and billing address also change in query
        $data .= $date_of_order;
        $data .= "\t";
        $data .= $date_of_invoice;
        $data .= "\t";
        $data .= $auRec[$i]->bill_no;
        $data .= "\t";
        $data .= $auRec[$i]->stockist_code;
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->stockist_name);
        $data .= "\t";
        $data .= number_format(floor($auRec[$i]->acc_total_invoice_amount), 2);
        $data .= "\t";
        $data .= $payment_sts;
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->distributor_name);
        $data .= "\t";
        $data .= $auRec[$i]->distributor_code;
        $data .= "\t";
        $data .= $auRec[$i]->ref_orders;
        $data .= "\t";
        //Todo Start : sudhanshu 31 may 2024 : add ref invoice number
        $data .= $auRec[$i]->ref_inv_no;
        $data .= "\t";
        //Todo Start : sudhanshu 31 may 2024 : add ref invoice number
        $data .= $order_for;
        $data .= "\t";
        $data .= $auRec[$i]->salesman_name;
        $data .= "\t";
        $data .= $billTYPE;
        $data .= "\t";
        $data .= $bill_desc;
        $data .= "\t";
//        $data .= $auRec[$i]->region_name;
//        $data .= "\t";
        $data .= $auRec[$i]->state_name;
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->city_name);
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->distributor_location);
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->distributor_address);
        $data .= "\t";
        $data .= $status;
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->remark);
        //Todo start : sudhanshu 13 may 2024 : add shipping and billing address
        $data .= "\t";
        $data .= str_replace($remove, ' ', $shipping_address);
        $data .= "\t";
        $data .= str_replace($remove, ' ', $billing_address);
        //Todo start : sudhanshu 13 may 2024 : add shipping and billing address
        $data .= "\n";
        $gTotalAmount = $gTotalAmount + floor($auRec[$i]->acc_total_invoice_amount);
    }
    $data .= "\t\t\t\tGrand Total\t";
    $data .= $gTotalAmount;
    $data .= "\n";
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['distributor'] . " Invoice List.xls\"");
    echo $data;
    exit;
}
if (isset($_GET['retailer_wise_return_items_summary_report'])) {
    $unitArr = array();

    $data = " State\t" . $AliaseUsers['distributor'] . " Code\t" . $AliaseUsers['distributor'] . " Name\t" .
        $AliaseUsers['retailer'] . " Code\t" . $AliaseUsers['retailer'] . " Name\tInvoice Type\tInvoice Number\tInvoice Date\tItem Code\tItem Description\tQuantity";

    $data .= "\tTaxable Amount\tTax Amount\tTotal Amount\tInvoice Number\n";
    if ($_SESSION['FromOrderList'] != '') {
        $fromdate = date('Y-m-d', strtotime($_SESSION['FromOrderList']));
    } else {
        $fromdate = date('Y-m-d');
    }
    if ($_SESSION['ToOrderList'] != '') {
        $todate = date('Y-m-d', strtotime($_SESSION['ToOrderList']));
    } else {
        $todate = date('Y-m-d');
    }
    if ($_SESSION['userLoginType'] == 3) {
        $disLogCond = " AND o.distributor_id='" . $_SESSION['distributorId'] . "' ";
    }
    $groupby = " GROUP BY o.invoice_id, od.ref_order_id,od.item_id";
    $where = " o.bill_date BETWEEN '" . $fromdate . "' AND '" . $todate . "' AND o.order_for='R' AND o.order_type='Return' AND o.invoice_status='A' AND o.ref_order_id != 0 $disLogCond";

    $auRec = $_objAdmin->_getSelectList('table_invoice AS o
			inner JOIN table_invoice_detail as od on od.order_id = o.order_id
			inner JOIN table_item as i on i.item_id = od.item_id			
			left join table_payment_terms as pt on pt.terms_id = i.terms_id
			LEFT JOIN table_distributors as d ON d.distributor_id=o.distributor_id
			left join state as stt on stt.state_id = d.state
			left join table_branch as b on b.branch_id = d.branch_id
			LEFT JOIN table_retailer as r ON r.retailer_id=o.retailer_id
			LEFT JOIN table_unit_conversion as uc on uc.item_id = od.item_id AND uc.unit_id = od.unit_id',
        " o.order_type,o.date_of_order, o.retailer_id, o.distributor_id, stt.state_name, o.bill_no, o.bill_date,
			o.against_invoice_no as ref_bill_no,i.item_name, i.item_code, i.unit_id as item_unit_id, od.*, 
			d.distributor_name, d.distributor_code,  pt.terms_desc, b.branch_code,r.retailer_code, r.retailer_name,
			((od.acc_quantity/uc.denominator)*uc.numerator) as ttl_quantity ", $rp, $where . $groupby . $sort, '');
    $dataSet = array();
    $QtydataSet = array();
    $remove = array("\n", "\r\n", "\r", ",");
    $unArr = array();
    $gTotalTaxBeforeAmount = $gTotalAmount = $gTotalTaxAmount = 0;
    for ($i = 0; $i < count($auRec); $i++) {
        $ordertype = '';
        if ($auRec[$i]->order_type == 'Yes') {
            $ordertype = 'Sales Invoice';
        } else if ($auRec[$i]->order_type == 'Return') {
            $ordertype = 'Return Invoice';
        }
        $bill_details = explode('-', $auRec[$i]->bill_no);
        $bill_no = $bill_details[3];
        $bill_date = $_objAdmin->_changeDate($auRec[$i]->bill_date);
        $ref_bill_no = $ref_bill_date = '';
        if (isset($auRec[$i]->ref_bill_no) && !empty($auRec[$i]->ref_bill_no)) {
            $ref_bill_details = explode('-', $auRec[$i]->ref_bill_no);
            $ref_bill_no = $ref_bill_details[3];
            $ref_bill_date = $_objAdmin->_changeDate($auRec[$i]->ref_bill_date);
        }

        $data .= str_replace($remove, '', $auRec[$i]->state_name);
        $data .= "\t";
        $data .= $auRec[$i]->distributor_code;
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->distributor_name);
        $data .= "\t";
        $data .= $auRec[$i]->retailer_code;
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->retailer_name);
        $data .= "\t";
        $data .= $ordertype;
        $data .= "\t";
        $data .= $bill_no;
        $data .= "\t";
        $data .= $bill_date;
        $data .= "\t";
        $data .= $auRec[$i]->item_code;
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->item_name);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->acc_quantity);
        $data .= "\t";
        $data .= (($auRec[$i]->acc_quantity * $auRec[$i]->price) - $auRec[$i]->acc_discount_amount);
        $data .= "\t";
        $data .= $auRec[$i]->gst_amount + $auRec[$i]->cgst_amount + $auRec[$i]->igst_amount;
        $data .= "\t";
        $data .= ROUND((($auRec[$i]->acc_quantity * $auRec[$i]->price) + ($auRec[$i]->gst_amount + $auRec[$i]->cgst_amount + $auRec[$i]->igst_amount)), 0);
        $data .= "\t";
        $data .= $auRec[$i]->ref_bill_no;
        $data .= "\n";
        $gTotalTaxBeforeAmount = $gTotalTaxBeforeAmount + (($auRec[$i]->acc_quantity * $auRec[$i]->price) - $auRec[$i]->acc_discount_amount);
        $gTotalTaxAmount = $gTotalTaxAmount + ($auRec[$i]->gst_amount + $auRec[$i]->cgst_amount + $auRec[$i]->igst_amount);
        $gTotalAmount = $gTotalAmount + ROUND((($auRec[$i]->acc_quantity * $auRec[$i]->price) + ($auRec[$i]->gst_amount + $auRec[$i]->cgst_amount + $auRec[$i]->igst_amount)), 0);
    }
    $data .= "\t\t\t\t\t\t\t\t\tGrand Total\t\t";
    $data .= $gTotalTaxBeforeAmount;
    $data .= "\t";
    $data .= $gTotalTaxAmount;
    $data .= "\t";
    $data .= $gTotalAmount;
    $data .= "\t";
    $data .= "\n";
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"customer_wise_return_item_summary_report.xls\"");
    echo $data;
    exit;
}
if (isset($_GET['export_new_jan_product_report'])) {

    $data = " Order For \t Order Number \t Order Date \t " . $AliaseUsers['distributor'] . " Name \t " . $AliaseUsers['distributor'] . " Code \t " . $AliaseUsers['retailer'] . " Name \t " . $AliaseUsers['retailer'] . " Code \t State Name \t City Name \t Category Name \t Item Name \t Item Code \t UOM \t Order Quantity \t Order Amount \t Invoiced Quantity \t Invoiced Amount \t Pendng Order Quantity \t Pending Order Amount \t Order From\tRemark\n";
    $sort = " ORDER BY o.date_of_order desc";
//    $_objArrayList = new ArrayList();
//    $salsList = $_objArrayList->SalesmanArrayList();
//    $salesman = $_objArrayList->getSalesCondition($salsList);
    $retCondition = '';
    if (isset($_SESSION['OrderRetId']) && $_SESSION['OrderRetId'] != '') {
        $retCondition = " AND o.retailer_id = " . $_SESSION['OrderRetId'];
    } else {
        if ($_SESSION['userLoginType'] == 3) {
            $distID = $_SESSION['distributorId'];
//            $retRec = $_objAdmin->_getSelectList('table_retailer', 'retailer_id', '', "status = 'A' AND distributor_id = $distID ORDER BY retailer_id ASC");
//            $retIdArr = [];
//            if (is_array($retRec) && (count($retRec) > 0)) {
//                foreach ($retRec as $key => $retRecData) {
//                    $retIdArr[] = $retRecData->retailer_id;
//                }
//                $retIds = implode(',', $retIdArr);
//                $retCondition = " AND o.retailer_id IN($retIds)";
            $retCondition = " And o.distributor_id IN($distID)";
//            }
        }
    }

//    if (isset($_SESSION['REGIONID']) && $_SESSION['REGIONID'] != '') {
//        $condition .= " re.region_id = " . $_SESSION['REGIONID'] . " AND ";
//    }
    if (isset($_SESSION['STATEID']) && $_SESSION['STATEID'] != '') {
        $condition .= " Dis.state = " . $_SESSION['STATEID'] . " AND ";
    }
    if ($_SESSION['categoryID'] != '' && $_SESSION['categoryID'] != 'all') {
        $condition .= " c.category_id = " . $_SESSION['categoryID'] . " AND ";
    }
    if ($_SESSION['itemID'] != '' && $_SESSION['itemID'] != 'all') {
        $condition .= " o.item_id = " . $_SESSION['itemID'] . " AND ";
    }
    if ($_SESSION['FromProductList'] != '') {
        $fromdate = "  o.date_of_order  >= '" . date('Y-m-d', strtotime($_SESSION['FromProductList'])) . "' AND ";
        $Invfromdate = " inv.bill_date  >= '" . date('Y-m-d', strtotime($_SESSION['FromProductList'])) . "' AND ";
    } else {
        $fromdate = " o.date_of_order  >= '" . date('Y-m-d') . "' AND ";
        $Invfromdate = " inv.bill_date  >= '" . date('Y-m-d') . "' AND ";
    }
    if ($_SESSION['ToProductList'] != '') {
        $todate = " o.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToProductList'])) . "' ";
        $Invtodate = " inv.bill_date <= '" . date('Y-m-d', strtotime($_SESSION['ToProductList'])) . "' ";
    } else {
        $todate = "  o.date_of_order <= '" . date('Y-m-d') . "'";
        $Invtodate = "  inv.bill_date <= '" . date('Y-m-d') . "'";
    }
    $groupby = " GROUP BY o.order_id,o.item_id";

    //get the partial pending orders till 31st March 2020
    mysqli_query($_objAdmin->db_connect_id, "SET SESSION group_concat_max_len = 100000000");
    $validated_default_date = date("Y-m-d", strtotime("-2 Months"));
    // $discarded_orders = $_objAdmin->_getSelectList2('table_order', "GROUP_CONCAT(order_id) as order_ids", '', " date_of_order <='".$validated_default_date."' AND order_status IN('A', 'I')");
    $flag = true;
    /*
	if(strtotime(date('Y-m-d', strtotime($_SESSION['FromProductList']))) < strtotime($validated_default_date) && $flag)
     {
        $where   = " o.account_id='" . $_SESSION['accountId'] . "'  AND o.order_status NOT IN('A', 'I') and $condition $fromdate $todate $salesOrgCond";    //$salesman
     }
     else
     {
        $where   = " o.account_id='" . $_SESSION['accountId'] . "' and $condition $fromdate $todate $salesOrgCond";
     }*/
    $where = " o.account_id='" . $_SESSION['accountId'] . "' and $condition $fromdate $todate $retCondition";
    $auRec = $_objAdmin->_getSelectList2('VIEW_ORDER_QTY as o
			left join table_measurement_units as mu on mu.unit_id=o.unit_id
			left join table_order_remarks as tor on tor.remark_id=o.reason
			LEFT JOIN table_item AS I ON I.item_id=o.item_id
			LEFT JOIN table_category AS c ON c.category_id = I.category_id
			LEFT JOIN table_salesman AS s ON o.salesman_id = s.salesman_id
			LEFT JOIN table_retailer AS R ON o.retailer_id = R.retailer_id
			LEFT JOIN table_distributors AS Dis ON Dis.distributor_id = o.distributor_id
			LEFT JOIN state as st on st.state_id=Dis.state
			LEFT JOIN city as ct on ct.city_id=Dis.city		
			LEFT JOIN state as rst on rst.state_id=R.state
			LEFT JOIN city as rct on rct.city_id=R.city
			',
        'o.order_id,o.date_of_order,tor.remark,o.reason_remark,
			Dis.distributor_name, Dis.distributor_code,
			R.retailer_name, R.retailer_code,
			
			CASE WHEN o.order_for="R" THEN rst.state_name
				   WHEN o.order_for="D" THEN st.state_name END AS state_name,
				CASE WHEN o.order_for="R" THEN rct.city_name
				  WHEN o.order_for="D" THEN ct.city_name END AS city_name,
			CASE WHEN o.salesman_id="0" THEN "PEPUP"
				   WHEN o.salesman_id !="0" THEN "APP" END AS order_from,
			o.order_for,s.salesman_name,s.employee_code,c.category_name,o.item_id,I.item_name,I.item_code,o.unit_id,mu.unit_code,
			o.order_quantity,ROUND(o.order_amount) as order_amount,
			"" as invoiced_quantity,
			"" as pendng_order_quantity,
			"" as invoiced_amount,
			"" as pendng_order_amount', $rp, $where . $groupby . $sort, '');

    $invoiceData = array();
    $invWhre = $Invfromdate . $Invtodate . " GROUP BY inv.ref_order_id,inv.item_id";
    $invoiceList = $_objAdmin->_getSelectList2('ORDER_WISE_INVOICE_LIST_NEW as inv ',
        "inv.ref_order_id,inv.item_id,inv.invoiced_quantity as invoiced_quantity,ROUND(inv.invoiced_amount) as invoiced_amount", '', $invWhre, '');
    if (count($invoiceList) > 0) {
        foreach ($invoiceList as $key => $value) {
            $invoiceData[$value->ref_order_id][$value->item_id] = $value;
        }
    }
    for ($i = 0; $i < count($auRec); $i++) {

        $resonRemark = $remarktxt = '';
        if ($auRec[$i]->date_of_order != "" && $auRec[$i]->date_of_order != "0000:00:00") {
            $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);
        } else {
            $date_of_order = "";
        }
        switch (strtolower($auRec[$i]->order_for)) {
            case 'r':
                $order_for = 'Retailer';
                break;
            case 'd':
                $order_for = 'Distributor';
                $retailer_type = 'Existing Distributor';
                break;
        }

        if (isset($invoiceData[$auRec[$i]->order_id][$auRec[$i]->item_id])) {
            $auRec[$i]->pendng_order_quantity = (floatval($auRec[$i]->order_quantity) - floatval($invoiceData[$auRec[$i]->order_id][$auRec[$i]->item_id]->invoiced_quantity));
            $auRec[$i]->pendng_order_amount = ((($auRec[$i]->pendng_order_quantity != '') ? ROUND($auRec[$i]->order_amount - $invoiceData[$auRec[$i]->order_id][$auRec[$i]->item_id]->invoiced_amount) : '0'));
            $auRec[$i]->invoiced_quantity = ($invoiceData[$auRec[$i]->order_id][$auRec[$i]->item_id]->invoiced_quantity);
            $auRec[$i]->invoiced_amount = ($invoiceData[$auRec[$i]->order_id][$auRec[$i]->item_id]->invoiced_amount);
        }
        $resonRemark = preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace(array('\t', '\n', '	', ','), ' ', $auRec[$i]->reason_remark));
        $remarktxt = preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace(array('\t', '\n', '	', ','), ' ', $auRec[$i]->remark));
        // Calculate Tonnage separate column  is required in the this Report AJAY@2016-03-22
        $data .= $order_for . "\t" . $auRec[$i]->order_id . "\t" . $date_of_order . "\t" . str_replace(array('\t', '\n', '  ', ','), ' ', $auRec[$i]->distributor_name) . "\t" . str_replace(array('\t', '\n', '  ', ','), ' ', $auRec[$i]->distributor_code) . "\t" .
            str_replace(array('\t', '\n', '  ', ','), ' ', $auRec[$i]->retailer_name) . "\t" . str_replace(array('\t', '\n', '  ', ','), ' ', $auRec[$i]->retailer_code) . "\t" . str_replace(array('\t', '\n', '  ', ','), ' ', $auRec[$i]->state_name) . "\t" . str_replace(array('\t', '\n', '  ', ','), ' ', $auRec[$i]->city_name) . "\t" .
            str_replace(array('\t', '\n', '  ', ','), ' ', $auRec[$i]->category_name) . "\t" . $auRec[$i]->item_name . "\t" . $auRec[$i]->item_code . "\t" .
            $auRec[$i]->unit_code . "\t" . $auRec[$i]->order_quantity . "\t" . $auRec[$i]->order_amount . "\t" . $auRec[$i]->invoiced_quantity . "\t" . $auRec[$i]->invoiced_amount . "\t" .
            ((empty($auRec[$i]->pendng_order_quantity) && empty($auRec[$i]->invoiced_quantity)) ? ($auRec[$i]->order_quantity) : $auRec[$i]->pendng_order_quantity) . "\t" . (($auRec[$i]->pendng_order_amount == '') ? $auRec[$i]->order_amount : (($auRec[$i]->pendng_order_quantity == 0) ? 0 : $auRec[$i]->pendng_order_amount)) . "\t" . $auRec[$i]->order_from . "\t" . $remarktxt . "\t" . $resonRemark . "\n";


    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"New_Jan_Product_Report.xls\"");
    echo $data;
    exit;
}
if (isset($_GET['primary_gst_report_new'])) {
    $data = "GSTIN/UIN of Recipient\tReceiver Code\tReceiver Name\tPlace Of Supply\tInvoice Number\tSAP Order Number\tInvoice Date\tBefore Tax Value\tSGST\tCGST\tIGST\tTaxable Value\t CESS Amount\n";
    if ($_SESSION['FromOrderList'] != '') {
        $fromdate = date('Y-m-d', strtotime($_SESSION['FromOrderList']));
    } else {
        $fromdate = date('Y-m-d');
    }
    if ($_SESSION['ToOrderList'] != '') {
        $todate = date('Y-m-d', strtotime($_SESSION['ToOrderList']));
    } else {
        $todate = date('Y-m-d');
    }
    if ($_SESSION['distributor_id'] != '' && $_SESSION['userLoginType'] != 3) {
        $disLogCond = " AND o.distributor_id='" . $_SESSION['distributor_id'] . "' ";
    }
    if ($_SESSION['userLoginType'] == 3) {
        $disLogCond = " AND o.distributor_id='" . $_SESSION['distributorId'] . "' ";
    }
    $sort = " ORDER BY o.bill_no DESC";

    $RoleBrands = $_objAdmin->getUserRoleBrand();
    $brandCnd = '';
    if (!empty($RoleBrands)) {
        $brandCnd = " and b.brand_id IN(" . $RoleBrands . ")";
    }

    $groupby = " GROUP BY o.bill_no";
    $where = " o.bill_date BETWEEN '" . $fromdate . "' AND '" . $todate . "' AND o.bill_type='Invoice' AND o.bill_status='A' 
	$brandCnd $disLogCond";
    $auRec = $_objAdmin->_getSelectList2('table_item_dis_stk_inprocess AS o
					LEFT JOIN table_item AS I ON o.item_id = I.item_id
					LEFT JOIN table_brands as b ON b.brand_id=I.brand_id
					LEFT JOIN table_distributors as d ON d.distributor_id=o.distributor_id
					LEFT JOIN state as st on st.state_id = d.state',
        " o.bill_date,o.sap_order_no,o.bill_no,SUM(o.before_tax_amount) as total_amount, SUM(o.total_tax_amount) as tax_amount, d.distributor_name, d.distributor_code, 
					d.gst_no, st.state_name, st.state_code, 
					SUM(o.sgst_amount) as sgst_amount,SUM(o.cgst_amount) as cgst_amount,SUM(o.igst_amount) as igst_amount ", "", $where . $groupby . $sort, '');
    $remove = array("\n", "\r\n", "\r", ",");
    $ttl_sgst_amount = $ttl_cgst_amount = $ttl_igst_amount = $gTotalAmount = $gTotalTaxBeforeAmount = 0;
    for ($i = 0; $i < count($auRec); $i++) {
        $sgst_amount = $cgst_amount = $igst_amount = 0;
        if ($auRec[$i]->sgst_amount > 0) {
            $sgst_amount = $auRec[$i]->sgst_amount;
        }
        if ($auRec[$i]->cgst_amount > 0) {
            $cgst_amount = $auRec[$i]->cgst_amount;
        }
        if ($auRec[$i]->igst_amount > 0) {
            $igst_amount = $auRec[$i]->igst_amount;
        }
        $distributor_name = htmlentities($auRec[$i]->distributor_name, ENT_QUOTES | ENT_IGNORE, "UTF-8");
        $state_name = htmlentities($auRec[$i]->state_name, ENT_QUOTES | ENT_IGNORE, "UTF-8");
        $item_name = htmlentities($auRec[$i]->item_name, ENT_QUOTES | ENT_IGNORE, "UTF-8");
        $data .= $auRec[$i]->gst_no;
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->distributor_code);
        $data .= "\t";
        $data .= str_replace($remove, '', str_replace('&amp;', '&', $distributor_name));
        $data .= "\t";
        $data .= str_replace($remove, '', str_replace('&amp;', '&', $state_name));
        $data .= "\t";
        $data .= $auRec[$i]->bill_no;
        $data .= "\t";
        $data .= $auRec[$i]->sap_order_no;
        $data .= "\t";
        $data .= $_objAdmin->_changeDate($auRec[$i]->bill_date);
        $data .= "\t";
        $data .= $auRec[$i]->total_amount;
        $data .= "\t";
        $data .= $sgst_amount;
        $data .= "\t";
        $data .= $cgst_amount;
        $data .= "\t";
        $data .= $igst_amount;
        $data .= "\t";
        $data .= ROUND($auRec[$i]->total_amount + $auRec[$i]->tax_amount, 0);
        $data .= "\n";
        $gTotalAmount = $gTotalAmount + $auRec[$i]->total_amount;
        $ttl_sgst_amount = $ttl_sgst_amount + $sgst_amount;
        $ttl_cgst_amount = $ttl_cgst_amount + $cgst_amount;
        $ttl_igst_amount = $ttl_igst_amount + $igst_amount;
        $gTotalTaxBeforeAmount = $gTotalTaxBeforeAmount + ROUND($auRec[$i]->total_amount + $auRec[$i]->tax_amount, 0);
    }
    $data .= "\t\t\t\t\tGrand Total\t";
    $data .= $gTotalAmount;
    $data .= "\t";
    $data .= $ttl_sgst_amount;
    $data .= "\t";
    $data .= $ttl_cgst_amount;
    $data .= "\t";
    $data .= $ttl_igst_amount;
    $data .= "\t";
    $data .= $gTotalTaxBeforeAmount;
    $data .= "\n";
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"primary_gst_report.xls\"");
    echo $data;
    exit;
}
if (isset($_GET['primary_gst_detail_report_new'])) {
    $data = "GSTIN/UIN of Recipient\tReceiver Code\tReceiver Name\tPlace Of Supply\tInvoice Number\tInvoice Date\tItem Code\tItem Name\tBrand Name\tHSN Code\tRate\tBefore Tax Value\tSGST\tCGST\tIGST\tTaxable Value\tCess Amount\n";
    if ($_SESSION['FromOrderList'] != '') {
        $fromdate = date('Y-m-d', strtotime($_SESSION['FromOrderList']));
    } else {
        $fromdate = date('Y-m-d');
    }
    if ($_SESSION['ToOrderList'] != '') {
        $todate = date('Y-m-d', strtotime($_SESSION['ToOrderList']));
    } else {
        $todate = date('Y-m-d');
    }
    if ($_SESSION['distributor_id'] != '' && $_SESSION['userLoginType'] != 3) {
        $disLogCond = " AND o.distributor_id='" . $_SESSION['distributor_id'] . "' ";
    }
    if ($_SESSION['userLoginType'] == 3) {
        $disLogCond = " AND o.distributor_id='" . $_SESSION['distributorId'] . "' ";
    }
    $sort = " ORDER BY o.bill_no DESC";
    $groupby = " GROUP BY o.bill_no, o.item_id";
    //Added condition for role based access at brand lavel.
    $RoleBrands = $_objAdmin->getUserRoleBrand();
    $brandCnd = '';
    if (!empty($RoleBrands)) {
        $brandCnd = " and b.brand_id IN(" . $RoleBrands . ")";
    }

    $where = " o.bill_date BETWEEN '" . $fromdate . "' AND '" . $todate . "' AND o.bill_type='Invoice' AND o.bill_status='A' $brandCnd $disLogCond";
    $auRec = $_objAdmin->_getSelectList2('table_item_dis_stk_inprocess AS o
					inner JOIN table_item as i on i.item_id = o.item_id
					left join table_brands as b on b.brand_id = i.brand_id
					LEFT JOIN table_group as g on g.group_id = i.group_id
					LEFT JOIN table_distributors as d ON d.distributor_id=o.distributor_id
					LEFT JOIN state as st on st.state_id = d.state',
        "o.dis_stk_inpro_id,
					o.bill_date, o.bill_no, 
					o.before_tax_amount as total_amount, 
					o.total_tax_amount as tax_amount, 
					d.distributor_name, 
					d.distributor_code, 
					d.gst_no, 
					i.item_name, 
					i.item_code, b.brand_name,
					o.sgst_amount as sgst_amount,o.cgst_amount as cgst_amount,o.igst_amount as igst_amount,
					o.sgst_rate as sgst_rate,o.cgst_rate as cgst_rate,o.igst_rate as igst_rate,
					g.hsn_code, 
					st.state_name, 
					st.state_code"
        , "", $where . $groupby . $sort, '');
    $remove = array("\n", "\r\n", "\r", ",");
    $ttl_sgst_amount = $ttl_cgst_amount = $ttl_igst_amount = $gTotalAmount = $gTotalTaxBeforeAmount = 0;
    for ($i = 0; $i < count($auRec); $i++) {
        $sgst_amount = $cgst_amount = $igst_amount = 0;
        if ($auRec[$i]->sgst_amount > 0) {
            $sgst_amount = $auRec[$i]->sgst_amount;
        }
        if ($auRec[$i]->cgst_amount > 0) {
            $cgst_amount = $auRec[$i]->cgst_amount;
        }
        if ($auRec[$i]->igst_amount > 0) {
            $igst_amount = $auRec[$i]->igst_amount;
        }
        $distributor_name = htmlentities($auRec[$i]->distributor_name, ENT_QUOTES | ENT_IGNORE, "UTF-8");
        $state_name = htmlentities($auRec[$i]->state_name, ENT_QUOTES | ENT_IGNORE, "UTF-8");
        $item_name = htmlentities($auRec[$i]->item_name, ENT_QUOTES | ENT_IGNORE, "UTF-8");
        $data .= $auRec[$i]->gst_no;
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->distributor_code);
        $data .= "\t";
        $data .= str_replace($remove, '', str_replace('&amp;', '&', $distributor_name));
        $data .= "\t";
        $data .= str_replace($remove, '', str_replace('&amp;', '&', $state_name));
        $data .= "\t";
        $data .= $auRec[$i]->bill_no;
        $data .= "\t";
        $data .= $_objAdmin->_changeDate($auRec[$i]->bill_date);
        $data .= "\t";
        $data .= $auRec[$i]->item_code;
        $data .= "\t";
        $data .= str_replace($remove, '', str_replace('&amp;', '&', $item_name));
        $data .= "\t";
        $data .= $auRec[$i]->brand_name;
        $data .= "\t";
        $data .= $auRec[$i]->hsn_code;
        $data .= "\t";
        $data .= ($auRec[$i]->sgst_rate + $auRec[$i]->cgst_rate + $auRec[$i]->igst_rate);
        $data .= "\t";
        $data .= $auRec[$i]->total_amount;
        $data .= "\t";
        $data .= $sgst_amount;
        $data .= "\t";
        $data .= $cgst_amount;
        $data .= "\t";
        $data .= $igst_amount;
        $data .= "\t";
        $data .= ROUND($auRec[$i]->total_amount + $auRec[$i]->tax_amount, 0);
        $data .= "\n";
        $gTotalAmount = $gTotalAmount + $auRec[$i]->total_amount;
        $ttl_sgst_amount = $ttl_sgst_amount + $sgst_amount;
        $ttl_cgst_amount = $ttl_cgst_amount + $cgst_amount;
        $ttl_igst_amount = $ttl_igst_amount + $igst_amount;
        $gTotalTaxBeforeAmount = $gTotalTaxBeforeAmount + ROUND($auRec[$i]->total_amount + $auRec[$i]->tax_amount, 0);
    }
    $data .= "\t\t\t\t\t\t\t\t\tGrand Total\t";
    $data .= $gTotalAmount;
    $data .= "\t";
    $data .= $ttl_sgst_amount;
    $data .= "\t";
    $data .= $ttl_cgst_amount;
    $data .= "\t";
    $data .= $ttl_igst_amount;
    $data .= "\t";
    $data .= $gTotalTaxBeforeAmount;
    $data .= "\n";
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"primary_gst_detail_report.xls\"");
    echo $data;
    exit;
}
if (isset($_GET['export_branch_stock_list'])) {
    $data = "Company Name \t Branch Name \t Branch Code \t Category Name\t Brand Name \t Variant Name \t Item Name \t Item Code \t Stock Quantity \t Date \n";
    $sort = "ORDER BY B.branch_name ASC";
    if ($_SESSION['branchID'] != '') {
        $condition .= " AND B.branch_id ='" . $_SESSION['branchID'] . "' ";
    }
    if ($_SESSION['categoryID'] != '' && $_SESSION['categoryID'] != 'all') {
        $condition .= " AND c.category_id = " . $_SESSION['categoryID'];
    }
    if ($_SESSION['itemID'] != '' && $_SESSION['itemID'] != 'all') {
        $condition .= " AND I.item_id = " . $_SESSION['itemID'];
    }

    $groupby = " GROUP BY BS.branch_id,BS.item_id having BS.item_id!=''";

    //Added condition for role based access at brand lavel.
    $RoleBrands = $_objAdmin->getUserRoleBrand();
    $brandCnd = '';
    if (!empty($RoleBrands)) {
        $brandCnd = " and b.brand_id IN(" . $RoleBrands . ")";
    }


    $where = " BS.account_id='" . $_SESSION['accountId'] . "' $brandCnd $condition $fromdate $todate $salesOrgCond ";

    $auRec = $_objAdmin->_getSelectList2('table_item_branch_stock as BS
			LEFT JOIN table_branch as B on B.branch_id = BS.branch_id
			LEFT JOIN table_item AS I ON I.item_id = BS.item_id
			left join table_brands as b on b.brand_id = I.brand_id
			LEFT JOIN table_category AS c ON c.category_id = I.category_id
			LEFT JOIN table_variant AS V ON V.variant_id = I.variant_id
			left join table_account as di on di.account_id = BS.account_id', 'BS.branch_stk_id,b.brand_name ,BS.branch_stock_value, BS.last_updated_date, I.item_code, I.item_name, c.category_name, V.variant_name, B.branch_name, B.branch_code, di.company_name', '', $where . $sort, '');
    for ($i = 0; $i < count($auRec); $i++) {
        $data .= $auRec[$i]->category_name . "\t" . preg_replace('~[^a-z0-9]+~i', '', $auRec[$i]->branch_name) . "\t" . $auRec[$i]->branch_code . "\t" . preg_replace('~[^a-z0-9]+~i', '', $auRec[$i]->category_name) . "\t" . preg_replace('~[^a-z0-9]+~i', '', $auRec[$i]->brand_name) . "\t" . preg_replace('~[^a-z0-9]+~i', '', $auRec[$i]->variant_name) . "\t" . preg_replace('~[^a-z0-9]+~i', '', $auRec[$i]->item_name) . "\t" . $auRec[$i]->item_code . "\t" . $auRec[$i]->branch_stock_value . "\t" . date('Y-m-d', strtotime($_objAdmin->_changeDate($auRec[$i]->last_updated_date))) . "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Branch Stock List.xls\"");
    echo $data;
    exit;
}
if (isset($_GET['export_sap_product_report'])) {
    $data = " Order For \t Order Number \t " . $AliaseUsers['distributor'] . " Name \t " . $AliaseUsers['distributor'] . " Code \t " . $AliaseUsers['retailer'] . " Name \t " . $AliaseUsers['retailer'] . " Code \t Category Name \t Variant Name \t Item Name \t Item Code \t Item Price \t Sales Quantity \t Amount \t Tax Amount \t Total Amount \t Date of Order \n";
    $sort = "ORDER BY invoice_date DESC";
    if ($_SESSION['RetailerID'] != '') {
        $condition .= " R.retailer_id='" . $_SESSION['RetailerID'] . "' AND ";
    }
    if ($_SESSION['distributor_Id'] != '') {
        $condition .= " O.distributor_id='" . $_SESSION['distributor_Id'] . "' AND ";
    }
    if ($_SESSION['userLoginType'] == 3 && $_SESSION['distributorId'] > 0) {
        $condition .= " O.distributor_id ='" . $_SESSION['distributorId'] . "' AND ";
    }
    if ($_SESSION['categoryID'] != '' && $_SESSION['categoryID'] != 'all') {
        $condition .= " c.category_id = " . $_SESSION['categoryID'] . " AND ";
    }
    if ($_SESSION['itemID'] != '' && $_SESSION['itemID'] != 'all') {
        $condition .= " D.item_id = " . $_SESSION['itemID'] . " AND ";
    }
    if ($_SESSION['FromProductList'] != '') {
        $fromdate = "  O.invoice_date  >= '" . date('Y-m-d', strtotime($_SESSION['FromProductList'])) . "' AND ";
    } else {
        $fromdate = " O.invoice_date  >= '" . date('Y-m-d') . "' AND ";
    }
    if ($_SESSION['ToProductList'] != '') {
        $todate = " O.invoice_date <= '" . date('Y-m-d', strtotime($_SESSION['ToProductList'])) . "' ";
    } else {
        $todate = "  O.invoice_date <= '" . date('Y-m-d') . "'";
    }

    $groupby = " GROUP BY D.item_id having D.item_id!=''";
    $where = " O.account_id='" . $_SESSION['accountId'] . "' and $condition $fromdate $todate $salesman $salesOrgCond";
    $auRec = $_objAdmin->_getSelectList('table_sap_invoice_history_details as D
			LEFT JOIN table_sap_invoice_history as O on O.invoice_id = D.invoice_id
			LEFT JOIN table_item AS I ON D.item_id = I.item_id
			LEFT JOIN table_category AS c ON c.category_id = I.category_id
			LEFT JOIN table_variant AS V ON V.variant_id = I.variant_id
			LEFT JOIN table_price AS P ON P.item_id = D.item_id
			LEFT JOIN table_retailer AS R ON R.retailer_id = O.retailer_id 
			LEFT JOIN table_distributors AS DIS ON DIS.distributor_id = O.distributor_id
			', 'D.acc_quantity as sales_quantity, D.acc_total_amount, D.acc_tax_amount, O.sap_invoice_no, 
			O.invoice_date, I.item_code, I.item_name, c.category_name, V.variant_name, P.item_mrp AS item_price, 
			R.retailer_name, R.retailer_code, 
			O.invoice_for,DIS.distributor_name, DIS.distributor_code ', "", $where . $sort, '');
    //  $auRec = $_objAdmin->_getSelectList2('table_sap_invoice_history_details as D
    // LEFT JOIN table_sap_invoice_history as O on O.invoice_id = D.invoice_id
    // LEFT JOIN table_item AS I ON D.item_id = I.item_id
    // LEFT JOIN table_category AS c ON c.category_id = I.category_id
    // LEFT JOIN table_variant AS V ON V.variant_id = I.variant_id
    // LEFT JOIN table_price AS P ON P.item_id = D.item_id
    // LEFT JOIN table_retailer AS R ON R.retailer_id = O.retailer_id AND invoice_for="R"
    // LEFT JOIN table_distributors AS DIS ON DIS.distributor_id = O.distributor_id AND invoice_for="D"
    // ', 'D.acc_quantity as sales_quantity, D.acc_total_amount, D.acc_tax_amount, O.sap_invoice_no, O.invoice_date,
    // I.item_code, I.item_name, c.category_name, V.variant_name, P.item_mrp AS item_price, R.retailer_name,
    // R.retailer_code,
    // O.invoice_for, DIS.distributor_name, DIS.distributor_code ', "", $where . $sort, '');
    //print_r($auRec);die;
    for ($i = 0; $i < count($auRec); $i++) {
        // $invoice_for = '';
        // $retailer_name = '';
        // $retailer_code = '';
        // $distributor_name = '';
        // $distributor_code = '';
        // $retailer_class = '';
        // $distributor_class = '';
        // switch (strtolower($auRec[$i]->invoice_for)) {
        //     case 'r':
        //         $invoice_for = 'Retailer';
        //         $retailer_name = $auRec[$i]->retailer_name;
        //         $retailer_code = $auRec[$i]->retailer_code;

        //         break;
        //     case 'd':
        //         $invoice_for = 'Distributors';
        //         $distributor_name = $auRec[$i]->distributor_name;
        //         $distributor_code = $auRec[$i]->distributor_code;

        //         break;
        // }
        $invoice_for = '';
        $retailer_name = '';
        $retailer_code = '';
        $distributor_name = '';
        $distributor_code = '';
        $retailer_class = '';
        $distributor_class = '';
        $invoice_for = ((isset($auRec[$i]->invoice_for) && !empty($auRec[$i]->invoice_for) && strtolower($auRec[$i]->invoice_for) == 'r') ? 'Retailer' : 'Distributors');
        $retailer_name = $auRec[$i]->retailer_name;
        $retailer_code = $auRec[$i]->retailer_code;
        $distributor_name = $auRec[$i]->distributor_name;
        $distributor_code = $auRec[$i]->distributor_code;
        $item_price = round(($auRec[$i]->acc_total_amount / $auRec[$i]->sales_quantity), 2);
        $total_amount = $auRec[$i]->acc_total_amount + $auRec[$i]->acc_tax_amount;
        $data .= $invoice_for . "\t" . $auRec[$i]->sap_invoice_no . "\t" . $distributor_name . "\t" . $distributor_code . "\t" . $retailer_name . "\t" . $retailer_code . "\t" . $auRec[$i]->category_name . "\t" . $auRec[$i]->variant_name . "\t" . $auRec[$i]->item_name . "\t" . $auRec[$i]->item_code . "\t" . $item_price . "\t" . $auRec[$i]->sales_quantity . "\t" . $auRec[$i]->acc_total_amount . "\t" . $auRec[$i]->acc_tax_amount . "\t" . $total_amount . "\t" . date('Y-m-d', strtotime($_objAdmin->_changeDate($auRec[$i]->invoice_date))) . "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"ERP Product Report.xls\"");
    echo $data;
    exit;
}
//Ends product export
if (isset($_GET['export_retailer_pending_order_list'])) {
    //echo hello;exit;
    $data = "Order For\tDate\tTime\tOrder Number\tTotal Invoice Amount\tBill Type\tBill Description\t" .
        $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\t" . $AliaseUsers['salesman']
        . " Name\t" . $AliaseUsers['salesman'] . " Code\t" . $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['retailer'] . " Code\tBranch Name\tBranch Code\tState\tDistrict\tCity\tMarket\tAddress\tOrder Type\tOrder By\tOrder Status\tCancel By User Type\tCancel By\n";
    $sort = " ORDER BY date_of_order desc,time_of_order desc";
    if ($_SESSION['SalDisList'] != '') {
        $salesman = " and s.salesman_id='" . $_SESSION['SalDisList'] . "'";
    }
    $validated_default_date = date("Y-m-d", strtotime("-7 days"));
    if ($_SESSION['FromDisList'] != '') {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['FromDisList'])) . "'";
    } else {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['ToDisList'] != '') {
        $todate = " and o.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToDisList'])) . "'";
    } else {
        $todate = " and o.date_of_order <= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['distributorId'] != "A") {
        $disList = " o.distributor_id=" . $_SESSION['distributorId'] . " and";
    } else {
        $disList = "";
    }
    if ($_SESSION['OrderBy'] != '') {
        if ($_SESSION['OrderBy'] == 1) {
            $orderby = "";
        }
        if ($_SESSION['OrderBy'] == 2) {
            $orderby = " and o.order_status='A' ";
        }
        if ($_SESSION['OrderBy'] == 3) {
            $orderby = " and o.order_status='I' ";
        }
        if ($_SESSION['OrderBy'] == 4) {
            $orderby = " and o.order_status='D' ";
        }
    } else {
        $orderby = "";
    }
    if ($_SESSION['userLoginType'] == 3 && $_SESSION['distributorId'] > 0) {
        $distributorCond = " AND o.distributor_id ='" . $_SESSION['distributorId'] . "' ";
    }
    $where = " AND r.new='' AND o.order_for='R' AND o.order_status !='D' AND o.order_status IN('A', 'C') AND 
	order_type IN('Yes', 'Return', 'Adhoc') AND o.distributor_id!='' $disLogCond $salesman $fromdate $todate $regionCondition $stateCondition $salesOrgCond $distributorCond $orderby AND o.account_id =" . $_SESSION['accountId'];
    $auRec = $_objAdmin->_getSelectList('table_order as o
      left join table_retailer as r on o.retailer_id=r.retailer_id
      left join table_salesman as s on o.salesman_id=s.salesman_id
      left join table_distributors as d on d.distributor_id=o.distributor_id      
      left join state as st on st.state_id=r.state
      left join city as c on c.city_id=r.city
      left join table_location as tl on tl.location_id = r.location_id
      left join table_branch as br on br.branch_id = r.branch_id',
        "o.*,r.retailer_name, r.retailer_code,r.retailer_address,r.retailer_location,r.display_outlet,s.salesman_name,s.employee_code,d.distributor_name,d.distributor_code,tl.location_name,st.state_name,c.city_name, br.branch_name, br.branch_code", '', $where . $sort, '');
    $remove = array("\n", "\r", "\n \r", "\t", ",");
    for ($i = 0; $i < count($auRec); $i++) {
        if ($auRec[$i]->order_status == 'A') {
            $status = "New Order";
            $color = "N";
        }
        if ($auRec[$i]->order_status == 'I') {
            $status = "Processed";
            $color = "I";
        }
        if ($auRec[$i]->order_status == 'D') {
            $status = "Dispatched";
            $color = "A";
        }

        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);
        /* Bill Type */
        $billTYPE = '';
        $billTYPE = '';
        switch (strtolower($auRec[$i]->bill_type)) {
            case 'apc':
                $billTYPE = "Advance Payment Collection";
                $bill_desc = $auRec[$i]->bill_desc;
                break;
            case 'ac':
                $billTYPE = "Advance Cheque";
                $bill_desc = $auRec[$i]->bill_desc;
                break;
            case 'fp':
                $billTYPE = "Flexible Plan";
                $bill_desc = $auRec[$i]->bill_desc;
                break;
        }

        switch ($auRec[$i]->order_by) {
            case 'S':
                $order_by = $AliaseUsers['salesman'];
                break;
            case "D":
                $order_by = $AliaseUsers['distributor'];
                break;
            case "R":
                $order_by = $AliaseUsers['retailer'];
                break;
            default :
                $order_by = '';
        }

        switch (strtolower($auRec[$i]->order_for)) {
            case 'r':
                $order_for = 'Retailer';
                break;
            case 'd':
                $order_for = 'Distributor';
                break;
        }
        if ($auRec[$i]->order_type == 'Yes') {
            if ($auRec[$i]->order_status == 'A') {
                $orderType = "Sales Order";
            }
            //$color = 'A';
        }
        if ($auRec[$i]->order_type == 'Return') {
            if ($auRec[$i]->order_status == 'A') {
                $orderType = "Return Order";
            }
            //$color = 'O';
        }
        if ($auRec[$i]->order_status != 'A') {
            // $CheckOrderSts = $_objAdmin->_getSelectList2('table_order as o inner join table_order_detail as od on o.order_id = od.order_id', "od.quantity, od.acc_quantity, od.is_processed ", '', " o.order_id='" . $auRec[$i]->order_id . "' AND ((od.quantity = od.acc_quantity AND od.is_processed=0) OR (od.quantity >od.acc_quantity AND od.is_processed=1)) ");
            // if (is_array($CheckOrderSts) && count($CheckOrderSts) > 0) {
            //     $orderStatus = 'Partially Pending';
            // } else {
            //     $orderStatus = 'Fully Invoiced';
            // }
            $orderStatus = 'Cancelled';
        } else {
            $orderStatus = 'Fully Pending';
        }
        //Todo Start : Sudhanshu 01 May 2024 : add cancel by column
        $cancelByUserType = '';
        $cancel_by = '';
        if (strtolower($auRec[$i]->cancel_by_user_type) == 'admin') {
            $cancelByUserType = 'Admin';
            $cancel_by = 'Admin';
        } elseif (strtolower($auRec[$i]->cancel_by_user_type) == 'distributor') {
            $cancelByUserType = $AliaseUsers['distributor'];
            $cancel_by = $auRec[$i]->distributor_name;
        } elseif (strtolower($auRec[$i]->cancel_by_user_type) == 'salesman') {
            $cancelByUserType = $AliaseUsers['salesman'];
            $cancel_by = $auRec[$i]->salesman_name;
        }
        //Todo End : Sudhanshu 01 May 2024 : add cancel by column
        if ($orderStatus != "Fully Invoiced") {
            $data .= $order_for . "\t" . $date_of_order . "\t" . $auRec[$i]->time_of_order . "\t" .
                $auRec[$i]->order_id . "\t" . ROUND($auRec[$i]->acc_total_invoice_amount, 2) . "\t" . $billTYPE . "\t" . $bill_desc . "\t" . $auRec[$i]->distributor_name . "\t" . $auRec[$i]->distributor_code . "\t" . $auRec[$i]->salesman_name . "\t" . $auRec[$i]->employee_code . "\t" . $auRec[$i]->retailer_name . "\t" . $auRec[$i]->retailer_code . "\t" . $auRec[$i]->branch_name . "\t" . $auRec[$i]->branch_code . "\t" . $auRec[$i]->state_name . "\t" . str_replace($remove, ' ', $auRec[$i]->city_name) . "\t" . str_replace($remove, ' ', $auRec[$i]->location_name) . "\t" . str_replace($remove, ' ', $auRec[$i]->retailer_location) . "\t" . str_replace($remove, ' ', $auRec[$i]->retailer_address) . "\t" . $orderType . "\t" . $order_by . "\t" . $orderStatus . "\t" . $cancelByUserType . "\t" . $cancel_by . "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['retailer'] . " Fully Partial Pending Order List.xls\"");
    echo $data;
    exit;
}
if (isset($_GET['export_return_invoice_list'])) {
    $data = "Order For \t Date\t Time\t Invoice Number\t Order Number \t Total Invoice Amount\t Bill Type \t Bill Description \t  " . $AliaseUsers['distributor'] . " Name\t  " . $AliaseUsers['distributor'] . " Code\t " . $AliaseUsers['salesman'] . "\t  " . $AliaseUsers['retailer'] . " Name\t " . $AliaseUsers['retailer'] . " Code \t Branch Name \t Branch Code \t State\t City\t Market \t Address\n";
    $sort = " ORDER BY date_of_order desc,time_of_order desc";
    if ($_SESSION['SalOrderList'] != '') {
        $salesman = " and s.salesman_id='" . $_SESSION['SalOrderList'] . "'";
    }
    if ($_SESSION['FromOrderList'] != '') {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['FromOrderList'])) . "'";
    } else {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['ToOrderList'] != '') {
        $todate = " and o.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToOrderList'])) . "'";
    } else {
        $todate = " and o.date_of_order <= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['distributorId'] != "A") {
        $disList = " o.distributor_id=" . $_SESSION['distributorId'] . " and";
    } else {
        $disList = "";
    }
    if ($_SESSION['OrderBy'] != '') {
        if ($_SESSION['OrderBy'] == 1) {
            $orderby = "";
        }
        if ($_SESSION['OrderBy'] == 2) {
            $orderby = " and o.order_status='A' ";
        }
        if ($_SESSION['OrderBy'] == 3) {
            $orderby = " and o.order_status='I' ";
        }
        if ($_SESSION['OrderBy'] == 4) {
            $orderby = " and o.order_status='D' ";
        }
    } else {
        $orderby = "";
    }

    if ($_SESSION['userLoginType'] == 3 && $_SESSION['distributorId'] > 0) {
        $distributorCond = " AND o.distributor_id ='" . $_SESSION['distributorId'] . "' ";
    }
    $where = " AND r.new='' AND o.order_for='R' AND o.order_type='Return' and o.distributor_id!='' $disLogCond $salesman $fromdate $todate $regionCondition $stateCondition $salesOrgCond $distributorCond $orderby and o.account_id =" . $_SESSION['accountId'];

    $auRec = $_objAdmin->_getSelectList('table_invoice as o
  	left join table_retailer as r on o.retailer_id=r.retailer_id AND o.order_for="R"
  	left join table_salesman as s on o.salesman_id=s.salesman_id
  	LEFT JOIN state AS ST1 ON ST1.state_id = s.state
	LEFT JOIN city AS C1 ON C1.city_id = s.city
  	left join table_distributors as d on o.distributor_id=d.distributor_id
  	left join table_retailer_channel_master as cm on r.channel_id=cm.channel_id
  	left join table_distributors as dd on dd.distributor_id=r.distributor_id
  	left join table_distributors as d2 on d2.distributor_id=o.distributor_id AND o.order_for="D"
  	left join state as st1 on st1.state_id=d2.state
  	left join city as c1 on c1.city_id=d2.city
  	left join table_region as re1 on re1.region_id=d2.region_id
  	LEFT join table_branch as br1 on br1.branch_id = d2.branch_id
  	left join state as st on st.state_id=dd.state
  	left join city as c on c.city_id=dd.city
  	left join table_region as re on re.region_id=dd.region_id
  	LEFT join table_branch as br on br.branch_id = r.branch_id',
        "o.*,r.retailer_name, r.retailer_code, r.retailer_location,r.lat as retlat,cm.channel_name,r.display_outlet,r.lng as retlng,s.salesman_name, s.employee_code, dd.distributor_name,st.state_name,c.city_name,ST1.state_name,  C1.city_name, br.branch_name, br.branch_code, CASE WHEN o.order_for='R' AND o.order_type !='No' THEN dd.distributor_name WHEN o.order_for='D' THEN d2.distributor_name END as DistName, CASE WHEN o.order_for='R' THEN r.retailer_address WHEN o.order_for='D' THEN d2.distributor_address END as Address, CASE WHEN o.order_for='R' THEN r.retailer_location WHEN o.order_for='D' THEN d2.distributor_location END as Location", $rp, $where . $sort, '');
    $remove = array("\n", "\r", "\n \r", "\t", ",");
    for ($i = 0; $i < count($auRec); $i++) {

        if ($auRec[$i]->order_type == 'Return') {
            if ($auRec[$i]->order_status == 'A') {
                $status = "Return Invoice";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }

            $color = ($auRec[$i]->order_status == 'A') ? "O" : "P";
        }

        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);
        /* Bill Type */
        $billTYPE = '';
        $billTYPE = '';
        switch (strtolower($auRec[$i]->bill_type)) {
            case 'apc':
                $billTYPE = "Advance Payment Collection";
                $bill_desc = $auRec[$i]->bill_desc;
                break;
            case 'ac':
                $billTYPE = "Advance Cheque";
                $bill_desc = $auRec[$i]->bill_desc;
                break;
            case 'fp':
                $billTYPE = "Flexible Plan";
                $bill_desc = $auRec[$i]->bill_desc;
                break;
        }
        switch (strtolower($auRec[$i]->order_for)) {
            case 'r':
                $order_for = 'Retailer';
                break;
            case 'd':
                $order_for = 'Distributor';
                break;
        }

        $data .= $order_for . "\t" . $date_of_order . "\t" . $auRec[$i]->time_of_order . "\t" . $auRec[$i]->bill_no . "\t" . $auRec[$i]->invoice_id . "\t" . number_format(floor($auRec[$i]->acc_total_invoice_amount), 2) . "\t" . $billTYPE . "\t" . $bill_desc . "\t" . $auRec[$i]->distributor_name . "\t" . $auRec[$i]->distributor_code . "\t" . $auRec[$i]->salesman_name . "\t" . $auRec[$i]->retailer_name . "\t" . $auRec[$i]->retailer_code . "\t" . $auRec[$i]->branch_name . "\t" . $auRec[$i]->branch_code . "\t" . $auRec[$i]->state_name . "\t" . $auRec[$i]->city_name . "\t" . str_replace($remove, ' ', $auRec[$i]->retailer_location) . "\t" . str_replace($remove, ' ', $auRec[$i]->retailer_address) . "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Return Invoice List.xls\"");
    echo $data;
    exit;
}
if (isset($_GET['sales_gst_report'])) {
    $data = "GSTIN/UIN of Recipient\tReceiver Code\tReceiver Name\tPlace Of Supply\tInvoice Number\tInvoice Date\tBefore Discount Amount\tScheme Discount\tBefore Tax Value\tSGST\tCGST\tIGST\tTaxable Value\tCess Amount\n";
    if ($_SESSION['FromOrderList'] != '') {
        $fromdate = date('Y-m-d', strtotime($_SESSION['FromOrderList']));
    } else {
        $fromdate = date('Y-m-d');
    }
    if ($_SESSION['ToOrderList'] != '') {
        $todate = date('Y-m-d', strtotime($_SESSION['ToOrderList']));
    } else {
        $todate = date('Y-m-d');
    }
    if ($_SESSION['distributor_id'] != '' && $_SESSION['userLoginType'] != 3) {
        $disLogCond = " AND o.distributor_id='" . $_SESSION['distributor_id'] . "' ";
    }
    if ($_SESSION['userLoginType'] == 3) {
        $disLogCond = " AND o.distributor_id='" . $_SESSION['distributorId'] . "' ";
    }
    $sort = " ORDER BY o.bill_no DESC";
    $groupby = " GROUP BY o.order_id";
    $where = " od.type=1 and o.date_of_order BETWEEN '" . $fromdate . "' AND '" . $todate . "' AND o.order_type='Yes' AND o.order_status='D' AND o.order_for='R' AND (o.order_type='Yes' OR o.order_type='Return') AND o.invoice_status='A' $disLogCond";
    $auRec = $_objAdmin->_getSelectList('table_invoice AS o
					inner JOIN table_invoice_detail as od on od.invoice_id = o.invoice_id and od.ref_order_id = o.ref_order_id
					LEFT JOIN table_retailer as r ON r.retailer_id=o.retailer_id
					LEFT JOIN state as st on st.state_id = r.state',
        " SUM(od.total) as total_invoice_amt,o.acc_total_invoice_amount,o.date_of_order, o.bill_no,
					r.retailer_code, r.retailer_name, r.gst_no, st.state_name, st.state_code,
					SUM(od.acc_quantity*od.price) as before_dis_amount,SUM(od.discount_amount) as discount_amount,
					SUM(od.discount_amount) as acc_discount_amount,0 as new_scheme_discount,
					SUM((od.acc_quantity*od.price)-(od.discount_amount)) as amt_before_tax, SUM(od.gst_amount) as sgst_amount,
					SUM(od.cgst_amount) as cgst_amount, SUM(od.igst_amount) as igst_amount", '', $where . $groupby . $sort);
    $remove = array("\n", "\r\n", "\r", ",");
    $ttl_sgst_amount = $ttl_cgst_amount = $ttl_igst_amount = $gTotalAmount = $gTotalAfterTaxAmount = 0;
    $gTotaltoken = 0;
    $gTotalscheme = 0;
    for ($i = 0; $i < count($auRec); $i++) {
        $sgst_amount = $cgst_amount = $igst_amount = 0;
        $amt_before_tax = $amt_after_tax = 0;
//        if ($auRec[$i]->amt_before_tax > 0) {
//            $amt_before_tax = ROUND($auRec[$i]->amt_before_tax, 2);
//        }
        $bill_no = '';
        $bill_details = explode('-', $auRec[$i]->bill_no);
        $bill_no = end($bill_details);
        //$amt_before_tax = ($auRec[$i]->acc_total_invoice_amount-($sgst_amount+$cgst_amount+$igst_amount));
//        $amt_after_tax = floor($auRec[$i]->total_invoice_amt);
        $beforeDisAmount = round($auRec[$i]->before_dis_amount, 2);
        $DisAmount = $auRec[$i]->acc_discount_amount;
        $amt_before_tax = round(($auRec[$i]->before_dis_amount - $DisAmount), 2);
        if ($auRec[$i]->sgst_amount > 0) {
            $sgst_amount = $auRec[$i]->sgst_amount;
        }
        if ($auRec[$i]->cgst_amount > 0) {
            $cgst_amount = $auRec[$i]->cgst_amount;
        }
        if ($auRec[$i]->igst_amount > 0) {
            $igst_amount = $auRec[$i]->igst_amount;
        }
        $amt_after_tax = round(($auRec[$i]->before_dis_amount - $DisAmount) + $sgst_amount + $cgst_amount + $igst_amount, 2);
        $retailer_name = htmlentities($auRec[$i]->retailer_name, ENT_QUOTES | ENT_IGNORE, "UTF-8");
        $state_name = htmlentities($auRec[$i]->state_name, ENT_QUOTES | ENT_IGNORE, "UTF-8");
        $data .= $auRec[$i]->gst_no;
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->retailer_code);
        $data .= "\t";
        $data .= str_replace($remove, '', str_replace('&amp;', '&', $retailer_name));
        $data .= "\t";
        $data .= str_replace($remove, '', str_replace('&amp;', '&', $state_name));
        $data .= "\t";
        $data .= $bill_no;
        $data .= "\t";
        $data .= $_objAdmin->_changeDate($auRec[$i]->date_of_order);
        $data .= "\t";

        $data .= ROUND($beforeDisAmount, 2);
        $data .= "\t";
        $data .= ROUND($auRec[$i]->acc_discount_amount, 2);
        $data .= "\t";
        $data .= ROUND($amt_before_tax, 2);
        $data .= "\t";
        $data .= ROUND($sgst_amount, 2);
        $data .= "\t";
        $data .= ROUND($cgst_amount, 2);
        $data .= "\t";
        $data .= ROUND($igst_amount, 2);
        $data .= "\t";
        $data .= ROUND($amt_after_tax, 2);
        $data .= "\n";

        $gTotalBeforeDisAmount = $gTotalBeforeDisAmount + $beforeDisAmount;
        $gTotalDisAmount = $gTotalDisAmount + $DisAmount;
        $gTotalAmount = $gTotalAmount + ($beforeDisAmount - $DisAmount);
        $ttl_sgst_amount = $ttl_sgst_amount + $sgst_amount;
        $ttl_cgst_amount = $ttl_cgst_amount + $cgst_amount;
        $ttl_igst_amount = $ttl_igst_amount + $igst_amount;
        $gTotalAfterTaxAmount = $gTotalAfterTaxAmount + $amt_after_tax;
        $gTotaltoken = $gTotaltoken + $auRec[$i]->acc_discount_amount;
        $gTotalscheme = $gTotalscheme + $auRec[$i]->new_scheme_discount;
    }
    $data .= "\t\t\t\t\tGrand Total\t";

    $data .= $gTotalBeforeDisAmount;
    $data .= "\t";
    $data .= $gTotaltoken;
    $data .= "\t";
    $data .= $gTotalAmount;
    $data .= "\t";
    $data .= $ttl_sgst_amount;
    $data .= "\t";
    $data .= $ttl_cgst_amount;
    $data .= "\t";
    $data .= $ttl_igst_amount;
    $data .= "\t";
    $data .= floor($gTotalAfterTaxAmount);
    $data .= "\n";
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"SALES_GST_REPORT.xls\"");
    echo $data;
    exit;
}
if (isset($_GET['sales_gst_detail_report'])) {

    $data = "GSTIN/UIN of Recipient\tReceiver Code\tReceiver Name\tPlace Of Supply\tInvoice Number\tInvoice Date\tItem Code\tItem Name\tHSN Code\tQuantity";
    $data .= "\tBefore Discount Amount\tScheme Discount\tRate\tBefore Tax Value\tSGST\tCGST\tIGST\tTaxable Value\tCess Amount\n";
    if ($_SESSION['FromOrderList'] != '') {
        $fromdate = date('Y-m-d', strtotime($_SESSION['FromOrderList']));
    } else {
        $fromdate = date('Y-m-d');
    }
    if ($_SESSION['ToOrderList'] != '') {
        $todate = date('Y-m-d', strtotime($_SESSION['ToOrderList']));
    } else {
        $todate = date('Y-m-d');
    }
    if ($_SESSION['userLoginType'] == 3) {
        $disLogCond = " AND o.distributor_id='" . $_SESSION['distributorId'] . "' ";
    }
    $groupby = " GROUP BY o.invoice_id, od.ref_order_id,od.item_id";
    $where = " od.type=1 and o.date_of_order BETWEEN '" . $fromdate . "' AND '" . $todate . "' AND o.order_type='Yes' AND o.order_status='D' AND o.order_for='R' AND o.invoice_status='A' $disLogCond";
    $auRec = $_objAdmin->_getSelectList('table_invoice AS o
					inner JOIN table_invoice_detail as od on od.invoice_id = o.invoice_id and od.ref_order_id = o.ref_order_id
					inner JOIN table_item as i on i.item_id = od.item_id
					LEFT JOIN table_group as g on g.group_id = i.group_id
					LEFT JOIN table_retailer as r ON r.retailer_id=o.retailer_id
					LEFT JOIN state as st on st.state_id = r.state', " o.bill_date, o.bill_no, r.retailer_code, 
					r.retailer_name, r.gst_no,
					i.item_name, i.item_code, od.*, g.hsn_code, st.state_name, st.state_code", '', $where . $groupby . $sort, '');
    $remove = array("\n", "\r\n", "\r", ",");
    $unArr = array();
    $ttl_sgst = $ttl_cgst = $ttl_igst = $ttl_before_tax_amount = $ttl_taxable_amount = 0;
    $ttl_token = 0;
    $ttl_scheme = 0;
    for ($i = 0; $i < count($auRec); $i++) {

        $amount_before_discount = '';
        $discount_amount = '';
        $sgst_amount = $cgst_amount = $igst_amount = 0;
        if ($auRec[$i]->gst_amount > 0) {
            $sgst_amount = $auRec[$i]->gst_amount;
        }
        if ($auRec[$i]->cgst_amount > 0) {
            $cgst_amount = $auRec[$i]->cgst_amount;
        }
        if ($auRec[$i]->igst_amount > 0) {
            $igst_amount = $auRec[$i]->igst_amount;
        }
        $data .= $auRec[$i]->gst_no;
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->retailer_code);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->retailer_name);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->state_name);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->bill_no);
        $data .= "\t";
        $data .= $_objAdmin->_changeDate($auRec[$i]->bill_date);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->item_code);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->item_name);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->hsn_code);
        $data .= "\t";
        $qty = $auRec[$i]->quantity;
        $data .= $qty;
        $data .= "\t";

        /*Added on request by veera sir. Added on 5 Dec by sachin*/
        $amount_before_discount = ($auRec[$i]->quantity * $auRec[$i]->price);
        $discount_amount = ($auRec[$i]->acc_discount_amount);
        $data .= $amount_before_discount;
        $data .= "\t";
        $data .= $auRec[$i]->acc_discount_amount;
        $data .= "\t";
        /*Added on request by veera sir. Added on 5 Dec by sachin*/
        $data .= ($auRec[$i]->gst_rate + $auRec[$i]->cgst_rate + $auRec[$i]->igst_rate);
        $data .= "\t";
        $data .= (($auRec[$i]->price * $auRec[$i]->quantity) - ($auRec[$i]->acc_discount_amount));
        $data .= "\t";
        $data .= $sgst_amount;
        $data .= "\t";
        $data .= $cgst_amount;
        $data .= "\t";
        $data .= $igst_amount;
        $data .= "\t";
        $data .= ((($auRec[$i]->quantity * $auRec[$i]->price) - ($auRec[$i]->acc_discount_amount)) + ($auRec[$i]->gst_amount + $auRec[$i]->cgst_amount + $auRec[$i]->igst_amount));
        $data .= "\t";
        $data .= '';
        $data .= "\n";
        $ttl_beforeDisAmt = $ttl_beforeDisAmt + $amount_before_discount;
        $ttl_DisAmt = $ttl_DisAmt + $discount_amount;
        $ttl_token = $ttl_token + $auRec[$i]->acc_discount_amount;

        $ttl_sgst = $ttl_sgst + $sgst_amount;
        $ttl_cgst = $ttl_cgst + $cgst_amount;
        $ttl_igst = $ttl_igst + $igst_amount;

        $ttl_before_tax_amount = $ttl_before_tax_amount + (($auRec[$i]->price * $auRec[$i]->quantity) - ($auRec[$i]->acc_discount_amount));
        $ttl_taxable_amount = ($ttl_taxable_amount + (((($auRec[$i]->quantity * $auRec[$i]->price) - ($auRec[$i]->acc_discount_amount))) + (($auRec[$i]->gst_amount) + ($auRec[$i]->cgst_amount) + ($auRec[$i]->igst_amount))));
    }
    $data .= "\t\t\t\t\t\t\t\t\tGrand Total\t";

    $data .= $ttl_beforeDisAmt;
    $data .= "\t";
    $data .= $ttl_token;
    $data .= "\t";
    $data .= "\t";
    $data .= $ttl_before_tax_amount;
    $data .= "\t";
    $data .= $ttl_sgst;
    $data .= "\t";
    $data .= $ttl_cgst;
    $data .= "\t";
    $data .= $ttl_igst;
    $data .= "\t";
    $data .= floor($ttl_taxable_amount);
    $data .= "\t";
    $data .= '';
    $data .= "\n";
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"SALES_GST_DETAIL_REPORT.xls\"");
    echo $data;
    exit;
}
if (isset($_GET['retailer_wise_issue_summary_report'])) {
    $unitArr = array();
    $auCol = $_objAdmin->_getSelectList('table_item as i inner join table_measurement_units as m on m.unit_id = i.unit_id', "i.unit_id, m.unit_code ", "", " i.status='A' AND i.unit_id > 0 GROUP BY i.unit_id ORDER BY m.unit_code ASC", '');
    foreach ($auCol as $unitVal) {
        $unitArr[$unitVal->unit_id] = $unitVal->unit_code;
    }
    $data = "" . $AliaseUsers['distributor'] . " Branch\t State\t" . $AliaseUsers['distributor'] . " Code\t" .
        $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['retailer'] . " Code\t" . $AliaseUsers['retailer'] . " Name\tInvoice Type\tInvoice Number\tInvoice Date\tItem Code\tItem Description\tSO Name\tSM Name\tQuantity";

    $data .= "\tAmount Before Discount\tScheme Discount\tDiscount\tTotal Discount Amount\tTaxable Amount\tTax Amount\tTotal Amount\n";
    if ($_SESSION['FromOrderList'] != '') {
        $fromdate = date('Y-m-d', strtotime($_SESSION['FromOrderList']));
    } else {
        $fromdate = date('Y-m-d');
    }
    if ($_SESSION['ToOrderList'] != '') {
        $todate = date('Y-m-d', strtotime($_SESSION['ToOrderList']));
    } else {
        $todate = date('Y-m-d');
    }
    if ($_SESSION['userLoginType'] == 3) {
        $disLogCond = " AND o.distributor_id='" . $_SESSION['distributorId'] . "' ";
    }
    $groupby = " GROUP BY o.invoice_id, od.ref_order_id,od.item_id";
    $where = " od.type=1 and o.bill_date BETWEEN '" . $fromdate . "' AND '" . $todate . "' AND o.order_status='D' AND o.order_for='R' AND (order_type='Yes' OR order_type='Return') AND o.invoice_status='A' $disLogCond";

    $auRec = $_objAdmin->_getSelectList('table_invoice AS o
      inner JOIN table_invoice_detail as od on od.invoice_id = o.invoice_id and od.ref_order_id = o.ref_order_id
      inner JOIN table_item as i on i.item_id = od.item_id
      
      left join table_payment_terms as pt on pt.terms_id = i.terms_id
      LEFT JOIN table_distributors as d ON d.distributor_id=o.distributor_id
      left join state as stt on stt.state_id = d.state
      left join table_branch as b on b.branch_id = d.branch_id
      LEFT JOIN table_retailer as r ON r.retailer_id=o.retailer_id
      LEFT JOIN table_salesman as sm ON sm.salesman_id=o.salesman_id
      LEFT JOIN table_salesman_hierarchy_relationship as shr ON shr.salesman_id=o.salesman_id
      LEFT JOIN table_salesman as so ON so.salesman_id=shr.rpt_user_id
      LEFT JOIN table_unit_conversion as uc on uc.item_id = od.item_id AND uc.unit_id = od.unit_id',
        "o.bill_type, order_type,o.date_of_order, o.retailer_id, o.distributor_id, stt.state_name, o.bill_no, o.bill_date, 
	  i.item_name, i.item_code,
      i.unit_id as item_unit_id, od.*, d.distributor_name, d.distributor_code,  pt.terms_desc, b.branch_code,r.retailer_code, r.retailer_name,
      ((od.acc_quantity/uc.denominator)*uc.numerator) as ttl_quantity1,od.quantity as ttl_quantity1 , sm.salesman_name, so.salesman_name as sales_manager", $rp, $where . $groupby . $sort, '');

    $dataSet = array();
    $QtydataSet = array();
    $remove = array("\n", "\r\n", "\r", ",");
    $unArr = array();
    $gTotalTaxBeforeAmount = $gTotalAmount = $gTotalTaxAmount = $gTaxBeforeAmountSales = $gTaxBeforeAmountReturn = $gTaxAmountSales = $gTaxAmountReturn = $gAmountSales = $gAmountReturn = $totalRebatDis = $totalschmDis = 0;
    for ($i = 0; $i < count($auRec); $i++) {

        $amount_before_discount = $discount_amount = '';

        $tintin_items_details = array();
        $salesmanName = (!empty($auRec[$i]->salesman_name)) ? $auRec[$i]->salesman_name : '-';
        $salesManager = (!empty($auRec[$i]->sales_manager)) ? $auRec[$i]->sales_manager : '-';
        $ordertype = '';
        if ($auRec[$i]->order_type == 'Yes') {
            $ordertype = 'Sales Invoice';
        } else if ($auRec[$i]->order_type == 'Return') {
            $ordertype = 'Return Invoice';
        }


        /* Bill Type */
        $billTYPE = '';
        $bill_desc = '';
        switch (strtolower($auRec[$i]->bill_type)) {
            case 'apc':
                $billTYPE = "Advance Payment Collection";
                $bill_desc = $auRec[$i]->bill_desc;
                break;
            case 'ac':
                $billTYPE = "Advance Cheque";
                $bill_desc = $auRec[$i]->bill_desc;
                break;
            case 'fp':
                $billTYPE = "Flexible Plan";
                $bill_desc = $auRec[$i]->bill_desc;
                break;
            case 'project':
                $billTYPE = "Project";
                $bill_desc = $auRec[$i]->bill_desc;
                break;
        }


        $amountSign = ($ordertype === 'Return Invoice') ? '- ' : '';
        $bill_details = explode('-', $auRec[$i]->bill_no);
        $bill_no = $bill_details[3];
        $bill_date = $_objAdmin->_changeDate($auRec[$i]->bill_date);
        $data .= $auRec[$i]->branch_code;
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->state_name);
        $data .= "\t";
        $data .= $auRec[$i]->distributor_code;
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->distributor_name);
        $data .= "\t";
        $data .= $auRec[$i]->retailer_code;
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->retailer_name);

        $data .= "\t";
        $data .= $ordertype;
        $data .= "\t";

        $data .= $bill_no;
        $data .= "\t";
        $data .= $bill_date;
        $data .= "\t";
        $data .= $auRec[$i]->item_code;
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->item_name);
        $data .= "\t";
        $data .= $salesmanName;
        $data .= "\t";
        $data .= $salesManager;
        $data .= "\t";

        $data .= $auRec[$i]->quantity;
        $data .= "\t";


        /**** Added on 5 Dec by sachin ****/

        $amount_before_discount = ($auRec[$i]->quantity * $auRec[$i]->price);
        $discount_amount = ($auRec[$i]->acc_discount_amount + $auRec[$i]->new_scheme_discount + $auRec[$i]->custom_discount_amount);

        $data .= $amountSign . $amount_before_discount;
        $data .= "\t";
        $data .= $amountSign . $auRec[$i]->acc_discount_amount;
        $data .= "\t";
        $data .= $amountSign . ($auRec[$i]->new_scheme_discount + $auRec[$i]->custom_discount_amount);
        $data .= "\t";
        $data .= $amountSign . $discount_amount;
        $data .= "\t";

        /**** Added on 5 Dec by sachin ****/
        $data .= $amountSign . (($auRec[$i]->quantity * $auRec[$i]->price) - ($discount_amount));
        $data .= "\t";
        $data .= $amountSign . ($auRec[$i]->gst_amount + $auRec[$i]->cgst_amount + $auRec[$i]->igst_amount);
        $data .= "\t";
        $data .= $amountSign . ((($auRec[$i]->quantity * $auRec[$i]->price) - ($discount_amount)) + ($auRec[$i]->gst_amount + $auRec[$i]->cgst_amount + $auRec[$i]->igst_amount));
        $data .= "\n";
        // $gTotalTaxBeforeAmount= $gTotalTaxBeforeAmount+(($auRec[$i]->acc_quantity*$auRec[$i]->price)-$auRec[$i]->acc_discount_amount);
        // $gTotalTaxAmount= $gTotalTaxAmount+($auRec[$i]->sgst_amount+$auRec[$i]->cgst_amount+$auRec[$i]->igst_amount);
        // $gTotalAmount= $gTotalAmount+ROUND((($auRec[$i]->acc_quantity*$auRec[$i]->price)+($auRec[$i]->sgst_amount+$auRec[$i]->cgst_amount+$auRec[$i]->igst_amount)),0);
        $beforeAmount = (($auRec[$i]->quantity * $auRec[$i]->price) - ($discount_amount));
        $taxAmount = ($auRec[$i]->gst_amount + $auRec[$i]->cgst_amount) + ($auRec[$i]->igst_amount);
        $amount = (((($auRec[$i]->quantity * $auRec[$i]->price) - ($discount_amount))) + (($auRec[$i]->gst_amount) + ($auRec[$i]->cgst_amount) + ($auRec[$i]->igst_amount)));
        if ($auRec[$i]->order_type === 'Yes') {

            $Totalamount_before_discount = $Totalamount_before_discount + $amount_before_discount;
            $Totaldiscount_amount = $Totaldiscount_amount + $discount_amount;
            $totalRebatDis = $totalRebatDis + $auRec[$i]->acc_discount_amount;
            $totalschmDis = $totalschmDis + ($auRec[$i]->new_scheme_discount + $auRec[$i]->custom_discount_amount);


            $gTaxBeforeAmountSales = $gTaxBeforeAmountSales + $beforeAmount;
            $gTaxAmountSales = $gTaxAmountSales + $taxAmount;
            $gAmountSales = $gAmountSales + $amount;
        } else {
            $Totalamount_before_discountReturn = $Totalamount_before_discountReturn + $amount_before_discount;
            // $Totaldiscount_amount = 0;

            $gTaxBeforeAmountReturn = $gTaxBeforeAmountReturn + $beforeAmount;
            $gTaxAmountReturn = $gTaxAmountReturn + $taxAmount;
            $gAmountReturn = $gAmountReturn + $amount;
        }
    }
    $gtotalAmountBeforeDiscount = ($Totalamount_before_discount - $Totalamount_before_discountReturn);
    $gtotalDiscountAmount = $Totaldiscount_amount;
    $gTotalTaxBeforeAmount = $gTaxBeforeAmountSales - $gTaxBeforeAmountReturn;
    $gTotalTaxAmount = $gTaxAmountSales - $gTaxAmountReturn;
    $gTotalAmount = $gAmountSales - $gAmountReturn;
    $data .= "\t\t\t\t\t\t\t\t\t\t\t\t\tGrand Total\t";

    $data .= $gtotalAmountBeforeDiscount;
    $data .= "\t";
    $data .= $totalRebatDis;
    $data .= "\t";
    $data .= $totalschmDis;
    $data .= "\t";
    $data .= $gtotalDiscountAmount;
    $data .= "\t";
    $data .= $gTotalTaxBeforeAmount;
    $data .= "\t";
    $data .= $gTotalTaxAmount;
    $data .= "\t";
    $data .= floor($gTotalAmount);
    $data .= "\n";
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"customer_wise_issue_summary_report.xls\"");
    echo $data;
    exit;
}

if (isset($_GET['export_payment_transaction_list'])) {
    $data = "PMT Number\tPayment Date\tPayment Time\t" . $AliaseUsers['distributor'] . " Code\t" . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['retailer'] . " Code\t" . $AliaseUsers['retailer'] . " Name\tPayment Reference Number\tPayment Amount\tAdjusted Amount\tPending Amount\tPayment Method\tCheque No.\tBank Detail\tPayment Remarks\tClearing Status\tStatus\tRemarks\n";
    if ($_SESSION['FromDisList'] != '') {
        $fromdate = date('Y-m-d', strtotime($_SESSION['FromDisList']));
    } else {
        $fromdate = date('Y-m-d');
    }
    if ($_SESSION['ToDisList'] != '') {
        $todate = date('Y-m-d', strtotime($_SESSION['ToDisList']));
    } else {
        $todate = date('Y-m-d');
    }
    if ($_SESSION['distributor_id'] != '' && $_SESSION['userLoginType'] != 3) {
        $disLogCond = " AND o.distributor_id='" . $_SESSION['distributor_id'] . "' ";
    }
    if ($_SESSION['userLoginType'] == 3) {
        $disLogCond = " AND o.distributor_id='" . $_SESSION['distributorId'] . "' ";
    }
    $where = " o.payment_date BETWEEN '" . $fromdate . "' AND '" . $todate . "' $disLogCond";
    $auRec = $_objAdmin->_getSelectList2('table_retailer_payment_transactions AS o
					LEFT JOIN table_distributors as d on d.distributor_id = o.distributor_id
					LEFT JOIN table_retailer as r ON r.retailer_id=o.retailer_id
					LEFT JOIN table_payment_method as pp on pp.payment_method_id = o.payment_method_id', " o.*, d.distributor_name, d.distributor_code, r.retailer_name, r.retailer_code, pp.payment_method_desc", "", $where . $sort, '');
    $remove = array("\n", "\r\n", "\r", ",");
    for ($i = 0; $i < count($auRec); $i++) {
        //$status = ($auRec[$i]->status == 'C') ? 'Cancelled' : '';
        if ($auRec[$i]->status == 'C') {
            $status = "Cancelled";
        } elseif ($auRec[$i]->status == 'A') {
            $status = "Active";
        } else {
            $status = "";
        }
        $pending_amount = ROUND((($auRec[$i]->total_amount) - ($auRec[$i]->adjusted_amount)), 0);
        $data .= $auRec[$i]->payment_id;
        $data .= "\t";
        $data .= $_objAdmin->_changeDate($auRec[$i]->payment_date);
        $data .= "\t";
        $data .= $auRec[$i]->payment_time;
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->distributor_code);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->distributor_name);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->retailer_code);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->retailer_name);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->payment_ref_no);
        $data .= "\t";
        $data .= $auRec[$i]->total_amount;
        $data .= "\t";
        $data .= $auRec[$i]->adjusted_amount;
        $data .= "\t";
        $data .= $pending_amount;
        $data .= "\t";
        $data .= $auRec[$i]->payment_method_desc;
        $data .= "\t";
        $data .= $auRec[$i]->cheque_no;
        $data .= "\t";
        $data .= $auRec[$i]->bank_details;
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->payment_remarks);
        $data .= "\t";
        $data .= $auRec[$i]->clearing_status;
        $data .= "\t";
        $data .= $status;
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->remarks);
        $data .= "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"payment_list.xls\"");
    echo $data;
    exit;
}
//Todo Start: Sagar: 27 Aug 2021 : Export Check in out report
if (isset($_GET['export_checkin_checkout_report'])) {
    $data = "" . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['salesman'] . " Code\t" . $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['retailer'] . " Code\t" . $AliaseUsers['retailer'] . " Group\t" . $AliaseUsers['retailer'] . " Channel\t" . $AliaseUsers['retailer'] . " Classification\t" . $AliaseUsers['retailer'] . " Type\t Contact Person\t Contact Person Ph. No.\t" . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\tZone\tState\tDistrict\tMarket\t Purpose of Visit\t Date\tCheck In Time\tCheck Out Time\tTime Spent\tCheckin Distance\n";
    $salCond = '';
    if (isset($_SESSION['SalAttList']) && $_SESSION['SalAttList'] > 0) {
        $salCond .= ' AND cc.salesman_id = "' . $_SESSION['SalAttList'] . '"';
    }
    if (isset($_SESSION['state']) && $_SESSION['state'] > 0) {
        $salCond .= ' AND r.state = "' . $_SESSION['state'] . '"';
    }
    if (!isset($_SESSION['FromAttList']) && empty($_SESSION['FromAttList'])) {
        $_SESSION['FromAttList'] = date('d M Y');
    }
    if (!isset($_SESSION['ToAttList']) && empty($_SESSION['ToAttList'])) {
        $_SESSION['ToAttList'] = date('d M Y');
    }
    if (isset($_SESSION['salesmanIdsCond']) && !empty($_SESSION['salesmanIdsCond'])) {
        $salesman = $_SESSION['salesmanIdsCond'];
    }
    //getting checkin checkouts for above checkins
    $auRec = $_objAdmin->_getSelectList('table_capture_checkin_out as cc
LEFT JOIN table_salesman AS s ON s.salesman_id = cc.salesman_id
LEFT JOIN table_retailer as r ON r.retailer_id = cc.retailer_id
LEFT JOIN table_retailer_group as rg ON rg.group_id = r.group_id
left join table_retailer_type_master as rtm ON rtm.type_id=r.type_id
left join table_retailer_channel_master as rc ON rc.channel_id=r.channel_id 
left join table_relationship as rel ON rel.relationship_id=r.relationship_id 
LEFT JOIN table_distributors as dd on dd.distributor_id = r.distributor_id
LEFT JOIN table_zone_state_mapping as szsm on szsm.state_id = r.state and szsm.account_id = r.account_id
LEFT JOIN table_zone as sz on sz.zone_id = szsm.zone_id
LEFT JOIN state as st ON st.state_id = r.state
LEFT JOIN table_purpose_visit as pv ON pv.purpose_visit_id = cc.purpose_visit_id
LEFT JOIN city as ct ON ct.city_id = r.city', 'cc.id as checkin_id,sz.zone_name,s.salesman_name,s.employee_code,cc.retailer_id,r.retailer_name,r.retailer_code,r.retailer_location,st.state_name,ct.city_name,cc.checkin_date,cc.checkin_time,cc.checkout_time,cc.lat,cc.lng,dd.distributor_name,dd.distributor_code,rg.group_name,rtm.type_name,rc.channel_name,rel.relationship_code as relation,pv.purpose,r.contact_person,r.contact_number', '', " cc.checkin_date BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromAttList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToAttList'])) . "'  AND r.status = 'A' $salesman $salCond ORDER BY cc.checkin_date DESC, cc.checkin_time DESC");

    $getRetSurveyLatLng = $_objAdmin->_getSelectList("table_retailer as r", "r.retailer_id,r.lat,r.lng", "", " r.status = 'A' AND r.lat_lng_capcure_accuracy!=0 AND (r.lat != '0.0' AND r.lng != '0.0') AND (r.lat != '' AND r.lng != '') ORDER BY r.retailer_id ASC");
    $retSurveyLatLngArr = [];
    if (is_array($getRetSurveyLatLng) && (count($getRetSurveyLatLng) > 0)) {
        foreach ($getRetSurveyLatLng as $key => $retSurveyLatLng) {
            $retSurveyLatLngArr[$retSurveyLatLng->retailer_id] = $retSurveyLatLng;
        }
    }
    if (is_array($auRec) && (count($auRec) > 0)) {
        foreach ($auRec as $key => $checkinData) {
            $checkin_date = date('d M Y', strtotime($checkinData->checkin_date));
            if (!empty($checkinData->checkout_time) && ($checkinData->checkout_time != '00:00:00')) {
                $checkinDateTime = date('Y-m-d H:i:s', strtotime($checkinData->checkin_date . ' ' . $checkinData->checkin_time));
                $checkoutDateTime = date('Y-m-d H:i:s', strtotime($checkinData->checkin_date . ' ' . $checkinData->checkout_time));
                $timeSpent = dateDifference($checkinDateTime, $checkoutDateTime);
            } else {
                $timeSpent = "-";
            }

            $distance = '-';
            if ((isset($checkinData->lat) && !empty($checkinData->lat) && ($checkinData->lat != '0.0')) && (isset($checkinData->lng) && !empty($checkinData->lng) && ($checkinData->lng != '0.0')) && (isset($retSurveyLatLngArr[$checkinData->retailer_id]) && !empty($retSurveyLatLngArr[$checkinData->retailer_id]))) {
                $retSurLat = $retSurveyLatLngArr[$checkinData->retailer_id]->lat;
                $retSurLng = $retSurveyLatLngArr[$checkinData->retailer_id]->lng;
                $distance = round(distance($checkinData->lat, $checkinData->lng, $retSurLat, $retSurLng, 'K'), 2) . ' KM';
            }

            $data .= '"' . $checkinData->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->group_name . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->channel_name . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->relation . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->type_name . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->contact_person . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->contact_number . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->zone_name . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->state_name . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->city_name . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->retailer_location . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->purpose . '"';
            $data .= "\t";
            $data .= '"' . $checkin_date . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->checkin_time . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->checkout_time . '"';
            $data .= "\t";
            $data .= '"' . $timeSpent . '"';
            $data .= "\t";
            $data .= '"' . $distance . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"check_in_out_report.xls\"");
    echo $data;
    exit;
}
//Todo End: Sagar: 27 Aug 2021 : Export Check in out report
//Todo Start: Sagar: 27 Aug 2021 : Export Distributor Check in out report
if (isset($_GET['export_distributor_checkin_checkout_report'])) {
    $data = "" . $AliaseUsers['salesman'] . " Code\t" . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\tZone\tState\tDistrict\t Purpose of Visit\t Date\tCheck In Time\tCheck Out Time\tTime Spent\tCheck In Distance\n";
    $salCond = '';
    if (isset($_SESSION['SalAttList']) && $_SESSION['SalAttList'] > 0) {
        $salCond .= ' AND dcc.salesman_id = "' . $_SESSION['SalAttList'] . '"';
    }
    if (isset($_SESSION['state']) && $_SESSION['state'] > 0) {
        $salCond .= ' AND d.state = "' . $_SESSION['state'] . '"';
    }
    if (!isset($_SESSION['FromAttList']) && empty($_SESSION['FromAttList'])) {
        $_SESSION['FromAttList'] = date('d M Y');
    }
    if (!isset($_SESSION['ToAttList']) && empty($_SESSION['ToAttList'])) {
        $_SESSION['ToAttList'] = date('d M Y');
    }
    if (isset($_SESSION['salesmanIdsCond']) && !empty($_SESSION['salesmanIdsCond'])) {
        $salesman = $_SESSION['salesmanIdsCond'];
    }
    //getting checkin checkouts for above checkins
    $auRec = $_objAdmin->_getSelectList('table_distributor_capture_checkin_out as dcc
LEFT JOIN table_salesman AS s ON s.salesman_id = dcc.salesman_id
LEFT JOIN table_distributors as d ON d.distributor_id = dcc.distributor_id
LEFT JOIN state as st ON st.state_id = d.state
LEFT JOIN table_zone_state_mapping as szsm on szsm.state_id = d.state and szsm.account_id = d.account_id
LEFT JOIN table_zone as sz on sz.zone_id = szsm.zone_id
LEFT JOIN table_purpose_visit as pv ON pv.purpose_visit_id = dcc.purpose_visit_id
LEFT JOIN city as ct ON ct.city_id = d.city', 'dcc.id as checkin_id,s.salesman_name,s.employee_code,d.distributor_name,d.distributor_code,sz.zone_name,st.state_name,ct.city_name,dcc.checkin_date,dcc.checkin_time,dcc.checkout_time,dcc.lat,dcc.lng,dcc.distributor_id,pv.purpose', '', " dcc.checkin_date BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromAttList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToAttList'])) . "' AND  d.status = 'A' $salesman $salCond ORDER BY dcc.checkin_date DESC , dcc.checkin_time DESC");

//Todo Start : get distributor lat lag : sudhanshu : 01 nov 2023
    $getDisSurveyLatLng = $_objAdmin->_getSelectList("table_distributors as d", "d.distributor_id,d.lat,d.lng", "", " d.status = 'A' AND d.lat_lng_capcure_accuracy!=0 AND (d.lat != '0.0' AND d.lng != '0.0') AND (d.lat != '' AND d.lng != '') ORDER BY d.distributor_id ASC");
    $disSurveyLatLngArr = [];
    if (is_array($getDisSurveyLatLng) && (count($getDisSurveyLatLng) > 0)) {
        foreach ($getDisSurveyLatLng as $key => $disSurveyLatLng) {
            $disSurveyLatLngArr[$disSurveyLatLng->distributor_id] = $disSurveyLatLng;
        }
    }

//Todo End : get distributor lat lag : sudhanshu : 01 nov 2023

    if (is_array($auRec) && (count($auRec) > 0)) {
        foreach ($auRec as $key => $checkinData) {
            $checkin_date = date('d M Y', strtotime($checkinData->checkin_date));
            if (!empty($checkinData->checkout_time) && ($checkinData->checkout_time != '00:00:00')) {
                $checkinDateTime = date('Y-m-d H:i:s', strtotime($checkinData->checkin_date . ' ' . $checkinData->checkin_time));
                $checkoutDateTime = date('Y-m-d H:i:s', strtotime($checkinData->checkin_date . ' ' . $checkinData->checkout_time));
                $timeSpent = dateDifference($checkinDateTime, $checkoutDateTime);
            } else {
                $timeSpent = "-";
            }

            if ((isset($checkinData->lat) && !empty($checkinData->lat) && ($checkinData->lat != '0.0')) && (isset($checkinData->lng) && !empty($checkinData->lng) && ($checkinData->lng != '0.0')) && (isset($disSurveyLatLngArr[$checkinData->distributor_id]) && !empty($disSurveyLatLngArr[$checkinData->distributor_id]))) {
                $disSurLat = $disSurveyLatLngArr[$checkinData->distributor_id]->lat;
                $disSurLng = $disSurveyLatLngArr[$checkinData->distributor_id]->lng;
                $checkinDistance = round(distance($checkinData->lat, $checkinData->lng, $disSurLat, $disSurLng, 'K'), 2) . ' KM';
            } else {
                $checkinDistance = '-';
            }

            $data .= '"' . $checkinData->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->zone_name . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->state_name . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->city_name . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->purpose . '"';
            $data .= "\t";
            $data .= '"' . $checkin_date . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->checkin_time . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->checkout_time . '"';
            $data .= "\t";
            $data .= '"' . $timeSpent . '"';
            $data .= "\t";
            $data .= '"' . $checkinDistance . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['distributor'] . "_check_in_out_report.xls\"");
    echo $data;
    exit;
}
//Todo End: Sagar: 27 Aug 2021 : Export Distributor Check in out report
//Todo Start: Sagar: 31 Aug 2021 : Export Retailer Wise Product Price
if (isset($_GET['export_ret_wise_item_price'])) {
    $data = "" . $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['retailer'] . " Code\tProduct Name\tProduct Code\tBrand Name\tPrice\tStatus\tCreated At\tUpdated At\n";
    //Added condition for role based access at brand lavel.
    $RoleBrands = $_objAdmin->getUserRoleBrand();
    $brandCnd = '';
    if (!empty($RoleBrands)) {
        $brandCnd = " AND b.brand_id IN(" . $RoleBrands . ")";
    }
    //Todo Start : sudhanshu 12 june 2024 : add status filter
    $statusCondi = '';
    if (isset($_SESSION['MasRetPrice']) && $_SESSION['MasRetPrice'] != 'all' && $_SESSION['MasRetPrice'] != '') {
        $statusCondi = " msi.status ='" . $_SESSION['MasRetPrice'] . "'";
    }
    //Todo End : sudhanshu 12 june 2024 : add status filter
    $where = " $statusCondi $brandCnd ";

    $auRec = $_objAdmin->_getSelectList('table_retailer_wise_item_price as msi
INNER JOIN table_retailer as r ON r.retailer_id = msi.retailer_id
INNER JOIN table_item as it ON it.item_id = msi.item_id
left join table_brands as b on b.brand_id = it.brand_id
', "msi.id as price_id,msi.retailer_id,r.retailer_name,r.retailer_code,
msi.item_id,it.item_code,it.item_name,b.brand_name,msi.price,msi.created_at,msi.updated_at,msi.status", '',
        $where . " ORDER BY r.retailer_name ASC, it.item_name ASC");
    if (is_array($auRec) && (count($auRec) > 0)) {
        foreach ($auRec as $key => $priceData) {
            $created_at = date('d M Y H:i A', strtotime($priceData->created_at));
            $updated_at = date('d M Y H:i A', strtotime($priceData->updated_at));
            $status = ($priceData->status == 'A') ? "Active" : "Inactive";
            $data .= '"' . $priceData->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $priceData->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $priceData->item_name . '"';
            $data .= "\t";
            $data .= '"' . $priceData->item_code . '"';
            $data .= "\t";
            $data .= '"' . $priceData->brand_name . '"';
            $data .= "\t";
            $data .= '"' . $priceData->price . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\t";
            $data .= '"' . $created_at . '"';
            $data .= "\t";
            $data .= '"' . $updated_at . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['retailer'] . "_Wise_Product_Price.xls\"");
    echo $data;
    exit;
}
//Todo End: Sagar: 31 Aug 2021 : Export Retailer Wise Product Price
//Todo Start: Sagar: 2nd Sep 2021 : Export Enquiry Master
if (isset($_GET['export_enquiry'])) {
    $data .= "S.No\tCustomer Name\t Customer Channel\t Customer Phone No\t Customer Email\t Std Code\t Telephone No\t State\t City\t Area\t Enquiry\tEnquiry Source\tEnquiry Type\tEnquiry Status\tQuantity Enquired (Sq. Mtrs.)\t Final Quantity\t Added By\t " . $AliaseUsers['salesman'] . "\t Date\tStatus\n";
    //check hierarchy and state of salesman
    if ($_SESSION['salesmanId'] != 0) {
        $checkHierarchy = $_objAdmin->_getSelectList2(' table_salesman as s
  	             left join table_salesman_hierarchy_relationship as shr on shr.salesman_id = s.salesman_id', "shr.hierarchy_id,s.state", '', " shr.salesman_id = '" . $_SESSION['salesmanId'] . "' ");
        //echo "<pre/>";print_r($checkHierarchy);die;
    }
    if ($checkHierarchy[0]->hierarchy_id == 4) {
        $where = " E.account_id='" . $_SESSION['accountId'] . "'and E.state_id='" . $checkHierarchy[0]->state . "' ";
    } else {
        $where = " E.account_id='" . $_SESSION['accountId'] . "'";
    }
    $sort = " ORDER BY E.enquiry_id ASC";
    $auRec = $_objAdmin->_getSelectList2('table_enquiry as E 
		left join state as ST on ST.state_id=E.state_id 
		left join city as C on C.city_id=E.city_id 
		left join table_relationship as R on R.relationship_id=E.relationship_id 
		left join table_enquiry_type as ET on ET.enquiry_type_id=E.enquiry_type_id
		left join table_enquiry_source as ES on ES.source_id = E.source_id
		left join table_retailer_channel_master as RC on RC.channel_id = E.channel_id
		left join table_salesman as tsa on tsa.salesman_id=E.added_salesman_id', "E.*,ST.state_name,C.city_name,ET.enquiry_type_id,ET.enqury_type,ES.source_id,ES.source_name,RC.channel_id,RC.channel_name,tsa.salesman_name as added_salesman_name,E.added_salesman_id", '', $where . $sort);
    for ($i = 0; $i < count($auRec); $i++) {
        $enqDet = $_objAdmin->_getSelectList2('table_enquiry_details as ed
    left join table_enquiry_status as ST on ST.enquiry_status_id= ed.enquiry_status_id
    left join table_salesman as ts on ts.salesman_id=ed.salesman_id', 'ST.enquiry_status_id,ST.enqury_status,ts.salesman_name as assgined_salesperson ,ed.salesman_id as assgined_salesperson_id', '', "ed.enquiry_id='" . $auRec[$i]->enquiry_id . "' ORDER BY ed.enquiry_detail_id DESC LIMIT 0,1");
        $enqryDetail = [];
        if (is_array($enqDet) && (count($enqDet) > 0)) {
            $enqryDetail = $enqDet[0];
        }
        $status = ($auRec[$i]->status == 'A') ? "Active" : "Inactive";
        $addedBy = '';
        if ($auRec[$i]->added_salesman_id == 0) {
            $addedBy = 'Admin';
        } else {
            $addedBy = $auRec[$i]->added_salesman_name;
        }
        $data .= '"' . $auRec[$i]->enquiry_id . '"';
        $data .= "\t";
        $data .= '"' . ucwords($auRec[$i]->retailer_name) . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->channel_name . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->retailer_phone_no . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->retailer_email . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->std_code . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->telephone_no . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->state_name . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->city_name . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->retailer_location . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->enquiry_text . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->source_name . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->enqury_type . '"';
        $data .= "\t";
        $data .= '"' . $enqryDetail->enqury_status . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->qty_enqur . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->final_qty . '"';
        $data .= "\t";
        $data .= '"' . ucwords($addedBy) . '"';
        $data .= "\t";
        $data .= '"' . ucwords($enqryDetail->assgined_salesperson) . '"';
        $data .= "\t";
        $data .= '"' . date("Y-m-d", strtotime($auRec[$i]->created_date)) . '"';
        $data .= "\t";
        $data .= '"' . ucwords($status) . '"';
        $data .= "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"enquiry_list.xls\"");
    echo $data;
    exit;
}
//Todo End: Sagar: 2nd Sep 2021 : Export Enquiry Master
//Todo Start: Sagar: 2nd Sep 2021 : Export Project Module
if (isset($_GET['export_project_list'])) {
//for state
    $data = "Project Code \tProject Name \tItem Name \tBrand Name \tZone \tProject Zone \tState \tProject Location \tDepartment \t" . $AliaseUsers['salesman'] . " Name \tDealer Name \tCustomer Name \tCategory \tEnquiry Month\tSpecification Month\tMaturity Date\tOrder Qty\tSpecification Remark\tSpecification Type \tProjected Qty \tProduct Type \tSpecification Stage \tSales Stage \tBOQ Status\t Status\n";
    $salesman = '';
    if (isset($_SESSION['SalsInCondition']) && !empty($_SESSION['SalsInCondition'])) {
        $salesman = $_SESSION['SalsInCondition'];
    }
    //Todo Start : sudhanshu 13 june 2024 : add status filter
    $statusCondi = '';
    if (isset($_SESSION['MasProject']) && $_SESSION['MasProject'] != 'all' && $_SESSION['MasProject'] != '') {
        $statusCondi = " AND p.status ='" . $_SESSION['MasProject'] . "'";
    }
    //Todo End : sudhanshu 13 june 2024 : add status filter
    $condi = " p.status!='D' and p.account_id='" . $_SESSION['accountId'] . "' $statusCondi $salesman ORDER BY p.project_name ASC";
    $tbl_names = "table_project as p " .
        "LEFT JOIN table_item  AS item ON item.item_id = p.item_id " .
        "LEFT JOIN table_brands AS brand ON brand.brand_id = p.brand_id " .
        "LEFT JOIN table_salesman AS salesman ON salesman.salesman_id = p.salesman_id " .
//            "LEFT JOIN table_retailer AS architect ON architect.retailer_id = p.project_architect ".
        "LEFT JOIN table_retailer AS customer ON (customer.retailer_id = p.retailer_id) " .
        "LEFT JOIN table_distributors AS dealer ON (dealer.distributor_id = p.distributor_id) " .
        "LEFT JOIN table_zone AS zone ON zone.zone_id = p.zone_id " .
        "LEFT JOIN table_zone AS project_zone ON project_zone.zone_id = p.project_zone " .
        //for state
        "LEFT JOIN state AS state ON state.state_id = p.state_id " .
        "LEFT JOIN table_department  AS tb_dept ON tb_dept.department_id = p.department_id " .
        "LEFT JOIN table_specification_type  AS spf_type ON spf_type.specification_type_id = p.specification_type_id " .
        "LEFT JOIN table_product_type_master  AS ptypem ON ptypem.product_type_id = p.product_type_id " .
        "LEFT JOIN table_project_category AS pc ON pc.category_id = p.category_id " .
        "LEFT JOIN table_specification_statge_status  AS spec_stage ON spec_stage.spec_status_id = p.specification_stage_status_id " .
        "LEFT JOIN table_sales_statge_status  AS sales_stage ON sales_stage.sales_stg_status_id = p.sales_stage_status_id " .
        "LEFT JOIN table_boq_status  AS boq_status ON boq_status.boq_status_id = p.boq_id ";
    $col_names = "p.*,item.item_name,item.item_code,brand.brand_name,salesman.salesman_name,customer.retailer_name AS customer_name,dealer.distributor_name AS dealer_name,zone.zone_name,project_zone.zone_name AS project_zone_name,state.state_name,tb_dept.department_name,spf_type.specification_name,ptypem.product_type_name,pc.category_name,spec_stage.spec_status_name,sales_stage.sales_stg_status_name,boq_status.boq_status_name";
    $auRec = $_objAdmin->_getSelectList($tbl_names, $col_names, '', $condi);
    $remove = array("\n", "\r\n", "\r");
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . str_replace($remove, '', $auRec[$i]->project_code) . '"';
            $data .= "\t";
            $data .= '"' . str_replace($remove, '', $auRec[$i]->project_name) . '"';
            $data .= "\t";
            $data .= '"' . str_replace($remove, '', $auRec[$i]->item_name) . '"';
            $data .= "\t";
            $data .= '"' . str_replace($remove, '', $auRec[$i]->brand_name) . '"';
            $data .= "\t";
            $data .= '"' . str_replace($remove, '', $auRec[$i]->zone_name) . '"';
            $data .= "\t";
            $data .= '"' . str_replace($remove, '', $auRec[$i]->project_zone_name) . '"';
            $data .= "\t";
            //for state
            $data .= '"' . str_replace($remove, '', $auRec[$i]->state_name) . '"';
            $data .= "\t";
            $data .= '"' . str_replace($remove, '', $auRec[$i]->project_location) . '"';
            $data .= "\t";
            $data .= '"' . str_replace($remove, '', $auRec[$i]->department_name) . '"';
            $data .= "\t";
            $data .= '"' . str_replace($remove, '', $auRec[$i]->salesman_name) . '"';
            $data .= "\t";
            $_custname = '';
            $_distname = '';
            if (!empty($auRec[$i]->retailer_id)) {
                $where = " customer.retailer_id IN (" . $auRec[$i]->retailer_id . ") ";
                $custnames = $_objAdmin->_getSelectList("table_retailer AS customer", "customer.retailer_name AS customer_name", $rp, $where, '');
                if (count($custnames) > 0) {
                    $_custname = array_map(function ($value) {
                        return $value->customer_name;
                    }, $custnames);
                }
            }
            if (!empty($auRec[$i]->distributor_id)) {
                $where = "dealer.distributor_id IN (" . $auRec[$i]->distributor_id . ") ";
                $distnames = $_objAdmin->_getSelectList("table_distributors AS dealer", "dealer.distributor_name AS dealer_name", $rp, $where, '');
                if (count($distnames) > 0) {
                    $_distname = array_map(function ($value) {
                        return $value->dealer_name;
                    }, $distnames);
                }
            }
            $data .= '"' . str_replace($remove, '', implode(',', $_distname)) . '"';
            $data .= "\t";
            $data .= '"' . str_replace($remove, '', implode(',', $_custname)) . '"';
            $data .= "\t";
            $data .= '"' . str_replace($remove, '', $auRec[$i]->category_name) . '"';
            $data .= "\t";
            $data .= '"' . str_replace($remove, '', $auRec[$i]->enquiry_month) . '"';
            $data .= "\t";
            $data .= '"' . str_replace($remove, '', $auRec[$i]->specification_month) . '"';
            $data .= "\t";
            $data .= '"' . str_replace($remove, '', $auRec[$i]->maturity_date) . '"';
            $data .= "\t";
            $data .= '"' . str_replace($remove, '', $auRec[$i]->order_qty) . '"';
            $data .= "\t";
            $data .= '"' . str_replace($remove, '', $auRec[$i]->specification_remark) . '"';
            $data .= "\t";
            $data .= '"' . str_replace($remove, '', $auRec[$i]->specification_name) . '"';
            $data .= "\t";
            $data .= '"' . str_replace($remove, '', $auRec[$i]->projected_qty) . '"';
            $data .= "\t";
            $data .= '"' . str_replace($remove, '', $auRec[$i]->product_type_name) . '"';
            $data .= "\t";
            $data .= '"' . str_replace($remove, '', $auRec[$i]->spec_status_name) . '"';
            $data .= "\t";
            $data .= '"' . str_replace($remove, '', $auRec[$i]->sales_stg_status_name) . '"';
            $data .= "\t";
            $data .= '"' . str_replace($remove, '', $auRec[$i]->boq_status_name) . '"';
            $data .= "\t";
            $sts = ($auRec[$i]->status == 'A') ? "Active" : "Inactive";
            $data .= '"' . $sts . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"project_list.xls\"");
    echo $data;
    exit;
}
if (isset($_GET['export_project_discount_report'])) {
    $data = "From Date: " . $_SESSION['fromDate'] . "\t To Date: " . $_SESSION['toDate'] . "\n";
    $data .= "Project Code\t Project Name\t " . $AliaseUsers['salesman'] . " Name\t Project Zone Name\t Supply\t Tentative Supply date\t Billing to be done to\t Price Value Required upto date\t Latitude\t Longitude\n";
    $sort = " ORDER BY pd.project_discount_id DESC";
    $where .= '';
    if (isset($_SESSION['complain_salesman_id']) && $_SESSION['complain_salesman_id'] != '') {
        $salArrList = $_SESSION['complain_salesman_id'];
        $salesman = $_objArrayList->getSalesmanConsolidatedList($salArrList, 2);
    }
    if ($_SESSION['fromDate'] != '') {
        $fromdate = " and pd.created_date >= '" . date('Y-m-d', strtotime($_SESSION['fromDate'])) . "'";
    } else {
        $fromdate = " and pd.created_date >= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['toDate'] != '') {
        $todate = " and pd.created_date <= '" . date('Y-m-d', strtotime($_SESSION['toDate'])) . "'";
    } else {
        $todate = " and pd.created_date <= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['project_salesman_id'] != "") {
        $where .= " AND pd.salesman_id=" . $_SESSION['project_salesman_id'];
    }
    $where .= " $salesman $fromdate $todate";
    $tbl_names = "table_project_discount as pd " .
        "LEFT JOIN table_project AS p ON pd.project_id = p.project_id " .
        "LEFT JOIN table_zone AS z ON z.zone_id = p.project_zone " .
        "LEFT JOIN table_salesman AS salesman ON salesman.salesman_id = pd.salesman_id ";
    $col_names = "pd.*,salesman.salesman_name,p.project_code,p.project_name,z.zone_name";
    $auRec = $_objAdmin->_getSelectList($tbl_names, $col_names, "", $where . $sort, '');
    for ($i = 0; $i < count($auRec); $i++) {
        if ($auRec[$i]->project_name != "" && $auRec[$i]->project_code != "") {
            $data .= '"' . $auRec[$i]->project_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->project_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->zone_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->supply . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->tentative_supply_date . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->bill_to_be_done_to . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->price_val_req_upto_date . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->lat . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->lng . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Project_Discount_Report.xls\"");
    echo $data;
    exit;
}
//Todo End: Sagar: 2nd Sep 2021 : Export Project Module
if (isset($_GET['export_stockist_order_listing'])) {
    //echo hello; exit;
    $data = "Order For \t Date\t Time\t Order Number\tOrder By\tOrder By user Type\tRemark\t Total Order Amount\t Invoice Status\t  Total No. Of Items\t " .
        $AliaseUsers['stockist'] . " Name\t" . $AliaseUsers['stockist'] . " Code\t State\t District\t Market \t Address\t Order Status \tCancel By User Type\tCancel By\t Comments\t Reason\n";
    $sort = " ORDER BY date_of_order desc,time_of_order desc";
    if ($_SESSION['SalDisList'] != '') {
        $salesman = " and s.salesman_id='" . $_SESSION['SalDisList'] . "'";
    }
    if ($_SESSION['FromOrderList'] != '') {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['FromOrderList'])) . "'";
    } else {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['ToOrderList'] != '') {
        $todate = " and o.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToOrderList'])) . "'";
    } else {
        $todate = " and o.date_of_order <= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['stockistId'] != "A" && $_SESSION['stockistId'] > 0) {
        $disList = " and o.stockist_id=" . $_SESSION['stockistId'];
    } else {
        $disList = "";
    }
    if ($_SESSION['OrderBy'] != '') {
        if ($_SESSION['OrderBy'] == 1) {
            $orderby = "";
        }
        if ($_SESSION['OrderBy'] == 2) {
            $orderby = " and o.order_status='A' ";
        }
        if ($_SESSION['OrderBy'] == 3) {
            $orderby = " and o.order_status='I' ";
        }
        if ($_SESSION['OrderBy'] == 4) {
            $orderby = " and o.order_status='D' ";
        }
    } else {
        $orderby = "";
    }

    if ($_SESSION['userLoginType'] == 7 && $_SESSION['stockistId'] > 0) {
        $distributorCond = " AND o.stockist_id ='" . $_SESSION['stockistId'] . "' ";
    }
    $where = " o.order_for='S' and o.stockist_id!=''  $fromdate $todate  $distributorCond $disList $orderby";
    $auRec = $_objAdmin->_getSelectList('table_stockist_order as o
			left join table_stockist as d on d.stockist_id=o.stockist_id			
			left join state as st on st.state_id=d.state
			left join city as c on c.city_id=d.city
			', "o.*,d.stockist_name,d.stockist_code,st.state_name,c.city_name, d.stockist_location, d.stockist_address", $rp, $where . $sort, '');
    $remove = array("\n", "\r", "\n \r", "\t", ",");
    for ($i = 0; $i < count($auRec); $i++) {
        if ($auRec[$i]->order_type == 'Yes') {
            if ($auRec[$i]->order_status == 'A') {
                $status = "New Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }
            if ($auRec[$i]->order_status == 'C') {
                $status = "Cancelled";
            }

        }
        if ($auRec[$i]->order_type == 'No') {
            $status = ($auRec[$i]->order_status == 'A') ? "No Order" : "Processed";
            $color = ($auRec[$i]->order_status == 'A') ? "I" : "P";
        }
        if ($auRec[$i]->order_type == 'Adhoc') {
            if ($auRec[$i]->order_status == 'A') {
                $status = "New Adhoc Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }

            if ($auRec[$i]->order_status == 'C') {
                $status = "Cancelled";
            }
        }
        if ($auRec[$i]->order_type == 'Return') {
            if ($auRec[$i]->order_status == 'A') {
                $status = "Return Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }

            if ($auRec[$i]->order_status == 'C') {
                $status = "Cancelled";
            }
        }

        //Todo Start : sudhanshu add order by column 15 march 2024
        $orderTakeBy = '';
        if ($auRec[$i]->order_by == 'stockist') {
            $orderBy = 'Stockist';
            $orderTakeBy = $auRec[$i]->stockist_name;
        }
        if ($auRec[$i]->order_by == 'admin') {
            $orderBy = 'Admin';
            $orderTakeBy = 'Admin';
        }
        //Todo End : sudhanshu add order by column 15 march 2024
//        $CheckOrderSts = $_objAdmin->_getSelectList2('table_stockist_order as o
//	  inner join table_stockist_order_detail as od on o.order_id = od.order_id',
//            "od.quantity, od.acc_quantity,od.is_processed ", '', " o.order_id='" . $auRec[$i]->order_id . "'
//		AND ((od.quantity = od.acc_quantity AND od.is_processed=0) OR (od.quantity > od.acc_quantity AND od.is_processed=1))
//		and od.free_item_id = 0");
//        if ($auRec[$i]->order_status == 'A') {
//            $orderStatus = 'Fully Pending';
//        } else if (is_array($CheckOrderSts) && count($CheckOrderSts) > 0) {
//            $orderStatus = 'Partially Invoiced';
//        } else {
//            $orderStatus = 'Fully Invoiced';
//        }
//        if ($auRec[$i]->order_status == 'C') {
//            $orderStatus = '';
//        }

        //get total order qty : sudhanshu : 20 march 2024
        $totalQty = $_objAdmin->_getSelectList2('table_stockist_order as o 
	  inner join table_stockist_order_detail as od on o.order_id = od.order_id',
            "sum(od.quantity) as total_qty ", '', " o.order_id='" . $auRec[$i]->order_id . "' 
		
		and od.free_item_id = 0");

        $total_order_qty = $totalQty[0]->total_qty;

        //end get total order qty sudhanshu : 20 march 2024

        //now get  inovice status sudhanshu : 20 march 2024
        $invoicedQty = $_objAdmin->_getSelectList2('table_stockist_invoice as o 
	  inner join table_stockist_invoice_detail as od on o.invoice_id = od.invoice_id',
            "sum(acc_quantity) as invocie_qty", '', " o.ref_order_id='" . $auRec[$i]->order_id . "' ");

        $total_invoiced_qty = $invoicedQty[0]->invocie_qty;

        if ($auRec[$i]->order_status == 'A') {
            $orderStatus = 'Fully Pending';
        } else if (intval($total_order_qty) > intval($total_invoiced_qty)) {
            $orderStatus = 'Partially Invoiced';
        } else {
            $orderStatus = 'Fully Invoiced';
        }
        if ($auRec[$i]->order_status == 'C') {
            $orderStatus = '';
        }

        //end now get  inovice status sudhanshu : 20 march 2024

        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);
        $auRec2 = $_objAdmin->_getSelectList2('table_stockist_order_detail', "count( distinct(item_id)) as total_item", '', " order_id = " . $auRec[$i]->order_id . " and type = 1");
        switch (strtolower($auRec[$i]->order_for)) {
            case 'r':
                $order_for = 'Retailer';
                break;
            case 's':
                $order_for = 'Stockist';
                break;
        }

        //Todo Start : Sudhanshu 02 May 2024 : add cancel by column
        $cancelByUserType = '';
        $cancel_by = '';
        if (strtolower($auRec[$i]->cancel_by_user_type) == 'admin') {
            $cancelByUserType = 'Admin';
            $cancel_by = 'Admin';
        } elseif (strtolower($auRec[$i]->cancel_by_user_type) == 'stockist') {
            $cancelByUserType = 'Stockist';
            $cancel_by = $auRec[$i]->stockist_name;
        }
        //Todo End : Sudhanshu 02 May 2024 : add cancel by column
        $data .= $order_for . "\t" . $date_of_order . "\t" . $auRec[$i]->time_of_order . "\t" . $auRec[$i]->order_id
            . "\t" . $orderTakeBy . "\t" . $orderBy . "\t" . $auRec[$i]->remark . "\t" .
            $auRec[$i]->acc_total_invoice_amoun .
            "\t" .
            $orderStatus . "\t" . $auRec2[0]->total_item .
            "\t" .
            str_replace($remove, ' ', $auRec[$i]->stockist_name) . "\t" . $auRec[$i]->stockist_code . "\t" . $auRec[$i]->state_name . "\t" . $auRec[$i]->city_name . "\t" . str_replace($remove, ' ', $auRec[$i]->stockist_location) . "\t" . str_replace($remove, ' ', $auRec[$i]->stockist_address) . "\t" . $status . "\t" . $cancelByUserType . "\t" . $cancel_by . "\t" . $auRec[$i]->comments . "\t" . $auRec[$i]->tag_description . "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['stockist'] . " Order List.xls\"");
    echo $data;
    exit;
}
if (isset($_GET['export_stockist_inprocess_stock_list'])) {
    $data = "" . $AliaseUsers['stockist'] . " Name \t " . $AliaseUsers['stockist'] . " Code \t GST No. \t PAN No. \t Bill No. \t Bill Date \t Category Name\t Brand Name \t Item Name \t Item Code \t Quantity\t Rate \t Invoice Value \t Taxable Amount\t SGST Amount\t CGST Amount \t IGST AMOUNT \t Cess Amount\t Last Update Date \n";
    if ($_SESSION['stockistId'] != "" && $_SESSION['stockistId'] != "0") {
        $dis = " and d.stockist_id='" . $_SESSION['stockistId'] . "'";
    }
    //Added condition for role based access at brand lavel.
    $RoleBrands = $_objAdmin->getUserRoleBrand();
    $brandCnd = '';
    if (!empty($RoleBrands)) {
        $brandCnd = " b.brand_id IN(" . $RoleBrands . ")";
    }
    $where = $brandCnd;
    $auRec = $_objAdmin->_getSelectList('table_item_stockist_stk_inprocess AS s 
		LEFT JOIN table_cases AS clr ON clr.case_id = s.attribute_value_id
		LEFT JOIN table_category AS c ON c.category_id = s.category_id
		LEFT JOIN table_item AS i ON i.item_id = s.item_id
		left join table_brands as b on b.brand_id = i.brand_id
		LEFT JOIN table_stockist AS d ON d.stockist_id = s.stockist_id',
        "d.stockist_code,d.stockist_name,d.pan_no,d.gst_no, b.brand_name,s.price,
		c.category_name, clr.case_size, i.item_name, i.item_code, s.acpt_stock_value, s.rec_stock_value, s.status, 
		s.bill_no,s.bill_date,s.last_update_datetime,s.stockist_stk_inpro_id,s.invoice_value,s.taxable_value,s.sgst_amount,s.cgst_amount,
		s.igst_amount,s.cess_amount", "", $where . $dis . ' ORDER BY d.stockist_name ASC');
    //GROUP BY s.stockist_id, s.item_id,s.attribute_value_id, s.color_id
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . $auRec[$i]->stockist_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->stockist_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->gst_no . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->pan_no . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->bill_no . '"';
            $data .= "\t";
            $data .= '"' . $_objAdmin->_changeDate($auRec[$i]->bill_date) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->category_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->brand_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->rec_stock_value . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->price . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->invoice_value . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->taxable_value . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->sgst_amount . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->cgst_amount . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->igst_amount . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->cess_amount . '"';
            $data .= "\t";
            $data .= '"' . date('d M Y H:i', strtotime($auRec[$i]->last_update_datetime)) . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"stockist_sales_report.xls\"");
    echo $data;
    exit;
}
if (isset($_GET['export_distributor_inprocess_stock_list'])) {
    $data = "" . $AliaseUsers['distributor'] . " Name \t " . $AliaseUsers['distributor'] . " Code\t GST No.\t PAN No. \t Bill No. \t Bill Date \t Category Name\t Brand Name \t Item Name \t Item Code \t Quantity\t Rate \t Invoice Value \t Taxable Value\t SGST Amount\t CGST Amount \t IGST AMOUNT\t CESS AMOUNT \t Last Update Date \n";
    if ($_SESSION['stockistId'] != "" && $_SESSION['stockistId'] != "0") {
        $dis = " and d.stockist_id='" . $_SESSION['stockistId'] . "'";
    } else if ($_SESSION['distributorId'] != "" && $_SESSION['distributorId'] != '0') {
        $dis = " and d.distributor_id='" . $_SESSION['distributorId'] . "'";
    }
    //Added condition for role based access at brand lavel.
    $RoleBrands = $_objAdmin->getUserRoleBrand();
    $brandCnd = '';
    if (!empty($RoleBrands)) {
        $brandCnd = " b.brand_id IN(" . $RoleBrands . ")";
    }
    $where = $brandCnd;
    $auRec = $_objAdmin->_getSelectList('table_item_dis_stk_inprocess AS s 
		LEFT JOIN table_cases AS clr ON clr.case_id = s.attribute_value_id
		LEFT JOIN table_category AS c ON c.category_id = s.category_id
		LEFT JOIN table_item AS i ON i.item_id = s.item_id
		left join table_brands as b on b.brand_id = i.brand_id
		LEFT JOIN table_distributors AS d ON d.distributor_id = s.distributor_id',
        "d.distributor_code,d.distributor_name, b.brand_name,s.price,
		c.category_name, clr.case_size, i.item_name, i.item_code, s.acpt_stock_value, s.rec_stock_value, s.status, 
		s.bill_no,s.bill_date,s.last_update_datetime,s.dis_stk_inpro_id,s.before_tax_amount,s.sgst_amount,s.cgst_amount,
		s.igst_amount", "", $where . $dis . ' ORDER BY d.distributor_name ASC');
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->gst_no . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->pan_no . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->bill_no . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->bill_date . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->category_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->brand_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->rec_stock_value . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->price . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->before_tax_amount . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->before_tax_amount . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->sgst_amount . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->cgst_amount . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->igst_amount . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->cess_amount . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->last_update_datetime . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['distributor'] . "_inprocess_stock_list.xls\"");
    echo $data;
    exit;
}
if (isset($_GET['export_coverage_pjp_adherence_report'])) {
    $condi = '';
    if ($_SESSION['SalAttList'] > 0) {
        $condi .= " AND rs.salesman_id ='" . $_SESSION['SalAttList'] . "'";
    }
    if ($_SESSION['state'] > 0) {
        $condi .= " AND st.state_id ='" . $_SESSION['state'] . "'";
    }

    if ($_SESSION['region'] > 0) {
        $condi .= " AND r.region_id ='" . $_SESSION['region'] . "'";
    }
    if (isset($_SESSION['dismonth']) && $_SESSION['dismonth'] > 0) {
        $month = $_SESSION['dismonth'];
    } else {
        $month = date('m');
    }
    if (isset($_SESSION['disCyear']) && $_SESSION['disCyear'] > 0) {
        $year = $_SESSION['disCyear'];
    } else {
        $year = date('Y');
    }
    $monthStr = date('M', strtotime($year . '-' . $month . '-01'));
    $data = "<style>
                .tdHead {
                    background-color:yellow;
                    font-weight:bold; font-size:14px;
                    text-align: center;
                    border :
                }
                .red {
                    background-color:red;
                    text-align: center;
                }
                .green {
                    background-color:green;
                    text-align: center;
                    color:#fff;
                }
                .orange {
                    background-color:orange;
                    text-align: center;
                }
            </style>
    
            <table>
            <tr><td>Month : </td> <td>" . $monthStr . "</td><td>Year : </td> <td>" . $year . "</td><td colspan='42'></td></tr>
                <tr><td class='tdHead'>Retailer Code</td><td class='tdHead'>Retailer Name</td><td class='tdHead'>State</td><td class='tdHead'>Salesman</td><td class='tdHead'>Salesman Code</td><td class='tdHead'>Retailer Channel</td><td class='tdHead'>Retailer Classification</td><td class='tdHead'>Planned PJP/visits</td><td class='tdHead'>Actual PJP</td><td class='tdHead'>PJP Gap</td><td class='tdHead'>PJP Adherancce %</td><td class='tdHead'>MTD Visits</td><td class='tdHead'>MTD Visit Gap</td><td class='tdHead'>Visit %</td><td class='tdHead'>01</td><td class='tdHead'>02</td><td class='tdHead'>03</td><td class='tdHead'>04</td><td class='tdHead'>05</td><td class='tdHead'>06</td><td class='tdHead'>07</td><td class='tdHead'>08</td><td class='tdHead'>09</td><td class='tdHead'>10</td><td class='tdHead'>11</td><td class='tdHead'>12</td><td class='tdHead'>13</td><td class='tdHead'>14</td><td class='tdHead'>15</td><td class='tdHead'>16</td><td class='tdHead'>17</td><td class='tdHead'>18</td><td class='tdHead'>19</td><td class='tdHead'>20</td><td class='tdHead'>21</td><td class='tdHead'>22</td><td class='tdHead'>23</td><td class='tdHead'>24</td><td class='tdHead'>25</td><td class='tdHead'>26</td><td class='tdHead'>27</td><td class='tdHead'>28</td><td class='tdHead'>29</td><td class='tdHead'>30</td><td class='tdHead'>31</td>
            </tr>";

    $salesman = $_SESSION['salesman'];
    $remove = array("\n", "\r\n", "\r", ",");
    $where .= " r.account_id=" . $_SESSION['accountId'] . " and rs.month='" . intval($month) . "' AND rs.year='" . intval($year) . "' and rs.status='A' and rsd.status='A' and r.status='A' $salesman $condi";
    $where .= " group by rs.salesman_id,rsd.retailer_id ";
    $auRec = $_objAdmin->_getSelectList2('table_salesman_retailer_assignment as rs
                left join table_salesman_retailer_assignment_details as rsd on rsd.route_schedule_id = rs.route_schedule_id        
		inner join table_retailer as r on r.retailer_id = rsd.retailer_id
        left join table_salesman as s on s.salesman_id = rs.salesman_id        
		left join table_relationship as rr on rr.relationship_id=r.relationship_id
        left join table_retailer_channel_master as cm on cm.channel_id=r.channel_id
        left join state as st on st.state_id=r.state', "
		rs.salesman_id,rsd.retailer_id,GROUP_CONCAT(DISTINCT rsd.assign_day) as visit_dates, COUNT(DISTINCT rsd.assign_day) as planned_visits,
		r.retailer_name,s.employee_code,r.retailer_name, r.retailer_code, cm.channel_name, 
		rr.relationship_code,st.state_name, s.salesman_id, s.salesman_name", $rp, $where . $sort, '');

    for ($i = 0; $i < count($auRec); $i++) {
        $data .= "<tr>";
        $data .= "<td>" . $auRec[$i]->retailer_code . "</td>";
        $data .= "<td>" . str_replace($remove, '', $auRec[$i]->retailer_name) . "</td>";
//        $data .= "<td>" . str_replace($remove, '', $auRec[$i]->region_name) . "</td>";
        $data .= "<td>" . str_replace($remove, '', $auRec[$i]->state_name) . "</td>";
        $data .= "<td>" . $auRec[$i]->salesman_name . "</td>";
        $data .= "<td>" . $auRec[$i]->employee_code . "</td>";
        $data .= "<td>" . $auRec[$i]->channel_name . "</td>";
        $data .= "<td>" . $auRec[$i]->relationship_code . "</td>";
        if (strtotime(date('Y-m')) != strtotime($year . '-' . $month)) {
            $sDate = date('Y-m-01', strtotime($year . '-' . $month . '-01'));
            $eDate = date('Y-m-t', strtotime($year . '-' . $month . '-01'));
        } else {
            $sDate = date('Y-m-01');
            $eDate = date('Y-m-d');
        }

        $planned_visits = $auRec[$i]->planned_visits;

        $condition = " ta.retailer_id='" . $auRec[$i]->retailer_id . "' AND (ta.activity_type=3 OR ta.activity_type=28 OR ta.activity_type=50) AND ta.activity_date BETWEEN '" . $sDate . "' AND '" . $eDate . "'";
        $dayRet = $_objAdmin->_getSelectList2('table_activity as ta',
            "ta.activity_date, '' as in_route, '' as on_date", '', $condition . ' GROUP BY ta.activity_date ORDER BY ta.activity_date ASC ', '');
        $visitArr = array();
        $actualpjpArr = array();

        $assign_day_list = explode(',', $auRec[$i]->visit_dates);
        foreach ($dayRet as $dayRetVal) {
            $visitArr[] = $dayRetVal->activity_date;
            $visitDay = intval(date('d', strtotime($dayRetVal->activity_date)));
            if (in_array($visitDay, $assign_day_list)) {
                $actualpjpArr[] = $dayRetVal->activity_date;
            }
        }
        $pjp_gap = 0;
        $pjp_Adherancce = 0;
        $actual_pjp = COUNT($actualpjpArr);
        $pjp_gap = $actual_pjp - $planned_visits;
        $pjp_Adherancce = ROUND(($actual_pjp * 100 / $planned_visits), 2);
        $data .= "<td>" . $planned_visits . "</td>";
        $data .= "<td>" . $actual_pjp . "</td>";
        $data .= "<td>" . $pjp_gap . "</td>";
        $data .= "<td>" . $pjp_Adherancce . "%</td>";
        $mtd_visits = 0;
        $mtd_visits_gap = 0;
        $mtd_visits_per = 0;
        $mtd_visits = COUNT($dayRet);
        $mtd_visits_gap = $mtd_visits - $planned_visits;
        if ($mtd_visits_gap > 0) {
            $mtd_visits_gap = '+' . $mtd_visits_gap;
        }
        $mtd_visits_per = ROUND(($mtd_visits * 100 / $planned_visits), 2);
        $data .= "<td>" . $mtd_visits . "</td>";
        $data .= "<td>" . $mtd_visits_gap . "</td>";
        $data .= "<td>" . $mtd_visits_per . "%</td>";
        $ttl_days = cal_days_in_month(CAL_GREGORIAN, intval($month), $year);
        $assign_day = explode(',', $auRec[$i]->visit_dates);
        for ($j = 1; $j <= $ttl_days; $j++) {
            $dayVal = '';
            $dateVal = date('Y-m-d', strtotime($year . '-' . $month . '-' . $j));
            if (in_array($j, $assign_day)) {
                if (in_array($dateVal, $visitArr)) {
                    $data .= '<td class="green">1</td>';
                } else {
                    if (strtotime($dateVal) <= strtotime($eDate)) {
                        $data .= '<td class="red">0</td>';
                    } else {
                        $data .= '<td></td>';
                    }
                }
            } else {
                if (in_array($dateVal, $visitArr)) {
                    $data .= '<td class="orange">1</td>';
                } else {
                    $data .= '<td></td>';
                }
            }
            // $json .= ",'".$dayVal."'";
        }
        $data .= "</tr>";
    }
    $data .= "</table>";
    // header("Content-type: application/vnd.ms-excel");
    // header("Content-Disposition: attachment; filename=$file");
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"coverage_pjp_adherence_report.xls\"");
    echo $data;
    exit();
}
//Todo Start: Ankit: 09th Nov 2021:  Start Export Brands List
if (isset($_GET['export_brands'])) {
    $data = "Brands Name\n";
    //Todo Start : sudhanshu 12 june 2024 : add status filter
    $statusCondi = '';
    if (isset($_SESSION['MasBrand']) && $_SESSION['MasBrand'] != 'all' && $_SESSION['MasBrand'] != '') {
        $statusCondi = " status ='" . $_SESSION['MasBrand'] . "'";
        $where = " $statusCondi ";
    }
    //Todo End : sudhanshu 12 june 2024 : add status filter
    $auRec = $_objAdmin->_getSelectList('table_brands', "brand_name", '', $where);
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . $auRec[$i]->brand_name . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"brands_list.xls\"");
    echo $data;
    exit;
}
//Todo End: Ankit: 09th Nov 2021:  End Export City List
//Todo Start: Ankit: 10th Nov 2021:  Start Export export_route_retailers
if (isset($_GET['export_route_retailers'])) {
    $data = "Route Id\tRoute Name\t" . $AliaseUsers['retailer'] . " Id\t" . $AliaseUsers['retailer'] . " Name\tReatiler Code\tState name\tCity Name\tArea Name\n";
    $condi = "r.status!='D' and r.account_id='" . $_SESSION['accountId'] . "' ORDER BY r.route_name";
    $auRec = $_objAdmin->_getSelectList2('table_route_retailer as rr
	Left JOIN table_route as r ON r.route_id = rr.route_id
	LEFT JOIN table_retailer as ret ON ret.retailer_id = rr.retailer_id
	LEFT JOIN state as st ON st.state_id = ret.state
	LEFT JOIN city as ct ON ct.city_id = ret.city 
	LEFT JOIN table_location as loc ON loc.location_id = ret.location_id', "rr.route_id,r.route_name,r.status,rr.retailer_id,ret.retailer_name,ret.retailer_code,st.state_name,ct.city_name,loc.location_name", '', $condi);
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . $auRec[$i]->route_id . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->route_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_id . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"route_retailers_list.xls\"");
    echo $data;
    exit;
}
//Todo End: Ankit: 10th Nov 2021:  End Export export_route_retailers
//Todo Start: Ankit: 03th Dec 2021:  Start Export export_retailer_not_visited
if (isset($_GET['export_retailer_not_visited'])) {
    $data = "" . $AliaseUsers['retailer'] . " Name \t" . $AliaseUsers['retailer'] . " Code \t" . $AliaseUsers['distributor'] .
        " Name \t" . $AliaseUsers['distributor'] . " Code \t" .
        $AliaseUsers['retailer'] . " Class \t State name \t City Name \t" . $AliaseUsers['retailer'] . " Address \t" . $AliaseUsers['retailer'] . "Phone No\t Market\n";
//    $data = "".$AliaseUsers['retailer']." Name \t" . $AliaseUsers['retailer'] . " Class \t State name \t City Name \t" . $AliaseUsers['retailer'] . " Address \t" . $AliaseUsers['retailer'] . "Phone No\t Market\n";
    $condi = "tr.status!='D' and tr.account_id='" . $_SESSION['accountId'] . "' ORDER BY tr.retailer_name";
    $auRec = $_objAdmin->_getSelectList2('table_retailer as tr
          LEFT JOIN table_distributors as d on d.distributor_id = tr.distributor_id
		  LEFT JOIN city AS c ON c.city_id=tr.city
		  LEFT JOIN state AS s ON s.state_id=tr.state
		  LEFT JOIN table_relationship as rr on rr.relationship_id=tr.relationship_id', "tr.retailer_id,tr.retailer_code,d.distributor_name,d.distributor_code, tr.retailer_name, tr.retailer_address, rr.relationship_code, tr.retailer_phone_no, tr.retailer_location,c.city_name,s.state_name", '', $condi);
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->relationship_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_address . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_phone_no . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_location . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"export_" . $AliaseUsers['retailer'] . "_not_visited.xls\"");
    echo $data;
    exit;
}
//Todo End: Ankit: 10th Nov 2021:  End Export export_route_retailers
/*************************Sheenlac features integration*********************************************************/
if (isset($_GET['export_salesman_delivery'])) {
    $featureList = $_objAdmin->getAccountFeaturesList($_SESSION['accoundId']);
    if(in_array(240,$featureList)){
        $lpoclm = "LPO Number\t";
    }
    $data = "Delivery Date \t Delivery Time\tBill No.\t " . $lpoclm . $AliaseUsers['salesman'] . " Name\t " . $AliaseUsers['distributor'] . " Code\t " . $AliaseUsers['distributor'] . " Name\t  " . $AliaseUsers['retailer'] . " Code\t" . $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['retailer'] . " Type\tState\tCity\t Category Name\tBrand\tItem Code\tItem Name\tQuantity\tTax (%)\tTax Amount\tAmount\tItem Type\n";

    if (isset($_SESSION['salesman_id'])) {
        $where = " sta.salesman_id=" . $_SESSION['salesman_id'] . " and ";
    }
    if (isset($_SESSION['FromAttList']) && isset($_SESSION['ToAttList'])) {
        $where .= " sta.date_of_order >='" . date('Y-m-d', strtotime($_SESSION['FromAttList'])) . "' and sta.date_of_order <='" . date('Y-m-d', strtotime($_SESSION['ToAttList'])) . "' ";
    } else {
        $where .= " sta.date_of_order >='" . date('Y-m-d') . "' and sta.date_of_order <='" . date('Y-m-d') . "' ";
    }
//    $auRec = $_objAdmin->_getSelectList('table_item_delivery as sta
//                        left join table_salesman as s on s.salesman_id = sta.salesman_id
//                        left join table_retailer as r on r.retailer_id = sta.retailer_id
//                        left join table_distributors as d on d.distributor_id = sta.distributor_id
//                        ', "sta.*,s.salesman_name, s.employee_code,r.retailer_name,r.retailer_code,d.distributor_name,d.distributor_code",
//        '', " $where ORDER BY DATE_FORMAT(sta.date_of_order, '%Y-%m-%d'),sta.time_of_order ASC");

    $auRec = $_objAdmin->_getSelectList('table_item_delivery as sta
						left join table_item_delivery_detail as stad on stad.order_id = sta.order_id
                        left join table_salesman as s on s.salesman_id = sta.salesman_id
                        left join table_item as i on i.item_id = stad.item_id	
                        LEFT JOIN table_brands as b ON b.brand_id=i.brand_id					
                        left join table_category as c on c.category_id = i.category_id                      
						left join table_retailer as r on r.retailer_id = sta.retailer_id
                        left join table_retailer_type_master as tm on tm.type_id=r.type_id
                        left join table_location as loc on loc.location_id=r.location_id
                        left join state as st on st.state_id=r.state						
                        left join table_distributors as d on d.distributor_id = sta.distributor_id
						', "sta.*,stad.*,i.item_id,i.item_name, i.item_code, c.category_id, c.category_name,
						s.salesman_name, s.employee_code,r.retailer_name,r.retailer_code,d.distributor_name,d.distributor_code,st.state_name,loc.location_name,tm.type_name,b.brand_name", '', " $where ORDER BY sta.date_of_order DESC, sta.time_of_order DESC, s.salesman_name ASC, stad.item_id ASC");

    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $itmType = (($auRec[$i]->type == 2) ? 'Scheme Item' : 'Ordered Item');

            $data .= '"' . $_objAdmin->_changeDate($auRec[$i]->date_of_order) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->time_of_order . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->bill_no . '"';
            $data .= "\t";
            if(in_array(240,$featureList)) {
                $data .= '"' . $auRec[$i]->lpo_no . '"';
                $data .= "\t";
            }
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
           
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->type_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->category_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->brand_name . '"';
            $data .= "\t";
          
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->quantity . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->tax_per . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->tax_amount . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->total . '"';
            $data .= "\t";
            $data .= '"' . $itmType . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['salesman'] . "_delivery_list.xls\"");
    echo $data;
    exit;
}
//Todo Start : Sagar : 14th Feb 2022 Salesman & Customer Mapping
if (isset($_GET['export_customer_salesman_mapping'])) {
    $data = "" . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['salesman'] . " Code\tCustomer Name\tCustomer Code\tCustomer Status\tCreated Date\n";
    $_objArrayList = new ArrayList();
    $salsList = $_objArrayList->SalesmanArrayList();
    $salesman = $_objArrayList->getSalesCondition($salsList);
    $auRec = $_objAdmin->_getSelectList('table_customer_salesman_mapping as csm
LEFT JOIN table_salesman as s ON s.salesman_id = csm.salesman_id
LEFT JOIN table_retailer as r ON r.retailer_id = csm.retailer_id', "csm.mapping_id,r.retailer_code,r.retailer_name,csm.salesman_id,s.salesman_name,s.employee_code,r.status,csm.created_date", '', " r.status != 'D' $salesman ORDER BY s.salesman_name ASC ");
// echo "<pre>"; print_r($auRec);die;   
if (is_array($auRec)) {


        for ($i = 0; $i < count($auRec); $i++) {
            $st = "";
            if($auRec[$i]->status == 'A'){
               $st =  "Active";
            }else{
                $st = "Inactive";
            }

            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $st . '"';
            $data .= "\t";
            $data .= '"' . $_objAdmin->_changeDate($auRec[$i]->created_date) . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Customer and " . $AliaseUsers['salesman'] . " Mapping List.xls\"");
    echo $data;
    exit;
}
//Todo End : Sagar : 14th Feb 2022 Salesman & Customer Mapping
if (isset($_GET['export_serial_number_scan_report'])) {
    $data = " " . $AliaseUsers['salesman'] . " Name\t " . $AliaseUsers['salesman'] . " Code \t " . $AliaseUsers['distributor'] . " Name \t " . $AliaseUsers['distributor'] . " Code \t " . $AliaseUsers['retailer'] . " Name \t " . $AliaseUsers['retailer'] . " Code \t Scan By \t Serial Number \t Scan Status \t Serial Number String \t Comment \t Scan Date \t Scan Time\n";
    $sort = " ORDER BY scn.appDate,scn.appTime desc";
    $_objArrayList = new ArrayList();
    $salsList = $_objArrayList->SalesmanArrayList();
    $salesman = $_objArrayList->getSalesCondition($salsList);
    if (isset($_SESSION['retailer_id']) && $_SESSION['retailer_id'] != '' && $_SESSION['retailer_id'] != 'all') {
        $condition .= " scn.retailer_id = " . $_SESSION['retailer_id'] . " AND ";
    }
    if (isset($_SESSION['SalOrderList']) && $_SESSION['SalOrderList'] != '') {
        $condition .= " scn.salesman_id = " . $_SESSION['SalOrderList'] . " AND ";
    }
    if (isset($_SESSION['distributor_id']) && $_SESSION['distributor_id'] != '' && $_SESSION['distributor_id'] != 'all') {
        $condition .= " scn.distributor_id = " . $_SESSION['distributor_id'] . " AND ";
    }
    if ($_SESSION['FromProductList'] != '') {
        $fromdate = "  scn.appDate  >= '" . date('Y-m-d', strtotime($_SESSION['FromProductList'])) . "' AND ";
    } else {
        $fromdate = " scn.appDate  >= '" . date('Y-m-d') . "' AND ";
    }
    if ($_SESSION['ToProductList'] != '') {
        $todate = " scn.appDate <= '" . date('Y-m-d', strtotime($_SESSION['ToProductList'])) . "' ";
    } else {
        $todate = "  scn.appDate <= '" . date('Y-m-d') . "'";
    }
    $where = " scn.account_id='" . $_SESSION['accountId'] . "' and $condition $fromdate $todate ";
    $auRec = $_objAdmin->_getSelectList2('table_serial_number_scan as scn			
			LEFT JOIN table_salesman AS s ON s.salesman_id = scn.salesman_id
			LEFT JOIN table_retailer AS R ON R.retailer_id = scn.retailer_id
			LEFT JOIN table_distributors AS Dis ON Dis.distributor_id = scn.distributor_id',
        'scn.*,
			Dis.distributor_name, Dis.distributor_code,s.salesman_name,s.employee_code,
			R.retailer_name, R.retailer_code', '', $where . $sort, '');
    for ($i = 0; $i < count($auRec); $i++) {
        $scanBy = '';
        $appDate = $_objAdmin->_changeDate($auRec[$i]->appDate);
        if ($auRec[$i]->scan_by == 'S') {
            $scanBy = $AliaseUsers['salesman'];
        } else if ($auRec[$i]->scan_by == 'R') {
            $scanBy = $AliaseUsers['retailer'];
        } else if ($auRec[$i]->scan_by == 'D') {
            $scanBy = $AliaseUsers['distributor'];
        }
        $serial_number_string = preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace(array('\t', '\n', '	', ','), ' ', $auRec[$i]->serial_number_string));
        $comment = preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace(array('\t', '\n', '	', ','), ' ', $auRec[$i]->comment));
        $data .= str_replace(array('\t', '\n', '  ', ','), ' ', $auRec[$i]->salesman_name) .
            "\t" . str_replace(array('\t', '\n', '  ', ','), ' ', $auRec[$i]->employee_code) .
            "\t" . str_replace(array('\t', '\n', '  ', ','), ' ', $auRec[$i]->distributor_name) .
            "\t" . str_replace(array('\t', '\n', '  ', ','), ' ', $auRec[$i]->distributor_code) .
            "\t" . str_replace(array('\t', '\n', '  ', ','), ' ', $auRec[$i]->retailer_name) .
            "\t" . str_replace(array('\t', '\n', '  ', ','), ' ', $auRec[$i]->retailer_code) .
            "\t" . str_replace(array('\t', '\n', '  ', ','), ' ', $scanBy) .
            "\t" . str_replace(array('\t', '\n', '  ', ','), ' ', $auRec[$i]->serial_number) .
            "\t" . str_replace(array('\t', '\n', '  ', ','), ' ', $auRec[$i]->status) .
            "\t" . str_replace(array('\t', '\n', '  ', ','), ' ', $serial_number_string) .
            "\t" . str_replace(array('\t', '\n', '  ', ','), ' ', $comment) .
            "\t" . $appDate . "\t" . $auRec[$i]->appTime . "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"serial_number_scan_report.xls\"");
    echo $data;
    exit;
}
if (isset($_GET['export_contact_list'])) {
    $data = "" . $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['retailer'] . " Code\tContact Name\tPhone No.-1\tDesignation\t email id\tPhone No.-2\t" . $AliaseUsers['salesman'] . " Name\tCreated On\tStatus\n";
    $condi = " c.account_id='" . $_SESSION['accountId'] . "' ORDER BY c.retailer_id,c.customer_name ASC";
    $auRec = $_objAdmin->_getSelectList('table_customer AS c
		left join table_retailer as r on r.retailer_id = c.retailer_id
		left join table_designation as d on d.designation_id=c.designation_id
		left join table_salesman as s on s.salesman_id=c.salesman_id',
        "c.*,r.retailer_name,r.retailer_code,d.designation_name,s.salesman_name", '', $condi, '');
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            if ($auRec[$i]->status == 'A') {
                $status = "Active";
            } else {
                $status = "Inactive";
            }
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->customer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->customer_phone_no . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->designation_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->customer_email . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->customer_phone_no2 . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->server_date . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"customer_contact_list.xls\"");
    echo $data;
    exit;
}
//Todo Start: Sagar: 15th March 2022 : export Salesman Allowance List
if (isset($_GET['export_salesman_allowance_list'])) {
    $data = "" . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['salesman'] . " Code\t" . $AliaseUsers['salesman'] . " Designation\tReporting to\t Reporting Person Designation\t" . $AliaseUsers['salesman'] . " State\t" . $AliaseUsers['salesman'] . " City\tComment\tAllowance\tRemark\tAllowance City\tAllowance Date\tCreated On\tAllowance Amount\n";
    if ($_SESSION['FromallownceList'] != '') {
        $fromdate = " and app_date >= '" . date('Y-m-d', strtotime($_SESSION['FromallownceList'])) . "'";
    } else {
        $fromdate = " and app_date >= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['ToallownceList'] != '') {
        $todate = " and app_date <= '" . date('Y-m-d', strtotime($_SESSION['ToallownceList'])) . "'";
    } else {
        $todate = " and app_date <= '" . date('Y-m-d') . "'";
    }
    $salCond = '';
    if (isset($_SESSION['allowncesalesmanID']) && !empty($_SESSION['allowncesalesmanID'])) {
        $salCond = " AND s.salesman_id = " . $_SESSION['allowncesalesmanID'];
    } else {
        $_objArrayList = new ArrayList();
        $salsList = $_objArrayList->SalesmanArrayList();
        $salesman = $_objArrayList->getSalesCondition($salsList);
        $salCond = $salesman;
    }
    $condi = "  $salCond  $fromdate $todate GROUP BY sd.salesman_id,sd.app_date,AM.allwns_map_id
        ORDER BY sd.created DESC,AM.allwns_map_id DESC ";
    $auRec = $_objAdmin->_getSelectList('table_salesman_allowance_details as sd 
		INNER JOIN table_salesman_allowance_mapping AS AM ON AM.allws_id = sd.allws_id
		LEFT JOIN table_salesman as s on s.salesman_id = sd.salesman_id 
		LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
		LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
		LEFT JOIN table_salesman_hierarchy AS H2 ON H2.hierarchy_id = SH.rpt_hierarchy_id 
		LEFT JOIN table_salesman AS S2 ON S2.salesman_id = SH.rpt_user_id 
		LEFT JOIN city as c on c.city_id=s.city
		LEFT JOIN table_location as c2 on c2.location_id=sd.city_id
		LEFT JOIN state AS st on st.state_id=s.state 
        LEFT JOIN table_salesman_tags AS tag ON tag.id = AM.tada_id AND tag.account_id = "' . $_SESSION['accountId'] . '"',
        "s.salesman_name,s.employee_code,H.description AS des1,S2.salesman_name AS rpt_to,H2.description AS des2,st.state_name,c.city_name,sd.cmt as header_remark,
tag.desc as allowance_desc,AM.remark as detail_remark,c2.location_name AS allwn_city,sd.app_date,sd.created,SUM(AM.allwns_amt) as totalAmt", '', $condi, '');
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->des1 . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->rpt_to . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->des2 . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->header_remark . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->allowance_desc . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->detail_remark . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->allwn_city . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->app_date . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->created . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->totalAmt . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"salesman_allowance_list.xls\"");
    echo $data;
    exit;
}
//Todo End: Sagar: 15th March 2022 : export Salesman Allowance List
//Todo Start: Sagar: 8th Aug 2022 : export Salesman Expense Report
if (isset($_GET['export_salesman_expense_report'])) {
    $data = "" . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['salesman'] . " Code\t" . $AliaseUsers['salesman'] . " Designation\tReporting to\t Reporting Person Designation\t " . $AliaseUsers['salesman'] . " Zone\t" . $AliaseUsers['salesman'] . " State\t" . $AliaseUsers['salesman'] . " City\tRemark\tAllowance Date\tWorking City\t";
    $getExpenseTypes = $_objAdmin->_getSelectList('table_salesman_tags as s', 's.id,s.desc', '', " ORDER BY s.id ASC ");
    if (is_array($getExpenseTypes) && (count($getExpenseTypes) > 0)) {
        foreach ($getExpenseTypes as $key => $expType) {
            $data .= $expType->desc . "\t";
            $data .= $expType->desc . ' Remark' . "\t";
        }
    }
    $data .= "Total Amount\tPhoto Count\tCreated on\n";
    if ($_SESSION['FromallownceList'] != '') {
        $fromdate = date('Y-m-d', strtotime($_SESSION['FromallownceList']));
    } else {
        $fromdate = date('Y-m-d');
    }
    if ($_SESSION['ToallownceList'] != '') {
        $todate = date('Y-m-d', strtotime($_SESSION['ToallownceList']));
    } else {
        $todate = date('Y-m-d');
    }
    $salCond = '';
    if (isset($_SESSION['allowncesalesmanID']) && !empty($_SESSION['allowncesalesmanID'])) {
        $salCond = " AND sd.salesman_id = " . $_SESSION['allowncesalesmanID'];
    } else {
        $_objArrayList = new ArrayList();
        $salsList = $_objArrayList->SalesmanArrayList();
        $salesman = $_objArrayList->getSalesCondition($salsList);
        $salCond = $salesman;
    }
    $condi = " sd.app_date BETWEEN '" . $fromdate . "' AND '" . $todate . "' $salCond  ORDER BY sd.created DESC ";
    $auRec = $_objAdmin->_getSelectList('table_salesman_allowance_details as sd
		left join table_salesman as s on s.salesman_id = sd.salesman_id 
		LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
		LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
		LEFT JOIN table_salesman_hierarchy AS H2 ON H2.hierarchy_id = SH.rpt_hierarchy_id 
		LEFT JOIN table_salesman AS S2 ON S2.salesman_id = SH.rpt_user_id 
		LEFT JOIN city as c on c.city_id=s.city
		LEFT JOIN table_zone_state_mapping as szsm on szsm.state_id = s.state and szsm.account_id = s.account_id
        LEFT JOIN table_zone as sz on sz.zone_id = szsm.zone_id
		LEFT JOIN table_location as c2 on c2.location_id=sd.city_id
		LEFT JOIN state AS st on st.state_id=s.state', "sd.*,st.state_name, c2.location_name AS allwn_city, s.salesman_name,s.employee_code,H.description AS des1,sz.zone_name, H2.description AS des2, S2.salesman_name AS rpt_to, c.city_name,sd.photo_count", '', $condi);
    $allwsIdArr = [];
    if (is_array($auRec) && (count($auRec) > 0)) {
        foreach ($auRec as $key => $auRecData) {
            $allwsIdArr[] = $auRecData->allws_id;
        }
        $allwsIds = implode(',', $allwsIdArr);
        $auRecDet = $_objAdmin->_getSelectList2('table_salesman_allowance_mapping as sam 
LEFT JOIN table_salesman_tags as st ON st.id = sam.tada_id', "sam.allws_id,sam.tada_id,st.desc as exp_type,sam.allwns_amt,sam.remark", '', "sam.allws_id IN($allwsIds) ORDER BY sam.allws_id ASC, sam.tada_id ASC");
        $expTypeWiseDataArr = [];
        if (is_array($auRecDet) && (count($auRecDet) > 0)) {
            foreach ($auRecDet as $key2 => $auRecDetData) {
                $expTypeWiseDataArr[$auRecDetData->allws_id][$auRecDetData->tada_id] = $auRecDetData;
            }
        }
        $expTypeArr = [];
        if (is_array($getExpenseTypes) && (count($getExpenseTypes) > 0)) {
            foreach ($getExpenseTypes as $key => $expData) {
                $expTypeArr[$expData->id] = $expData->desc;
            }
        }
    }
    $remove = array("\n", "\r\n", "\r", ",");
    if (is_array($auRec) && (count($auRec) > 0)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->des1 . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->rpt_to . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->des2 . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->zone_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . str_replace($remove, '', $auRec[$i]->cmt) . '"';
            $data .= "\t";
            $data .= '"' . date('d M Y', strtotime($auRec[$i]->app_date)) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->allwn_city . '"';
            $data .= "\t";
            $emptyValue = '-';
            $ttlAmt = 0;
            if (is_array($expTypeArr) && (count($expTypeArr) > 0)) {
                foreach ($expTypeArr as $expTypeId => $expTypeName) {
                    if (is_array($expTypeWiseDataArr[$auRec[$i]->allws_id]) && (count($expTypeWiseDataArr[$auRec[$i]->allws_id]) > 0) && is_object($expTypeWiseDataArr[$auRec[$i]->allws_id][$expTypeId])) {
                        $expTypeWiseData = $expTypeWiseDataArr[$auRec[$i]->allws_id][$expTypeId];
                        $data .= '"' . $expTypeWiseData->allwns_amt . '"';
                        $data .= "\t";
                        $data .= '"' . $expTypeWiseData->remark . '"';
                        $data .= "\t";
                        $ttlAmt += $expTypeWiseData->allwns_amt;
                    } else {
                        $data .= '"' . $emptyValue . '"';
                        $data .= "\t";
                        $data .= '"' . $emptyValue . '"';
                        $data .= "\t";
                    }
                }
            }
            $data .= '"' . number_format($ttlAmt, 2) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->photo_count . '"';
            $data .= "\t";
            $data .= '"' . date('d M Y H:i', strtotime($auRec[$i]->created)) . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"expense_report.xls\"");
    echo $data;
    exit;
}
//Todo End: Sagar: 8th Aug 2022 : export Salesman Expense Report
//Todo Start: Sagar: 13th April 2022 : export Route Retailers List
if (isset($_GET['export_route_retailers_details']) && (strtolower($_GET['export_route_retailers_details']) == 'yes') && ($_GET['routeId'] > 0)) {
    $data = $AliaseUsers['route'] ." Name\t" . $AliaseUsers['retailer'] . " Code\t" . $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['retailer'] . " Class\t" . $AliaseUsers['retailer'] . " Type\t" . $AliaseUsers['retailer'] . " Channel\t" . $AliaseUsers['retailer'] . " Contact Number\t" . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\tState\tDistrict\tCity\tCreated Date\tUpdated Date\n";
    $routeId = $_GET['routeId'];
    $condi = " rr.route_id = $routeId AND r.status = 'A' ORDER BY r.retailer_name ASC";
    $auRec = $_objAdmin->_getSelectList('table_route_retailer as rr
LEFT JOIN table_route as ro ON ro.route_id = rr.route_id
LEFT JOIN table_retailer as r ON r.retailer_id = rr.retailer_id
LEFT JOIN table_relationship as rel on rel.relationship_id=r.relationship_id
LEFT JOIN table_retailer_channel_master as cm on cm.channel_id=r.channel_id
LEFT JOIN table_retailer_type_master as tm on tm.type_id=r.type_id 
left join table_distributors as d on d.distributor_id=r.distributor_id
LEFT JOIN state as st ON st.state_id = r.state
LEFT JOIN city as ct ON ct.city_id = r.city
LEFT JOIN table_location as loc ON loc.location_id = r.location_id',
        "ro.route_name,r.retailer_code,r.retailer_name,rel.relationship_code,cm.channel_name,r.contact_number,tm.type_name as ret_type,d.distributor_code,d.distributor_name,st.state_name as ret_state,ct.city_name as ret_district,loc.location_name as ret_city,ro.created_at,ro.updated_at", '', $condi);
    $remove = array("\n", "\r\n", "\r", '"');
    if (is_array($auRec)) {
        $route_name = preg_replace('/[^a-zA-Z0-9-_\.,() ]/', ' ', str_replace($remove, ' ', $auRec[0]->route_name));
        for ($i = 0; $i < count($auRec); $i++) {
            //Todo Start : sudhanshu 16 may 2024 : add created date and updated date
            $created_date = '';
            $updated_date = '';
            if ($auRec[$i]->created_at != '0000-00-00 00:00:00') {
                $created_date = $_objAdmin->_changeDate($auRec[$i]->created_at);
            }
            if ($auRec[$i]->updated_at != '0000-00-00 00:00:00') {
                $updated_date = $_objAdmin->_changeDate($auRec[$i]->updated_at);
            }

            //Todo End : sudhanshu 16 may 2024 : add created date and updated date
            $data .= '"' . $auRec[$i]->route_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->relationship_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->ret_type . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->channel_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->contact_number . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->ret_state . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->ret_district . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->ret_city . '"';
            //Todo Start : sudhanshu 16 may 2024 : add created date and updated date
            $data .= "\t";
            $data .= '"' . $created_date . '"';
            $data .= "\t";
            $data .= '"' . $updated_date . '"';
            //Todo End : sudhanshu 16 may 2024 : add created date and updated date
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"$route_name.xls\"");
    echo $data;
    exit;
}
//Todo End: Sagar: 13th April 2022 : export Route Retailers List
//Todo Start: Ankit: 13th Apr 2022 : Retailer Target Export
if (isset($_GET['export_retailer_target'])) {
    $data = "" . $AliaseUsers['retailer'] . " Name \t" . $AliaseUsers['retailer'] . " Code \tMonth \tYear \tTarget Value\n";
    if ($_SESSION['target_month'] != '') {
        $target_month = $_SESSION['target_month'];
    }
    if ($_SESSION['target_year'] != '') {
        $target_year = $_SESSION['target_year'];
    }
    $where = "rt.target_month = '" . $target_month . "' AND rt.target_year ='" . $target_year . "' ORDER BY r.retailer_name ASC";
    $auRec = $_objArrayList->_getSelectList('table_retailer_target as rt left join table_retailer as r on rt.retailer_id=r.retailer_id', "rt.*,r.retailer_name,r.retailer_code", '', $where);
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $target_month = '';
            if ($auRec[$i]->target_month == 1) {
                $target_month = 'January';
            } elseif ($auRec[$i]->target_month == 2) {
                $target_month = 'February';
            } elseif ($auRec[$i]->target_month == 3) {
                $target_month = 'March';
            } elseif ($auRec[$i]->target_month == 4) {
                $target_month = 'April';
            } elseif ($auRec[$i]->target_month == 5) {
                $target_month = 'May';
            } elseif ($auRec[$i]->target_month == 6) {
                $target_month = 'June';
            } elseif ($auRec[$i]->target_month == 7) {
                $target_month = 'July';
            } elseif ($auRec[$i]->target_month == 8) {
                $target_month = 'August';
            } elseif ($auRec[$i]->target_month == 9) {
                $target_month = 'September';
            } elseif ($auRec[$i]->target_month == 10) {
                $target_month = 'October';
            } elseif ($auRec[$i]->target_month == 11) {
                $target_month = 'November';
            } elseif ($auRec[$i]->target_month == 12) {
                $target_month = 'December';
            }
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $target_month . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->target_year . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->target_value . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['retailer'] . "_target.xls\"");
    echo $data;
    exit;
}
//Todo End: Ankit: 13th Apr 2022 : Retailer Target Export
//Todo Start: Sagar : 4th May 2022 : Item MGB Norms
if (isset($_GET['export_item_mgb_norms'])) {
    $data = "Item Code\tItem Name\tNorms\tClassification\t" . $AliaseUsers['retailer'] . " Code\t" . $AliaseUsers['retailer'] . " Name\tState\tCity\tStart Date\tEnd Date\n";
    $RoleBrands = $_objAdmin->getUserRoleBrand();
    $brandCnd = '';
    if (!empty($RoleBrands)) {
        $brandCnd = " and b.brand_id IN(" . $RoleBrands . ")";
    }
    $condi = " i.item_type='I' $brandCnd ORDER BY i.item_name ASC";
    $auRec = $_objAdmin->_getSelectList('table_mgb_norms as n 
            LEFT JOIN table_item as i on i.item_id = n.item_id 
            LEFT JOIN state as st on st.state_id = n.state_id
			LEFT JOIN table_location as loc on loc.location_id = n.location_id
			LEFT JOIN table_retailer as tr on tr.retailer_id = n.retailer_id 
			LEFT JOIN table_relationship as r on r.relationship_id = n.relationship_id ',
        "n.*,i.item_name,i.item_code,tr.retailer_code,tr.retailer_name,st.state_name,loc.location_name,r.relationship_code", '', $condi);
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->norms . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->relationship_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\t";
            $data .= '"' . date('d M Y', strtotime($auRec[$i]->start_date)) . '"';
            $data .= "\t";
            $data .= '"' . date('d M Y', strtotime($auRec[$i]->end_date)) . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"item_mgb_norms_list.xls\"");
    echo $data;
    exit;
}
//Todo End: Sagar : 4th May 2022 : Item MGB Norms

//Todo Start: Sagar : 5th May 2022 : Route wise PJP Coverage Report
if (isset($_GET['export_route_wise_pjp_coverage_report'])) {
    $condi = '';
    $where = '';
    if ($_SESSION['SalAttList'] > 0) {
        $condi .= " AND s.salesman_id ='" . $_SESSION['SalAttList'] . "'";
    }


    if (isset($_SESSION['dismonth']) && $_SESSION['dismonth'] > 0) {
        $month = $_SESSION['dismonth'];

    } else {
        $month = date('m');

    }

    if (isset($_SESSION['disCyear']) && $_SESSION['disCyear'] > 0) {
        $year = $_SESSION['disCyear'];
    } else {
        $year = date('Y');
    }

    $ttl_days = cal_days_in_month(CAL_GREGORIAN, intval($month), $year);


    $data = "<style>
				td{					
					padding : 5px;
					border: 1px solid darkgray;
				}
                .tdHead {
                    background-color:#c3c3c3;
                    font-weight:bold; 
                    font-size:14px;
                    text-align: center;
                }
                .red {
                    background-color:red;
                    text-align: center;
                }

                .green {
                    background-color:green;
                    text-align: center;
                    color:#fff;
                }
                .orange {
                    background-color:orange;
                    text-align: center;
                }
				.yellow{
					background-color:yellow;
                    text-align: center;
                    color:#000;
				}
            </style>

            <table>
                <tr>
                <td class='tdHead'>Salesman Name</td>
                <td class='tdHead'>Salesman Code</td>
                <td class='tdHead'>Retailer Name</td>
                <td class='tdHead'>Retailer Code</td>
                <td class='tdHead'>Retailer Channel</td>
                <td class='tdHead'>Retailer Classification</td>
                <td class='tdHead'>Planned PJP/visits</td>
                <td class='tdHead'>Actual PJP</td>
                <td class='tdHead'>PJP Gap</td>
                <td class='tdHead'>PJP Adherancce %</td>
                <td class='tdHead'>MTD Visits</td>
                <td class='tdHead'>MTD Visit Gap</td>
                <td class='tdHead'>Visit %</td>";


    for ($i = 1; $i <= $ttl_days; $i++) {
        $data .= "<td class='tdHead'>" . date('Y-m-d', strtotime($year . '-' . $month . '-' . $i)) . "</td>";
    }

    $data .= "</tr>";

    $fromDate = date('Y-m-d', strtotime($year . '-' . $month . '-01'));
    $toDate = date('Y-m-t', strtotime($year . '-' . $month . '-01'));

    if (strtotime(date('Y-m')) != strtotime($year . '-' . $month)) {
        $eDate = date('Y-m-t', strtotime($year . '-' . $month . '-01'));
    } else {
        $eDate = date('Y-m-d');
    }


    $salesman = $_SESSION['salesman'];
    $remove = array("\n", "\r\n", "\r", ",");
    $where .= " sd.status='A' and sd.month='" . intval($month) . "' and  sd.year='" . intval($year) . "' and s.status = 'A' $salesman $condi ";

    $groupBy = " GROUP BY sd.salesman_id,rr.retailer_id ";
    $sort = " ORDER BY ret.retailer_name ASC";

    $auRec = $_objAdmin->_getSelectList('table_route_scheduled as sd 
		left join table_route_schedule_details as rd on sd.route_schedule_id=rd.route_schedule_id  
		left join table_route_retailer AS rr on rr.route_id=rd.route_id
		left join table_retailer AS ret ON ret.retailer_id=rr.retailer_id 
		left join table_relationship as rel on rel.relationship_id=ret.relationship_id
        left join table_retailer_channel_master as cm on cm.channel_id=ret.channel_id
		left join table_salesman as s on s.salesman_id=sd.salesman_id', "rr.retailer_id,ret.retailer_name,ret.retailer_code,ret.start_date,cm.channel_name,rel.relationship_code,sd.salesman_id,s.salesman_name,s.employee_code,sd.month,sd.year,GROUP_CONCAT(DISTINCT rd.assign_day) as visit_dates", '', $where . $groupBy . $sort, '');

    $account_id = $_SESSION['accountId'];
    $featureList = $_objAdmin->getAccountFeaturesList($account_id);

    for ($i = 0; $i < count($auRec); $i++) {
        $assign_day = explode(',', $auRec[$i]->visit_dates);
//        $lowestAssignDay = min($assign_day);
//        $lowestAssignDate = date('Y-m-d', strtotime($year . '-' . $month . '-' . $lowestAssignDay));
        $retStartDate = date('Y-m-d', strtotime($auRec[$i]->start_date));

//        if ($retStartDate <= $lowestAssignDate) {
        $data .= "<tr class='trcls'>";

        $data .= "<td>" . ucwords(addslashes(preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace($remove, '', $auRec[$i]->salesman_name)))) . "</td>";

        $data .= "<td>" . ucwords(addslashes(preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace($remove, '', $auRec[$i]->employee_code)))) . "</td>";

        $data .= "<td>" . ucwords(addslashes(preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace($remove, '', $auRec[$i]->retailer_name)))) . "</td>";

        $data .= "<td>" . ucwords(addslashes(preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace($remove, '', $auRec[$i]->retailer_code)))) . "</td>";

        $data .= "<td>" . ucwords(addslashes(preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace($remove, '', $auRec[$i]->channel_name)))) . "</td>";

        $data .= "<td>" . ucwords(addslashes(preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace($remove, '', $auRec[$i]->relationship_code)))) . "</td>";

        if (count($featureList) > 0 && in_array(73, $featureList)) {
            $condition = " ta.retailer_id='" . $auRec[$i]->retailer_id . "' AND ta.salesman_id=" . $auRec[$i]->salesman_id . " AND ta.checkin_date BETWEEN '" . $fromDate . "' AND '" . $toDate . "'";
            $dayRet = $_objAdmin->_getSelectList('table_capture_checkin_out as ta',
                "ta.retailer_id, ta.checkin_date", '', $condition . ' GROUP BY ta.checkin_date ORDER BY ta.checkin_date ASC ');


            $visitArr = array();
            $actualpjpArr = array();
            if (is_array($dayRet) && (count($dayRet) > 0)) {
                foreach ($dayRet as $dayRetVal) {
                    $visitArr[] = $dayRetVal->checkin_date;
                    $visitDay = intval(date('d', strtotime($dayRetVal->checkin_date)));
                    if (in_array($visitDay, $assign_day)) {
                        $actualpjpArr[] = $dayRetVal->checkin_date;
                    }
                }
            }

        } else {
            $odrwhere = "o.retailer_id='" . $auRec[$i]->retailer_id . "' AND o.salesman_id=" . $auRec[$i]->salesman_id . " AND o.order_type IN('Yes','No') AND o.date_of_order BETWEEN '" . $fromDate . "' AND '" . $toDate . "' GROUP BY o.date_of_order ORDER BY o.date_of_order ASC";

            $auRecOrder = $_objAdmin->_getSelectList('table_order as o', "o.retailer_id,o.salesman_id,o.date_of_order", '', $odrwhere, '');

            $visitArr = array();
            $actualpjpArr = array();

            if (is_array($auRecOrder) && (count($auRecOrder) > 0)) {
                foreach ($auRecOrder as $auRecOrderVal) {
                    $visitArr[] = $auRecOrderVal->date_of_order;
                    $visitDay = intval(date('d', strtotime($auRecOrderVal->date_of_order)));
                    if (in_array($visitDay, $assign_day)) {
                        $actualpjpArr[] = $auRecOrderVal->date_of_order;
                    }
                }
            }
        }


        $pjp_gap = 0;
        $pjp_Adherancce = 0;
        $planned_visits = count($assign_day);
        $actual_pjp = count($actualpjpArr);
        $pjp_gap = $actual_pjp - $planned_visits;
        $pjp_Adherancce = ROUND(($actual_pjp * 100 / $planned_visits), 2);

        $data .= "<td>" . $planned_visits . "</td>";
        $data .= "<td>" . $actual_pjp . "</td>";
        $data .= "<td>" . $pjp_gap . "</td>";
        $data .= "<td>" . $pjp_Adherancce . "% </td>";

        $mtd_visits = 0;
        $mtd_visits_gap = 0;
        $mtd_visits_per = 0;
        $mtd_visits = count($visitArr);
        $mtd_visits_gap = $mtd_visits - $planned_visits;
        if ($mtd_visits_gap > 0) {
            $mtd_visits_gap = '+' . $mtd_visits_gap;
        }
        $mtd_visits_per = ROUND(($mtd_visits * 100 / $planned_visits), 2);

        $data .= "<td>" . $mtd_visits . "</td>";
        $data .= "<td>" . $mtd_visits_gap . "</td>";
        $data .= "<td>" . $mtd_visits_per . "% </td>";

        for ($j = 1; $j <= $ttl_days; $j++) {
            $dayVal = '';
            $dateVal = date('Y-m-d', strtotime($year . '-' . $month . '-' . $j));
            if (in_array($j, $assign_day)) {
                if (in_array($dateVal, $visitArr)) {
                    $data .= '<td class="green">1</td>';
                } else {
                    if (strtotime($dateVal) <= strtotime($eDate)) {
                        if ($retStartDate <= $dateVal) {
                            $data .= '<td class="red">0</td>';
                        } else {
                            $data .= '<td></td>';
                        }

                    } else {
                        $data .= '<td></td>';
                    }
                }
            } else {
                if (in_array($dateVal, $visitArr)) {
                    $data .= '<td class="orange">1</td>';
                } else {
                    $data .= '<td></td>';
                }
            }
        }
        $data .= "</tr>";
//        }
    }
    $data .= "</table>";
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"".$AliaseUsers['route']."_Wise_PJP_Coverage_Report.xls\"");
    echo $data;
    exit();
}
//Todo End: Sagar : 5th May 2022 : Route wise PJP Coverage Report


//Todo Start: Sagar : 25th May 2022 : Export Manage Account List
if (isset($_GET['export_manage_account_list'])) {
    $data = "Company Name\tCompany Address\tPhone Number\tAllowed Users\tActive Users\tBilling Cycle\tStart Date\tEnd Date\tStatus\n";
    $auRec = $_objAdmin->_getSelectList2("table_account as ac 
LEFT JOIN table_salesman as s ON s.account_id = ac.account_id AND s.status = 'A' ", "ac.*,count(s.salesman_id) as active_users", '', ' GROUP BY ac.account_id ORDER BY ac.account_id ASC');
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $sts = ($auRec[$i]->status == 'A') ? "Active" : "Inactive";
            $data .= '"' . $auRec[$i]->company_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->company_address . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->company_phone_no . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->no_of_employees . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->active_users . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->billing_cycle . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->start_date . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->end_date . '"';
            $data .= "\t";
            $data .= '"' . $sts . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"account_list.xls\"");
    echo $data;
    exit;
}
//Todo End: Sagar : 25th May 2022 : Export Manage Account List
//Todo Start: Sagar : 2nd June 2022 : Export Stock to Salesman (Load In)
if (isset($_GET['export_load_in'])) {
    $data = "Category Name\tItem Name\tItem Code\tLot No.\tItem Case Size\tCompany Stock (in Cases)\tCompany Stock (in Qty.)\t" . $AliaseUsers['salesman'] . " Stock (in Cases)\t" . $AliaseUsers['salesman'] . " Stock (in Qty)\n";
    $disStk = $_objAdmin->_getSelectList('table_item_ndc_stock tds
                    LEFT JOIN table_category as c on c.category_id = tds.category_id
                    LEFT JOIN table_item as i on i.item_id = tds.item_id
                    LEFT JOIN table_item_case_relationship as rel on rel.item_id= tds.item_id
                    LEFT JOIN table_cases as tc on tc.case_id = rel.case_id
                    LEFT JOIN table_color as cc on cc.color_id = tds.color_id', "tds.category_id, tds.item_id ,  SUM(tds.stock_value) as stock_value, c.category_name, i.item_name,i.item_code, tc.case_size, cc.color_id, cc.color_code", '', " tds.account_id ='" . $_SESSION['accountId'] . "' AND tds.stock_value > 0 and i.status='A' GROUP BY tds.category_id,tds.item_id,tds.color_id");
//    echo '<pre>';
//    print_r($disStk);
//    die(' die here');
    if (is_array($disStk) && (count($disStk) > 0)) {
        foreach ($disStk as $key => $disData) {
            $salStock = 0;
            if ($_SESSION['salesmanID'] != "" && $_SESSION['salesmanID'] > 0) {
                $salCat = $_objAdmin->_getSelectList2('table_item_salesman_stock', "sal_stock_value", '', " salesman_id ='" . $_SESSION['salesmanID'] . "' AND category_id='" . $disData->category_id . "' AND item_id = '" . $disData->item_id . "' AND attribute_value_id='" . $disData->color_id . "'");
                if (is_array($salCat) && !empty($salCat)) {
                    $salStock = round(($salCat[0]->sal_stock_value / $disData->case_size), 2);
                } else {
                    $salStock = 0;
                }
            } else {
                $salStock = 0;
            }
            $sal_stock_value = 0;
            if ($_SESSION['salesmanID'] != "" && $_SESSION['salesmanID'] > 0) {
                if ($salCat[0]->sal_stock_value != "") {
                    $sal_stock_value = $salCat[0]->sal_stock_value;
                } else {
                    $sal_stock_value = 0;
                }
            } else {
                $sal_stock_value = 0;
            }
            $data .= '"' . $disData->category_name . '"';
            $data .= "\t";
            $data .= '"' . $disData->item_name . '"';
            $data .= "\t";
            $data .= '"' . $disData->item_code . '"';
            $data .= "\t";
            $data .= '"' . $disData->color_code . '"';
            $data .= "\t";
            $data .= '"' . $disData->case_size . '"';
            $data .= "\t";
            $data .= '"' . round(($disData->stock_value / $disData->case_size), 2) . '"';
            $data .= "\t";
            $data .= '"' . $disData->stock_value . '"';
            $data .= "\t";
            $data .= '"' . $salStock . '"';
            $data .= "\t";
            $data .= '"' . $sal_stock_value . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['salesman'] . "_wise_stocks(Load In).xls\"");
    echo $data;
    exit;
}
//Todo End: Sagar : 2nd June 2022 : Export Stock to Salesman (Load In)
//export statewise_minimum_item_price
if (isset($_GET['export_statewise_item_price_list'])) {
    $data = "State Name\tProduct Name\tProduct Code\tPrice\tStatus\tCreated At\tUpdated At\n";
    $sort = " ORDER BY st.state_name ASC, it.item_name ASC";
    //Todo Start : sudhanshu 12 june 2024 : add status filter
    $statusCondi = '';
    if (isset($_SESSION['MasstWiseItmPrice']) && $_SESSION['MasstWiseItmPrice'] != 'all' && $_SESSION['MasstWiseItmPrice'] != '') {
        $statusCondi = " msi.status ='" . $_SESSION['MasstWiseItmPrice'] . "'";
    }
    //Todo End : sudhanshu 12 june 2024 : add status filter
    $auRec = $_objAdmin->_getSelectList('table_state_wise_item_price as msi
INNER JOIN state as st ON st.state_id = msi.state_id
INNER JOIN table_item as it ON it.item_id = msi.item_id', "msi.id as price_id,msi.state_id,st.state_name,msi.item_id,it.item_code,it.item_name,msi.price,msi.created_at,msi.updated_at,msi.status", '', $statusCondi . $sort);
    if (is_array($auRec) && (count($auRec) > 0)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $status = ($auRec[$i]->status == 'A') ? "Active" : "Inactive";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->price . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\t";
            $data .= '"' . date('d M Y H:i A', strtotime($auRec[$i]->created_at)) . '"';
            $data .= "\t";
            $data .= '"' . ((isset($auRec[$i]->updated_at) && !empty($auRec[$i]->updated_at)) ? date('d M Y H:i A', strtotime($auRec[$i]->updated_at)) : "") . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"statewise_item_price_list.xls\"");
    echo $data;
    exit;
}

//Todo Start: Sagar: 10th June 2022 : Export Salesman & Distributor Mapping
if (isset($_GET['export_salesman_distributor_mapping'])) {
    $data = "" . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['salesman'] . " Code\t" . $AliaseUsers['salesman'] . " Status\t" . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\t" . $AliaseUsers['distributor'] . " Status\n";
    $auRec = $_objAdmin->_getSelectList('table_salesman_distributor_mapping as csm
LEFT JOIN table_salesman as s ON s.salesman_id = csm.salesman_id
LEFT join table_distributors as d on d.distributor_id=csm.distributor_id', "csm.mapping_id,d.distributor_code,d.distributor_name,d.status as distributor_status,csm.salesman_id,s.salesman_name,s.employee_code,s.status as salesman_status", '', " ORDER BY s.salesman_name ASC, d.distributor_name ASC");
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $distStatus = (strtolower($auRec[$i]->distributor_status) == 'a') ? 'Active' : 'Inactive';
            $salStatus = (strtolower($auRec[$i]->salesman_status) == 'a') ? 'Active' : 'Inactive';

            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $salStatus . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $distStatus . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['salesman'] . " and " . $AliaseUsers['distributor'] . " Mapping List.xls\"");
    echo $data;
    exit;
}
//Todo End: Sagar: 10th June 2022 : Export Salesman & Distributor Mapping

//Todo Start : Sagar : 17th June 2022 : Export Lead Master
if (isset($_GET['export_lead_master'])) {
    $data = "Lead ID\tLead Ref. ID\tTitle\tLead Start Date\tLead Source\tLead Type\tLead Survey Status\tLead Status\tReason\tNext Step\tSales Cycle Code\tProduct Discussed\tValidation Status\tValidated By\tRemark\tLandmark\tCustomer Name\tCustomer Type\tCustomer Channel\tCustomer Classification\tCustomer Phone No.\tCustomer Telephone No.\tCustomer Email\tContact Person Name\tState\tDistrict\tCity\tArea\tAddress\tExpected Qty\tFinal Qty\tOrder Value\tLead Added By\tLead Assigned To\tLead Assigned By\tCreated At\tUpdated At\n";
    $filterConditions = '';
    if (isset($_SESSION['state_id']) && !empty($_SESSION['state_id']) && (intval($_SESSION['state_id']) > 0)) {
        $filterConditions .= ' AND E.state_id = ' . $_SESSION['state_id'];
    }
    if (isset($_SESSION['salid']) && !empty($_SESSION['salid']) && (intval($_SESSION['salid']) > 0)) {
        $filterConditions .= ' AND E.assign_to_id = ' . $_SESSION['salid'];
    }
//    else{
//        if(isset($_SESSION['salesmanId']) && !empty($_SESSION['salesmanId']) && (intval($_SESSION['salesmanId']) > 0)) {
//            $filterConditions .= $_SESSION['salInCondi'];
//        }
//        else{
//            $_objArrayList = new ArrayList();
//            $salsList = $_objArrayList->SalesmanArrayList();
//            $salsList[] = 0;
//            $adminSalCondi = implode(',',$salsList);
//            $filterConditions .= ' AND E.lead_created_by_id IN('.$adminSalCondi.') ';
//        }
//    }
    if (isset($_SESSION['val_sts_id']) && !empty($_SESSION['val_sts_id']) && (intval($_SESSION['val_sts_id']) > 0)) {
        $filterConditions .= ' AND E.validation_status_id = ' . $_SESSION['val_sts_id'];
    }
    if (isset($_SESSION['lead_status_id']) && !empty($_SESSION['lead_status_id']) && (intval($_SESSION['lead_status_id']) > 0)) {
        $filterConditions .= ' AND E.lead_status_id = ' . $_SESSION['lead_status_id'];
    }
//    if(!empty($_SESSION['frmDate']) && !empty($_SESSION['toDate'])){
//        $frmDate = date('Y-m-d',strtotime($_SESSION['frmDate']));
//        $toDate = date('Y-m-d',strtotime($_SESSION['toDate']));
//    } else{
//        $frmDate = date('Y-m-d');
//        $toDate = date('Y-m-d');
//    }
    if (!empty($_SESSION['frmDate']) && !empty($_SESSION['toDate']) && ($_SESSION['frmDate'] != 'all') && ($_SESSION['toDate'] != 'all')) {
        $frmDate = date('Y-m-d', strtotime($_SESSION['frmDate']));
        $toDate = date('Y-m-d', strtotime($_SESSION['toDate']));
//        $where = " AND (E.lead_start_date BETWEEN '" . $frmDate . "' AND '" . $toDate . "') ";
        if (isset($_SESSION['dateFilterOn']) && !empty($_SESSION['dateFilterOn'])) {
            $dateFilterOn = $_SESSION['dateFilterOn'];
            $where = " AND (DATE(E.$dateFilterOn) BETWEEN '" . $frmDate . "' AND '" . $toDate . "') ";
        } else {
            $where = " AND (DATE(E.lead_start_date) BETWEEN '" . $frmDate . "' AND '" . $toDate . "') ";
        }
    } else {
//            $frmDate = date('Y-m-d');
//            $toDate = date('Y-m-d');
        $where = "";
    }
//    $where = " AND (E.lead_start_date BETWEEN '".$frmDate."' AND '".$toDate."') ";
    if (!empty($_SESSION['frmDate']) && !empty($_SESSION['toDate'])) {

        $sort = " ORDER BY E.created_at DESC";
        $auRec = $_objAdmin->_getSelectList('table_lead as E
        left join table_validation_status_master as vs on vs.id = E.validation_status_id
		left join state as st on st.state_id=E.state_id
		left join city AS ct on ct.city_id=E.city_id
		left join table_location AS loc on loc.location_id=E.location_id
		left join table_enquiry_type as ET on ET.enquiry_type_id = E.lead_type_id
		left join table_enquiry_source as ES on ES.source_id = E.lead_source_id
		left join table_enquiry_status as Ests on Ests.enquiry_status_id = E.lead_status_id
		left join table_retailer_type_master as RC on RC.type_id = E.retailer_type_id
        left join table_lead_sales_cycle_codes as lscc on lscc.id = E.cycle_code_id
        left join table_lead_next_step_master as nsm on nsm.id = E.next_step_id
        left join table_lead_reason_master as lrm on lrm.id = E.reason_id
        left join table_lead_customer_channel_master as lch on lch.id = E.channel_id
		
		left join table_salesman as s on s.salesman_id=E.assign_to_id
		left join table_salesman as s3 on s3.salesman_id=E.lead_created_by_id
		left join table_salesman as s4 on s4.salesman_id=E.validated_by_id
		left join table_salesman as s5 on s5.salesman_id=E.assigned_by_id', "E.*,st.state_name,ct.city_name,loc.location_name,ET.enqury_type as lead_type,Ests.enqury_status as lead_status,vs.description as validation_status,ES.source_name,RC.type_name as ret_type,s.salesman_name as assigned_to_name,s3.salesman_name as lead_created_by_name,s4.salesman_name as validated_by_name,s5.salesman_name as assigned_by_name,lscc.cycle_code,nsm.next_step,lrm.reason,lch.channel_name", '', $where . ' ' . $filterConditions . ' ' . $sort);

        $catgryRec = $_objAdmin->_getSelectList('table_category', 'category_id, category_name', '', " status='A' AND cat_type LIKE 'C' AND type LIKE 'I' ORDER BY category_id ASC ");
        $catgryMasterArr = [];
        if (is_array($catgryRec) && (count($catgryRec) > 0)) {
            foreach ($catgryRec as $keyc => $catgry) {
                $catgryMasterArr[$catgry->category_id] = $catgry->category_name;
            }
        }
        $custClassRec = $_objAdmin->_getSelectList('table_lead_customer_class_master', 'id, class_name', '', " status='A' ORDER BY id ASC ");
        $custClassMasterArr = [];
        if (is_array($custClassRec) && (count($custClassRec) > 0)) {
            foreach ($custClassRec as $keyc => $class) {
                $custClassMasterArr[$class->id] = $class->class_name;
            }
        }


        $remove = array("\n", "\r\n", "\r", ",");
        for ($i = 0; $i < count($auRec); $i++) {
            $addedBy = '';
            if ($auRec[$i]->lead_created_by_id > 0) {
                $addedBy = $auRec[$i]->lead_created_by_name;
            } else {
                $addedBy = 'Admin';
            }
            $telephone = '';
            if (!empty($auRec[$i]->std_code) && !empty($auRec[$i]->telephone_no)) {
                $telephone = addslashes($auRec[$i]->std_code . ' - ' . $auRec[$i]->telephone_no);
            } else {
                $telephone = $auRec[$i]->std_code . $auRec[$i]->telephone_no;
            }
            $lead_start_date = '';
            if (isset($auRec[$i]->lead_start_time) && !empty($auRec[$i]->lead_start_time) && ($auRec[$i]->lead_start_time != '00:00:00')) {
                $lead_start_date = date('Y-m-d h:i A', strtotime($auRec[$i]->lead_start_date . ' ' . $auRec[$i]->lead_start_time));
            } else {
                $lead_start_date = date('Y-m-d', strtotime($auRec[$i]->lead_start_date));
            }
            $data .= '"' . $auRec[$i]->lead_id . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->lead_code . '"';
            $data .= "\t";
            $data .= '"' . str_replace($remove, '', $auRec[$i]->title) . '"';
            $data .= "\t";
            $data .= '"' . $lead_start_date . '"';
            $data .= "\t";
//        $data.= '"'.ucwords($auRec[$i]->recieved_by_name).'"';
//        $data.= "\t";
            $data .= '"' . $auRec[$i]->source_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->lead_type . '"';
            $data .= "\t";

            $surveyStatus = '';
            if (strtolower($auRec[$i]->survey_status) == 'c') {
                $surveyStatus = 'Completed';
            } else {
                $surveyStatus = 'Not Completed';
            }

            $data .= '"' . $surveyStatus . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->lead_status . '"';
            $data .= "\t";

            $data .= '"' . $auRec[$i]->reason . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->next_step . '"';
            $data .= "\t";
//            $data .= '"' . $auRec[$i]->priority_status . '"';
//            $data .= "\t";
            $data .= '"' . $auRec[$i]->cycle_code . '"';
            $data .= "\t";

            $catValuesArr = [];
            if (isset($auRec[$i]->category_id) && !empty($auRec[$i]->category_id)) {
                $catgryIdArr = explode(',', $auRec[$i]->category_id);
                foreach ($catgryIdArr as $keycid => $catgryId) {
                    if (isset($catgryMasterArr[$catgryId]) && !empty($catgryMasterArr[$catgryId])) {
                        $catValuesArr[] = $catgryMasterArr[$catgryId];
                    }
                }
            }

            $data .= '"' . implode(', ', $catValuesArr) . '"';
            $data .= "\t";

            $data .= '"' . $auRec[$i]->validation_status . '"';
            $data .= "\t";

            if (isset($auRec[$i]->updated_at) && !empty($auRec[$i]->updated_at) && ($auRec[$i]->updated_at != '0000-00-00 00:00:00')) {
                if ($auRec[$i]->validation_status != 'Not Started') {
                    if (intval($auRec[$i]->validated_by_id) > 0) {
                        $validatedBy = $auRec[$i]->validated_by_name;
                    } else {
                        $validatedBy = 'Admin';
                    }
                } else {
                    $validatedBy = '';
                }
            } else {
                $validatedBy = '';
            }

            $data .= '"' . $validatedBy . '"';
            $data .= "\t";


            $data .= '"' . addslashes(str_replace(["<br>", "<br />", "<br/>"], "\n", preg_replace('/[^a-zA-Z0-9., <>\/:\']/', '', $auRec[$i]->remark))) . '"';
            $data .= "\t";
            $data .= '"' . ucwords(str_replace($remove, '', $auRec[$i]->retailer_name)) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->ret_type . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->channel_name . '"';
            $data .= "\t";

            $classValuesArr = [];
            if (isset($auRec[$i]->class_id) && !empty($auRec[$i]->class_id)) {
                $classIdArr = explode(',', $auRec[$i]->class_id);
                foreach ($classIdArr as $keycid => $classId) {
                    if (isset($custClassMasterArr[$classId]) && !empty($custClassMasterArr[$classId])) {
                        $classValuesArr[] = $custClassMasterArr[$classId];
                    }
                }
            }

            $data .= '"' . implode(', ', $classValuesArr) . '"';
            $data .= "\t";
            $data .= '"' . str_replace($remove, '', $auRec[$i]->retailer_phone_no) . '"';
            $data .= "\t";
            $data .= '"' . addslashes(str_replace($remove, '', $telephone)) . '"';
            $data .= "\t";
            $data .= '"' . str_replace($remove, '', $auRec[$i]->retailer_email) . '"';
            $data .= "\t";
            $data .= '"' . str_replace($remove, '', $auRec[$i]->contact_person) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\t";
            $data .= '"' . str_replace($remove, '', $auRec[$i]->retailer_location) . '"';
            $data .= "\t";
            $data .= '"' . addslashes(str_replace(["<br>", "<br />", "<br/>"], "\n", preg_replace('/[^a-zA-Z0-9., <>\/:\']/', '', $auRec[$i]->address))) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->order_qty . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->final_qty . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->order_value . '"';
            $data .= "\t";
            $data .= '"' . ucwords($addedBy) . '"';
            $data .= "\t";
            $data .= '"' . ucwords($auRec[$i]->assigned_to_name) . '"';
            $data .= "\t";

            if (intval($auRec[$i]->assign_to_id) > 0) {
                if (intval($auRec[$i]->assigned_by_id) > 0) {
                    $assignedBy = $auRec[$i]->assigned_by_name;
                } else {
                    if (isset($auRec[$i]->updated_at) && !empty($auRec[$i]->updated_at) && ($auRec[$i]->updated_at != '0000-00-00 00:00:00')) {
                        $assignedBy = 'Admin';
                    } else {
                        $assignedBy = '';
                    }
                }
            } else {
                $assignedBy = '';
            }

            $data .= '"' . ucwords($assignedBy) . '"';
            $data .= "\t";

            $data .= '"' . date("Y-m-d h:i A", strtotime($auRec[$i]->created_at)) . '"';
            $data .= "\t";
            $updatedAt = '';
            if (isset($auRec[$i]->updated_at) && !empty($auRec[$i]->updated_at) && ($auRec[$i]->updated_at != '0000-00-00 00:00:00')) {
                $updatedAt = date('Y-m-d h:i A', strtotime($auRec[$i]->updated_at));
            }
            $data .= '"' . $updatedAt . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"leads_master_list.xls\"");
    echo $data;
    exit;
}
//Todo End : Sagar : 17th June 2022 : Export Lead Master
//Todo Start : Sagar : 21st June 2022 : Export Lead Report
if (isset($_GET['export_lead_report'])) {
    $data .= "Lead ID\tLead Ref. ID\tTitle\tLead Start Date\tLead Source\tLead Type\tLead Survey Status\tLead Status\tReason\tNext Step\tSales Cycle Code\tProduct Discussed\tValidation Status\tValidated By\tRemark\tLandmark\tCustomer Name\tCustomer Type\tCustomer Channel\tCustomer Classification\tCustomer Phone No.\tCustomer Telephone No.\tCustomer Email\tContact Person Name\tState\tDistrict\tCity\tArea\tAddress\tExpected Qty\tFinal Qty\tOrder Value\tLead Added By\tLead Assigned To\tLead Assigned By\tCreated At\tUpdated At\tReminder Date\tReminder Time\n";
    $filterConditions = '';
    if (isset($_SESSION['state_id_rep']) && !empty($_SESSION['state_id_rep']) && (intval($_SESSION['state_id_rep']) > 0)) {
        $filterConditions .= ' AND E.state_id = ' . $_SESSION['state_id_rep'];
    }
    if (isset($_SESSION['salidrep']) && !empty($_SESSION['salidrep']) && (intval($_SESSION['salidrep']) > 0)) {
        $filterConditions .= ' AND E.assign_to_id = ' . $_SESSION['salidrep'];
    } else {
        if (isset($_SESSION['salesmanId']) && !empty($_SESSION['salesmanId']) && (intval($_SESSION['salesmanId']) > 0)) {
            $filterConditions .= $_SESSION['salInCondi'];
        } else {
            $_objArrayList = new ArrayList();
            $salsList = $_objArrayList->SalesmanArrayList();
            $salsList[] = 0;
            $adminSalCondi = implode(',', $salsList);
            $filterConditions .= ' AND E.lead_created_by_id IN(' . $adminSalCondi . ') ';
        }
    }
    if (isset($_SESSION['val_sts_id_rep']) && !empty($_SESSION['val_sts_id_rep']) && (intval($_SESSION['val_sts_id_rep']) > 0)) {
        $filterConditions .= ' AND E.validation_status_id = ' . $_SESSION['val_sts_id_rep'];
    }
    if (isset($_SESSION['lead_status_id_rep']) && !empty($_SESSION['lead_status_id_rep']) && (intval($_SESSION['lead_status_id_rep']) > 0)) {
        $filterConditions .= ' AND E.lead_status_id = ' . $_SESSION['lead_status_id_rep'];
    }
    if (!empty($_SESSION['frmDateRep']) && !empty($_SESSION['toDateRep'])) {
        $frmDate = date('Y-m-d', strtotime($_SESSION['frmDateRep']));
        $toDate = date('Y-m-d', strtotime($_SESSION['toDateRep']));
    } else {
        $frmDate = date('Y-m-d');
        $toDate = date('Y-m-d');
    }

//    $where = " AND (E.lead_start_date BETWEEN '" . $frmDate . "' AND '" . $toDate . "') ";
    if (isset($_SESSION['dateFilterOn']) && !empty($_SESSION['dateFilterOn'])) {
        $dateFilterOn = $_SESSION['dateFilterOn'];
        $where = " AND (DATE(E.$dateFilterOn) BETWEEN '" . $frmDate . "' AND '" . $toDate . "') ";
    } else {
        $where = " AND (DATE(E.lead_start_date) BETWEEN '" . $frmDate . "' AND '" . $toDate . "') ";
    }

    $sort = " ORDER BY E.created_at DESC";
    $auRec = $_objAdmin->_getSelectList('table_lead as E
        left join table_validation_status_master as vs on vs.id = E.validation_status_id
		left join state as st on st.state_id=E.state_id
		left join city AS ct on ct.city_id=E.city_id
		left join table_location AS loc on loc.location_id=E.location_id
		left join table_enquiry_type as ET on ET.enquiry_type_id = E.lead_type_id
		left join table_enquiry_source as ES on ES.source_id = E.lead_source_id
		left join table_enquiry_status as Ests on Ests.enquiry_status_id = E.lead_status_id
		left join table_retailer_type_master as RC on RC.type_id = E.retailer_type_id
        left join table_lead_sales_cycle_codes as lscc on lscc.id = E.cycle_code_id
        left join table_lead_next_step_master as nsm on nsm.id = E.next_step_id
        left join table_lead_reason_master as lrm on lrm.id = E.reason_id
        left join table_lead_customer_channel_master as lch on lch.id = E.channel_id
		
		left join table_salesman as s on s.salesman_id=E.assign_to_id
		left join table_salesman as s3 on s3.salesman_id=E.lead_created_by_id
		left join table_salesman as s4 on s4.salesman_id=E.validated_by_id
		left join table_salesman as s5 on s5.salesman_id=E.assigned_by_id', "E.*,st.state_name,ct.city_name,loc.location_name,ET.enqury_type as lead_type,Ests.enqury_status as lead_status,vs.description as validation_status,ES.source_name,RC.type_name as ret_type,s.salesman_name as assigned_to_name,s3.salesman_name as lead_created_by_name,s4.salesman_name as validated_by_name,s5.salesman_name as assigned_by_name,lscc.cycle_code,nsm.next_step,lrm.reason,lch.channel_name", '', $where . ' ' . $filterConditions . ' ' . $sort);

    $catgryRec = $_objAdmin->_getSelectList('table_category', 'category_id, category_name', '', " status='A' AND cat_type LIKE 'C' AND type LIKE 'I' ORDER BY category_id ASC ");
    $catgryMasterArr = [];
    if (is_array($catgryRec) && (count($catgryRec) > 0)) {
        foreach ($catgryRec as $keyc => $catgry) {
            $catgryMasterArr[$catgry->category_id] = $catgry->category_name;
        }
    }

    $custClassRec = $_objAdmin->_getSelectList('table_lead_customer_class_master', 'id, class_name', '', " status='A' ORDER BY id ASC ");
    $custClassMasterArr = [];
    if (is_array($custClassRec) && (count($custClassRec) > 0)) {
        foreach ($custClassRec as $keyc => $class) {
            $custClassMasterArr[$class->id] = $class->class_name;
        }
    }

    $remove = array("\n", "\r\n", "\r", ",");
    for ($i = 0; $i < count($auRec); $i++) {
        $addedBy = '';
        if ($auRec[$i]->lead_created_by_id > 0) {
            $addedBy = $auRec[$i]->lead_created_by_name;
        } else {
            $addedBy = 'Admin';
        }
        $telephone = '';
        if (!empty($auRec[$i]->std_code) && !empty($auRec[$i]->telephone_no)) {
            $telephone = addslashes($auRec[$i]->std_code . ' - ' . $auRec[$i]->telephone_no);
        } else {
            $telephone = $auRec[$i]->std_code . $auRec[$i]->telephone_no;
        }
        $lead_start_date = '';
        if (isset($auRec[$i]->lead_start_time) && !empty($auRec[$i]->lead_start_time) && ($auRec[$i]->lead_start_time != '00:00:00')) {
            $lead_start_date = date('d M Y h:i A', strtotime($auRec[$i]->lead_start_date . ' ' . $auRec[$i]->lead_start_time));
        } else {
            $lead_start_date = date('d M Y', strtotime($auRec[$i]->lead_start_date));
        }
        $data .= '"' . $auRec[$i]->lead_id . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->lead_code . '"';
        $data .= "\t";
        $data .= '"' . str_replace($remove, '', $auRec[$i]->title) . '"';
        $data .= "\t";
        $data .= '"' . $lead_start_date . '"';
        $data .= "\t";
//        $data.= '"'.ucwords($auRec[$i]->recieved_by_name).'"';
//        $data.= "\t";
        $data .= '"' . $auRec[$i]->source_name . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->lead_type . '"';
        $data .= "\t";

        $surveyStatus = '';
        if (strtolower($auRec[$i]->survey_status) == 'c') {
            $surveyStatus = 'Completed';
        } else {
            $surveyStatus = 'Not Completed';
        }

        $data .= '"' . $surveyStatus . '"';
        $data .= "\t";

        $data .= '"' . $auRec[$i]->lead_status . '"';
        $data .= "\t";

        $data .= '"' . $auRec[$i]->reason . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->next_step . '"';
        $data .= "\t";
//        $data .= '"' . $auRec[$i]->priority_status . '"';
//        $data .= "\t";
        $data .= '"' . $auRec[$i]->cycle_code . '"';
        $data .= "\t";

        $catValuesArr = [];
        if (isset($auRec[$i]->category_id) && !empty($auRec[$i]->category_id)) {
            $catgryIdArr = explode(',', $auRec[$i]->category_id);
            foreach ($catgryIdArr as $keycid => $catgryId) {
                if (isset($catgryMasterArr[$catgryId]) && !empty($catgryMasterArr[$catgryId])) {
                    $catValuesArr[] = $catgryMasterArr[$catgryId];
                }
            }
        }

        $data .= '"' . implode(', ', $catValuesArr) . '"';
        $data .= "\t";

        $data .= '"' . $auRec[$i]->validation_status . '"';
        $data .= "\t";

        if (isset($auRec[$i]->updated_at) && !empty($auRec[$i]->updated_at) && ($auRec[$i]->updated_at != '0000-00-00 00:00:00')) {
            if ($auRec[$i]->validation_status != 'Not Started') {
                if (intval($auRec[$i]->validated_by_id) > 0) {
                    $validatedBy = $auRec[$i]->validated_by_name;
                } else {
                    $validatedBy = 'Admin';
                }
            } else {
                $validatedBy = '';
            }
        } else {
            $validatedBy = '';
        }

        $data .= '"' . $validatedBy . '"';
        $data .= "\t";

        $data .= '"' . addslashes(str_replace(["<br>", "<br />", "<br/>"], "\n", preg_replace('/[^a-zA-Z0-9., <>\/:\']/', '', $auRec[$i]->remark))) . '"';
        $data .= "\t";
        $data .= '"' . ucwords(str_replace($remove, '', $auRec[$i]->retailer_name)) . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->ret_type . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->channel_name . '"';
        $data .= "\t";

        $classValuesArr = [];
        if (isset($auRec[$i]->class_id) && !empty($auRec[$i]->class_id)) {
            $classIdArr = explode(',', $auRec[$i]->class_id);
            foreach ($classIdArr as $keycid => $classId) {
                if (isset($custClassMasterArr[$classId]) && !empty($custClassMasterArr[$classId])) {
                    $classValuesArr[] = $custClassMasterArr[$classId];
                }
            }
        }

        $data .= '"' . implode(', ', $classValuesArr) . '"';
        $data .= "\t";
        $data .= '"' . str_replace($remove, '', $auRec[$i]->retailer_phone_no) . '"';
        $data .= "\t";
        $data .= '"' . addslashes(str_replace($remove, '', $telephone)) . '"';
        $data .= "\t";
        $data .= '"' . str_replace($remove, '', $auRec[$i]->retailer_email) . '"';
        $data .= "\t";
        $data .= '"' . str_replace($remove, '', $auRec[$i]->contact_person) . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->state_name . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->city_name . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->location_name . '"';
        $data .= "\t";
        $data .= '"' . str_replace($remove, '', $auRec[$i]->retailer_location) . '"';
        $data .= "\t";
        $data .= '"' . addslashes(str_replace(["<br>", "<br />", "<br/>"], "\n", preg_replace('/[^a-zA-Z0-9., <>\/:\']/', '', $auRec[$i]->address))) . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->order_qty . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->final_qty . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->order_value . '"';
        $data .= "\t";
        $data .= '"' . ucwords($addedBy) . '"';
        $data .= "\t";
        $data .= '"' . ucwords($auRec[$i]->assigned_to_name) . '"';
        $data .= "\t";

        if (intval($auRec[$i]->assign_to_id) > 0) {
            if (intval($auRec[$i]->assigned_by_id) > 0) {
                $assignedBy = $auRec[$i]->assigned_by_name;
            } else {
                if (isset($auRec[$i]->updated_at) && !empty($auRec[$i]->updated_at) && ($auRec[$i]->updated_at != '0000-00-00 00:00:00')) {
                    $assignedBy = 'Admin';
                } else {
                    $assignedBy = '';
                }
            }
        } else {
            $assignedBy = '';
        }
        $data .= '"' . ucwords($assignedBy) . '"';
        $data .= "\t";

        $data .= '"' . date("d M Y h:i A", strtotime($auRec[$i]->created_at)) . '"';
        $data .= "\t";
        $updatedAt = '';
        if (isset($auRec[$i]->updated_at) && !empty($auRec[$i]->updated_at) && ($auRec[$i]->updated_at != '0000-00-00 00:00:00')) {
            $updatedAt = date('d M Y h:i A', strtotime($auRec[$i]->updated_at));
        }
        $data .= '"' . $updatedAt . '"';
        $data .= "\t";
        $reminder_date = '';
        if (isset($auRec[$i]->reminder_date) && !empty($auRec[$i]->reminder_date) && ($auRec[$i]->reminder_date != '0000-00-00')) {
            $reminder_date = date('Y-m-d', strtotime($auRec[$i]->reminder_date));
        }
        $data .= '"' . $reminder_date . '"';
        $data .= "\t";

        $reminder_time = '';
        if (isset($auRec[$i]->reminder_time) && !empty($auRec[$i]->reminder_time) && ($auRec[$i]->reminder_time != '00:00:00')) {
            $reminder_time = $auRec[$i]->reminder_time;
        }
        $data .= '"' . $reminder_time . '"';
        $data .= "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"lead_report.xls\"");
    echo $data;
    exit;
}
//Todo End : Sagar : 21st June 2022 : Export Lead Report
//Todo Start : Sagar : 19th Aug 2022 : Export New Distributor Product Report
if (isset($_GET['export_distributor_product_report'])) {
    $data = "" . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\tZone\tState\tCity\t" .
        $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['salesman'] . " Code\tOrder No.\tCategory Name\tItem Name\tItem Code\tBrand Name\tItem ERP Code\tPrice\tQuantity\tTotal\tDate of Order\tTime of Order\tRemarks\n";
    $sort = " ORDER BY O.date_of_order DESC, O.time_of_order DESC";
    $condition = '';
    if ($_SESSION['categoryID'] != '' && $_SESSION['categoryID'] != 'all') {
        $condition .= " AND c.category_id = " . $_SESSION['categoryID'] . " ";
    }
    if ($_SESSION['itemID'] != '' && $_SESSION['itemID'] != 'all') {
        $condition .= " AND D.item_id = " . $_SESSION['itemID'] . " ";
    }
    if ($_SESSION['SalOrderList'] != '' && $_SESSION['SalOrderList'] != 'All') {
        $condition .= " AND O.salesman_id = " . $_SESSION['SalOrderList'] . " ";
    }
    if ($_SESSION['FromProductList'] != '') {
        $fromdate = date('Y-m-d', strtotime($_SESSION['FromProductList']));
    } else {
        $fromdate = date('Y-m-d');
    }
    if ($_SESSION['ToProductList'] != '') {
        $todate = date('Y-m-d', strtotime($_SESSION['ToProductList']));
    } else {
        $todate = date('Y-m-d');
    }
    $userWiseCondi = '';
    if (($_SESSION['userLoginType'] == 1) && ($_SESSION['salesmanId'] <= 0) && ($_SESSION['distributorId'] <= 0)) {
        $userWiseCondi = '';
    } elseif (($_SESSION['userLoginType'] == 5) && ($_SESSION['salesmanId'] > 0) && ($_SESSION['distributorId'] <= 0)) {
        if (($_SESSION['salesmanId'] > 0) && ($_SESSION['role_id'] > 0)) {
            $RoleBrands = $_objAdmin->getUserRoleBrand();
            if (!empty($RoleBrands)) {
                $userWiseCondi = " AND b.brand_id IN(" . $RoleBrands . ")";
            }
        } else {
            $userWiseCondi = $salesman;
        }
    } elseif (($_SESSION['userLoginType'] == 3) && ($_SESSION['salesmanId'] <= 0) && ($_SESSION['distributorId'] > 0)) {
        $userWiseCondi = " AND O.distributor_id = " . $_SESSION['distributorId'];
    } else {
        $userWiseCondi = '';
    }
    $where = " LOWER(O.order_type) = 'yes' AND O.account_id='" . $_SESSION['accountId'] . "' AND (O.date_of_order BETWEEN '" . $fromdate . "' AND '" . $todate . "') $userWiseCondi  $condition ";
//    $auRec = $_objAdmin->_getSelectList2('table_order_detail AS D
//		LEFT JOIN table_order AS O ON D.order_id = O.order_id
//		LEFT JOIN table_item AS I ON D.item_id = I.item_id
//		LEFT JOIN table_brands as b ON b.brand_id=I.brand_id
//		LEFT JOIN table_category AS c ON c.category_id = I.category_id
//		LEFT JOIN table_price AS P ON D.item_id = P.item_id
//		LEFT JOIN table_salesman AS s ON O.salesman_id = s.salesman_id
//		LEFT JOIN table_retailer AS R ON O.retailer_id = R.retailer_id
//		LEFT JOIN table_retailer_channel_master as cm ON cm.channel_id=R.channel_id
//		LEFT JOIN table_distributors AS Dis ON O.distributor_id = Dis.distributor_id
//		LEFT JOIN state as st on st.state_id=Dis.state
//		LEFT JOIN city as ct on ct.city_id=Dis.city',
//        'D.price, D.quantity, D.total,R.new, I.item_name,I.item_code,b.brand_name,cm.channel_name,I.item_erp_code,P.item_mrp, O.order_id, s.salesman_name,s.employee_code, Dis.distributor_name,Dis.distributor_code,R.retailer_name,R.retailer_code,c.category_name, O.date_of_order, O.time_of_order,st.state_name,ct.city_name, D.remarks', '', $where . $sort);
    $auRec = $_objAdmin->_getSelectList2('table_distributor_order_detail AS D 
		LEFT JOIN table_distributor_order AS O ON D.order_id = O.order_id
		LEFT JOIN table_item AS I ON D.item_id = I.item_id
		LEFT JOIN table_brands as b ON b.brand_id=I.brand_id
		LEFT JOIN table_category AS c ON c.category_id = I.category_id 
		LEFT JOIN table_price AS P ON D.item_id = P.item_id
		LEFT JOIN table_salesman AS s ON O.salesman_id = s.salesman_id
		LEFT JOIN table_distributors AS Dis ON O.distributor_id = Dis.distributor_id
		LEFT JOIN state as st on st.state_id=Dis.state
		LEFT JOIN table_zone_state_mapping as szsm on szsm.state_id = Dis.state and szsm.account_id = Dis.account_id
        LEFT JOIN table_zone as sz on sz.zone_id = szsm.zone_id
		LEFT JOIN city as ct on ct.city_id=Dis.city',
        'D.price, D.quantity, D.total, I.item_name,I.item_code,b.brand_name,I.item_erp_code,P.item_mrp, s.salesman_name, s.employee_code, Dis.distributor_name,Dis.distributor_code,c.category_name,O.order_id, O.date_of_order, O.time_of_order,st.state_name,ct.city_name,D.remarks,sz.zone_name', '', $where . $sort);
    $remove = array("\n", "\r\n", "\r");
    for ($i = 0; $i < count($auRec); $i++) {
        $data .= "" . $auRec[$i]->distributor_name . "\t"
            . $auRec[$i]->distributor_code . "\t"
            . $auRec[$i]->zone_name . "\t"
            . $auRec[$i]->state_name . "\t"
            . $auRec[$i]->city_name . "\t"
//            . $auRec[$i]->retailer_name . "\t"
//            . $auRec[$i]->retailer_code . "\t"
//            . $auRec[$i]->channel_name . "\t"
            . $auRec[$i]->salesman_name . "\t"
            . $auRec[$i]->employee_code . "\t"
            . $auRec[$i]->order_id . "\t"
            . $auRec[$i]->category_name . "\t"
            . ucwords(addslashes(preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace($remove, '', $auRec[$i]->item_name)))) . "\t"
            . ucwords(addslashes(preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace($remove, '', $auRec[$i]->item_code)))) . "\t"
            . ucwords(addslashes(preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace($remove, '', $auRec[$i]->brand_name)))) . "\t"
            . ucwords(addslashes(preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace($remove, '', $auRec[$i]->item_erp_code)))) . "\t"
            . $auRec[$i]->price . "\t"
            . $auRec[$i]->quantity . "\t"
            . $auRec[$i]->total . "\t"
            . $_objAdmin->_changeDate($auRec[$i]->date_of_order) . "\t"
            . $auRec[$i]->time_of_order . "\t"
            . ucwords(addslashes(preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace($remove, '', $auRec[$i]->remarks)))) . "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['distributor'] . " Product Report.xls\"");
    echo $data;
    exit;
}
//Todo End : Sagar : 19th Aug 2022 : Export New Distributor Product Report
//Todo Start: Sagar: 17th Aug 2022 : export Salesman Distance Report
if (isset($_GET['export_salesman_distance_report'])) {
    $data = "" . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['salesman'] . " Code\tDate\tDistance Travelled\n";
//    echo '<pre>';
//    print_r($data);
//    print_r($_SESSION['Mapsal']);
//    echo '<br>';
//    print_r($_SESSION['Fromdate']);
//    echo '<br>';
//    print_r($_SESSION['Todate']);
//    echo '<br>';
//    die(' die here');
//    $getExpenseTypes = $_objAdmin->_getSelectList('table_salesman_tags as s','s.id,s.desc',''," ORDER BY s.id ASC ");
//
//    if(is_array($getExpenseTypes) && (count($getExpenseTypes) > 0)){
//        foreach ($getExpenseTypes as $key => $expType){
//            $data .= $expType->desc."\t";
//            $data .= $expType->desc.' Remark'."\t";
//        }
//    }
//    $data .= "Total Amount\tCreated on\n";
//
//    if ($_SESSION['FromallownceList'] != '') {
//        $fromdate = date('Y-m-d', strtotime($_SESSION['FromallownceList']));
//    } else {
//        $fromdate = date('Y-m-d');
//    }
//    if ($_SESSION['ToallownceList'] != '') {
//        $todate = date('Y-m-d', strtotime($_SESSION['ToallownceList']));
//    } else {
//        $todate = date('Y-m-d');
//    }
//    $salCond = '';
//    $_objArrayList = new ArrayList();
//    if(isset($_SESSION['allowncesalesmanID']) && !empty($_SESSION['allowncesalesmanID'])){
////        $salCond = " AND s.salesman_id = ".$_SESSION['allowncesalesmanID'];
//        $salArrList = $_SESSION['allowncesalesmanID'];
//        $filterby = '';
//        $salesman = $_objArrayList->getSalesmanConsolidatedList($salArrList, $filterby);
//        $salCond = $salesman;
//    }
//    else{
//        $salsList = $_objArrayList->SalesmanArrayList();
//        $salesman = $_objArrayList->getSalesCondition($salsList);
//        $salCond = $salesman;
//    }
//    $condi=	" sd.app_date BETWEEN '".$fromdate."' AND '".$todate."' $salCond  ORDER BY sd.created DESC ";
    //Todo Start Sudhanshu 08 April 2024
    $salsmanCond = "";
    if (isset($_SESSION['Mapsal']) && !empty($_SESSION['Mapsal']) && ($_SESSION['Mapsal'] != 'all')) {
        $salsmanCond = " AND a.salesman_id='" . $_SESSION['Mapsal'] . "' ";
    }

    //Todo End Sudhanshu 08 April 2024
    $auRec = $_objAdmin->_getSelectList2('table_activity as a', "COUNT(*) AS ttl", '', "  activity_type IN (3,5,11,12,13) and activity_date between '" . date('Y-m-d', strtotime($_SESSION['Fromdate'])) . "' and '" . date('Y-m-d', strtotime($_SESSION['Todate'])) . "' $salsmanCond and accuracy_level!=0 order by end_time asc");
    $locTrackdata = $_objAdmin->_getSelectList2('table_tracking_activity as a', "COUNT(*) AS ttl", '', "  app_date between '" . date('Y-m-d', strtotime($_SESSION['Fromdate'])) . "' and '" . date('Y-m-d', strtotime($_SESSION['Todate'])) . "' $salsmanCond and gps_accuracy!=0 and tracking_type='L' order by app_time asc");
    $rowCount1 = $auRec[0]->ttl;
    $rowCount2 = $locTrackdata[0]->ttl;
    $row = $rowCount1 + $rowCount2;
    if ($row <= 0) {
        $data .= "This " . $AliaseUsers['salesman'] . " has not worked during these period";
    } else {
        $auRec = array();
        $result = array();
        $locTrackdata = array();
        $result2 = $_objAdmin->_getSelectList2('table_activity as a
        LEFT JOIN table_salesman as s ON s.salesman_id=a.salesman_id', "DISTINCT activity_date,s.salesman_name,s.employee_code,s.salesman_id", '', "   activity_date between '" . date('Y-m-d', strtotime($_SESSION['Fromdate'])) . "' and '" . date('Y-m-d', strtotime($_SESSION['Todate'])) . "' AND s.account_id='" . $_SESSION['accountId'] . "' $salsmanCond and accuracy_level!=0  order by activity_date,end_time asc");
        $i = 0;
        $sum = array();
        foreach ($result2 as $key1 => $value1) {
            $salsmanCond = " AND a.salesman_id='" . $value1->salesman_id . "'";
            $result = $_objAdmin->_getSelectList2('table_activity as a', "lat,lng,end_time as app_time,accuracy_level", '', "  activity_type IN (3,5,11,12,13) and activity_date='" . $value1->activity_date . "' $salsmanCond and accuracy_level!=0  order by end_time asc");
            if (sizeof($result) <= 0 && sizeof($locTrackdata) > 0)
                $auRec = $locTrackdata;
            elseif (sizeof($result) > 0 && sizeof($locTrackdata) <= 0)
                $auRec = $result;
            else
                $auRec = array_merge($result, $locTrackdata);
            $salesSum = 0;
            foreach ($auRec as $key => $value) {
                $salesLat1 = $auRec[$key]->lat;
                if (isset($auRec[$key + 1]->lat))
                    $salesLat = $auRec[$key + 1]->lat;
                else
                    $salesLat = $auRec[$key]->lat;
                $salesLng1 = $auRec[$key]->lng;
                if (isset($auRec[$key + 1]->lng))
                    $salesLng = $auRec[$key + 1]->lng;
                else
                    $salesLng = $auRec[$key]->lng;
                $salesdistance = distance($salesLat1, $salesLng1, $salesLat, $salesLng, "K");
                if (!is_nan($salesdistance)) {
                    $salesSum = $salesSum + $salesdistance;
                }
            }
            $sum[$i] = $salesSum;
            $totalsum = $totalsum + $sum[$i];
            $i++;
        }
    }
    // $auSal = $_objAdmin->_getSelectList('table_salesman', "salesman_id,salesman_name,employee_code", '', " salesman_id='" . $_SESSION['Mapsal'] . "' ");
    $remove = array("\n", "\r\n", "\r", ",");
    $i = 0;
    foreach ($result2 as $key1 => $value1) {
        $activity_date = date("j M Y", strtotime($value1->activity_date));
        $distance = round($sum[$i], 2) . " km";
        $data .= '"' . $value1->salesman_name . '"';
        $data .= "\t";
        $data .= '"' . $value1->employee_code . '"';
        $data .= "\t";
        $data .= '"' . $activity_date . '"';
        $data .= "\t";
        $data .= '"' . $distance . '"';
        $data .= "\n";
        $i++;
    }
    $data .= '" "';
    $data .= "\t";
    $data .= '" "';
    $data .= "\t";
    $totalDistTravld = round($totalsum, 2) . " km";
    $data .= '" Total Distance Travelled "';
    $data .= "\t";
    $data .= '"' . $totalDistTravld . '"';
    $data .= "\n";
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"salesman_distance_report.xls\"");
    echo $data;
    exit;
}
//Todo End: Sagar: 17th Aug 2022 : export Salesman Distance Report
//product export
if (isset($_GET['export_product_report_new'])) {
    //echo hello;exit;
    $data = "" . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\tZone\tState\tCity\t"
        . $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['retailer'] . " Code\t" . $AliaseUsers['retailer'] . " Channel\t" . $AliaseUsers['retailer'] . " Type\tRoute Name\t" . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['salesman'] . " Code\tOrder No.\tCategory Name\tSub Category Name \tItem Name\tItem Code\tBrand Name\tHsn Code\tItem PTR\tItem MRP\tQty in PCS\tQty in KG\tQty in Cases\tGrams\tDiscount\tOrdered Item Price\tDate of Order\tTime of Order\tRemarks\n";
    $sort = " ORDER BY date_of_order desc,time_of_order desc";

//		$_objArrayList = new ArrayList();
//		$salsList = $_objArrayList->SalesmanArrayList();
//		$salesman = $_objArrayList->getSalesCondition($salsList);
    if (isset($_SESSION['SalOrderList']) && $_SESSION['SalOrderList'] != '') {
        $salesman = " AND s.salesman_id IN (" . $_SESSION['SalOrderList'] . ")";
    } else if (($_SESSION['salesmanId'] > 0) && ($_SESSION['role_id'] > 0)) {
        $RoleBrands = $_objAdmin->getUserRoleBrand();
        if (!empty($RoleBrands)) {
            $salesman = " AND b.brand_id IN(" . $RoleBrands . ")";
        }
    } else {
        $_objArrayList = new ArrayList();
        $salsList = $_objArrayList->SalesmanArrayList();
        $salesman = $_objArrayList->getSalesCondition($salsList);
    }
    if ($_SESSION['categoryID'] != '' && $_SESSION['categoryID'] != 'all') {
        $condition .= " c.category_id = " . $_SESSION['categoryID'] . " AND ";
    }
    if ($_SESSION['itemID'] != '' && $_SESSION['itemID'] != 'all') {
        $condition .= " D.item_id = " . $_SESSION['itemID'] . " AND ";
    }
    if ($_SESSION['FromProductList'] != '') {
        $fromdate = "  O.date_of_order  >= '" . date('Y-m-d', strtotime($_SESSION['FromProductList'])) . "' AND ";
    } else {
        $fromdate = " O.date_of_order  >= '" . date('Y-m-d') . "' AND ";
    }
    if ($_SESSION['ToProductList'] != '') {
        $todate = " O.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToProductList'])) . "' ";
    } else {
        $todate = "  O.date_of_order <= '" . date('Y-m-d') . "'";
    }
//		$RoleBrands = $_objAdmin->getUserRoleBrand();
//		$brandCnd = '';
//		if(!empty($RoleBrands)){
//			$brandCnd = " and b.brand_id IN(".$RoleBrands.")";
//			if(isset($_SESSION['SalOrderList']) && $_SESSION['SalOrderList'] !='' && $_SESSION['SalOrderList'] !='All'){
//				$salesman =  " AND s.salesman_id IN (".$_SESSION['SalOrderList'].")";
//			}else{
//				$salesman ='';
//			}
//		}
    //$groupby  = " GROUP BY table_order_detail.item_id having SUM(table_order_detail.quantity)!=0";
    //$groupby  = " AND o.order_id in (select order_id from table_order where ostype in ('D','R') AND order_type = 'Yes' AND order_status='A' AND $fromdate $todate ) group by o.item_id having SUM(o.quantity)!=0 ";
//    $groupby = " GROUP BY D.item_id having D.item_id!='' ";
    $where = " D.type=1 and O.account_id='" . $_SESSION['accountId'] . "' $brandCnd and $condition $fromdate $todate  $salesman ";
    $auRec = $_objAdmin->_getSelectList2('table_order_detail AS D 
		LEFT JOIN table_order AS O ON D.order_id = O.order_id
		LEFT JOIN table_item AS I ON D.item_id = I.item_id
		Left join table_HSN_code_master as hsn on hsn.hsn_id = I.HSN_id
		LEFT JOIN table_brands as b ON b.brand_id=I.brand_id
		LEFT JOIN table_category AS c ON c.category_id = I.category_id 
        LEFT JOIN table_subcategory AS sc ON sc.subcategory_id = I.subcategory_id 
		LEFT JOIN table_price AS P ON D.item_id = P.item_id
		LEFT JOIN table_salesman AS s ON O.salesman_id = s.salesman_id
		LEFT JOIN table_retailer AS R ON O.retailer_id = R.retailer_id
        left join table_retailer_type_master as tm on tm.type_id=R.type_id
		LEFT JOIN table_retailer_channel_master as cm ON cm.channel_id=R.channel_id
		LEFT JOIN table_distributors AS Dis ON O.distributor_id = Dis.distributor_id
		LEFT JOIN state as st on st.state_id=Dis.state
		LEFT JOIN city as ct on ct.city_id=Dis.city
		LEFT JOIN table_zone_state_mapping as szsm on szsm.state_id = Dis.state and szsm.account_id = Dis.account_id
        LEFT JOIN table_zone as sz on sz.zone_id = szsm.zone_id
		left join table_item_case_relationship as cr on cr.item_id=D.item_id
		left join table_cases as ca on ca.case_id=cr.case_id',
        'D.price, D.quantity,D.item_unit_type, D.total,R.new, I.item_name,I.item_code,I.item_size,ca.case_size,
		b.brand_name,cm.channel_name,I.item_erp_code,D.item_ptr_price as ptr_price,D.item_mrp_price as mrp_price, 
		O.order_id, s.salesman_name,s.employee_code, Dis.distributor_name,Dis.distributor_code,O.retailer_id,
		R.retailer_name,R.retailer_code,c.category_name,sc.subcategory_name, O.date_of_order, O.time_of_order,st.state_name,
		ct.city_name, D.remarks,tm.type_name,hsn.HSN_Code', '', $where . $sort);
    $retIdArr = [];
    if (is_array($auRec) && (count($auRec) > 0)) {
        foreach ($auRec as $key => $auRecData) {
            if (isset($auRecData->retailer_id) && !empty($auRecData->retailer_id) && (intval($auRecData->retailer_id) > 0)) {
                $retIdArr[] = $auRecData->retailer_id;
            }
        }
        $retIds = implode(',', array_unique($retIdArr));
        $getRetailerRoutes = $_objAdmin->_getSelectList("table_route_retailer as rr 
LEFT JOIN table_route as r ON r.route_id = rr.route_id", "rr.retailer_id, GROUP_CONCAT(DISTINCT r.route_name SEPARATOR ' | ') as route_names", "", " rr.retailer_id IN($retIds) GROUP BY rr.retailer_id ORDER BY rr.retailer_id ASC ");
        $retailerWiseRoutesArr = [];
        if (is_array($getRetailerRoutes) && (count($getRetailerRoutes) > 0)) {
            foreach ($getRetailerRoutes as $key => $retRoutes) {
                if (isset($retRoutes->route_names) && !empty($retRoutes->route_names)) {
                    $retailerWiseRoutesArr[$retRoutes->retailer_id] = $retRoutes->route_names;
                }
            }
        }
    }
    $remove = array("\n", "\r\n", "\r");
    for ($i = 0; $i < count($auRec); $i++) {
        $discount = 0;
//        if ($auRec[$i]->new == "1") {
//            $retailer_type = 'New Retailer';
//        } else {
//            $retailer_type = 'Existing Retailer';
//        }

        $pcs = '';
        $kg = '';
        $cases = '';
        if ($auRec[$i]->item_unit_type == "pcs") {
            $pcs = $auRec[$i]->quantity;
            $kg = (($auRec[$i]->item_size != 0) ? ROUND((($auRec[$i]->item_size * $auRec[$i]->quantity) / 1000), 2) : '');
            $cases = (($auRec[$i]->case_size != 0) ? ROUND(($auRec[$i]->quantity / $auRec[$i]->case_size), 2) : '');
            $discount = number_format((($auRec[$i]->ptr_price * $pcs) - $auRec[$i]->total), 2);
        }
        if ($auRec[$i]->item_unit_type == "kg") {
            $kg = $auRec[$i]->quantity;
            $pcs = (($auRec[$i]->item_size != 0) ? ROUND((($auRec[$i]->quantity * 1000) / $auRec[$i]->item_size), 2) : '');
            $cases = (($auRec[$i]->case_size != 0) ? ROUND(($pcs / $auRec[$i]->case_size), 2) : '');
            $discount = number_format((($auRec[$i]->ptr_price * $pcs) - $auRec[$i]->total), 2);
        }
        if ($auRec[$i]->item_unit_type == "cases") {
            $cases = $auRec[$i]->quantity;
            $pcs = (($auRec[$i]->case_size != 0) ? ROUND(($auRec[$i]->case_size * $auRec[$i]->quantity), 2) : '');
            $kg = (($auRec[$i]->item_size != 0) ? ROUND((($pcs * $auRec[$i]->item_size) / 1000), 2) : '');
            $discount = number_format((($auRec[$i]->ptr_price * $pcs) - $auRec[$i]->total), 2);
        }

//        $discount = number_format((($auRec[$i]->ptr_price * $auRec[$i]->quantity) - $auRec[$i]->total), 2);
        $routeName = (isset($retailerWiseRoutesArr[$auRec[$i]->retailer_id]) && !empty($retailerWiseRoutesArr[$auRec[$i]->retailer_id])) ? $retailerWiseRoutesArr[$auRec[$i]->retailer_id] : '';
        $data .= "" . $auRec[$i]->distributor_name . "\t"
            . $auRec[$i]->distributor_code . "\t"
            . $auRec[$i]->zone_name . "\t"
            . $auRec[$i]->state_name . "\t"
            . $auRec[$i]->city_name . "\t"
            . $auRec[$i]->retailer_name . "\t"
            . $auRec[$i]->retailer_code . "\t"
            . $auRec[$i]->channel_name . "\t"
            . $auRec[$i]->type_name . "\t"
            . $routeName . "\t"
            . $auRec[$i]->salesman_name . "\t"
            . $auRec[$i]->employee_code . "\t"
            . $auRec[$i]->order_id . "\t"
            . $auRec[$i]->category_name . "\t"
            . $auRec[$i]->subcategory_name . "\t" 
            . ucwords(addslashes(preg_replace('/[^A-Za-z0-9?!\s-,.%&#_()-+[]\/ ]/', '', str_replace($remove, '', $auRec[$i]->item_name)))) . "\t"
            . ucwords(addslashes(preg_replace('/[^A-Za-z0-9?!\s-,.%&#_()-+[]\/ ]/', '', str_replace($remove, '', $auRec[$i]->item_code)))) . "\t"
            . ucwords(addslashes(preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace($remove, '', $auRec[$i]->brand_name)))) . "\t"
            . ucwords($auRec[$i]->HSN_Code) . "\t"
            . $auRec[$i]->ptr_price . "\t"
            . $auRec[$i]->mrp_price . "\t"
            . $pcs . "\t"
            . $kg . "\t"
            . $cases . "\t"
            . $auRec[$i]->item_size . "\t"
            . $discount . "\t"
            . $auRec[$i]->total . "\t"
//            . $auRec[$i]->total . "\t"
            . $_objAdmin->_changeDate($auRec[$i]->date_of_order) . "\t"
            . $auRec[$i]->time_of_order . "\t"
            . ucwords(addslashes(preg_replace('/[^A-Za-z0-9?!\s-,.%&#_()-+[]\/ ]/', '', str_replace($remove, '', $auRec[$i]->remarks)))) . "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Product Report.xls\"");
    echo $data;
    exit;
}
//Ends product export
//Todo Start : Sagar : 29th Aug 2022 : Export Task Status Report
if (isset($_GET['export_task_status_report'])) {
    $data = "Date\t" . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['salesman'] . " Code\t" . $AliaseUsers['salesman'] . " Designation\tState\tDistrict\tCity\tReporting to\t Reporting to Designation\tTask Description\tTask Type\tFrom Date\tTo Date\tEmployee Task Status\tEmployee Remark\tManager Task Status\tManager Remark\tApproved By\n";
    if ($_SESSION['FromallownceList'] != '') {
        $fromdate = date('Y-m-d', strtotime($_SESSION['FromallownceList']));
    } else {
        $fromdate = date('Y-m-d');
    }
    if ($_SESSION['ToallownceList'] != '') {
        $todate = date('Y-m-d', strtotime($_SESSION['ToallownceList']));
    } else {
        $todate = date('Y-m-d');
    }
    if (isset($_SESSION['salstsrcondi']) && !empty($_SESSION['salstsrcondi'])) {
        $salesman = $_SESSION['salstsrcondi'];
    }
    $where = " s.account_id = " . $_SESSION['accountId'] . " AND ats.app_date BETWEEN '" . $fromdate . "' AND '" . $todate . "' $salesman ";
    $sort = " ORDER BY ats.app_date DESC, ats.app_time DESC";
    $auRec = $_objAdmin->_getSelectList2('table_assigned_task_status as ats 
LEFT JOIN table_assigned_tasks as tsk ON tsk.task_id = ats.task_id
LEFT JOIN table_salesman as s on s.salesman_id = tsk.salesman_id 
LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
LEFT JOIN table_salesman_hierarchy AS H2 ON H2.hierarchy_id = SH.rpt_hierarchy_id 
LEFT JOIN table_salesman AS s2 ON s2.salesman_id = SH.rpt_user_id 
LEFT JOIN table_task_status_master as ss ON ss.status_id = ats.salesman_status
LEFT JOIN table_salesman AS mngr ON mngr.salesman_id = ats.manager_id
LEFT JOIN table_task_status_master as ms ON ms.status_id = ats.manager_status
LEFT JOIN state as st ON st.state_id = s.state
LEFT JOIN city as ct on ct.city_id = s.city
LEFT JOIN table_location as loc ON loc.location_id = s.location', "ats.task_id,ats.task_status_id,ats.app_date as task_date,ats.app_time as task_time,s.salesman_id,s.salesman_name,s.employee_code,H.description AS sal_desg,s2.salesman_name AS rpt_to, H2.description AS rpt_to_desg,st.state_name,ct.city_name,loc.location_name,tsk.task_description,tsk.task_type,tsk.from_date,tsk.to_date,ats.salesman_status,ss.status_title as slsmn_sts,ats.salesman_remark,ats.manager_status,ms.status_title as mngr_status,ats.manager_remark,mngr.salesman_name as mngr_name,ats.is_approved_by_admin,tsk.status", '', $where . $sort);
    $finalTaskDataArr = [];
    if (is_array($auRec) && (count($auRec) > 0)) {
        foreach ($auRec as $key => $taskData) {
            if ((strtolower($taskData->task_type) == 'predefined') && (strtolower($taskData->status) == 'i')) {
                if (($taskData->salesman_status > 0) && !empty($taskData->slsmn_sts)) {
                    $finalTaskDataArr[] = $taskData;
                }
            } else {
                $finalTaskDataArr[] = $taskData;
            }
        }
    }
    $auRec = $finalTaskDataArr;
    $remove = array("\n", "\r\n", "\r", ",");
    for ($i = 0; $i < count($auRec); $i++) {
        $taskDate = date('d M Y H:i', strtotime($auRec[$i]->task_date . ' ' . $auRec[$i]->task_time));
        $fromDate = date('d M Y', strtotime($auRec[$i]->from_date));
        $toDate = date('d M Y', strtotime($auRec[$i]->to_date));
        $approvedBy = '';
        if (intval($auRec[$i]->manager_status) > 0) {
            if (intval($auRec[$i]->is_approved_by_admin) > 0) {
                $approvedBy = 'Admin';
            } else {
                $approvedBy = (isset($auRec[$i]->mngr_name) && !empty($auRec[$i]->mngr_name)) ? $auRec[$i]->mngr_name : $auRec[$i]->rpt_to;
            }
        }
        $data .= '"' . $taskDate . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->salesman_name . '"';
        $data .= "\t";
        $data .= '"' . str_replace($remove, '', $auRec[$i]->employee_code) . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->sal_desg . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->state_name . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->city_name . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->location_name . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->rpt_to . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->rpt_to_desg . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->task_description . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->task_type . '"';
        $data .= "\t";
        $data .= '"' . $fromDate . '"';
        $data .= "\t";
        $data .= '"' . $toDate . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->slsmn_sts . '"';
        $data .= "\t";
        $data .= '"' . addslashes(str_replace(["<br>", "<br />", "<br/>"], "\n", preg_replace('/[^a-zA-Z0-9., <>\/:\']/', '', $auRec[$i]->salesman_remark))) . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->mngr_status . '"';
        $data .= "\t";
        $data .= '"' . addslashes(str_replace(["<br>", "<br />", "<br/>"], "\n", preg_replace('/[^a-zA-Z0-9., <>\/:\']/', '', $auRec[$i]->manager_remark))) . '"';
        $data .= "\t";
        $data .= '"' . ucwords(str_replace($remove, '', $approvedBy)) . '"';
        $data .= "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"task_status_report.xls\"");
    echo $data;
    exit;
}
//Todo End : Sagar : 29th Aug 2022 : Export Task Status Report
/***********************************Unproductive Distributor************************/
if (isset($_GET['export_unproductive_distributor'])) {
    $data = "" . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\t" . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['salesman'] . " Code\tSuper " . $AliaseUsers['distributor'] . "/" . $AliaseUsers['stockist'] . "\tGST No.\tPAN No.\tCountry\tZone\tState\tDistrict\tCity\tAddress 1\tAddress 2\tPhone Number 1\tPhone Number 2\tPhone Number 3\tLandline Number\tContact Person 1\tContact Number 1\tContact Person 2\tContact Number 2\tContact Person 3\tContact Number 3\tUsername\tEmail ID 1\tEmail ID 2\tEmail ID 3\tDate of Birth\n";
    $distributorId = "";
    $stateId = "";
    $location_id = '';
    if ($_SESSION['FromDate'] != '') {
        $fromdate = " ods.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['FromDate'])) . "'";
    } else {
        $fromdate = " ods.date_of_order >= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['ToDate'] != '') {
        $todate = " and ods.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToDate'])) . "'";
    } else {
        $todate = " and ods.date_of_order <= '" . date('Y-m-d') . "'";
    }

//	if(($_SESSION['SalOrderList'] != 'All') && !empty($_SESSION['SalOrderList'])){
//        $salesman = " and s.salesman_id = ".$_SESSION['SalOrderList'];
//    }else{
//		$salesman = "";
//	}

    if ($_SESSION['Disstate'] != '') {
        $stateId = " and st.state_id='" . $_SESSION['Disstate'] . "'";
    }

    $salCondi = "";
    if (isset($_SESSION['SalOrderList']) && !empty($_SESSION['SalOrderList']) && (intval($_SESSION['SalOrderList']) > 0)) {
        $salCondi = " AND s.salesman_id=" . $_SESSION['SalOrderList'];
    } else {
        $salCondi = $_SESSION['salsInCondi'];
    }

//    $RoleBrands = $_objAdmin->getUserRoleBrand();
//    $brandCnd = '';
//    if (!empty($RoleBrands)) {
//        $brandCnd = " and b.brand_id IN(" . $RoleBrands . ")";
//    }

    $where = " $stateId   and d.distributor_name!='' and d.status='A' $salCondi GROUP BY d.distributor_id having total_orders=0";
    $auRec = $_objAdmin->_getSelectList("table_distributors as d
		left join table_salesman_distributor_mapping as sdm on sdm.distributor_id=d.distributor_id
		left join table_salesman as s on s.salesman_id = sdm.salesman_id
		left join table_web_users as w on w.distributor_id=d.distributor_id 
        left join country as con on con.country_id = d.country 
		left join table_location as loc on loc.location_id = d.location 
		left join state as st on st.state_id=d.state 
		left join city as ct on ct.city_id=d.city
		LEFT JOIN table_zone_state_mapping as szsm on szsm.state_id = d.state and szsm.account_id = d.account_id
        LEFT JOIN table_zone as sz on sz.zone_id = szsm.zone_id
		left join table_stockist as ts on ts.stockist_id = d.stockist_id
		left join table_distributor_order as ods on d.distributor_id=ods.distributor_id and $fromdate $todate and ods.order_type !='No' and ods.order_status IN('A','I')",
        "d.*,s.salesman_name,s.employee_code,w.username,w.email_id,w.web_user_id,w.status as loginStatus,con.country_name,sz.zone_name,st.state_name,ct.city_name,
		loc.location_name,ts.stockist_name,count(ods.order_id) as total_orders", "", $where, '');

    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . ucwords(addslashes($auRec[$i]->salesman_name)) . '"';
            $data .= "\t";
            $data .= '"' . ucwords(addslashes($auRec[$i]->employee_code)) . '"';
            $data .= "\t";
            $data .= '"' . ucwords(addslashes($auRec[$i]->stockist_name)) . '"';
            $data .= "\t";
            $data .= '"' . ucwords(addslashes($auRec[$i]->gst_no)) . '"';
            $data .= "\t";
            $data .= '"' . ucwords(addslashes($auRec[$i]->pan_no)) . '"';
            $data .= "\t";
            $data .= '"' . ucwords(addslashes($auRec[$i]->country_name)) . '"';
            $data .= "\t";
            $data .= '"' . ucwords(addslashes($auRec[$i]->zone_name)) . '"';
            $data .= "\t";
            $data .= '"' . ucwords(addslashes($auRec[$i]->state_name)) . '"';
            $data .= "\t";
            $data .= '"' . ucwords(addslashes($auRec[$i]->city_name)) . '"';
            $data .= "\t";
            $data .= '"' . ucwords(addslashes($auRec[$i]->location_name)) . '"';
            $data .= "\t";
            $data .= '"' . ucwords(addslashes($auRec[$i]->distributor_address)) . '"';
            $data .= "\t";
            $data .= '"' . ucwords(addslashes($auRec[$i]->distributor_address2)) . '"';
            $data .= "\t";
            $data .= '"' . ucwords(addslashes($auRec[$i]->distributor_phone_no)) . '"';
            $data .= "\t";
            $data .= '"' . ucwords(addslashes($auRec[$i]->distributor_phone_no2)) . '"';
            $data .= "\t";
            $data .= '"' . ucwords(addslashes($auRec[$i]->distributor_phone_no3)) . '"';
            $data .= "\t";
            $data .= '"' . ucwords(addslashes($auRec[$i]->distributor_leadline_no)) . '"';
            $data .= "\t";
            $data .= '"' . ucwords(addslashes($auRec[$i]->contact_person)) . '"';
            $data .= "\t";
            $data .= '"' . ucwords(addslashes($auRec[$i]->contact_number)) . '"';
            $data .= "\t";
            $data .= '"' . ucwords(addslashes($auRec[$i]->contact_person2)) . '"';
            $data .= "\t";
            $data .= '"' . ucwords(addslashes($auRec[$i]->contact_number2)) . '"';
            $data .= "\t";
            $data .= '"' . ucwords(addslashes($auRec[$i]->contact_person3)) . '"';
            $data .= "\t";
            $data .= '"' . ucwords(addslashes($auRec[$i]->contact_number3)) . '"';
            $data .= "\t";
            $data .= '"' . ucwords(addslashes($auRec[$i]->username)) . '"';
            $data .= "\t";
            $data .= '"' . ucwords(addslashes($auRec[$i]->distributor_email)) . '"';
            $data .= "\t";
            $data .= '"' . ucwords(addslashes($auRec[$i]->distributor_email2)) . '"';
            $data .= "\t";
            $data .= '"' . ucwords(addslashes($auRec[$i]->distributor_email3)) . '"';
            $data .= "\t";
            $data .= '"' . $_objAdmin->_changeDate($auRec[$i]->distributor_dob) . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Unproductive_distributor.xls\"");
    echo $data;
    exit;
}
//Todo Start: Sagar: 2nd Sep 2022 : export New Route Retailers & Distributors List
if (isset($_GET['export_new_route_retailers_details']) && (strtolower($_GET['export_new_route_retailers_details']) == 'yes') && ($_GET['routeId'] > 0)) {
    $data = $AliaseUsers['route']." Name\t" . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\t" . $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['retailer'] . " Code\tCreated Date\tUpdated Date\n";
    $remove = array("\n", "\r\n", "\r", '"', "\t");
    $route_name = 'No_Data_Found';
    $routeId = $_GET['routeId'];

    $condiRet = " rr.route_id = $routeId AND rr.retailer_id > 0 AND rr.distributor_id > 0 AND r.status = 'A' ORDER BY rr.distributor_id ASC";
    $auRec = $_objAdmin->_getSelectList('table_route_retailer as rr
LEFT JOIN table_route as ro ON ro.route_id = rr.route_id
LEFT JOIN table_retailer as r ON r.retailer_id = rr.retailer_id
LEFT JOIN table_distributors as d on d.distributor_id=rr.distributor_id', "ro.route_name,rr.retailer_id,r.retailer_code,r.retailer_name,rr.distributor_id,d.distributor_code,d.distributor_name,ro.created_at,ro.updated_at", '', $condiRet);

    if (is_array($auRec) && (count($auRec) > 0)) {
        $route_name = preg_replace('/[^a-zA-Z0-9-_\&,.|( )]/', '', str_replace($remove, '', $auRec[0]->route_name));
        for ($i = 0; $i < count($auRec); $i++) {
            //Todo Start : sudhanshu 16 may 2024 : add created date and updated date changes in header and query aslo
            $created_date = '';
            $updated_date = '';
            if ($auRec[$i]->created_at != '0000-00-00 00:00:00') {
                $created_date = $_objAdmin->_changeDate($auRec[$i]->created_at);
            }
            if ($auRec[$i]->updated_at != '0000-00-00 00:00:00') {
                $updated_date = $_objAdmin->_changeDate($auRec[$i]->updated_at);
            }


            //Todo End : sudhanshu 16 may 2024 : add created date and updated date
            $data .= '"' . $route_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            //Todo Start : sudhanshu 16 may 2024 : add created date and updated date
            $data .= '"' . $created_date . '"';
            $data .= "\t";
            $data .= '"' . $updated_date . '"';
            $data .= "\n";
            //Todo End : sudhanshu 16 may 2024 : add created date and updated date
        }
    }

    $condiRet2 = " rr.route_id = $routeId AND rr.retailer_id > 0 AND (rr.distributor_id <= 0 OR rr.distributor_id IS NULL) AND r.status = 'A' ORDER BY rr.retailer_id ASC";

    $auRec = $_objAdmin->_getSelectList('table_route_retailer as rr
LEFT JOIN table_route as ro ON ro.route_id = rr.route_id
LEFT JOIN table_retailer as r ON r.retailer_id = rr.retailer_id
LEFT JOIN table_distributors as d on d.distributor_id=r.distributor_id', "ro.route_name,rr.retailer_id,r.retailer_code,r.retailer_name,d.distributor_id,d.distributor_code,d.distributor_name,ro.created_at,ro.updated_at", '', $condiRet2);

    if (is_array($auRec) && (count($auRec) > 0)) {
        $route_name = preg_replace('/[^a-zA-Z0-9-_\&,.|( )]/', '', str_replace($remove, '', $auRec[0]->route_name));
        for ($i = 0; $i < count($auRec); $i++) {
            //Todo Start : sudhanshu 16 may 2024 : add created date and updated date changes in header and query aslo
            $created_date = '';
            $updated_date = '';
            if ($auRec[$i]->created_at != '0000-00-00 00:00:00') {
                $created_date = $_objAdmin->_changeDate($auRec[$i]->created_at);
            }
            if ($auRec[$i]->updated_at != '0000-00-00 00:00:00') {
                $updated_date = $_objAdmin->_changeDate($auRec[$i]->updated_at);
            }


            //Todo End : sudhanshu 16 may 2024 : add created date and updated date
            $data .= '"' . $route_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            //Todo Start : sudhanshu 16 may 2024 : add created date and updated date
            $data .= '"' . $created_date . '"';
            $data .= "\t";
            $data .= '"' . $updated_date . '"';
            $data .= "\n";
            //Todo End : sudhanshu 16 may 2024 : add created date and updated date
        }
    }

    $condiRet3 = " rr.route_id = $routeId AND rr.distributor_id > 0 AND (rr.retailer_id <= 0 OR rr.retailer_id IS NULL) AND d.status = 'A' ORDER BY rr.distributor_id ASC";

    $auRec = $_objAdmin->_getSelectList('table_route_retailer as rr
LEFT JOIN table_route as ro ON ro.route_id = rr.route_id
LEFT JOIN table_distributors as d on d.distributor_id=rr.distributor_id', "ro.route_name,d.distributor_code,d.distributor_name,ro.created_at,ro.updated_at", '', $condiRet3);

    if (is_array($auRec) && (count($auRec) > 0)) {
        $route_name = preg_replace('/[^a-zA-Z0-9-_\&,.|( )]/', '', str_replace($remove, '', $auRec[0]->route_name));
        $emptyValue = '-';
        for ($i = 0; $i < count($auRec); $i++) {
            //Todo Start : sudhanshu 16 may 2024 : add created date and updated date changes in header and query aslo
            $created_date = '';
            $updated_date = '';
            if ($auRec[$i]->created_at != '0000-00-00 00:00:00') {
                $created_date = $_objAdmin->_changeDate($auRec[$i]->created_at);
            }
            if ($auRec[$i]->updated_at != '0000-00-00 00:00:00') {
                $updated_date = $_objAdmin->_changeDate($auRec[$i]->updated_at);
            }


            //Todo End : sudhanshu 16 may 2024 : add created date and updated date
            $data .= '"' . $route_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $emptyValue . '"';
            $data .= "\t";
            $data .= '"' . $emptyValue . '"';
            $data .= "\t";
            //Todo Start : sudhanshu 16 may 2024 : add created date and updated date
            $data .= '"' . $created_date . '"';
            $data .= "\t";
            $data .= '"' . $updated_date . '"';
            $data .= "\n";
            //Todo End : sudhanshu 16 may 2024 : add created date and updated date
        }
    }

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"$route_name.xls\"");
    echo $data;
    exit;
}
//Todo End: Sagar: 2nd Sep 2022 : export Route Retailers & Distributors List
//Todo: Jatin: Export salesman_report.php
if (isset($_REQUEST['export_salesman_report'])) {
    if (!isset($_SESSION['Fromdate']) && empty($_SESSION['Fromdate'])) {
        $_SESSION['Fromdate'] = $_objAdmin->_changeDate(date('Y-m-d'));
    }
    if (!isset($_SESSION['Todate']) && empty($_SESSION['Todate'])) {
        $_SESSION['Todate'] = $_objAdmin->_changeDate(date('Y-m-d'));
    }
    if ($_SESSION['sal'] != '') {
        $Sal_Name = $_objAdmin->_getSelectList('table_salesman', 'salesman_name', '', " salesman_id='" . base64_decode($_SESSION['sal']) . "' ");
        $name = $Sal_Name[0]->salesman_name;
        // $_SESSION['name']=$name;
    }
    $data = "" . $AliaseUsers['salesman'] . " Name : " . $name . " \t From Date : " . $_SESSION['Fromdate'] . "\t To Date :" . $_SESSION['Todate'] . "\n";
    $data .= "Activity Date\t Time\t Description ";
    $row = $_objAdmin->_getSelectList2('table_activity', "*", '', " salesman_id=" . base64_decode($_SESSION['sal']) . "  AND   activity_date >='" . date('Y-m-d', strtotime($_SESSION['Fromdate'])) . "' and activity_date <='" . date('Y-m-d', strtotime($_SESSION['Todate'])) . "' and activity_type NOT IN(1,6) ORDER BY activity_date ASC,start_time ASC ");
    $data .= "\n";
    if ($row == '') {
        $data .= "No Record";
    } else {
        for ($i = 0; $i < count($row); $i++) {
            //echo "<pre>";
            //print_r($row);
            $checkin_date = date('d M Y', strtotime($row[$i]->activity_date));
            $checkin_time = date('H:i', strtotime($row[$i]->start_time));
            $data .= '"' . $checkin_date . '"';
            $data .= "\t";
            $data .= '"' . $checkin_time . '"';
            $data .= "\t";
            $data .= '"' . $row[$i]->activity . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['salesman'] . " Report.xls\"");
    echo $data;
    exit;
}
//Todo: Jatin: End Export Salesman Report
//Todo Start: Sagar: 7th Sep 2022 : export salesman task list
if (isset($_GET['export_task_list'])) {
    $data = " S.No.\tEmployee Name\tEmployee Code\tEmployee Designation\tState\tDistrict\tCity\tReporting Person\tTask Description\tFrom Date\tTo Date\tStatus\n";
    $condition = '';
    if (isset($_SESSION['salesman_id']) && !empty($_SESSION['salesman_id']) && ($_SESSION['salesman_id'] == 'All')) {
        $condition .= $_SESSION['salInCondi'];
    } else if (isset($_SESSION['salesman_id']) && !empty($_SESSION['salesman_id']) && $_SESSION['salesman_id'] != 'All') {
        $condition .= " AND at.salesman_id = " . $_SESSION['salesman_id'];
    }
    if (isset($_SESSION['userLoginType']) && $_SESSION['userLoginType'] == 5) {
        $condition .= " AND at.manager_id = " . $_SESSION['salesmanId'];
    }
    if (isset($condition) && $condition != '') {
        $account_id = $_SESSION['accountId'];
        $where = "s.account_id = $account_id AND at.task_type='predefined' $condition ORDER BY at.task_id DESC";
        $auRec = $_objAdmin->_getSelectList2('table_assigned_tasks as at 
										LEFT JOIN table_salesman as s on s.salesman_id=at.salesman_id
										LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
										LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
										LEFT JOIN table_salesman AS S2 ON S2.salesman_id = SH.rpt_user_id
										LEFT JOIN state as st ON st.state_id = s.state
                                        LEFT JOIN city as ct on ct.city_id = s.city
                                        LEFT JOIN table_location as loc ON loc.location_id = s.location', 'at.task_id,at.task_description,at.from_date,at.to_date,at.status,at.salesman_id,s.salesman_name,s.employee_code,H.description AS des1, S2.salesman_name AS rptPerson,st.state_name,ct.city_name,loc.location_name', '', $where);
        if (is_array($auRec) && (count($auRec) > 0)) {
            $sno = 1;
            for ($i = 0; $i < count($auRec); $i++) {
                $remove = array("\n", "\r\n", "\r");
                if ($auRec[$i]->status == 'A') {
                    $status = 'Active';
                } else if ($auRec[$i]->status == 'I') {
                    $status = 'Inactive';
                }
                $data .= "" . $sno . "\t" .
                    ucfirst($auRec[$i]->salesman_name) . "\t" .
                    ucfirst($auRec[$i]->employee_code) . "\t" .
                    ucfirst($auRec[$i]->des1) . "\t" .
                    ucfirst($auRec[$i]->state_name) . "\t" .
                    ucfirst($auRec[$i]->city_name) . "\t" .
                    ucfirst($auRec[$i]->location_name) . "\t" .
                    ucfirst($auRec[$i]->rptPerson) . "\t" .
                    ucwords(addslashes(str_replace($remove, '', $auRec[$i]->task_description))) . "\t" .
                    ucwords(addslashes(date('d M Y', strtotime($auRec[$i]->from_date)))) . "\t" .
                    ucwords(addslashes(date('d M Y', strtotime($auRec[$i]->to_date)))) . "\t" .
                    $status . "\n";
                $sno++;
            }
            header("Content-type: application/octet-stream");
            header("Content-Disposition: attachment; filename=\"Assign Task List.xls\"");
            echo $data;
            exit;
        } else {
            header("location:assigned_tasks_list.php?response=1");
        }
    } else {
        header("location:assigned_tasks_list.php?response=0");
    }
}
//Todo End: Sagar: 7th Sep 2022 : export salesman task list
//Todo Start: Sagar: 9th Sep 2022 : export Manager task status Report
if (isset($_GET['export_manager_task_report'])) {
    $data = " Date \t Employee Name \t Task Type\tTask Description\t Employee Status\t Employee Remark\t Manager Status\t Manager Remark\n";
    $sort = " ORDER BY at.salesman_id,ats.app_date ASC ";
    if (isset($_SESSION['salesman_id']) && $_SESSION['salesman_id'] != '') {
        $condition = '';
        if (isset($_SESSION['salesman_id']) && !empty($_SESSION['salesman_id']) && ($_SESSION['salesman_id'] == 'All')) {
            $condition .= $salesman;
        } else if (isset($_SESSION['salesman_id']) && !empty($_SESSION['salesman_id']) && $_SESSION['salesman_id'] != 'All') {
            $condition .= " AND at.salesman_id = " . $_SESSION['salesman_id'];
        }
        if (isset($_SESSION['task_type']) && !empty($_SESSION['task_type']) && $_SESSION['task_type'] == 'pending_task') {
            $condition .= " AND ats.manager_status <= 0 ";
        }
        if (isset($_SESSION['month']) && !empty($_SESSION['month'])) {
            $condition .= " AND MONTH(ats.app_date) = " . $_SESSION['month'];
        }
        if (isset($_SESSION['year']) && !empty($_SESSION['year'])) {
            $condition .= " AND YEAR(ats.app_date) = " . $_SESSION['year'];
        }
        $account_id = $_SESSION['accountId'];
        $where = " s.account_id = $account_id AND at.status='A' $condition ";
        $auRec = $_objAdmin->_getSelectList2('table_salesman as s 
        inner join table_assigned_tasks as at on at.salesman_id=s.salesman_id 
		inner join table_assigned_task_status as ats on ats.task_id=at.task_id
		left join table_task_status_master as tsm on tsm.status_id=ats.salesman_status
		left join table_task_status_master as tsm1 on tsm1.status_id=ats.manager_status
            ', 's.salesman_name,ats.app_date,at.task_description,ats.salesman_status,at.task_type,ats.salesman_remark,ats.manager_status,tsm1.status_title as manager_status_title,ats.manager_remark,tsm.status_title', '', $where . $sort);
        if (is_array($auRec) && (count($auRec) > 0)) {
            for ($i = 0; $i < count($auRec); $i++) {
                if (date('d-m-Y', strtotime($auRec[$i]->app_date)) != date('d-m-Y')) {
                    $remove = array("\n", "\r\n", "\r", ",");
                    $data .= "" . date('d-m-Y', strtotime($auRec[$i]->app_date))
                        . "\t" . $auRec[$i]->salesman_name
                        . "\t" . ucwords($auRec[$i]->task_type)
                        . "\t" . ucwords(str_replace($remove, '', $auRec[$i]->task_description))
                        . "\t" . ucwords(str_replace($remove, '', $auRec[$i]->status_title))
                        . "\t" . ucwords(str_replace($remove, '', $auRec[$i]->salesman_remark))
                        . "\t" . ucwords(str_replace($remove, '', $auRec[$i]->manager_status_title))
                        . "\t" . ucwords(str_replace($remove, '', $auRec[$i]->manager_remark)) . "\n";
                }
            }
            header("Content-type: application/octet-stream");
            header("Content-Disposition: attachment; filename=\"Manager Task Report .xls\"");
            echo $data;
            exit;
        } else {
            header("location:manager_task_report_new.php?response=1");
        }
    } else {
        header("location:manager_task_report_new.php?response=0");
    }
}
//Todo End: Sagar: 9th Sep 2022 : export Manager task status Report
if (isset($_GET['export_distributor_no_orders'])) {
    $data = "Date \t Time \t" . $AliaseUsers['distributor'] . " Name \t" . $AliaseUsers['distributor'] . " Code\t" .
        $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['salesman'] . " Code\tZone\tState \t City \t Reason \t Remark \n";
    $distributorId = "";
    $stateId = "";
    $location_id = '';
    if ($_SESSION['FromDate'] != '') {
        $fromdate = " ods.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['FromDate'])) . "'";
    } else {
        $fromdate = " ods.date_of_order >= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['ToDate'] != '') {
        $todate = " and ods.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToDate'])) . "'";
    } else {
        $todate = " and ods.date_of_order <= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['disID'] != '' & $_SESSION['disID'] != 'All') {
        $distributorId = " and d.distributor_id='" . $_SESSION['disID'] . "'";
    } else if ($_SESSION['stockistId'] != "" && $_SESSION['stockistId'] != "0") {
        $distributorId = " and d.stockist_id='" . $_SESSION['stockistId'] . "'";
    }
    if ($_SESSION['Disstate'] != '') {
        $stateId = " and st.state_id='" . $_SESSION['Disstate'] . "'";
    }
    if ($_SESSION['Dislocation_id'] != '') {
        $location_id = " and ct.city_id='" . $_SESSION['Dislocation_id'] . "'";
    }
    $where = " $fromdate $todate $distributorId $stateId $location_id and d.distributor_name!='' and LOWER(ods.order_type) = 'no' ";
    $sort = 'ORDER BY ods.date_of_order DESC,ods.time_of_order DESC';
    $auRec = $_objAdmin->_getSelectList('table_distributor_order as ods
		left join table_distributors as d on d.distributor_id=ods.distributor_id 
		left join state as st on st.state_id=d.state 
		left join city as ct on ct.city_id=d.city
		LEFT JOIN table_zone_state_mapping as szsm on szsm.state_id = d.state and szsm.account_id = d.account_id
        LEFT JOIN table_zone as sz on sz.zone_id = szsm.zone_id  
		left join table_salesman as s on s.salesman_id=ods.salesman_id
		left join table_tags as tg on tg.tag_id = ods.reason',
        "ods.order_id,ods.date_of_order,ods.time_of_order,ods.order_type,ods.reason,tg.tag_description as no_order_reason,ods.reason_remark,d.distributor_id,d.distributor_name,d.distributor_code,st.state_id,st.state_name,ct.city_name,s.salesman_id,s.salesman_name,s.employee_code,sz.zone_name", '', $where . $sort);
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . date("d M Y", strtotime($auRec[$i]->date_of_order)) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->time_of_order . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->zone_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->no_order_reason . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->reason_remark . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['distributor'] . "_no_order_report.xls\"");
    echo $data;
    exit;
}
if (isset($_GET['export_update_order_report'])) {
    $data = "Date\t Time\t Order Number\t Total Invoice Amount\t " . $AliaseUsers['distributor'] . " Code\t " .
        $AliaseUsers['distributor'] . " Name \t Zone\tState\t City\t " . $AliaseUsers['salesman'] . " Code \t " .
        $AliaseUsers['salesman'] . " Name\t " . $AliaseUsers['retailer'] . " Code\t  " . $AliaseUsers['retailer'] . " Name\t " . $AliaseUsers['retailer'] . " Market\t" . $AliaseUsers['retailer'] . " Channel\tDisplay Outlet\tAddress\tOrder Status\n";
    $sort = " ORDER BY o.date_of_order DESC,o.time_of_order DESC";
    if ($_SESSION['FromDisList'] != '') {
        $fromdate = date('Y-m-d', strtotime($_SESSION['FromDisList']));
    } else {
        $fromdate = date('Y-m-d');
    }
    if ($_SESSION['ToDisList'] != '') {
        $todate = date('Y-m-d', strtotime($_SESSION['ToDisList']));
    } else {
        $todate = date('Y-m-d');
    }
    $salesmanCondi = '';
    $disList = '';
    if ($_SESSION['userLoginType'] == 3) {
        if ($_SESSION['distributorId'] != "" && $_SESSION['distributorId'] > 0) {
            $disList = " AND o.distributor_id = " . $_SESSION['distributorId'];
        } else {
            $disList = "";
        }
        if (isset($_SESSION['SalDisList']) && !empty($_SESSION['SalDisList']) && (intval($_SESSION['SalDisList']) > 0)) {
            $salesmanCondi = " and s.salesman_id = '" . $_SESSION['SalDisList'] . "'";
        }
    } else {
        if (isset($_SESSION['SalDisList']) && !empty($_SESSION['SalDisList']) && (intval($_SESSION['SalDisList']) > 0)) {
            $salesmanCondi = " and s.salesman_id = '" . $_SESSION['SalDisList'] . "'";
        } else {
            $salesmanCondi = $_SESSION['salsInCondi'];
        }
        if (isset($_SESSION['distId']) && !empty($_SESSION['distId']) && (intval($_SESSION['distId']) > 0)) {
            $disList = "  AND o.distributor_id = '" . $_SESSION['distId'] . "'";
        }
    }
    $where = "  r.new='' AND o.order_for='R' AND o.order_status !='C' AND LOWER(o.order_type) IN('yes','adhoc') AND (o.date_of_order BETWEEN '" . $fromdate . "' AND '" . $todate . "') $disList $salesmanCondi ";
    $auRec = $_objAdmin->_getSelectList('table_order as o 
				left join table_retailer as r on o.retailer_id=r.retailer_id 
				left join table_salesman as s on o.salesman_id=s.salesman_id 
				left join table_distributors as d on d.distributor_id=o.distributor_id 
				left join table_retailer_channel_master as cm on cm.channel_id=r.channel_id 
				left join state as st on st.state_id=d.state 
				LEFT JOIN table_zone_state_mapping as szsm on szsm.state_id = d.state and szsm.account_id = d.account_id
                LEFT JOIN table_zone as sz on sz.zone_id = szsm.zone_id
				left join city as c on c.city_id=d.city',
        "o.*,r.retailer_name,r.retailer_code,r.retailer_address,r.retailer_location,cm.channel_name,r.display_outlet,s.salesman_name,s.employee_code,d.distributor_name,d.distributor_code,st.state_name,c.city_name,sz.zone_name", '', $where . $sort);
    for ($i = 0; $i < count($auRec); $i++) {
        if ($auRec[$i]->order_status == 'A') {
            $status = "New Order";
            $color = "N";
        }
        if ($auRec[$i]->order_status == 'I') {
            $status = "Processed";
            $color = "I";
        }
        if ($auRec[$i]->order_status == 'D') {
            $status = "Dispatched";
            $color = "A";
        }
        if ($auRec[$i]->display_outlet == 'Y') {
            $outlet = 'Yes';
        } else if ($auRec[$i]->display_outlet == 'N') {
            $outlet = 'No';
        } else {
            $outlet = '';
        }
        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);
        $data .= "" . $date_of_order . "\t" . $auRec[$i]->time_of_order . "\t" . $auRec[$i]->order_id . "\t" .
            $auRec[$i]->acc_total_invoice_amount . "\t" . $auRec[$i]->distributor_code . "\t" .
            $auRec[$i]->distributor_name . "\t" . $auRec[$i]->zone_name . "\t" . $auRec[$i]->state_name . "\t" .
            $auRec[$i]->city_name . "\t" .
            $auRec[$i]->employee_code . "\t" . $auRec[$i]->salesman_name . "\t" . $auRec[$i]->retailer_code . "\t" . $auRec[$i]->retailer_name . "\t" . str_replace($remove, ' ', $auRec[$i]->retailer_location) . "\t" . $auRec[$i]->channel_name . "\t" . $outlet . "\t" . $auRec[$i]->retailer_address . "\t" . $status . "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Update Order Report.xls\"");
    echo $data;
    exit;
}
//Todo Start: Sagar : 20th Sep 2022 : Export Consolidated Expense Report
if (isset($_GET['export_consolidated_expense_report'])) {
    $data = "" . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['salesman'] . " Code\t" . $AliaseUsers['salesman'] . " Designation\tReporting to\t Reporting Person Designation\t" . $AliaseUsers['salesman'] . " State\t" . $AliaseUsers['salesman'] . " City\tWorking City\t";
    $getExpenseTypes = $_objAdmin->_getSelectList('table_salesman_tags as s', 's.id,s.desc', '', " ORDER BY s.id ASC ");
    if (is_array($getExpenseTypes) && (count($getExpenseTypes) > 0)) {
        foreach ($getExpenseTypes as $key => $expType) {
            $data .= $expType->desc . "\t";
//            $data .= $expType->desc.' Remark'."\t";
        }
    }
    $data .= "Total Amount\tPhoto Count\n";
    if ($_SESSION['FromallownceList'] != '') {
        $fromdate = date('Y-m-d', strtotime($_SESSION['FromallownceList']));
    } else {
        $fromdate = date('Y-m-d');
    }
    if ($_SESSION['ToallownceList'] != '') {
        $todate = date('Y-m-d', strtotime($_SESSION['ToallownceList']));
    } else {
        $todate = date('Y-m-d');
    }
    $salCond = '';
    if (isset($_SESSION['allowncesalesmanID']) && !empty($_SESSION['allowncesalesmanID']) && (intval($_SESSION['allowncesalesmanID']) > 0)) {
//        $salArrList = $_SESSION['allowncesalesmanID'];
//        $filterby = '';
//        $salCond = $_objArrayList->getSalesmanConsolidatedList($salArrList, $filterby);
        $salCond = " AND sd.salesman_id = " . $_SESSION['allowncesalesmanID'];
    } else {
        $_objArrayList = new ArrayList();
        $salsList = $_objArrayList->SalesmanArrayList();
        $salesman = $_objArrayList->getSalesCondition($salsList);
        $salCond = $salesman;
    }
    $condi = " sd.app_date BETWEEN '" . $fromdate . "' AND '" . $todate . "' $salCond  ORDER BY sd.created DESC ";
    $auRec = $_objAdmin->_getSelectList('table_salesman_allowance_details as sd
		left join table_salesman as s on s.salesman_id = sd.salesman_id 
		LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
		LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
		LEFT JOIN table_salesman_hierarchy AS H2 ON H2.hierarchy_id = SH.rpt_hierarchy_id 
		LEFT JOIN table_salesman AS S2 ON S2.salesman_id = SH.rpt_user_id 
		LEFT JOIN city as c on c.city_id=s.city
		LEFT JOIN table_location as c2 on c2.location_id=sd.city_id
		LEFT JOIN state AS st on st.state_id=s.state', "sd.*,st.state_name, c2.location_name AS allwn_city, s.salesman_name,s.employee_code,H.description AS des1, H2.description AS des2, S2.salesman_name AS rpt_to, c.city_name,sd.photo_count", '', $condi);
//    echo '<pre>';
//    print_r($auRec);
//    die(' die here');
    $allwsIdArr = [];
    if (is_array($auRec) && (count($auRec) > 0)) {
        foreach ($auRec as $key => $auRecData) {
            $allwsIdArr[] = $auRecData->allws_id;
        }
        $allwsIds = implode(',', $allwsIdArr);
        $SalesmanWiseDataArr = [];
        if (is_array($auRec) && (count($auRec) > 0)) {
            foreach ($auRec as $key => $Date) {
                $SalesmanWiseDataArr[$Date->salesman_id]['allws_id'][] = $Date->allws_id;
//                $SalesmanWiseDataArr[$Date->salesman_id]['app_date'][] = date('d-M-Y ', strtotime($Date->app_date));
//                $SalesmanWiseDataArr[$Date->salesman_id]['created'][] = date('d-M-Y ', strtotime($Date->created));
                $SalesmanWiseDataArr[$Date->salesman_id]['city'][] = $Date->allwn_city;
//                $SalesmanWiseDataArr[$Date->salesman_id]['cmt'][] = $Date->cmt;
                $SalesmanWiseDataArr[$Date->salesman_id]['salesman_name'] = $Date->salesman_name;
                $SalesmanWiseDataArr[$Date->salesman_id]['employee_code'] = $Date->employee_code;
                $SalesmanWiseDataArr[$Date->salesman_id]['des1'] = $Date->des1;
                $SalesmanWiseDataArr[$Date->salesman_id]['des2'] = $Date->des2;
                $SalesmanWiseDataArr[$Date->salesman_id]['rpt_to'] = $Date->rpt_to;
                $SalesmanWiseDataArr[$Date->salesman_id]['state_name'] = $Date->state_name;
                $SalesmanWiseDataArr[$Date->salesman_id]['city_name'] = $Date->city_name;
                $SalesmanWiseDataArr[$Date->salesman_id]['photo_count'] = $Date->photo_count;
            }
        }
        $auRecDet = $_objAdmin->_getSelectList2('table_salesman_allowance_mapping as sam
LEFT JOIN table_salesman_allowance_details as sad ON sad.allws_id = sam.allws_id
LEFT JOIN table_salesman_tags as st ON st.id = sam.tada_id', "sad.salesman_id,sam.allws_id,sam.tada_id,st.desc as exp_type,sam.allwns_amt,sam.remark", '', "sam.allws_id IN($allwsIds) ORDER BY sad.salesman_id ASC,sam.allws_id ASC, sam.tada_id ASC");
        $expTypeWiseAmountArr = [];
        $expTypeWiseRemarkArr = [];
        if (is_array($auRecDet) && (count($auRecDet) > 0)) {
            foreach ($auRecDet as $key2 => $auRecDetData) {
                $expTypeWiseAmountArr[$auRecDetData->salesman_id][$auRecDetData->tada_id][] = $auRecDetData->allwns_amt;
//                $expTypeWiseRemarkArr[$auRecDetData->salesman_id][$auRecDetData->tada_id][] = $auRecDetData->remark;
            }
        }
        $expTypeArr = [];
        if (is_array($getExpenseTypes) && (count($getExpenseTypes) > 0)) {
            foreach ($getExpenseTypes as $key => $expData) {
                $expTypeArr[$expData->id] = $expData->desc;
            }
        }
    }
    $remove = array("\n", "\r\n", "\r", ",");
    if (is_array($SalesmanWiseDataArr) && (count($SalesmanWiseDataArr) > 0)) {
        foreach ($SalesmanWiseDataArr as $salesmanId => $salesmanWiseData) {
//            $appDateArr = [];
//            $createdDateArr = [];
            $cityArr = [];
//            $commentArr = [];
//            $appDateArr = (is_array($SalesmanWiseDataArr[$salesmanId]['app_date']) && (count($SalesmanWiseDataArr[$salesmanId]['app_date']) > 0)) ? array_unique($SalesmanWiseDataArr[$salesmanId]['app_date']) : [];
//            $allw_date = '';
//            if(is_array($appDateArr) && (count($appDateArr) > 0)){
//                asort($appDateArr);
//                $allw_date = implode(' | ',$appDateArr);
//            }
//            $createdDateArr = (is_array($SalesmanWiseDataArr[$salesmanId]['created']) && (count($SalesmanWiseDataArr[$salesmanId]['created']) > 0)) ? array_unique($SalesmanWiseDataArr[$salesmanId]['created']) : [];
//            $created_date = '';
//            if(is_array($createdDateArr) && (count($createdDateArr) > 0)){
//                asort($createdDateArr);
//                $created_date = implode(' | ',$createdDateArr);
//            }
            $cityArr = (is_array($SalesmanWiseDataArr[$salesmanId]['city']) && (count($SalesmanWiseDataArr[$salesmanId]['city']) > 0)) ? array_unique($SalesmanWiseDataArr[$salesmanId]['city']) : [];
            $wrkingCty = '';
            if (is_array($cityArr) && (count($cityArr) > 0)) {
                asort($cityArr);
                $wrkingCty = implode(' | ', $cityArr);
            }
//            $commentArr = (is_array($SalesmanWiseDataArr[$salesmanId]['cmt']) && (count($SalesmanWiseDataArr[$salesmanId]['cmt']) > 0)) ? array_unique($SalesmanWiseDataArr[$salesmanId]['cmt']) : [];
//            $commentArr = array_filter($commentArr, function($value) { return !is_null($value) && $value !== ''; });
//            $comments = '';
//            if(is_array($commentArr) && (count($commentArr) > 0)){
//                asort($commentArr);
//                $comments = implode(' | ',$commentArr);
//            }
            $data .= '"' . $salesmanWiseData['salesman_name'] . '"';
            $data .= "\t";
            $data .= '"' . $salesmanWiseData['employee_code'] . '"';
            $data .= "\t";
            $data .= '"' . $salesmanWiseData['des1'] . '"';
            $data .= "\t";
            $data .= '"' . $salesmanWiseData['rpt_to'] . '"';
            $data .= "\t";
            $data .= '"' . $salesmanWiseData['des2'] . '"';
            $data .= "\t";
            $data .= '"' . $salesmanWiseData['state_name'] . '"';
            $data .= "\t";
            $data .= '"' . $salesmanWiseData['city_name'] . '"';
            $data .= "\t";
//            $data.='"'.str_replace($remove, '',$comments).'"';
//            $data.="\t";
//            $data.='"'.$allw_date.'"';
//            $data.="\t";
            $data .= '"' . $wrkingCty . '"';
            $data .= "\t";
            $emptyValue = '-';
            $ttlAmt = 0;
            if (is_array($expTypeArr) && (count($expTypeArr) > 0)) {
                foreach ($expTypeArr as $expTypeId => $expTypeName) {
                    //amount
                    if (is_array($expTypeWiseAmountArr[$salesmanId][$expTypeId]) && (count($expTypeWiseAmountArr[$salesmanId][$expTypeId]) > 0)) {
                        $totalExp = array_sum($expTypeWiseAmountArr[$salesmanId][$expTypeId]);
                        $ttlAmt += $totalExp;
                        $data .= '"' . number_format($totalExp, 2) . '"';
                        $data .= "\t";
                    } else {
                        $data .= '"' . addslashes($emptyValue) . '"';
                        $data .= "\t";
                    }
                    //remarks
//                    if (is_array($expTypeWiseRemarkArr[$salesmanId][$expTypeId]) && (count($expTypeWiseRemarkArr[$salesmanId][$expTypeId]) > 0)) {
//                        $remrkArr = array_unique($expTypeWiseRemarkArr[$salesmanId][$expTypeId]);
//                        $remarkArr = array_filter($remrkArr, function($value) { return !is_null($value) && $value !== ''; });
//                        $remarks = '';
//                        if(is_array($remarkArr) && (count($remarkArr) > 0)){
//                            asort($remarkArr);
//                            $remarks = implode(' | ',$remarkArr);
//                        }
//
//                        $data.='"'.ucwords(addslashes(str_replace($remove, ' ',$remarks))).'"';
//                        $data.="\t";
//                    }
//                    else{
//                        $data.='"'.addslashes($emptyValue).'"';
//                        $data.="\t";
//                    }
                }
            }
            $data .= '"' . number_format($ttlAmt, 2) . '"';
            $data .= "\t";
            $data .= '"' . $salesmanWiseData['photo_count'] . '"';
            $data .= "\n";
//            $data.='"'.$created_date.'"';
//            $data.="\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"consolidated_expense_report.xls\"");
    echo $data;
    exit;
}
//Todo End: Sagar : 20th Sep 2022 : Export Consolidated Expense Report
if (isset($_REQUEST['export_mgb_audit_detail_list'])) {
    $fromdate = $Todate = date('Y-m-d');
    if (isset($_SESSION['FromAttList']) && !empty($_SESSION['FromAttList'])) {
        $fromdate = date('Y-m-d', strtotime($_SESSION['FromAttList']));
    }
    if (isset($_SESSION['ToAttList']) && !empty($_SESSION['ToAttList'])) {
        $Todate = date('Y-m-d', strtotime($_SESSION['ToAttList']));
    }
    if ($_SESSION['sal'] != '') {
        $salesman = " AND tm.salesman_id='" . $_SESSION['sal'] . "' ";
    }
    $data = "Activity Date\tActivity Time\t" . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['salesman'] . " Code\t" . $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['retailer'] . " Code\t" . $AliaseUsers['retailer'] . " Group\t" . $AliaseUsers['retailer'] . " Channel\t" . $AliaseUsers['retailer'] . " Classification\t" . $AliaseUsers['retailer'] . "  Type\tAudit Status\tAudit Date\tItem Name\tItem Code\tDefined Norms\tActual Norms\tDifference\tAchieved %\n";
    $row = $_objAdmin->_getSelectList('table_mgb as tm 					  
    left join table_salesman as s on tm.salesman_id = s.salesman_id 					  
    left join table_retailer as tr on tm.retailer_id = tr.retailer_id	
    LEFT JOIN table_retailer_group as rg ON rg.group_id = tr.group_id
    left join table_retailer_type_master as rtm ON rtm.type_id=tr.type_id
    left join table_retailer_type_master as rtm ON rtm.type_id=tr.type_id
    left join table_retailer_type_master as rtm ON rtm.type_id=tr.type_id
    left join table_retailer_type_master as rtm ON rtm.type_id=tr.type_id
    left join table_retailer_type_master as rtm ON rtm.type_id=tr.type_id
    left join table_retailer_channel_master as rc ON rc.channel_id=tr.channel_id 
    left join table_relationship as rel ON rel.relationship_id=tr.relationship_id				  
    left join table_mgb_norms_audit as na on na.mgb_id=tm.mgb_id					  
    left join table_item as i on i.item_id = na.item_id', 'tm.*,na.*,i.item_code,i.item_name,s.salesman_name,s.employee_code,tr.retailer_name,tr.retailer_code,rg.group_name,rtm.type_name,rc.channel_name,rel.relationship_code as relation', '', " (tm.mgb_date BETWEEN '" . $fromdate . "' AND '" . $Todate . "') $salesman ORDER BY tm.mgb_id DESC");
    if ($row == '') {
        $data .= "No Record";
    } else {
        for ($i = 0; $i < count($row); $i++) {
            $AuditStatus = '';
            if ($row[$i]->audit_status == 'C') {
                $AuditStatus = 'Completed';
            } else {
                $AuditStatus = 'Pending';
            }
            $checkin_date = date('d M Y', strtotime($row[$i]->mgb_date));
            $checkin_time = date('H:i', strtotime($row[$i]->mgb_time));
            $data .= '"' . $checkin_date . '"';
            $data .= "\t";
            $data .= '"' . $checkin_time . '"';
            $data .= "\t";
            $data .= '"' . $row[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $row[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $row[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $row[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $row[$i]->group_name . '"';
            $data .= "\t";
            $data .= '"' . $row[$i]->channel_name . '"';
            $data .= "\t";
            $data .= '"' . $row[$i]->relation . '"';
            $data .= "\t";
            $data .= '"' . $row[$i]->type_name . '"';
            $data .= "\t";
            $data .= '"' . $AuditStatus . '"';
            $data .= "\t";
            $data .= '"' . date('d M Y', strtotime($row[$i]->audit_date)) . '"';
            $data .= "\t";
            $data .= '"' . $row[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $row[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $row[$i]->defined_norms . '"';
            $data .= "\t";
            $data .= '"' . $row[$i]->actual_norms . '"';
            $data .= "\t";
            $data .= '"' . ($row[$i]->defined_norms - $row[$i]->actual_norms) . '"';
            $data .= "\t";
            $data .= '"' . (($row[$i]->actual_norms / $row[$i]->defined_norms) * 100) . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"mgb_audit_detaIL_report.xls\"");
    echo $data;
    exit;
}

// Todo start : Jatin 13 dec 2022 : Color item list

if (isset($_REQUEST['export_color'])) {
    $data = "Color code\tColor Description\t Status  \n";
    //Todo Start : sudhanshu 12 june 2024 : add status filter
    $statusCondi = '';
    if (isset($_SESSION['MasColItem']) && $_SESSION['MasColItem'] != 'all' && $_SESSION['MasColItem'] != '') {
        $statusCondi = " AND status ='" . $_SESSION['MasColItem'] . "'";
    }
    //Todo End : sudhanshu 12 june 2024 : add status filter
    $condi = "  account_id='" . $_SESSION['accountId'] . "' $statusCondi ORDER BY color_desc";
    $auRec = $_objAdmin->_getSelectList('table_color', "*", '', $condi);
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            if ($auRec[$i]->status == 'A') {
                $status = "Active";
            } else {
                $status = "Inactive";
            }
            $data .= '"' . $auRec[$i]->color_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->color_desc . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Item_color.xls\"");
    echo $data;
    exit;
}

if (isset($_GET['export_item_discount'])) {
    $data = "Item Name\t Item Code\t Discount%\n";
    $condi = " ids.account_id='" . $_SESSION['accountId'] . "' ORDER BY i.item_code";
    $auRec = $_objAdmin->_getSelectList('table_item_discount as ids 
		left join table_item as i on i.item_id=ids.item_id', "ids.discount_percentage,i.item_code,i.item_name", '', $condi);
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->discount_percentage . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"item_discount_list.xls\"");
    echo $data;
    exit;
}

// Todo Start : Jatin : 4th Jan 2023 : Consumer serial number scan report

if (isset($_GET['export_consumer_serial_number_scan_report'])) {
    $data = " " . $AliaseUsers['salesman'] . " Name\t " . $AliaseUsers['salesman'] . " Code \t " . $AliaseUsers['distributor'] . " Name \t " . $AliaseUsers['distributor'] . " Code \t " . $AliaseUsers['retailer'] . " Name \t " . $AliaseUsers['retailer'] . " Code \t Consumer Name \t Consumer Email \t Consumer Phone \t Scan By \t  Serial Number \t Scan Status \t Serial Number String \t Comment \t Scan Date \t Scan Time\n";
    $sort = " ORDER BY tsc.appDate ,tsc.appTime desc";
    $_objArrayList = new ArrayList();
//    $salsList = $_objArrayList->SalesmanArrayList();
//    $salesman = $_objArrayList->getSalesCondition($salsList);
    if (isset($_SESSION['retailer_id']) && $_SESSION['retailer_id'] != '' && $_SESSION['retailer_id'] != 'all') {
        $condition .= " tsc.retailer_id = " . $_SESSION['retailer_id'] . " AND ";
    }
    if (isset($_SESSION['SalOrderList']) && $_SESSION['SalOrderList'] != '') {
        $condition .= " ts.salesman_id = " . $_SESSION['SalOrderList'] . " AND ";
    }
    if (isset($_SESSION['distributor_id']) && $_SESSION['distributor_id'] != '' && $_SESSION['distributor_id'] != 'all') {
        $condition .= " td.distributor_id = " . $_SESSION['distributor_id'] . " AND ";
    }
    if ($_SESSION['FromProductList'] != '') {
        $fromdate = "  tsc.appDate  >= '" . date('Y-m-d', strtotime($_SESSION['FromProductList'])) . "' AND ";
    } else {
        $fromdate = " tsc.appDate  >= '" . date('Y-m-d') . "' AND ";
    }
    if ($_SESSION['ToProductList'] != '') {
        $todate = " tsc.appDate <= '" . date('Y-m-d', strtotime($_SESSION['ToProductList'])) . "' ";
    } else {
        $todate = "  tsc.appDate <= '" . date('Y-m-d') . "'";
    }
    $where = " tsc.account_id='" . $_SESSION['accountId'] . "' and $condition $fromdate $todate ";
    $auRec = $_objAdmin->_getSelectList2('table_consumer_scan_activity AS tsc LEFT JOIN table_retailer AS tr ON  tr.retailer_id = tsc.retailer_id LEFT JOIN table_distributors AS td ON td.distributor_id = tr.distributor_id LEFT JOIN table_salesman AS ts ON ts.salesman_id = td.salesman_id',
        'tsc.*, td.distributor_name, td.distributor_code , tr.retailer_name , tr.retailer_code , ts.salesman_name , ts.employee_code', '', $where . $sort, '');
    for ($i = 0; $i < count($auRec); $i++) {
        $scanBy = '';
        $appDate = $_objAdmin->_changeDate($auRec[$i]->appDate);
        if ($auRec[$i]->scan_by == 'S') {
            $scanBy = $AliaseUsers['salesman'];
        } else if ($auRec[$i]->scan_by == 'R') {
            $scanBy = $AliaseUsers['retailer'];
        } else if ($auRec[$i]->scan_by == 'D') {
            $scanBy = $AliaseUsers['distributor'];
        }
        $serial_number_string = preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace(array('\t', '\n', '	', ','), ' ', $auRec[$i]->serial_number_string));
        $comment = preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace(array('\t', '\n', '	', ','), ' ', $auRec[$i]->comment));
        $data .= str_replace(array('\t', '\n', '  ', ','), ' ', $auRec[$i]->salesman_name) .
            "\t" . str_replace(array('\t', '\n', '  ', ','), ' ', $auRec[$i]->employee_code) .
            "\t" . str_replace(array('\t', '\n', '  ', ','), ' ', $auRec[$i]->distributor_name) .
            "\t" . str_replace(array('\t', '\n', '  ', ','), ' ', $auRec[$i]->distributor_code) .
            "\t" . str_replace(array('\t', '\n', '  ', ','), ' ', $auRec[$i]->retailer_name) .
            "\t" . str_replace(array('\t', '\n', '  ', ','), ' ', $auRec[$i]->retailer_code) .
            "\t" . str_replace(array('\t', '\n', '  ', ','), ' ', $auRec[$i]->consumer_name) .
            "\t" . str_replace(array('\t', '\n', '  ', ','), ' ', $auRec[$i]->consumer_email) .
            "\t" . str_replace(array('\t', '\n', '  ', ','), ' ', $auRec[$i]->consumer_phone) .
            "\t" . str_replace(array('\t', '\n', '  ', ','), ' ', $scanBy) .
            "\t" . str_replace(array('\t', '\n', '  ', ','), ' ', $auRec[$i]->serial_number) .
            "\t" . str_replace(array('\t', '\n', '  ', ','), ' ', $auRec[$i]->status) .
            "\t" . str_replace(array('\t', '\n', '  ', ','), ' ', $serial_number_string) .
            "\t" . str_replace(array('\t', '\n', '  ', ','), ' ', $comment) .
            "\t" . $appDate . "\t" . $auRec[$i]->appTime . "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"consumer_serial_number_scan_report.xls\"");
    echo $data;
    exit;
}
// Todo End : Jatin : 4th Jan 2023 : Consumer serial number scan report

if (isset($_GET['export_dis_credit_debit_note'])) {
    $data = "Date\tDocument No\tDistributor Code\tDistributor Name\tStockist Code\tStockist Name\tNote Type\tReason\tAmount\tDescription\tPayment Adjustment\tNote Status\n";
    if ($_SESSION['userLoginType'] == 7 && $_SESSION['stockistId'] > 0) {
        $stockist_id = " AND o.stockist_id =" . $_SESSION['stockistId'];
    }
    if ($_SESSION['FromAttList'] != '') {
        $fromdate = date('Y-m-d', strtotime($_SESSION['FromAttList']));
    } else {
        $fromdate = date('Y-m-d');
    }
    if ($_SESSION['ToAttList'] != '') {
        $todate = date('Y-m-d', strtotime($_SESSION['ToAttList']));
    } else {
        $todate = date('Y-m-d');
    }
//    $sort = " ORDER BY O.date_of_note DESC,O.time_of_note desc";
//    // $where = $distributor_id;
//    $where = "  O.date_of_note BETWEEN '" . $fromdate . "' AND '" . $todate . "' and R.status='A' and D.status='A' $stockist_id ";
//    $auRec = $_objAdmin->_getSelectList('table_dis_credit_debit_note AS O	
//	LEFT JOIN table_distributors AS D ON O.distributor_id = D.distributor_id
//  	left join table_stockist as R on R.stockist_id = O.stockist_id
//  	left join table_tags AS T on T.tag_id = O.tag_id',
//        " O.*, D.distributor_name, R.stockist_name, T.tag_description, D.distributor_code, R.stockist_code  ", "", $where . $sort, '');

    $auRec = $_objAdmin->_getSelectList2("((SELECT o.invoice_id as id, 'Sales Return' as note_type,substr(o.bill_no, -10) as document_no
	,o.bill_date,o.time_of_order as time_of_note ,o.due_date, 
	o.acc_total_invoice_amount as total_amount, COALESCE(sum(p.received_amount), 0) as adjusted_amount, 
	o.acc_total_invoice_amount-COALESCE(sum(p.received_amount), 0) AS pending_amount, o.bill_date as document_date,D.distributor_name, R.stockist_name, 'Sales Return CN' as tag_description, D.distributor_code, R.stockist_code,o.date_of_order as date_of_note ,'' as note_status ,
	case when o.clearing_status ='' Then 'Unadjusted' 
	     when o.clearing_status ='Full' Then 'Fully Adjusted'
	     when o.clearing_status ='Partial' Then 'Partially Adjusted'
	     ELSE o.clearing_status 
	End as clearing_status
	FROM table_distributor_invoice as o 
	left join table_distributor_payment_received as p on p.return_order_id = o.invoice_id 
	LEFT JOIN table_distributors AS D ON o.distributor_id = D.distributor_id
  	left join table_stockist as R on R.stockist_id = o.stockist_id
  	left join table_tags AS T on T.tag_id = o.tag_id
	WHERE o.order_type='Return' AND o.order_for='D' AND o.invoice_status='A' and o.account_id ='"
        . $_SESSION['accountId'] . "'	AND o.order_status='D' and o.date_of_order BETWEEN '" . $fromdate . "' AND '" .
        $todate . "' $stockist_id
	 Group by o.invoice_id)
	
	Union
	
	(SELECT o.note_id as id, o.note_type ,substr(o.document_no, -10) as document_no, o.date_of_note as bill_date,o.time_of_note,
	o.due_date, o.total_amount as total_amount, COALESCE(sum(p.received_amount), 0) as adjusted_amount, 
	o.total_amount-COALESCE(sum(p.received_amount), 0) AS pending_amount, o.date_of_note as document_date,D.distributor_name, R.stockist_name, T.tag_description, D.distributor_code, R.stockist_code,o.date_of_note ,o.note_status ,case when o.clearing_status ='' Then 'Unadjusted' 
	     when o.clearing_status ='Full' Then 'Fully Adjusted'
	     when o.clearing_status ='Partial' Then 'Partially Adjusted'
	     ELSE o.clearing_status 
	End as clearing_status
	FROM table_dis_credit_debit_note as o 
	left join table_distributor_payment_received as p on p.credit_note_id = o.note_id 
	LEFT JOIN table_distributors AS D ON o.distributor_id = D.distributor_id
  	left join table_stockist as R on R.stockist_id = o.stockist_id
  	left join table_tags AS T on T.tag_id = o.tag_id
	WHERE  o.account_id ='"
        . $_SESSION['accountId'] . "' and o.date_of_note BETWEEN '" . $fromdate . "' AND '" . $todate . "' $stockist_id
	 Group by o.note_id)) as tm", "tm.*", $rp, '', ' ORDER BY tm.document_date ASC');

    $remove = array("\n", "\r\n", "\r", ",");
    for ($i = 0; $i < count($auRec); $i++) {
        if ($auRec[$i]->note_type == 'C') {
            $note_type = "Credit";
            $type = '';
        } else if ($auRec[$i]->note_type == 'D') {
            $note_type = "Debit";
            $type = '';
        } else {
            $note_type = "Sales Return";
            $type = "&type=1";
        }
        $note_status = ($auRec[$i]->note_status == 'C') ? "Cancelled Note" : "Active";
        $data .= $_objAdmin->_changeDate($auRec[$i]->date_of_note);
        $data .= "\t";
//        $data .= $auRec[$i]->time_of_note;
//        $data .= "\t";
        $data .= $auRec[$i]->document_no;
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->distributor_code);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->distributor_name);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->stockist_code);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->stockist_name);
        $data .= "\t";
        $data .= $note_type;
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->tag_description);
        $data .= "\t";
        $data .= (ROUND($auRec[$i]->total_amount, 2));
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->description);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->clearing_status);
        $data .= "\t";
        $data .= $note_status;
        $data .= "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Distributor_Credit_Debit_Note.xls\"");
    echo $data;
    exit;
}

//Todo Start:Sagar : 4th Jan 2023 : Export Retailer Type Wise Item Price
if (isset($_GET['export_ret_type_item_price'])) {
    $data = "Item Code\tItem Name\t Category\t Brand\t " . $AliaseUsers['retailer'] . " Type\t Price\tStatus\n";
//Todo Start : sudhanshu 13 june 2024 : add status filter


$statusCondi = '';
        if (isset($_SESSION['MasRetTypeItmPrice']) && $_SESSION['MasRetTypeItmPrice'] != 'all' && $_SESSION['MasRetTypeItmPrice'] != '') {
            $statusCondi = " AND rtim.status ='" . $_SESSION['MasRetTypeItmPrice'] . "'";
        }
        //Todo End : sudhanshu 13 june 2024 : add status filter

        $where = " c.status='A' AND i.status='A' AND i.account_id='" . $_SESSION['accountId'] . "' AND i.item_type='I' $statusCondi ";
        if ($query) $where .= " AND $qtype LIKE '%$query%' ";

        $auRec = $this->_getSelectList2('table_retailer_channel_item_price_mapping as rtim
            left join table_item as i ON i.item_id = rtim.item_id
            left join table_retailer_channel_master as rt ON rt.channel_id = rtim.retailer_channel_id 
            left join table_category as c on i.category_id = c.category_id 
            left join table_brands as b on b.brand_id=i.brand_id',
            "rtim.*,i.item_name,i.item_code,c.category_name,b.brand_name,rt.channel_name", $rp, " $where $sort ");




    // $statusCondi = '';
    // if (isset($_SESSION['MasRetTypeItmPrice']) && $_SESSION['MasRetTypeItmPrice'] != 'all' && $_SESSION['MasRetTypeItmPrice'] != '') {
    //     $statusCondi = " AND rtim.status ='" . $_SESSION['MasRetTypeItmPrice'] . "'";
    // }
    // //Todo End : sudhanshu 13 june 2024 : add status filter
    // $condi = " c.status='A' and i.account_id='" . $_SESSION['accountId'] . "' and i.item_type='I' $statusCondi ORDER BY i.item_name ASC";

    // $auRec = $_objAdmin->_getSelectList2('table_retailer_type_item_price_mapping as rtim
	// 		left join table_item as i ON i.item_id = rtim.item_id
	// 		left join table_retailer_type_master as rt ON rt.type_id = rtim.retailer_type_id 
	// 		left join table_category as c on i.category_id = c.category_id 
	// 		left join table_brands as b on b.brand_id=i.brand_id',
    //     "rtim.*,i.item_name,i.item_code,c.category_name,b.brand_name,rt.type_name", '', " $condi ");

    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $status = ($auRec[$i]->status == 'A') ? "Active" : "Inactive";

            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->category_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->brand_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->type_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->price . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['retailer'] . "_type_wise_item_price_list.xls\"");
    echo $data;
    exit;
}
//Todo End:Sagar : 4th Jan 2023 : Export Retailer Type Wise Item Price


//Todo Start:Sagar : 5th Jan 2023 : Export Distributor Type Wise Item Price
if (isset($_GET['export_dist_type_item_price'])) {
    $data = "Item Code\tItem Name\t Category\t Brand\t " . $AliaseUsers['distributor'] . " Type\t Price\tStatus\n";
    //Todo Start : sudhanshu 13 june 2024 : add status filter
    $statusCondi = '';
    if (isset($_SESSION['MasDisTypeItmPrice']) && $_SESSION['MasDisTypeItmPrice'] != 'all' && $_SESSION['MasDisTypeItmPrice'] != '') {
        $statusCondi = " AND  rtim.status ='" . $_SESSION['MasDisTypeItmPrice'] . "'";
    }
    //Todo End : sudhanshu 13 june 2024 : add status filter
    $condi = " c.status='A' and i.account_id='" . $_SESSION['accountId'] . "' and i.item_type='I' $statusCondi ORDER BY i.item_name ASC";

    $auRec = $_objAdmin->_getSelectList2('table_distributor_type_item_price_mapping as rtim
			left join table_item as i ON i.item_id = rtim.item_id
			left join table_distributor_type_master as rt ON rt.dis_type_id = rtim.distributor_type_id 
			left join table_category as c on i.category_id = c.category_id 
			left join table_brands as b on b.brand_id=i.brand_id',
        "rtim.*,i.item_name,i.item_code,c.category_name,b.brand_name,rt.dis_type_name", '', " $condi ");

    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $status = ($auRec[$i]->status == 'A') ? "Active" : "Inactive";

            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->category_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->brand_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->dis_type_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->price . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['distributor'] . "_type_wise_item_price_list.xls\"");
    echo $data;
    exit;
}
//Todo End:Sagar : 5th Jan 2023 : Export Distributor Type Wise Item Price

// Todo Start : Jatin : 10th Jan 2023 : Export Retailer Distritbutor
if (isset($_GET['export_retailer_distributor_list'])) {
    $data = "" . $AliaseUsers['retailer'] . " Name \t  " . $AliaseUsers['retailer'] . " Code \t " . $AliaseUsers['retailer'] . " Class \t " . $AliaseUsers['retailer'] . " Type \t " . $AliaseUsers['retailer'] . " Channel \tSurvey Status\t " . $AliaseUsers['distributor'] . " Name \t " . $AliaseUsers['distributor'] . " Code\t Display Outlet \t Country\t State \t District \t City\t Market \t Zipcode \t Address \t Phone Number1 \t Phone Number2 \t GST No. \t Aadhar No. \t PAN No. \t Contact Person1 \t Contact Person Number1 \t Contact Person2 \t Contact Person Number2 \t Email ID1 \t Email ID2\t Added By \tStart Date\n";
    if ((intval($_SESSION['userLoginType']) == 3) && (intval($_SESSION['distributorId']) > 0)) {
        $distCondi = ' AND r.distributor_id = ' . intval($_SESSION['distributorId']);
    }
    $condi = " r.new='' AND r.status ='A'  AND r.status!='D' $distCondi GROUP BY r.retailer_id ORDER BY r.retailer_name ASC";

    $auRec = $_objAdmin->_getSelectList('table_retailer as r 
		LEFT JOIN table_relationship as rr on rr.relationship_id=r.relationship_id 
		left join table_retailer_channel_master as cm on r.channel_id=cm.channel_id 
		LEFT JOIN table_salesman AS sm ON sm.salesman_id = r.salesman_id
        left join country as con on con.country_id = r.country
		left join state as s on r.state=s.state_id 
		left join table_web_users as w on w.retailer_id=r.retailer_id 
		left join city as c on r.city=c.city_id 
		left join table_location as loc ON loc.location_id = r.location_id
		left join table_retailer_type_master as tm on tm.type_id=r.type_id
		LEFT JOIN table_route_retailer AS RRR ON RRR.retailer_id = r.retailer_id
		LEFT JOIN table_route AS RT ON RT.route_id = RRR.route_id
		left join table_distributors as d on d.distributor_id=r.distributor_id ', "r.*,GROUP_CONCAT(RT.route_name SEPARATOR ',') AS routes,rr.relationship_code, sm.salesman_name, con.country_name,s.state_name,w.email_id,tm.type_name,d.distributor_name,d.distributor_code,c.city_name,cm.channel_name,loc.location_name", '', $condi);

    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $surveyStatus = '';

            if (strtolower($auRec[$i]->survey_status) == 'c') {
                $surveyStatus = 'Surveyed';
            } elseif (strtolower($auRec[$i]->survey_status) == 'i') {
                $surveyStatus = 'Not Surveyed';
            } elseif (strtolower($auRec[$i]->survey_status) == 'n') {
                $surveyStatus = 'Rejected';
            } else {
                $surveyStatus = '';
            }

            if ($auRec[$i]->display_outlet == 'Y') {
                $outlet = 'YES';
            } elseif ($auRec[$i]->display_outlet == 'N') {
                $outlet = 'No';
            } else {
                $outlet = '';
            }
            if ($auRec[$i]->new == '1') {
                $new = 'New Retailer';
            }

            $start_date = $_objAdmin->_changeDate($auRec[$i]->start_date);

            if ($auRec[$i]->status == 'I') {
                $end_date = $_objAdmin->_changeDate($auRec[$i]->end_date);
            } else {
                $end_date = '';
            }

            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->relationship_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->type_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->channel_name . '"';
            $data .= "\t";
            $data .= '"' . $surveyStatus . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $outlet . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->country_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_location . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->zipcode . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_address . '"';
            $data .= "\t";
//            $data .= '"' . $auRec[$i]->retailer_address2 . '"';
//            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_phone_no . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_phone_no2 . '"';
            $data .= "\t";
            // $data .= '"' . $auRec[$i]->retailer_leadline_no . '"';
            // $data .= "\t";
            $data .= '"' . $auRec[$i]->gst_no . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->aadhar_no . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->pan_no . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->contact_person . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->contact_number . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->contact_person2 . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->contact_number2 . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->email_id . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->email_id2 . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
//            $data .= "\t";
//            $data .= '"' . $new . '"';
//            $data .= "\t";
//            $data .= '"' . $auRec[$i]->status . '"';
//            $data .= "\t";
//            $data .= '"' . $auRec[$i]->routes . '"';
            $data .= "\t";
            $data .= '"' . $start_date . '"';
            // $data .= "\t";
            // $data .= '"' . $end_date . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['retailer'] . "_" . $AliaseUsers['distributor'] . "_list.xls\"");
    echo $data;
    exit;
}
// Todo End : Jatin : 10th Jan 2023 : Export Retailer Distritbutor

if (isset($_GET['export_dispatch_summary_detail'])) {
    $data = "Order Date\tOrder No.\tSalesman Name (Order)\tSalesman Code (Order)\tSalesman Designation (Order)\tReporting Manager (Order)\tSalesman Name (Dispatch)\tSalesman Code (Dispatch)\tSalesman Designation (Dispatch)\tReporting Manager (Dispatch)\tRoutes\tRetailer Name\tRetailer Code\tRetailer Zone\tRetailer State\tRetailer District\tRetailer City\tRetailer Type\tRetailer Class\tDistributor Name\tDistributor Code\tDistributor State\tOrder Dispatched Status\tProduct Category\tItem Name\tItem Code\tOrdered Qty\tPrice (PTR)\tOrdered Value\tDispatched Qty\tBalance Dispatch Qty\tValue (Dispatch)\tItem Dispatched Status\tDispatched Date\tRemark\tBill No\t Photo Count\n";
    $_objArrayList = new ArrayList();
    $salsList = $_objArrayList->SalesmanArrayList();
    $salesman = $_objArrayList->getSalesCondition($salsList);
    $salesman = str_replace('s.', 'too.', $salesman);
    if ($_SESSION['salesman_id'] != '') {
        $salesman = " AND too.salesman_id = '" . $_SESSION['salesman_id'] . "'";
    }
    if ($_SESSION['FromDate'] != '') {
        $fromdate = " and  too.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['FromDate'])) . "'";
    } else {
        $fromdate = " and too.date_of_order >= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['ToDate'] != '') {
        $todate = " and too.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToDate'])) . "'";
    } else {
        $todate = " and too.date_of_order <= '" . date('Y-m-d') . "'";
    }
    if(isset( $_SESSION['dispatchOrderStatus']) &&  $_SESSION['dispatchOrderStatus'] !=''){
        if( $_SESSION['dispatchOrderStatus'] == 'FD'){
            $orderSts = " HAVING SUM(tod.quantity) = SUM(todi.dispatched_qty) ";
        }
        if( $_SESSION['dispatchOrderStatus'] == 'FP'){
            $orderSts = " HAVING 0 = SUM(IFNULL(todi.dispatched_qty,0)) ";

        }
        if( $_SESSION['dispatchOrderStatus'] == 'PP'){
            $orderSts = " HAVING SUM(tod.quantity) > SUM(todi.dispatched_qty)  AND SUM(todi.dispatched_qty) !=0";
        }

    }
    //AND too.order_status = 'A'
    $condi = " too.order_status !='C' and tod.quantity >0 AND too.order_for = 'R' $salesman  $fromdate $todate and too.order_type IN ('Yes','Adhoc') AND  too.return_type = 0 GROUP BY too.order_id,tod.item_id $orderSts ORDER BY too.order_id ASC,tod.item_id ASC";

//    $auRec = $_objAdmin->_getSelectList('table_order AS too
//	LEFT JOIN `table_order_detail` AS tod ON tod.order_id = too.order_id and tod.type=1
//	LEFT JOIN `view_order_dispatched_item` AS todi ON todi.order_id = tod.order_id and todi.item_id=tod.item_id
//	LEFT JOIN `table_salesman` AS s ON s.salesman_id = todi.salesman_id
//	LEFT JOIN `table_item` as ti on ti.item_id =tod.item_id',
//        "too.order_id ,s.salesman_name,s.employee_code, too.date_of_order ,
//	(tod.quantity) as quantity ,
//	(IFNULL(todi.dispatched_qty,0)) as dispatched_qty ,
//	((tod.quantity) - ((IFNULL(todi.dispatched_qty,0)))) AS pending_dispatch ,
//	ti.item_id , ti.item_name ,ti.item_code ,todi.remark as remark ,
//	todi.bill_no as bill_no, todi.dispatched_date", '', $condi);

    $auRec = $_objAdmin->_getSelectList('table_order AS too
LEFT JOIN table_retailer as r ON r.retailer_id = too.retailer_id
LEFT JOIN table_relationship as tr on tr.relationship_id=r.relationship_id
left join table_retailer_type_master as tm on tm.type_id=r.type_id
left join state as st on st.state_id=r.state 
left join city as ct on ct.city_id=r.city 
left join table_location as loc ON loc.location_id = r.location_id
LEFT JOIN table_distributors as dis ON dis.distributor_id = too.distributor_id
left join state as dst on dst.state_id=dis.state
LEFT JOIN table_order_detail AS tod ON tod.order_id = too.order_id and tod.type=1
LEFT JOIN table_item as ti on ti.item_id = tod.item_id 
LEFT JOIN table_category as ic on ic.category_id = ti.category_id
LEFT JOIN view_order_dispatched_item AS todi ON todi.order_id = tod.order_id and todi.item_id=tod.item_id
LEFT JOIN table_zone_state_mapping AS zsm ON zsm.state_id = r.state AND zsm.account_id = r.account_id
LEFT JOIN table_zone AS z ON z.zone_id = zsm.zone_id
LEFT JOIN table_salesman AS s1 ON s1.salesman_id = too.salesman_id
LEFT JOIN table_salesman_hierarchy_relationship AS SH1 ON SH1.salesman_id = s1.salesman_id
LEFT JOIN table_salesman_hierarchy AS H1 ON H1.hierarchy_id = SH1.hierarchy_id
LEFT JOIN table_salesman AS rpt ON rpt.salesman_id = SH1.rpt_user_id

LEFT JOIN table_salesman AS s ON s.salesman_id = todi.salesman_id
LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
LEFT JOIN table_salesman AS S2 ON S2.salesman_id = SH.rpt_user_id', "too.date_of_order,too.order_id,
s1.salesman_name as order_sal_name,s1.employee_code as order_sal_code,H1.description AS order_sal_designation,rpt.salesman_name AS order_rpt_person,

s.salesman_name,s.employee_code,H.description AS sal_designation,S2.salesman_name AS rptPerson,

r.retailer_id,r.retailer_name,r.retailer_code,st.state_name as ret_state,ct.city_name as ret_district,loc.location_name as ret_city,tr.relationship_code as ret_class,tm.type_name as ret_type,

dis.distributor_id,dis.distributor_name,dis.distributor_code,dst.state_name as dist_state,
ic.category_name,ti.item_id,ti.item_name,ti.item_code,tod.price,tod.quantity,tod.total,
z.zone_name,
SUM(tod.quantity) as quantity,
SUM(IFNULL(todi.dispatched_qty,0)) as dispatched_qty,
ROUND((tod.price * (SUM(IFNULL(todi.dispatched_qty,0)))),2) as dispatched_value,
(SUM(tod.quantity) - SUM(IFNULL(todi.dispatched_qty,0))) AS pending_dispatch,
todi.remark,todi.bill_no,todi.dispatched_date,too.photo_count,s1.salesman_id", '', $condi);

    $retIdArr = [];
    $orderIdWiseQtyArr = [];
    if (is_array($auRec) && (count($auRec) > 0)) {
        foreach ($auRec as $key => $auRecData) {
            if (isset($auRecData->retailer_id) && !empty($auRecData->retailer_id)) {
                $retIdArr[] = $auRecData->retailer_id;
            }

            $orderIdWiseQtyArr[$auRecData->order_id]['orderedQty'] += $auRecData->quantity;
            $orderIdWiseQtyArr[$auRecData->order_id]['dispatchedQty'] += $auRecData->dispatched_qty;
        }
    }

//    echo '<pre>';
//    print_r($data);
//    print_r($auRec);
//    print_r($orderIdWiseQtyArr);
//    die(' die here');
    $remove = array("\n", "\r\n", "\r", ',');

    if (is_array($retIdArr) && (count($retIdArr) > 0)) {
        $retIds = implode(',', array_unique($retIdArr));
        $routesRec = $_objAdmin->_getSelectList('table_retailer as r
            LEFT JOIN table_route_retailer AS RR ON RR.retailer_id = r.retailer_id
		    LEFT JOIN table_route AS RT ON RT.route_id = RR.route_id', "r.retailer_id,GROUP_CONCAT(DISTINCT RT.route_name SEPARATOR ', ') AS routes", "", " r.retailer_id IN($retIds) GROUP BY r.retailer_id ");
        $retRouteArr = [];
        if (is_array($routesRec) && (count($routesRec) > 0)) {
            foreach ($routesRec as $key => $routesRecData) {
                $retRouteArr[$routesRecData->retailer_id] = $routesRecData;
            }
        }
    }
//Todo Start :sudhasnhu 18 july 2024 get image count
    if ($_SESSION['FromDate'] != '') {
        $fromdate = " and i.date_app >= '" . date('Y-m-d', strtotime($_SESSION['FromDate'])) . "'";
    } else {
        $fromdate = " and i.date_app >= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['ToDate'] != '') {
        $todate = " and i.date_app <= '" . date('Y-m-d', strtotime($_SESSION['ToDate'])) . "'";
    } else {
        $todate = " and i.date_app <= '" . date('Y-m-d') . "'";
    }

    $imgCondi = " $fromdate $todate and image_type = '111' group by ref_id";
    $imageRec = $_objAdmin->_getSelectList('table_image as i
           ', "count(image_id) as photo_count,ref_id,salesman_id", "", $imgCondi);

    if (is_array($imageRec) && (count($imageRec) > 0)) {
        $phptoCountArr = [];
        foreach ($imageRec as $key => $photo) {
            $phptoCountArr[$photo->ref_id][$photo->salesman_id] = $photo->photo_count;

        }
    }

//Todo End :sudhasnhu 18 july 2024 get image count
    if (is_array($auRec) && (count($auRec) > 0)) {

        for ($i = 0; $i < count($auRec); $i++) {
            $itemDispatchStatus = '';
            if ($auRec[$i]->quantity == $auRec[$i]->dispatched_qty) {
                $itemDispatchStatus = 'Fully Dispatched';
            } elseif ($auRec[$i]->dispatched_qty == 0) {
                $itemDispatchStatus = 'Fully Pending';
            } else {
                $itemDispatchStatus = 'Partial Pending';
            }

            $orderDispatchStatus = '';
            if ($orderIdWiseQtyArr[$auRec[$i]->order_id]['orderedQty'] == $orderIdWiseQtyArr[$auRec[$i]->order_id]['dispatchedQty']) {
                $orderDispatchStatus = 'Fully Dispatched';
            } elseif ($orderIdWiseQtyArr[$auRec[$i]->order_id]['dispatchedQty'] == 0) {
                $orderDispatchStatus = 'Fully Pending';
            } else {
                $orderDispatchStatus = 'Partial Pending';
            }

            $retRoutes = '';
            if (isset($retRouteArr[$auRec[$i]->retailer_id]) && !empty($retRouteArr[$auRec[$i]->retailer_id])) {
                $retRoutes = $retRouteArr[$auRec[$i]->retailer_id]->routes;
            }

            $photo_count = ($phptoCountArr[$auRec[$i]->order_id][$auRec[$i]->salesman_id] !='') ? $phptoCountArr[$auRec[$i]->order_id][$auRec[$i]->salesman_id]:'0';

            $data .= '"' . date('d M Y', strtotime($auRec[$i]->date_of_order)) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->order_id . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->order_sal_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->order_sal_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->order_sal_designation . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->order_rpt_person . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->sal_designation . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->rptPerson . '"';
            $data .= "\t";
            $data .= '"' . $retRoutes . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->zone_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->ret_state . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->ret_district . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->ret_city . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->ret_type . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->ret_class . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->dist_state . '"';
            $data .= "\t";
            $data .= '"' . $orderDispatchStatus . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->category_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->quantity . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->price . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->total . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->dispatched_qty . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->pending_dispatch . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->dispatched_value . '"';
            $data .= "\t";
            $data .= '"' . $itemDispatchStatus . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->dispatched_date . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->remark . '"';
            $data .= "\t";
            $data .= '"' . preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace($remove, '', $auRec[$i]->bill_no)) . '"';
            $data .= "\t";
            $data .= '"' .$photo_count . '"';
            $data .= "\n";
        }
    }

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=dispatch_order_list.xls ");
    echo $data;
    exit;
}


//Todo Start:Sagar : 6th Feb 2023 : Export Product Wise Sales Report
if (isset($_GET['export_product_wise_sales_report'])) {
    $data = "Activity Date\tActivity Time\tOrder No.\t" . $AliaseUsers['salesman'] . " Code\t" . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['retailer'] . " Code\t" . $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['retailer'] . " Group\t" . $AliaseUsers['retailer'] . " Channel\t" . $AliaseUsers['retailer'] . " Classification\t" . $AliaseUsers['retailer'] . " Type\t" . $AliaseUsers['distributor'] . " Code\t" . $AliaseUsers['distributor'] . " Name\tTotal Order Amount\tItem Code\tItem Name\t Category\t Brand\t Item Grade\t Quantity\tItem Wise Total Amount\n";

    $salesman = $_SESSION['salsInCondi'];

    if (isset($_SESSION['SalAttList']) && !empty($_SESSION['SalAttList'])) {
        $salesmanCondi = " AND tm.salesman_id='" . $_SESSION['SalAttList'] . "' ";
    } else {
        $salesmanCondi = $salesman;
    }
    $mirIdsArr = [];
    $mirIds = '';
    $mirDataArr = [];
    $auRec = $_objAdmin->_getSelectList('table_mir as tm 
                            left join table_salesman as s on s.salesman_id = tm.salesman_id 
                            left join table_retailer as tr on tr.retailer_id = tm.retailer_id
                            LEFT JOIN table_retailer_group as rg ON rg.group_id = tr.group_id
                            left join table_retailer_type_master as rtm ON rtm.type_id=tr.type_id
                            left join table_retailer_channel_master as rc ON rc.channel_id=tr.channel_id 
                            left join table_relationship as rel ON rel.relationship_id=tr.relationship_id 
                            LEFT JOIN table_distributors as d on d.distributor_id = tr.distributor_id
', 'tm.*,s.salesman_name,s.employee_code,tr.retailer_name,tr.retailer_code,d.distributor_name,d.distributor_code,rg.group_name,rtm.type_name,rc.channel_name,rel.relationship_code as relation', '', " (tm.server_date BETWEEN '" . date
        ('Y-m-d', strtotime($_SESSION['FromAttList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToAttList'])) . "') $salesmanCondi ORDER BY tm.mir_id DESC");

    if (is_array($auRec) && (count($auRec) > 0)) {
        foreach ($auRec as $key => $mirData) {
            $mirIdsArr[] = $mirData->mir_id;
            $mirDataArr[$mirData->mir_id] = $mirData;
        }

        $mirIds = implode(',', $mirIdsArr);

    }

    $mirDetRec = $_objAdmin->_getSelectList('table_mir_details as tmd 
						left join table_item as i on i.item_id=tmd.item_id
                        left join table_grade as bg on bg.grade_id=i.grade_id
                        left join table_category as c on c.category_id=i.category_id 
                        left join table_brands as b on b.brand_id=i.brand_id', "tmd.mir_id,i.item_name,i.item_code,tmd.quantity,tmd.ttl_item_wise_amt,b.brand_name,bg.grade_name,c.category_name", '', " tmd.mir_id IN($mirIds) ORDER BY tmd.mir_id DESC ");
    $mirDetailsDataArr = [];
    if (is_array($mirDetRec) && (count($mirDetRec) > 0)) {
        foreach ($mirDetRec as $key2 => $mirDetailsData) {
            $mirData = $mirDataArr[$mirDetailsData->mir_id];
            $data .= '"' . $_objAdmin->_changeDate($mirData->server_date) . '"';
            $data .= "\t";
            $data .= '"' . $mirData->server_time . '"';
            $data .= "\t";
            $data .= '"' . $mirData->mir_id . '"';
            $data .= "\t";
            $data .= '"' . $mirData->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $mirData->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $mirData->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $mirData->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $mirData->group_name . '"';
            $data .= "\t";
            $data .= '"' . $mirData->channel_name . '"';
            $data .= "\t";
            $data .= '"' . $mirData->relation . '"';
            $data .= "\t";
            $data .= '"' . $mirData->type_name . '"';
            $data .= "\t";
            $data .= '"' . $mirData->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $mirData->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $mirData->ttl_order_amt . '"';
            $data .= "\t";
            $data .= '"' . $mirDetailsData->item_code . '"';
            $data .= "\t";
            $data .= '"' . $mirDetailsData->item_name . '"';
            $data .= "\t";
            $data .= '"' . $mirDetailsData->category_name . '"';
            $data .= "\t";
            $data .= '"' . $mirDetailsData->brand_name . '"';
            $data .= "\t";
            $data .= '"' . $mirDetailsData->grade_name . '"';
            $data .= "\t";
            $data .= '"' . $mirDetailsData->quantity . '"';
            $data .= "\t";
            $data .= '"' . $mirDetailsData->ttl_item_wise_amt . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"product_wise_sales_report.xls\"");
    echo $data;
    exit;
}
//Todo End:Sagar : 6th Feb 2023 : Export Product Wise Sales Report

//Todo Start: Jatin : 8th Feb 2023 : Export Route Wise Retailer distributor Details

if (isset($_GET['routewiseretailerdistributor'])) {

    $data = $AliaseUsers['route']." Name \t " . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\t" . $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['retailer'] . " Code\tPhone Number\tState\tDistrict\tCity\n";

    $ret = $_SESSION['rid'];

    if ($_SESSION['rid'] != '') {
        $ret = "and tr.route_id = '" . $_SESSION['rid'] . "' ";
    } else {
        $ret = "";
    }

    $auRec = $_objAdmin->_getSelectList('`table_route` AS tr
LEFT JOIN `table_route_retailer` AS trr
ON
    trr.route_id = tr.route_id
LEFT JOIN `table_retailer` AS tbr
ON
    tbr.retailer_id = trr.retailer_id
LEFT JOIN `table_distributors` AS tds
ON
    tds.distributor_id = tbr.distributor_id
LEFT JOIN state AS s
ON
    s.state_id = tbr.state
LEFT JOIN city AS c
ON
    c.city_id = tbr.city
LEFT JOIN table_location AS tl
ON
    tl.location_id = tbr.location_id', "tr.route_id,
    tr.route_name,
    tds.distributor_name,
    trr.id,
    tbr.retailer_name,
    tbr.retailer_code,
    tbr.retailer_phone_no,
    tds.distributor_code,
    trr.distributor_id,
    s.state_name,
    c.city_name,
    tl.location_name", '', " (tr.created_at BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromDate'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToDate'])) . "')  $ret AND tr.status = 'A' and tds.status='A' GROUP BY
    tr.route_id,tbr.retailer_id
    
ORDER BY
    tr.route_id ASC");

//    echo '<pre>';
//    print_r($auRec);
//    die(' die here');

    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . $auRec[$i]->route_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_phone_no . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"".$AliaseUsers['route']."_Wise_" . $AliaseUsers['retailer'] . "_Details.xls\"");
    echo $data;
    exit;
}
//Todo End: Jatin : 8th Feb 2023 : Export Route Wise Retailer distributor Details

//Todo Start: Jatin : 15th Feb 2023 : Export Salesman multiple mapping category
if (isset($_GET['export_salesman_category'])) {

    $data = "" . $AliaseUsers['salesman'] . " Name \t " . $AliaseUsers['salesman'] . " Code\t Category Name \t Category Code \t Status\n";
    //Todo Start : sudhanshu 13 june 2024 : add status filter
    $statusCondi = '';
    if (isset($_SESSION['MasSalCate']) && $_SESSION['MasSalCate'] != 'all' && $_SESSION['MasSalCate'] != '') {
        $statusCondi = " tsc.status ='" . $_SESSION['MasSalCate'] . "'";
    }
    //Todo End : sudhanshu 13 june 2024 : add status filter
    $condi = " $statusCondi  ORDER BY ts.salesman_name";
    $auRec = $_objAdmin->_getSelectList('table_salesman_category AS tsc
            LEFT JOIN table_salesman AS ts ON
            ts.salesman_id = tsc.salesman_id
            LEFT JOIN table_category AS tc ON
            tc.category_id = tsc.category_id',
        "tsc.*,ts.salesman_name ,ts.employee_code ,tc.category_name ,tc.category_code", '', $condi);
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            if ($auRec[$i]->status == 'A') {
                $status = "Active";
            } else {
                $status = "Inactive";
            }
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->category_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->category_code . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"item_list.xls\"");
    echo $data;
    exit;
}
//Todo End: Jatin : 15th Feb 2023 : Export Salesman multiple mapping category


if (isset($_GET['export_dynamic_checkin_checkout_report'])) {
    $data = "Salesman Code\tSalesman Name\tSalesman Zone\tSalesman State\tRetailer Code\tRetailer Name\t Retailer Group\t Retailer Channel\t Retailer Classification\t Retailer Type\tContact Person\t Contact Person Ph. No.\t Retailer Zone\tRetailer State\tDistributor Code \tDistributor Name\tDistrict\tMarket\t Purpose of Visit\t Date\tCheck In Time\tCheck Out Time\tTime Spent\t CheckIn Distance (KM)\t CheckIn Distance(M)\n";
//    $salCond = '';
//    if (isset($_SESSION['SalAttList']) && $_SESSION['SalAttList'] > 0) {
//        $salCond .= ' AND cc.salesman_id = "' . $_SESSION['SalAttList'] . '"';
//    }
//    if (isset($_SESSION['state']) && $_SESSION['state'] > 0) {
//        $salCond .= ' AND r.state = "' . $_SESSION['state'] . '"';
//    }
//    if (!isset($_SESSION['FromAttList']) && empty($_SESSION['FromAttList'])) {
//        $_SESSION['FromAttList'] = date('d M Y');
//    }
//    if (!isset($_SESSION['ToAttList']) && empty($_SESSION['ToAttList'])) {
//        $_SESSION['ToAttList'] = date('d M Y');
//    }

    $_objArrayList = new ArrayList();
    $salCond = '';
    if (isset($_SESSION['fil_salesman']) && $_SESSION['fil_salesman'] > 0) {
        $salCond .= ' AND cc.salesman_id = "' . $_SESSION['fil_salesman'] . '"';
    } elseif (isset($_SESSION['fil_salesman_manager']) && ($_SESSION['fil_salesman_manager'] > 0)) {
        $salesmanManagerId = $_SESSION['fil_salesman_manager'];
        $account_id = $_SESSION['accountId'];
        $res = $_objAdmin->_getSelectList2('table_salesman_hierarchy_relationship AS SHR 
        LEFT JOIN table_salesman_hierarchy AS SH ON SH.hierarchy_id = SHR.hierarchy_id
        LEFT JOIN table_salesman AS s ON s.salesman_id = SHR.salesman_id', 's.salesman_id,SH.hierarchy_id,SH.sort_order', '', " SH.account_id=" . $account_id . " AND SHR.salesman_id = $salesmanManagerId ORDER BY SH.sort_order ASC ");

        if (is_array($res) && (count($res) > 0)) {
            $sortOrder = $res[0]->sort_order;
            $getBottomUsersIdArr = $_objArrayList->getSalesmansBottomUsers(array($salesmanManagerId), $sortOrder, $account_id);

            if (is_array($getBottomUsersIdArr) && (count($getBottomUsersIdArr) > 0)) {
                $bottomUsersIds = implode(',', $getBottomUsersIdArr);
            }

            $salCond .= " AND cc.salesman_id IN($bottomUsersIds) ";
        }
    } else {
        $salCond .= '';
    }

    if (isset($_SESSION['fil_retailer']) && $_SESSION['fil_retailer'] > 0) {
        $salCond .= ' AND cc.retailer_id = "' . $_SESSION['fil_retailer'] . '"';
    }

    if (isset($_SESSION['fil_salesman_zone']) && $_SESSION['fil_salesman_zone'] > 0) {
        $salCond .= ' AND szsm.zone_id = "' . $_SESSION['fil_salesman_zone'] . '"';
    }

    if (isset($_SESSION['fil_salesman_state']) && $_SESSION['fil_salesman_state'] > 0) {
        $salCond .= ' AND s.state = "' . $_SESSION['fil_salesman_state'] . '"';
    }

    if (isset($_SESSION['fil_retailer_zone']) && $_SESSION['fil_retailer_zone'] > 0) {
        $salCond .= ' AND rzsm.zone_id = "' . $_SESSION['fil_retailer_zone'] . '"';
    }

    if (isset($_SESSION['fil_retailer_state']) && $_SESSION['fil_retailer_state'] > 0) {
        $salCond .= ' AND r.state = "' . $_SESSION['fil_retailer_state'] . '"';
    }

    if (!isset($_SESSION['fil_from']) && empty($_SESSION['fil_from'])) {
        $_SESSION['fil_from'] = date('d M Y');
    }

    if (!isset($_SESSION['fil_to']) && empty($_SESSION['fil_to'])) {
        $_SESSION['fil_to'] = date('d M Y');
    }

    if (isset($_SESSION['fil_month']) && !empty($_SESSION['fil_month']) && isset($_SESSION['fil_year']) && !empty($_SESSION['fil_year'])) {
        $_SESSION['fil_from'] = date('Y-m-d', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
        $_SESSION['fil_to'] = date('Y-m-t', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
    }

    if (isset($_SESSION['salesmanIdsCond']) && !empty($_SESSION['salesmanIdsCond'])) {
        $salesman = $_SESSION['salesmanIdsCond'];
    }
    //getting checkin checkouts for above checkins
    $auRec = $_objAdmin->_getSelectList('table_capture_checkin_out as cc
LEFT JOIN table_salesman AS s ON s.salesman_id = cc.salesman_id
LEFT JOIN table_zone_state_mapping as szsm on szsm.state_id = s.state and szsm.account_id = s.account_id
LEFT JOIN table_zone as sz on sz.zone_id = szsm.zone_id
LEFT JOIN table_retailer as r ON r.retailer_id = cc.retailer_id
LEFT JOIN table_retailer_group as rg ON rg.group_id = r.group_id
left join table_retailer_type_master as rtm ON rtm.type_id=r.type_id
left join table_retailer_channel_master as rc ON rc.channel_id=r.channel_id 
left join table_relationship as rel ON rel.relationship_id=r.relationship_id
LEFT JOIN table_zone_state_mapping as rzsm on rzsm.state_id = r.state and rzsm.account_id = r.account_id
LEFT JOIN table_zone as rz on rz.zone_id = rzsm.zone_id
LEFT JOIN table_distributors as dd ON dd.distributor_id = r.distributor_id
LEFT JOIN state as st ON st.state_id = s.state
LEFT JOIN state as rt ON rt.state_id = r.state
LEFT JOIN table_purpose_visit as pv ON pv.purpose_visit_id = cc.purpose_visit_id
LEFT JOIN city as ct ON ct.city_id = r.city', 'cc.id as checkin_id,s.salesman_name,s.employee_code,r.retailer_name,r.retailer_code,r.retailer_location,sz.zone_name as sal_zone,st.state_name as sal_state,rz.zone_name as ret_zone,rt.state_name as ret_state,ct.city_name,cc.checkin_date,cc.checkin_time,cc.checkout_time,dd.distributor_name,dd.distributor_code,rg.group_name,rtm.type_name,rc.channel_name,rel.relationship_code as relation,pv.purpose,r.contact_person,r.contact_number,cc.lat,cc.lng,cc.retailer_id', '', " cc.checkin_date BETWEEN '" . date('Y-m-d', strtotime($_SESSION['fil_from'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['fil_to'])) . "' $salesman $salCond ORDER BY cc.checkin_date DESC,  cc.checkin_time DESC");

    // start : add checkin distance : sudhanshu : 04 march 2024:
    $getRetSurveyLatLng = $_objAdmin->_getSelectList("table_retailer as r", "r.retailer_id,r.lat,r.lng", "", " r.status = 'A' AND r.lat_lng_capcure_accuracy!=0 AND (r.lat != '0.0' AND r.lng != '0.0') AND (r.lat != '' AND r.lng != '') ORDER BY r.retailer_id ASC");
    $retSurveyLatLngArr = [];
    if (is_array($getRetSurveyLatLng) && (count($getRetSurveyLatLng) > 0)) {
        foreach ($getRetSurveyLatLng as $key => $retSurveyLatLng) {
            $retSurveyLatLngArr[$retSurveyLatLng->retailer_id] = $retSurveyLatLng;
        }
    }
    // end : add checkin distance : sudhanshu : 04 march 2024:

    if (is_array($auRec) && (count($auRec) > 0)) {
        foreach ($auRec as $key => $checkinData) {
            $checkin_date = date('d M Y', strtotime($checkinData->checkin_date));
            if (!empty($checkinData->checkout_time) && ($checkinData->checkout_time != '00:00:00')) {
                $checkinDateTime = date('Y-m-d H:i:s', strtotime($checkinData->checkin_date . ' ' . $checkinData->checkin_time));
                $checkoutDateTime = date('Y-m-d H:i:s', strtotime($checkinData->checkin_date . ' ' . $checkinData->checkout_time));
                $timeSpent = dateDifference($checkinDateTime, $checkoutDateTime);
            } else {
                $timeSpent = "-";
            }
// start : add checkin distance : sudhanshu : 04 march 2024:
            $distance = '-';
            if ((isset($checkinData->lat) && !empty($checkinData->lat) && ($checkinData->lat != '0.0')) && (isset($checkinData->lng) && !empty($checkinData->lng) && ($checkinData->lng != '0.0')) && (isset($retSurveyLatLngArr[$checkinData->retailer_id]) && !empty($retSurveyLatLngArr[$checkinData->retailer_id]))) {
                $retSurLat = $retSurveyLatLngArr[$checkinData->retailer_id]->lat;
                $retSurLng = $retSurveyLatLngArr[$checkinData->retailer_id]->lng;
                $distanceInKiloMeters = round(distance($checkinData->lat, $checkinData->lng, $retSurLat, $retSurLng, 'K'), 2) . ' KM';
                $distanceInMeters = round(distance($checkinData->lat, $checkinData->lng, $retSurLat, $retSurLng, 'K'), 2) * 1000 . ' M';
            }
            // end : add checkin distance : sudhanshu : 04 march 2024:

            $data .= '"' . $checkinData->employee_code . '"';
            $data .= "\t";
            
            $data .= '"' . $checkinData->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->sal_zone . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->sal_state . '"';
            $data .= "\t";
          
            $data .= '"' . $checkinData->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->group_name . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->channel_name . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->relation . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->type_name . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->contact_person . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->contact_number . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->ret_zone . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->ret_state . '"';
            $data .= "\t";
        
            $data .= '"' . $checkinData->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->city_name . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->retailer_location . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->purpose . '"';
            $data .= "\t";
            $data .= '"' . $checkin_date . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->checkin_time . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->checkout_time . '"';
            $data .= "\t";
            $data .= '"' . $timeSpent . '"';
            $data .= "\t";
            $data .= '"' . $distanceInKiloMeters . '"';
            $data .= "\t";
            $data .= '"' . $distanceInMeters . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"check_in_out_report.xls\"");
    echo $data;
    exit;
}

//Todo Start : Jatin : 9th March 2023 Salesman State distrcit city combination

if (isset($_GET['export_salesman_state_district_city'])) {
    $data = "" . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['salesman'] . " Code\tState Name\tDistrict Name \t City Name\n";
    $auRec = $_objAdmin->_getSelectList('`table_salesman_state_district_city_mapping` as sdc left join table_salesman as ts on ts.salesman_id = sdc.salesman_id left join state as s on s.state_id = sdc.state_id left join city as c on c.city_id = sdc.district_id left join table_location as tl on tl.location_id=sdc.city_id ', "ts.salesman_name, ts.employee_code, s.state_name as state ,c.city_name as district ,tl.location_name as city", '', " ORDER BY sdc.mapping_id ASC ");
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->district . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->city . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['salesman'] . "_State_district_city_Mapping List.xls\"");
    echo $data;
    exit;
}
//Todo End : Jatin : 9th March 2023 Salesman State distrcit city combination

//Todo Start : Jatin : 15th March 2023 Dynamic product report
if (isset($_GET['export_dynamic_product_report'])) {
    $data = "" . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\t Zone\tState\tCity\t" .
        $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['retailer'] . " Code\t" . $AliaseUsers['retailer'] . " Channel\t" . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['salesman'] . " Code\tOrder No.\tCategory Name\tItem Name\tItem Code\tBrand Name\tItem ERP Code\tPrice\tQuantity\tTotal\tDate of Order\tTime of Order\tRemarks\n";
    $sort = " ORDER BY date_of_order desc,time_of_order desc";

    $condi = '';
    $_objArrayList = new ArrayList();
    $salsList = $_objArrayList->SalesmanArrayList();
    $salesman = $_objArrayList->getSalesCondition($salsList);
    if (isset($_SESSION['fil_salesman']) && !empty($_SESSION['fil_salesman']) && $_SESSION['fil_salesman'] > 0) {
        $salesman = " and s.salesman_id IN (" . $_SESSION['fil_salesman'] . ")  ";
    } else if (isset($_SESSION['fil_salesman_manager']) && ($_SESSION['fil_salesman_manager'] > 0)) {
        $salesmanManagerId = $_SESSION['fil_salesman_manager'];
        $account_id = $_SESSION['accountId'];
        $res = $_objAdmin->_getSelectList2('table_salesman_hierarchy_relationship AS SHR 
    LEFT JOIN table_salesman_hierarchy AS SH ON SH.hierarchy_id = SHR.hierarchy_id
    LEFT JOIN table_salesman AS s ON s.salesman_id = SHR.salesman_id', 's.salesman_id,SH.hierarchy_id,SH.sort_order', '', " SH.account_id=" . $account_id . " AND SHR.salesman_id = $salesmanManagerId ORDER BY SH.sort_order ASC ");
        if (is_array($res) && (count($res) > 0)) {
            $sortOrder = $res[0]->sort_order;
            $getBottomUsersIdArr = $_objArrayList->getSalesmansBottomUsers(array($salesmanManagerId), $sortOrder, $account_id);

            if (is_array($getBottomUsersIdArr) && (count($getBottomUsersIdArr) > 0)) {
                $bottomUsersIds = implode(',', $getBottomUsersIdArr);
            }

            $salesman = " AND s.salesman_id IN($bottomUsersIds) ";
        }
    } else if (isset($_SESSION['fil_salesman_designation']) && ($_SESSION['fil_salesman_designation'] > 0)) {
        $account_id = $_SESSION['accountId'];
        $getDesignationWiseBottomUsersIdArr = $_objArrayList->getDesignationWiseBottomUsers($_SESSION['fil_salesman_designation'], $account_id);

        if (is_array($getDesignationWiseBottomUsersIdArr) && (count($getDesignationWiseBottomUsersIdArr) > 0)) {
            $bottomUsersIds = implode(',', $getDesignationWiseBottomUsersIdArr);
            $salesman = " AND s.salesman_id IN($bottomUsersIds) ";
        }
    }

    if (($_SESSION['salesmanId'] > 0) && ($_SESSION['role_id'] > 0)) {
        $RoleBrands = $_objAdmin->getUserRoleBrand();
        if (!empty($RoleBrands)) {
            $salesman = " AND b.brand_id IN(" . $RoleBrands . ")";
        }
    }


    if (isset($_SESSION['fil_category']) && !empty($_SESSION['fil_category']) && $_SESSION['fil_category'] > 0) {
        $condi .= " AND c.category_id = '" . $_SESSION['fil_category'] . "' ";
    }
    if (isset($_SESSION['fil_item']) && !empty($_SESSION['fil_item']) && $_SESSION['fil_item'] > 0) {
        $condi .= " AND D.item_id = '" . $_SESSION['fil_item'] . "' ";
    }
    if (isset($_SESSION['fil_distributor']) && !empty($_SESSION['fil_distributor']) && $_SESSION['fil_distributor'] > 0) {
        $condi .= " AND O.distributor_id = '" . $_SESSION['fil_distributor'] . "' ";
    }
    if (isset($_SESSION['fil_retailer']) && !empty($_SESSION['fil_retailer']) && $_SESSION['fil_retailer'] > 0) {
        $condi .= " AND O.retailer_id = '" . $_SESSION['fil_retailer'] . "'  ";
    }
    if (isset($_SESSION['fil_from']) && !empty($_SESSION['fil_from'])) {
        $fromdate = date('Y-m-d', strtotime($_SESSION['fil_from']));
    } else {
        $fromdate = date('Y-m-d');
    }
    if (isset($_SESSION['fil_to']) && !empty($_SESSION['fil_to'])) {
        $todate = date('Y-m-d', strtotime($_SESSION['fil_to']));
    } else {
        $todate = date('Y-m-d');
    }
    if (isset($_SESSION['fil_month']) && !empty($_SESSION['fil_month']) && isset($_SESSION['fil_year']) && !empty($_SESSION['fil_year'])) {
        $fromdate = date('Y-m-d', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
        $todate = date('Y-m-t', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
    }
    $queryConditions = $condi . $salesman . " and  O.date_of_order BETWEEN $fromdate and $todate ";
//    echo "<pre>";print_r($queryConditions);die;

//    $groupby = " GROUP BY D.item_id having D.item_id!='' ";
    $where = " D.type=1 and O.account_id='" . $_SESSION['accountId'] . "' $brandCnd  $queryConditions ";
    $auRec = $_objAdmin->_getSelectList2('table_order_detail AS D 
		LEFT JOIN table_order AS O ON D.order_id = O.order_id
		LEFT JOIN table_item AS I ON D.item_id = I.item_id
		LEFT JOIN table_brands as b ON b.brand_id=I.brand_id
		LEFT JOIN table_category AS c ON c.category_id = I.category_id 
		LEFT JOIN table_price AS P ON D.item_id = P.item_id
		LEFT JOIN table_salesman AS s ON O.salesman_id = s.salesman_id
		LEFT JOIN table_retailer AS R ON O.retailer_id = R.retailer_id
		LEFT JOIN table_retailer_channel_master as cm ON cm.channel_id=R.channel_id
		LEFT JOIN table_distributors AS Dis ON O.distributor_id = Dis.distributor_id
		LEFT JOIN state as st on st.state_id=Dis.state
		LEFT JOIN table_zone_state_mapping as szsm on szsm.state_id = Dis.state and szsm.account_id = Dis.account_id
        LEFT JOIN table_zone as sz on sz.zone_id = szsm.zone_id
		LEFT JOIN city as ct on ct.city_id=Dis.city',
        'D.price, D.quantity, D.total,R.new, I.item_name,I.item_code,b.brand_name,cm.channel_name,I.item_erp_code,P.item_mrp, O.order_id, s.salesman_name,s.employee_code, Dis.distributor_name,Dis.distributor_code,R.retailer_name,R.retailer_code,c.category_name, O.date_of_order, O.time_of_order,st.state_name,ct.city_name,sz.zone_name, D.remarks', '', $where . $sort);
    $remove = array("\n", "\r\n", "\r");
    for ($i = 0; $i < count($auRec); $i++) {
//        if ($auRec[$i]->new == "1") {
//            $retailer_type = 'New Retailer';
//        } else {
//            $retailer_type = 'Existing Retailer';
//        }
        $data .= "" . $auRec[$i]->distributor_name . "\t"
            . $auRec[$i]->distributor_code . "\t"
            . $auRec[$i]->zone_name . "\t"
            . $auRec[$i]->state_name . "\t"
            . $auRec[$i]->city_name . "\t"
            . $auRec[$i]->retailer_name . "\t"
            . $auRec[$i]->retailer_code . "\t"
            . $auRec[$i]->channel_name . "\t"
            . $auRec[$i]->salesman_name . "\t"
            . $auRec[$i]->employee_code . "\t"
            . $auRec[$i]->order_id . "\t"
            . $auRec[$i]->category_name . "\t"
            . ucwords(addslashes(preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace($remove, '', $auRec[$i]->item_name)))) . "\t"
            . ucwords(addslashes(preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace($remove, '', $auRec[$i]->item_code)))) . "\t"
            . ucwords(addslashes(preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace($remove, '', $auRec[$i]->brand_name)))) . "\t"
            . ucwords(addslashes(preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace($remove, '', $auRec[$i]->item_erp_code)))) . "\t"
            . $auRec[$i]->price . "\t"
            . $auRec[$i]->quantity . "\t"
            . $auRec[$i]->total . "\t"
            . $_objAdmin->_changeDate($auRec[$i]->date_of_order) . "\t"
            . $auRec[$i]->time_of_order . "\t"
            . ucwords(addslashes(preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace($remove, '', $auRec[$i]->remarks)))) . "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Product Report.xls\"");
    echo $data;
    exit;
}
//Todo End : Jatin : 15th March 2023 Dynamic product report

//Todo Start : Jatin : 15th March 2023 Distributor Wise Item Price export
if (isset($_GET['export_distributor_wise_item_price'])) {
    $data = "" . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\tProduct Name\tProduct Code\tBrand Name\tPrice\tStatus\tCreated At\tUpdated At\n";
    //Added condition for role based access at brand lavel.
    $RoleBrands = $_objAdmin->getUserRoleBrand();
    $brandCnd = '';
    if (!empty($RoleBrands)) {
        $brandCnd = " AND b.brand_id IN(" . $RoleBrands . ")";
    }
    //Todo Start : sudhanshu 13 june 2024 : add status filter
    $statusCondi = '';
    if (isset($_SESSION['MasDisItmPrice']) && $_SESSION['MasDisItmPrice'] != 'all' && $_SESSION['MasDisItmPrice'] != '') {
        $statusCondi = " msi.status ='" . $_SESSION['MasDisItmPrice'] . "'";
    }
    //Todo End : sudhanshu 13 june 2024 : add status filter

    $where = " $statusCondi $brandCnd";
    $auRec = $_objAdmin->_getSelectList('table_distributor_wise_item_price as msi
INNER JOIN table_distributors as d ON d.distributor_id = msi.distributor_id
INNER JOIN table_item as it ON it.item_id = msi.item_id
left join table_brands as b on b.brand_id = it.brand_id
', "msi.id as price_id,msi.distributor_id,d.distributor_name,d.distributor_code,
msi.item_id,it.item_code,it.item_name,b.brand_name,msi.price,msi.created_at,msi.updated_at,msi.status", '',
        $where . " ORDER BY d.distributor_name ASC, it.item_name ASC");
    if (is_array($auRec) && (count($auRec) > 0)) {
        foreach ($auRec as $key => $priceData) {
            $created_at = date('Y-m-d H:i', strtotime($priceData->created_at));
            $updated_at = date('Y-m-d H:i', strtotime($priceData->updated_at));
            $status = ($priceData->status == 'A') ? "Active" : "Inactive";
            $data .= '"' . $priceData->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $priceData->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $priceData->item_name . '"';
            $data .= "\t";
            $data .= '"' . $priceData->item_code . '"';
            $data .= "\t";
            $data .= '"' . $priceData->brand_name . '"';
            $data .= "\t";
            $data .= '"' . $priceData->price . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\t";
            $data .= '"' . $created_at . '"';
            $data .= "\t";
            $data .= '"' . $updated_at . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['distributor'] . "_Wise_Product_Price.xls\"");
    echo $data;
    exit;
}
//Todo End : Jatin : 15th March 2023 Distributor Wise Item Price export

//Todo Start : Jatin : 16th March 2023 Distributor State Wise Item Price export
if (isset($_GET['export_dis_statewise_item_price_list'])) {
    $data = "" . $AliaseUsers['distributor'] . " State Name\tProduct Name\tProduct Code\tBrand Name\tPrice\tStatus\tCreated At\tUpdated At\n";
    $sort = " ORDER BY st.state_name ASC, it.item_name ASC";
    //Todo Start : sudhanshu 13 june 2024 : add status filter
    $statusCondi = '';
    if (isset($_SESSION['MasDisItmPrice']) && $_SESSION['MasDisItmPrice'] != 'all' && $_SESSION['MasDisItmPrice'] != '') {
        $statusCondi = " msi.status ='" . $_SESSION['MasDisItmPrice'] . "'";
    }
    //Todo End : sudhanshu 13 june 2024 : add status filter
    $auRec = $_objAdmin->_getSelectList('table_distributor_state_wise_item_price as msi
INNER JOIN state as st ON st.state_id = msi.dis_state_id
INNER JOIN table_item as it ON it.item_id = msi.item_id
INNER JOIN table_brands as b ON b.brand_id = it.brand_id', "msi.id as price_id,msi.dis_state_id,st.state_name,msi.item_id,it.item_code,it.item_name,msi.price,msi.created_at,msi.updated_at,msi.status,b.brand_name", '', $statusCondi . $sort);
    if (is_array($auRec) && (count($auRec) > 0)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $status = ($auRec[$i]->status == 'A') ? "Active" : "Inactive";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->brand_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->price . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\t";
            $data .= '"' . date('Y-m-d H:i', strtotime($auRec[$i]->created_at)) . '"';
            $data .= "\t";
            $data .= '"' . ((isset($auRec[$i]->updated_at) && !empty($auRec[$i]->updated_at)) ? date('Y-m-d H:i', strtotime($auRec[$i]->updated_at)) : "") . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['distributor'] . "_statewise_item_price_list.xls\"");
    echo $data;
    exit;
}
//Todo End : Jatin : 23th March 2023 Distributor State Wise Item Price export

//Todo Start : Jatin : 23th March 2023 Dynamic RetopeningStockBy date report export
if (isset($_GET['export_dynamic_retailer_opening_stock'])) {
    $data = " " . $AliaseUsers['salesman'] . " Code\t" . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['salesman'] . " State\t" . $AliaseUsers['salesman'] . " Zone\t" . $AliaseUsers['retailer'] . " Code\t " . $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['retailer'] . " State\t" . $AliaseUsers['retailer'] . " Zone\t " . $AliaseUsers['distributor'] . " Code\t " . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['retailer'] . " Channel\t" . $AliaseUsers['retailer'] . " Display Outlet\tCategory\t Item\t Item Code\tBrand\t Item Grade\t Quantity\tStock Value (PTR)\tStock Value (MRP)\tDate\t Time\t Previous Available Stock\tSale\n";

    $sort = " ORDER BY date_of_order desc,time_of_order desc";

    $salesmanCnd = '';
//    $salCond = '';

    if (isset($_SESSION['fil_salesman']) && $_SESSION['fil_salesman'] > 0) {
        $salesmanCnd .= ' AND s.salesman_id = "' . $_SESSION['fil_salesman'] . '"';
    } else if (isset($_SESSION['fil_salesman_manager']) && ($_SESSION['fil_salesman_manager'] > 0)) {
        $salesmanManagerId = $_SESSION['fil_salesman_manager'];
        $account_id = $_SESSION['accountId'];
        $res = $_objAdmin->_getSelectList2('table_salesman_hierarchy_relationship AS SHR 
    LEFT JOIN table_salesman_hierarchy AS SH ON SH.hierarchy_id = SHR.hierarchy_id
    LEFT JOIN table_salesman AS s ON s.salesman_id = SHR.salesman_id', 's.salesman_id,SH.hierarchy_id,SH.sort_order', '', " SH.account_id=" . $account_id . " AND SHR.salesman_id = $salesmanManagerId ORDER BY SH.sort_order ASC ");
        $_objArrayList = new ArrayList();
        if (is_array($res) && (count($res) > 0)) {
            $sortOrder = $res[0]->sort_order;
            $getBottomUsersIdArr = $_objArrayList->getSalesmansBottomUsers(array($salesmanManagerId), $sortOrder,
                $account_id);

            if (is_array($getBottomUsersIdArr) && (count($getBottomUsersIdArr) > 0)) {
                $bottomUsersIds = implode(',', $getBottomUsersIdArr);
            }

//            $salCond .= " AND dcc.salesman_id IN($bottomUsersIds) ";
            $salesmanCnd = " AND s.salesman_id IN($bottomUsersIds) ";
        }
    } else if (isset($_SESSION['fil_salesman_designation']) && ($_SESSION['fil_salesman_designation'] > 0)) {
        $account_id = $_SESSION['accountId'];
        $_objArrayList = new ArrayList();
        $getDesignationWiseBottomUsersIdArr = $_objArrayList->getDesignationWiseBottomUsers($_SESSION['fil_salesman_designation'], $account_id);

        if (is_array($getDesignationWiseBottomUsersIdArr) && (count($getDesignationWiseBottomUsersIdArr) > 0)) {
            $bottomUsersIds = implode(',', $getDesignationWiseBottomUsersIdArr);
            $salesmanCnd = " AND s.salesman_id IN($bottomUsersIds) ";
        }
    } else {
        $salesmanCnd .= $_SESSION['salsInCond'];
    }
    if (isset($_SESSION['fil_salesman_zone']) && $_SESSION['fil_salesman_zone'] > 0) {
//        $salCond .= ' AND rz1.zone_id = "' . $_SESSION['fil_salesman_zone'] . '"';
        $salesmanCnd .= ' AND rz1.zone_id = "' . $_SESSION['fil_salesman_zone'] . '"';
    }
    if (isset($_SESSION['fil_retailer_zone']) && $_SESSION['fil_retailer_zone'] > 0) {
//        $salCond .= ' AND rz.zone_id = "' . $_SESSION['fil_retailer_zone'] . '"';
        $salesmanCnd .= ' AND rz.zone_id = "' . $_SESSION['fil_retailer_zone'] . '"';
    }

    if (isset($_SESSION['fil_salesman_state']) && $_SESSION['fil_salesman_state'] > 0) {
//        $salCond .= ' AND ss.state = "' . $_SESSION['fil_salesman_state'] . '"';
        $salesmanCnd .= ' AND ss.state = "' . $_SESSION['fil_salesman_state'] . '"';
    }
    if (isset($_SESSION['fil_retailer']) && $_SESSION['fil_retailer'] > 0) {
//        $salCond .= ' AND r.retailer_id = "' . $_SESSION['fil_retailer'] . '"';
        $salesmanCnd .= ' AND r.retailer_id = "' . $_SESSION['fil_retailer'] . '"';
    }
    if (!isset($_SESSION['fil_from']) && empty($_SESSION['fil_from'])) {
        $_SESSION['fil_from'] = date('d M Y');
    }

    if (!isset($_SESSION['fil_to']) && empty($_SESSION['fil_to'])) {
        $_SESSION['fil_to'] = date('d M Y');
    }
    if (isset($_SESSION['fil_month']) && !empty($_SESSION['fil_month']) && isset($_SESSION['fil_year']) && !empty($_SESSION['fil_year'])) {
        $_SESSION['fil_from'] = date('Y-m-d', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
        $_SESSION['fil_to'] = date('Y-m-t', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
    }


    if (isset($_SESSION['userLoginType']) && in_array($_SESSION['userLoginType'], array(6, 7, 8, 9))) {
        $condwhere = $_objAdmin->getSalesMenID();
    }

//    $where = " ot.ostype='R' $retailer $fromdate $todate ";
    $where = " ot.ostype='R' $salesmanCnd and ot.date_of_order between '" . date('Y-m-d', strtotime($_SESSION['fil_from'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['fil_to'])) . "' ";
//    if (isset($_SESSION['salsInCond']) && !empty($_SESSION['salsInCond'])) {
//        $salesman = $_SESSION['salsInCond'];
//    }
    $auRec = $_objAdmin->_getSelectList('table_order_os AS ot
		  	LEFT JOIN table_order_detail_os AS tod ON tod.os_id=ot.os_id
			LEFT JOIN table_retailer AS r ON r.retailer_id=ot.retailer_id
			LEFT JOIN table_distributors as d on d.distributor_id = r.distributor_id 
			LEFT JOIN state as rs ON rs.state_id = r.state
			LEFT JOIN table_zone_state_mapping as zsm ON zsm.state_id = r.state AND zsm.account_id = r.account_id
			LEFT JOIN table_zone as rz ON rz.zone_id = zsm.zone_id
			LEFT JOIN table_salesman AS s ON s.salesman_id=ot.salesman_id
			LEFT JOIN state as ss ON ss.state_id = s.state
			LEFT JOIN table_zone_state_mapping as zsm1 ON zsm1.state_id = s.state AND zsm1.account_id = s.account_id
			LEFT JOIN table_zone as rz1 ON rz1.zone_id = zsm1.zone_id
			LEFT JOIN table_item AS i ON i.item_id=tod.item_id
            LEFT JOIN table_grade as g on g.grade_id = i.grade_id
            LEFT JOIN table_brands as b on b.brand_id=i.brand_id
			LEFT JOIN table_price AS p ON p.item_id=tod.item_id
			LEFT JOIN table_category AS c ON c.category_id=i.category_id
			LEFT JOIN table_retailer_channel_master AS cm on cm.channel_id=r.channel_id', "ot.*,tod.*,r.retailer_name,r.retailer_code,rs.state_name as retailer_state,rz.zone_name as retailer_zone,cm.channel_name,r.display_outlet,s.salesman_name,s.employee_code,d.distributor_name,d.distributor_code,ss.state_name as salesman_state,rz1.zone_name as salesman_zone ,i.item_name,i.item_code,c.category_name,(p.item_mrp * tod.quantity) as stockValuePTR, (p.item_dp * tod.quantity) as stockValueMRP,g.grade_name,b.brand_name", '', $where . $condwhere . $sort, '');
//echo "<pre>";
//print_R($auRec);die;
    for ($i = 0; $i < count($auRec); $i++) {
        if ($auRec[$i]->display_outlet == 'Y') {
            $outlet = 'Yes';
        } elseif ($auRec[$i]->display_outlet == 'No') {
            $outlet = 'No';
        } else {
            $outlet = '';
        }

//        $closingStock = $_objAdmin->_getSelectList("table_order_os AS ot
//		  LEFT JOIN table_order_detail_os AS tod ON tod.os_id=ot.os_id
//		  LEFT JOIN table_order AS O ON O.salesman_id = ot.salesman_id AND O.retailer_id = ot.retailer_id LEFT JOIN table_order_detail AS OD ON OD.order_id = O.order_id", "tod.quantity AS closing_stock ,OD.quantity AS order_quantity ", "", "ot.salesman_id =" . $auRec[$i]->salesman_id . " AND ot.retailer_id =" . $auRec[$i]->retailer_id . " AND ot.date_of_order <='" . $auRec[$i]->date_of_order . "' AND tod.item_id = '" . $auRec[$i]->item_id . "' AND O.order_status!='D' ORDER BY ot.os_id, O.order_id DESC LIMIT 1,1");

//        $closingStock = $_objAdmin->_getSelectList("table_order_os AS ot
//		  LEFT JOIN table_order_detail_os AS tod ON tod.os_id=ot.os_id
//		  LEFT JOIN table_order AS O ON O.salesman_id = ot.salesman_id AND O.retailer_id = ot.retailer_id
//		  LEFT JOIN table_order_detail AS OD ON OD.order_id = O.order_id", "tod.quantity AS closing_stock ,OD.quantity AS order_quantity ", "", " ot.salesman_id =" . $auRec[$i]->salesman_id . " AND ot.retailer_id ='" . $auRec[$i]->retailer_id . "' AND ot.date_of_order <='" . $auRec[$i]->date_of_order . "' AND tod.item_id = '" . $auRec[$i]->item_id . "' AND O.order_status!='D' ORDER BY ot.os_id, O.order_id DESC LIMIT 1,1");

        $closingStock = $_objAdmin->_getSelectList("table_order_os AS ot
		  LEFT JOIN table_order_detail_os AS tod ON tod.os_id=ot.os_id
		  ", "tod.quantity ", "", " 
                 AND ot.retailer_id =" . $auRec[$i]->retailer_id . " AND tod.item_id = '" . $auRec[$i]->item_id . "'  AND os_detail_id < '" . $auRec[$i]->os_detail_id . "' ORDER BY ot.os_id desc limit 1 ");

        if (is_array($closingStock) && count($closingStock) > 0) {
            $closingstk = $closingStock[0]->quantity;
        } else {
            $closingstk = "NA";
        }
        //echo "<pre>";print_R($closingStock);


        $orderStock = $_objAdmin->_getSelectList("table_order AS O 
		  LEFT JOIN table_order_detail AS tod ON tod.order_id = O.order_id
		  ", "sum(tod.quantity) AS order_quantity  ", "", " AND O.retailer_id =" .
            $auRec[$i]->retailer_id . " AND O.date_of_order ='" . $auRec[$i]->date_of_order . "' AND tod.item_id = '" . $auRec[$i]->item_id . "'  ORDER BY O.order_id DESC ");

        $odrstk = (isset($orderStock[0]->order_quantity) && !empty($orderStock[0]->order_quantity)) ?
            $orderStock[0]->order_quantity : 0;

        $data .= "" . $auRec[$i]->employee_code . "\t" .
            $auRec[$i]->salesman_name . "\t" .
            $auRec[$i]->salesman_state . "\t" .
            $auRec[$i]->salesman_zone . "\t" .
            $auRec[$i]->retailer_code . "\t" .
            $auRec[$i]->retailer_name . "\t" .
            $auRec[$i]->retailer_state . "\t" .
            $auRec[$i]->retailer_zone . "\t" .
            $auRec[$i]->distributor_code . "\t" .
            $auRec[$i]->distributor_name . "\t" .
            $auRec[$i]->channel_name . "\t" .
            $outlet . "\t" .
            $auRec[$i]->category_name . "\t" . $auRec[$i]->item_name . "\t" . $auRec[$i]->item_code . "\t" . $auRec[$i]->brand_name . "\t" . $auRec[$i]->grade_name . "\t" . $auRec[$i]->quantity . "\t" . round($auRec[$i]->stockValuePTR, 2) . "\t" . round($auRec[$i]->stockValueMRP, 2) . "\t" . $_objAdmin->_changeDate($auRec[$i]->date_of_order) . "\t" . $auRec[$i]->time_of_order . "\t" . $closingstk . "\t" . $odrstk . "\n";
    }

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['retailer'] . " Available Stock.xls\"");
    echo $data;
    exit;
}
//Todo End : Jatin : 23th March 2023 Dynamic RetopeningStockBy date report export

//Todo Start: Jatin : 27th March 2023 tertiary order report export
if (isset($_GET['export_tertiary_order_report'])) {
    $data = "Activity Date\tOrder Id\t" . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['salesman'] . " Code\t Designation\t Reporting to\t" . $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['retailer'] . " Code\t" . $AliaseUsers['distributor'] . " Code\t" . $AliaseUsers['distributor'] . " Name  \tZone \tState \tDistrict \tCity \tItem Code\tItem Name\t Quantity\tItem Wise Total Amount\n";

    $salesman = $_SESSION['salsInCondi'];

    if (isset($_SESSION['SalAttList']) && !empty($_SESSION['SalAttList'])) {
        $salesmanCondi = " AND s.salesman_id='" . $_SESSION['SalAttList'] . "' ";
    } else {
        $salesmanCondi = $salesman;
    }

    $auRec = $_objAdmin->_getSelectList2('table_tertiary_order_detail as ttod
    LEFT JOIN table_tertiary_order as tto ON tto.order_id= ttod.order_id 
    left join table_item as ti on ti.item_id = ttod.item_id 
    left join table_salesman as s on s.salesman_id = tto.salesman_id 
    left JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id 
    left JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id 
    left join table_salesman AS S2 ON S2.salesman_id = SH.rpt_user_id 
    left join table_retailer as tr on tr.retailer_id = tto.retailer_id 
    Left join state as st On st.state_id = tr.state 
    left join table_zone_state_mapping as zsm on zsm.state_id = tr.state AND zsm.account_id = tr.account_id 
    left join table_zone as z on z.zone_id = zsm.zone_id 
    left join city as c on c.city_id = tr.city 
    left join table_location as tl on tl.location_id = tr.location_id 
    left join table_distributors as d on d.distributor_id = tr.distributor_id', 'tto.order_id,tto.date_of_order,s.salesman_name,tr.retailer_name,tr.retailer_code,st.state_name,c.city_name,tl.location_name,H.description AS designation, S2.salesman_name AS rptPerson,ti.item_code,ti.item_name,ttod.quantity,ttod.total,z.zone_name,d.distributor_name,d.distributor_code,s.employee_code', '', " tto.account_id = '" . $_SESSION['accountId'] . "' AND (tto.date_of_order BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromAttList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToAttList'])) . "')  $salesmanCondi GROUP BY ttod.order_detail_id ORDER BY tto.date_of_order DESC,ttod.order_detail_id ASC");

//    echo '<pre>';
//    print_r($productItemsDet);
//    die(' die here');

    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . $_objAdmin->_changeDate($auRec[$i]->date_of_order) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->order_id . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->designation . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->rptPerson . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->zone_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->quantity . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->total . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"tertiary_order_report.xls\"");
    echo $data;
    exit;
}
//Todo End : Jatin : 27th March 2023 tertiary order report export

// Todo Start : Sagar : 29th March 2023 : Export Available Tertiary Stocks
if (isset($_GET['export_available_tertiary_stock'])) {
    $data = $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['retailer'] . " Code \t" . $AliaseUsers['distributor'] . " Name \t" . $AliaseUsers['distributor'] . " Code \t Item Name\tItem Code\tItem MRP\tZone\tState\tDistrict\tCity\t Stock Quantity\tCreated At\tUpdated At\n";

    $where = " stk.stock_id > 0 ";

    if (isset($_SESSION['dealerIdav']) && !empty($_SESSION['dealerIdav']) && ($_SESSION['dealerIdav'] > 0)) {
        $where .= " AND stk.retailer_id = " . $_SESSION['dealerIdav'];
    } else {
        if (($_SESSION['userLoginType'] == 4) && ($_SESSION['retailerId'] > 0)) {
            $where .= " AND stk.retailer_id = " . $_SESSION['retailerId'];
        }

        if (($_SESSION['userLoginType'] == 5) && ($_SESSION['salesmanId'] > 0)) {
            $retIdArr = $_objAdmin->getRouteWiseRetailers($_SESSION['salesmanId'], $_SESSION['accountId']);

            if (is_array($retIdArr) && (count($retIdArr) > 0)) {
                $retIds = implode(',', $retIdArr);
                $where .= " AND stk.retailer_id IN($retIds) ";
            }
        }
    }

    if (isset($_SESSION['smcItmIdav']) && !empty($_SESSION['smcItmIdav']) && ($_SESSION['smcItmIdav'] > 0)) {
        $where .= " AND stk.item_id = " . $_SESSION['smcItmIdav'];
    }


    $auRec = $_objAdmin->_getSelectList('table_tertiary_stock as stk
LEFT JOIN table_retailer as r ON r.retailer_id = stk.retailer_id
LEFT JOIN table_distributors as d on d.distributor_id = r.distributor_id
LEFT JOIN table_item as itm ON itm.item_id = stk.item_id
LEFT JOIN table_price as p on p.item_id = itm.item_id
LEFT JOIN state as s on s.state_id = r.state 
LEFT JOIN table_zone_state_mapping as zsm on zsm.state_id=r.state AND zsm.account_id = r.account_id
LEFT JOIN table_zone as z on z.zone_id = zsm.zone_id 
LEFT JOIN table_location as l on l.location_id = r.location_id 
LEFT JOIN city as c on c.city_id = r.city', " stk.stock_id,r.retailer_id,r.retailer_name,r.retailer_code,itm.item_id,itm.item_name,itm.item_code,p.item_dp,stk.stock_qty,s.state_name,z.zone_name,c.city_name,d.distributor_name,d.distributor_code,l.location_name,stk.created_at,stk.updated_at", '', $where . " ORDER BY stk.stock_id ASC  ");

    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $createdAt = date('Y-m-d H:i', strtotime($auRec[$i]->created_at));
            $updatedAt = '';
            if (isset($auRec[$i]->updated_at) && !empty($auRec[$i]->updated_at)) {
                $updatedAt = date('Y-m-d H:i', strtotime($auRec[$i]->updated_at));
            }

            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_dp . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->zone_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->stock_qty . '"';
            $data .= "\t";
            $data .= '"' . $createdAt . '"';
            $data .= "\t";
            $data .= '"' . $updatedAt . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"available_tertiary_stock.xls\"");
    echo $data;
    exit;
}
// Todo End : Sagar : 29th March 2023 : Export Available Tertiary Stocks


// Todo Start : Sagar : 31st March 2023 : Export Tertiary Stock Ledger Report
if (isset($_GET['export_stock_ledger_report'])) {
    $data = "Transaction Date\t" . $AliaseUsers['retailer'] . " Code\t" . $AliaseUsers['retailer'] . " Name \t" .
        $AliaseUsers['distributor'] . " Code \t" . $AliaseUsers['distributor'] . " Name \tItem Name\tItem Code\tZone\tState\tDistrict\tCity\tTransaction Type\tStock Before Transaction\tRecieved Quantity\tStock After Transaction\n";

    if (isset($_SESSION['dismonth']) && $_SESSION['dismonth']) {
        $month = $_SESSION['dismonth'];
    } else {
        $month = date('m');
    }

    if (isset($_SESSION['disCyear']) && $_SESSION['disCyear']) {
        $year = $_SESSION['disCyear'];
    } else {
        $year = date('Y');
    }

    if (!empty($month) && !empty($year) && isset($_SESSION['dealerId']) && !empty($_SESSION['dealerId']) && (intval($_SESSION['dealerId']) > 0)) {
        $retId = $_SESSION['dealerId'];

        $startDate = date('Y-m-d', strtotime($year . '-' . $month . '-01'));
        $endDate = date('Y-m-t', strtotime($year . '-' . $month . '-01'));

        $itmCondi = '';
        if (!empty($_SESSION['smcItmId']) && (intval($_SESSION['smcItmId']) > 0)) {
            $itmCondi = ' AND stk.item_id = ' . $_SESSION['smcItmId'];
        }

        //get transactions
        $getTransactions = $_objAdmin->_getSelectList('table_tertiary_stock_activity as stk 
LEFT JOIN table_item as itm ON itm.item_id = stk.item_id
LEFT JOIN table_retailer as r ON r.retailer_id = stk.retailer_id
LEFT JOIN table_distributors as d on d.distributor_id = r.distributor_id
LEFT JOIN state as s on s.state_id = r.state 
LEFT JOIN table_zone_state_mapping as zsm on zsm.state_id =r.state AND zsm.account_id = r.account_id
LEFT JOIN table_zone as z on z.zone_id = zsm.zone_id 
LEFT JOIN table_location as l on l.location_id = r.location_id 
LEFT JOIN city as c on c.city_id = r.city', 'stk.*,itm.item_id,itm.item_name,itm.item_code,r.retailer_id,r.retailer_name,r.retailer_code,s.state_name,d.distributor_name,d.distributor_code,z.zone_name,c.city_name,l.location_name', '', " stk.retailer_id = $retId AND (stk.app_date BETWEEN '" . $startDate . "' AND '" . $endDate . "')  $itmCondi ORDER BY stk.item_id ASC,stk.app_date ASC,stk.app_time ASC,stk.created_at ASC ");

    }

    if (is_array($getTransactions) && (count($getTransactions) > 0)) {
        foreach ($getTransactions as $key => $cusOrdr) {
            if (strtolower($cusOrdr->activity_type) == 'stock_inward') {
                $activityType = 'Stock Inward';
                $stockB4Act = $cusOrdr->stock_before_activity;
                $stockQty = $cusOrdr->stock_qty;
                $stockAftrAct = $cusOrdr->stock_after_activity;

            } else if (strtolower($cusOrdr->activity_type) == 'sales_return') {
                $activityType = 'Sales Return';
                $stockB4Act = $cusOrdr->stock_before_activity;
                $stockQty = $cusOrdr->stock_qty;
                $stockAftrAct = $cusOrdr->stock_after_activity;

            } elseif (strtolower($cusOrdr->activity_type) == 'tertiary_order') {
                $activityType = 'Tertiary Sales Order';
                $stockB4Act = $cusOrdr->stock_before_activity;
                $stockQty = $cusOrdr->stock_qty;
                $stockAftrAct = $cusOrdr->stock_after_activity;
            } elseif (strtolower($cusOrdr->activity_type) == 'stock_edit') {
                $activityType = 'Stock Update';
                $stockB4Act = $cusOrdr->stock_before_activity;
                $stockQty = $cusOrdr->stock_qty;
                $stockAftrAct = $cusOrdr->stock_after_activity;
            } elseif (strtolower($cusOrdr->activity_type) == 'manual_remove') {
                $activityType = 'Manual Remove';
                $stockB4Act = $cusOrdr->stock_before_activity;
                $stockQty = $cusOrdr->stock_qty;
                $stockAftrAct = $cusOrdr->stock_after_activity;
            }

            $activityDate = (($cusOrdr->app_date != '') && ($cusOrdr->app_date != '0000-00-00')) ? date('d M Y H:i', strtotime($cusOrdr->app_date . ' ' . $cusOrdr->app_time)) : '';

            $data .= '"' . $activityDate . '"';
            $data .= "\t";
            $data .= '"' . $cusOrdr->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $cusOrdr->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $cusOrdr->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $cusOrdr->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $cusOrdr->item_name . '"';
            $data .= "\t";
            $data .= '"' . $cusOrdr->item_code . '"';
            $data .= "\t";
            $data .= '"' . $cusOrdr->zone_name . '"';
            $data .= "\t";
            $data .= '"' . $cusOrdr->state_name . '"';
            $data .= "\t";
            $data .= '"' . $cusOrdr->city_name . '"';
            $data .= "\t";
            $data .= '"' . $cusOrdr->location_name . '"';
            $data .= "\t";
            $data .= '"' . $activityType . '"';
            $data .= "\t";
            $data .= '"' . $stockB4Act . '"';
            $data .= "\t";
            $data .= '"' . $stockQty . '"';
            $data .= "\t";
            $data .= '"' . $stockAftrAct . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"stock_ledger_report.xls\"");
    echo $data;
    exit;
}
// Todo End : Sagar : 31st March 2023 : Export Tertiary Stock Ledger Report


// Todo Start : Sagar : 3rd April 2023 : Stock Inward Report
if (isset($_GET['export_stock_inward_report'])) {
    $data = "Transaction Date\t" . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['salesman'] . " Code \t" .
        $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['retailer'] . " Code \t " . $AliaseUsers['distributor'] . " Name \t" . $AliaseUsers['distributor'] . " Code \tItem Name\tItem Code\t Stock Qty\n";

    $startDate = date('Y-m-d', strtotime($_SESSION['disCyear'] . '-' . $_SESSION['dismonth'] . '-01'));
    $endDate = date('Y-m-t', strtotime($_SESSION['disCyear'] . '-' . $_SESSION['dismonth'] . '-01'));

    $where = " stk.activity_type = 'stock_inward' AND (stk.app_date BETWEEN '" . $startDate . "' AND '" . $endDate . "') ";

    if (!empty($_SESSION['SalAttList']) && (intval($_SESSION['SalAttList']) > 0)) {
        $where .= ' AND stk.salesman_id = ' . $_SESSION['SalAttList'];
    } else {
        $where .= $_SESSION['salesmanInCondit'];
    }

    if (!empty($_SESSION['dealerId']) && (intval($_SESSION['dealerId']) > 0)) {
        $where .= ' AND stk.retailer_id = ' . $_SESSION['dealerId'];
    } else {
        if (($_SESSION['userLoginType'] == 5) && ($_SESSION['salesmanId'] > 0)) {
            $retIdArr = $_objAdmin->getRouteWiseRetailers($_SESSION['salesmanId'], $_SESSION['accountId']);
            if (is_array($retIdArr) && (count($retIdArr) > 0)) {
                $retIds = implode(',', $retIdArr);
                $where .= " AND stk.retailer_id IN($retIds) ";
            }
        }
    }

    if (!empty($_SESSION['smcItmId']) && (intval($_SESSION['smcItmId']) > 0)) {
        $where .= ' AND stk.item_id = ' . $_SESSION['smcItmId'];
    }

    $where .= " ORDER BY stk.stock_activity_id DESC ";

    $auRec = $_objAdmin->_getSelectList('table_tertiary_stock_activity as stk
        LEFT JOIN table_salesman as s ON s.salesman_id = stk.salesman_id 
        LEFT JOIN table_item as itm ON itm.item_id = stk.item_id
        LEFT JOIN table_retailer as r ON r.retailer_id = stk.retailer_id
        LEFT JOIN table_distributors as d on d.distributor_id = r.distributor_id', 'stk.*,s.salesman_name,s.employee_code,r.retailer_name,r.retailer_code,itm.item_id,d.distributor_name,d.distributor_code,itm.item_name,itm.item_code', '', " $where ");

    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            //change date format : sudhanshu 11 march 2024
            $transDate = date('d M Y H:i', strtotime($auRec[$i]->app_date . ' ' . $auRec[$i]->app_time));

            $data .= '"' . $transDate . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->stock_qty . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Stock_Inward_Report.xls\"");
    echo $data;
    exit;
}
// Todo End : Sagar : 3rd April 2023 : Stock Inward Report


// Todo Start : Sagar : 14th April 2023 : Target Master List
if (isset($_GET['export_target_list']) && !empty($_GET['export_target_list'])) {
    $data = "Description\tTarget Type\tDuration\tTarget Value\tStart Date\tEnd Date\tTarget Status\n";
    $salesmanID = $_SESSION['salsList'];
    $cond = $_objArrayList->getFilterCondForRouteSchemeIncentiveTargets($salesmanID);

    $targetForCondi = '';
    $targetFor = ucfirst(trim($_GET['export_target_list']));
    if (strtolower($targetFor) == 'secondary') {
        $targetForCondi = " AND i.target_for = 'secondary' ";
    }

    if (strtolower($targetFor) == 'tertiary') {
        $targetForCondi = " AND i.target_for = 'tertiary' ";
    }
    //Todo Start : sudhanshu 13 june 2024 : add status filter
    $statusCondi = '';
    if (isset($_SESSION['MasSalTarget']) && $_SESSION['MasSalTarget'] != 'all' && $_SESSION['MasSalTarget'] != '') {
        $statusCondi = " AND i.status ='" . $_SESSION['MasSalTarget'] . "'";
    }
    //Todo End : sudhanshu 13 june 2024 : add status filter
    $where = " i.last_update_status!='Delete' $targetForCondi AND i.qualifiers_type=1 AND target_incentive_type=1 $statusCondi $cond ORDER BY i.target_incentive_id ASC";

    $auRec = $_objAdmin->_getSelectList('table_target_incentive as i 
		left join table_type as t on t.type_id=i.type_id 
		left join table_party_type as p on p.party_type_id=i.party_type_id 
		left join table_duration as d on d.dur_id=i.dur_id
		LEFT JOIN table_user_relationships AS ur ON ur.target_incentive_id = i.target_incentive_id 
		LEFT JOIN table_salesman AS s ON s.salesman_id = ur.salesman_id ',
        "i.*,t.type_description,p.party_description,d.dur_description", '', $where);

    if (is_array($auRec) && (count($auRec) > 0)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $startDate = date('Y-m-d', strtotime($auRec[$i]->start_date));
            $endDate = date('Y-m-d', strtotime($auRec[$i]->end_date));
            $status = ($auRec[$i]->status == 'A') ? "Active" : "Inactive";

            $data .= '"' . $auRec[$i]->description . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->type_description . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->dur_description . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->primary_values . '"';
            $data .= "\t";
            $data .= '"' . $startDate . '"';
            $data .= "\t";
            $data .= '"' . $endDate . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"$targetFor Target List.xls\"");
    echo $data;
    exit;
}
// Todo End : Sagar : 14th April 2023 : Target Master List

// Todo Start :Jatin : 13 April 2023 Dynamic ledger Report
if (isset($_GET['dynamic_export_stock_ledger_report'])) {
    $data = "Transaction Date\tTransaction Time\t" . $AliaseUsers['salesman'] . " Code\t" . $AliaseUsers['salesman'] . " Name\t" .
        $AliaseUsers['salesman'] . " Zone\t" . $AliaseUsers['salesman'] . " State\t" .
        $AliaseUsers['retailer'] . " Code\t" .
        $AliaseUsers['retailer'] . " Name\t" .
        $AliaseUsers['distributor'] . " Code\t" .
        $AliaseUsers['distributor'] . " Name\tItem Name\tItem Code\t" .
        $AliaseUsers['retailer'] . " Zone\t" .
        $AliaseUsers['retailer'] . " State\t" .
        $AliaseUsers['retailer'] . " District\t" .
        $AliaseUsers['retailer'] . " City\tTransaction Type\tStock Before Transaction\tRecieved Quantity\tStock After Transaction\n";

    // ---------------start dynamic filter condition-----------
    $salesmanCnd = '';
//    $salCond = '';

    if (isset($_SESSION['fil_salesman']) && $_SESSION['fil_salesman'] > 0) {
        $salesmanCnd = ' AND stk.salesman_id = "' . $_SESSION['fil_salesman'] . '"';
    } else if (isset($_SESSION['fil_salesman_manager']) && ($_SESSION['fil_salesman_manager'] > 0)) {
        $salesmanManagerId = $_SESSION['fil_salesman_manager'];
        $account_id = $_SESSION['accountId'];
        $res = $_objAdmin->_getSelectList2('table_salesman_hierarchy_relationship AS SHR 
    LEFT JOIN table_salesman_hierarchy AS SH ON SH.hierarchy_id = SHR.hierarchy_id
    LEFT JOIN table_salesman AS s ON s.salesman_id = SHR.salesman_id', 's.salesman_id,SH.hierarchy_id,SH.sort_order', '', " SH.account_id=" . $account_id . " AND SHR.salesman_id = $salesmanManagerId ORDER BY SH.sort_order ASC ");
        $_objArrayList = new ArrayList();
        if (is_array($res) && (count($res) > 0)) {
            $sortOrder = $res[0]->sort_order;
            $getBottomUsersIdArr = $_objArrayList->getSalesmansBottomUsers(array($salesmanManagerId), $sortOrder,
                $account_id);

            if (is_array($getBottomUsersIdArr) && (count($getBottomUsersIdArr) > 0)) {
                $bottomUsersIds = implode(',', $getBottomUsersIdArr);
            }

            $salesmanCnd = " AND ts.salesman_id IN($bottomUsersIds) ";
        }
    } else if (isset($_SESSION['fil_salesman_designation']) && ($_SESSION['fil_salesman_designation'] > 0)) {
        $account_id = $_SESSION['accountId'];
        $getDesignationWiseBottomUsersIdArr = $_objArrayList->getDesignationWiseBottomUsers($_SESSION['fil_salesman_designation'], $account_id);

        if (is_array($getDesignationWiseBottomUsersIdArr) && (count($getDesignationWiseBottomUsersIdArr) > 0)) {
            $bottomUsersIds = implode(',', $getDesignationWiseBottomUsersIdArr);
            $salesmanCnd = " AND stk.salesman_id IN($bottomUsersIds) ";
        }
    } else {
        $salesmanCnd .= $_SESSION['SalsInCondilr'];
    }
    if (isset($_SESSION['fil_salesman_zone']) && $_SESSION['fil_salesman_zone'] > 0) {
        $salesmanCnd .= ' AND zsm1.zone_id = "' . $_SESSION['fil_salesman_zone'] . '"';
    }
    if (isset($_SESSION['fil_salesman_state']) && $_SESSION['fil_salesman_state'] > 0) {
        $salesmanCnd .= ' AND ts.state= "' . $_SESSION['fil_salesman_state'] . '"';
    }
    if (isset($_SESSION['fil_item']) && !empty($_SESSION['fil_item'])) {
        $salesmanCnd .= " AND stk.item_id = '" . $_SESSION['fil_item'] . "' ";
    }
    if (isset($_SESSION['fil_retailer']) && $_SESSION['fil_retailer'] > 0) {
        $salesmanCnd .= ' AND stk.retailer_id = "' . $_SESSION['fil_retailer'] . '"';
    }
    if (isset($_SESSION['fil_retailer_state']) && $_SESSION['fil_retailer_state'] > 0) {
        $salesmanCnd .= ' AND r.state= "' . $_SESSION['fil_retailer_state'] . '"';
    }
    if (isset($_SESSION['fil_retailer_zone']) && $_SESSION['fil_retailer_zone'] > 0) {
        $salesmanCnd .= ' AND zsm.zone_id = "' . $_SESSION['fil_retailer_zone'] . '"';
    }
    // Date range , month and year
    if (!isset($_SESSION['fil_from']) && empty($_SESSION['fil_from'])) {
        $_SESSION['fil_from'] = date('d M Y');
    }

    if (!isset($_SESSION['fil_to']) && empty($_SESSION['fil_to'])) {
        $_SESSION['fil_to'] = date('d M Y');
    }
    if (isset($_SESSION['fil_month']) && !empty($_SESSION['fil_month']) && isset($_SESSION['fil_year']) && !empty($_SESSION['fil_year'])) {
        $_SESSION['fil_from'] = date('Y-m-d', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
        $_SESSION['fil_to'] = date('Y-m-t', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
    }

    //echo "<pre>";print_r($_SESSION);die;
    // -------------End dynamic filter condition------------

//get transactions
    $getTransactions = $_objAdmin->_getSelectList('table_tertiary_stock_activity as stk 
LEFT JOIN table_item as itm ON itm.item_id = stk.item_id
LEFT JOIN table_retailer as r ON r.retailer_id = stk.retailer_id 
LEFT JOIN table_distributors as d on d.distributor_id = r.distributor_id
LEFT JOIN state as st on st.state_id = r.state 
LEFT JOIN table_zone_state_mapping as zsm on zsm.state_id=r.state AND zsm.account_id = r.account_id 
LEFT JOIN table_zone as z on z.zone_id = zsm.zone_id 
LEFT JOIN table_location as l on l.location_id = r.location_id
LEFT JOIN table_salesman as s on s.salesman_id = stk.salesman_id
LEFT JOIN state as s1 on s1.state_id = s.state
LEFT JOIN table_zone_state_mapping as zsm1 on zsm1.state_id = s.state AND zsm1.account_id = s.account_id
LEFT JOIN table_zone as z1 on z1.zone_id = zsm1.zone_id 
LEFT JOIN city as c on c.city_id = r.city', 'stk.*,itm.item_id,itm.item_name,itm.item_code,r.retailer_id,r.retailer_name,r.retailer_code,st.state_name,z.zone_name,c.city_name,l.location_name,z1.zone_name as salesman_zone , s1.state_name as salesman_state, s.salesman_name,d.distributor_name,d.distributor_code
,s.employee_code', '', "   (stk.app_date BETWEEN '" . date('Y-m-d', strtotime($_SESSION['fil_from'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['fil_to'])) . "') $salesmanCnd ORDER BY stk.item_id ASC,stk.app_date ASC,stk.app_time ASC,stk.created_at ASC ");

    if (is_array($getTransactions) && (count($getTransactions) > 0)) {
        foreach ($getTransactions as $key => $cusOrdr) {
            if (strtolower($cusOrdr->activity_type) == 'stock_inward') {
                $activityType = 'Stock Inward';
                $stockB4Act = $cusOrdr->stock_before_activity;
                $stockQty = $cusOrdr->stock_qty;
                $stockAftrAct = $cusOrdr->stock_after_activity;

            } else if (strtolower($cusOrdr->activity_type) == 'sales_return') {
                $activityType = 'Sales Return';
                $stockB4Act = $cusOrdr->stock_before_activity;
                $stockQty = $cusOrdr->stock_qty;
                $stockAftrAct = $cusOrdr->stock_after_activity;

            } elseif (strtolower($cusOrdr->activity_type) == 'tertiary_order') {
                $activityType = 'Tertiary Sales Order';
                $stockB4Act = $cusOrdr->stock_before_activity;
                $stockQty = $cusOrdr->stock_qty;
                $stockAftrAct = $cusOrdr->stock_after_activity;
            }
            // change date format : sudhanshu 11 march 2024
            $activityDate = (($cusOrdr->app_date != '') && ($cusOrdr->app_date != '0000-00-00')) ? date('d M Y', strtotime($cusOrdr->app_date)) : '';
            $activityTime = (($cusOrdr->app_time != '') && ($cusOrdr->app_time != '00:00:00')) ? date('H:i', strtotime($cusOrdr->app_time)) : '';

            $data .= '"' . $activityDate . '"';
            $data .= "\t";
            $data .= '"' . $activityTime . '"';
            $data .= "\t";
            $data .= '"' . $cusOrdr->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $cusOrdr->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $cusOrdr->salesman_zone . '"';
            $data .= "\t";
            $data .= '"' . $cusOrdr->salesman_state . '"';
            $data .= "\t";
            $data .= '"' . $cusOrdr->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $cusOrdr->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $cusOrdr->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $cusOrdr->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $cusOrdr->item_name . '"';
            $data .= "\t";
            $data .= '"' . $cusOrdr->item_code . '"';
            $data .= "\t";
            $data .= '"' . $cusOrdr->zone_name . '"';
            $data .= "\t";
            $data .= '"' . $cusOrdr->state_name . '"';
            $data .= "\t";
            $data .= '"' . $cusOrdr->city_name . '"';
            $data .= "\t";
            $data .= '"' . $cusOrdr->location_name . '"';
            $data .= "\t";
            $data .= '"' . $activityType . '"';
            $data .= "\t";
            $data .= '"' . $stockB4Act . '"';
            $data .= "\t";
            $data .= '"' . $stockQty . '"';
            $data .= "\t";
            $data .= '"' . $stockAftrAct . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"stock_ledger_report.xls\"");
    echo $data;
    exit;
}
// Todo End :Jatin : 13 April 2023 Dynamic ledger Report

// Todo Start :Jatin : 13 April 2023 Dynamic Available Stock

if (isset($_GET['dynamic_export_available_tertiary_stock'])) {
    $data = $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['retailer'] . " Code \t" . $AliaseUsers['distributor'] . " Name \t" . $AliaseUsers['distributor'] . " Code \t Item Name\tItem Code\tZone\tState\tDistrict\tCity\t Stock Quantity\tCreated At\tCreated Time\tUpdated At\tUpdated Time\n";

    // ------------------Start dynamic filter ------------------
    $where = " stk.stock_id > 0 ";
    if (isset($_SESSION['fil_item']) && !empty($_SESSION['fil_item'])) {
        $where .= " AND stk.item_id = '" . $_SESSION['fil_item'] . "' ";
    }
    if (isset($_SESSION['fil_category']) && !empty($_SESSION['fil_category'])) {
        $where .= " AND itm.category_id = '" . $_SESSION['fil_category'] . "' ";
    }
    if (isset($_SESSION['fil_retailer_auto']) && $_SESSION['fil_retailer_auto'] > 0) {
        $where .= ' AND stk.retailer_id = "' . $_SESSION['fil_retailer_auto'] . '"';
    } else {
        if (($_SESSION['userLoginType'] == 4) && ($_SESSION['retailerId'] > 0)) {
            $where .= " AND stk.retailer_id = " . $_SESSION['retailerId'];
        }

        if (($_SESSION['userLoginType'] == 5) && ($_SESSION['salesmanId'] > 0)) {
            $retIdArr = $_objAdmin->getRouteWiseRetailers($_SESSION['salesmanId'], $_SESSION['accountId']);

            if (is_array($retIdArr) && (count($retIdArr) > 0)) {
                $retIds = implode(',', $retIdArr);
                $where .= " AND stk.retailer_id IN($retIds) ";
            }
        }
    }

    if (isset($_SESSION['fil_retailer_state']) && $_SESSION['fil_retailer_state'] > 0) {
        $where .= ' AND r.state= "' . $_SESSION['fil_retailer_state'] . '"';
    }
    if (isset($_SESSION['fil_retailer_zone']) && $_SESSION['fil_retailer_zone'] > 0) {
        $where .= ' AND zsm.zone_id = "' . $_SESSION['fil_retailer_zone'] . '"';
    }
    // Date range , month and year
//    if (!isset($_SESSION['fil_from']) && empty($_SESSION['fil_from'])) {
//        $_SESSION['fil_from'] = date('d M Y');
//    }
//
//    if (!isset($_SESSION['fil_to']) && empty($_SESSION['fil_to'])) {
//        $_SESSION['fil_to'] = date('d M Y');
//    }
//    if (isset($_SESSION['fil_month']) && !empty($_SESSION['fil_month']) && isset($_SESSION['fil_year']) && !empty($_SESSION['fil_year'])) {
//        $_SESSION['fil_from'] = date('Y-m-d', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
//        $_SESSION['fil_to'] = date('Y-m-t', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
//    }
    // ------------------End dynamic filter ------------------

//    if (isset($_SESSION['fil_from']) && !empty($_SESSION['fil_from']) && isset($_SESSION['fil_to']) && !empty($_SESSION['fil_to'])) {
//        $where .= " AND DATE(stk.created_at) BETWEEN '" . date('Y-m-d', strtotime($_SESSION['fil_from'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['fil_to'])) . "' ";
//    }


//    $auRec = $_objAdmin->_getSelectList('table_tertiary_stock as stk
//LEFT JOIN table_retailer as r ON r.retailer_id = stk.retailer_id
//LEFT JOIN table_distributors as d on d.distributor_id = r.distributor_id
//LEFT JOIN table_item as itm ON itm.item_id = stk.item_id
//LEFT JOIN state as s on s.state_id = r.state
//LEFT JOIN table_zone_state_mapping as zsm on zsm.state_id =r.state AND zsm.account_id = r.account_id
//LEFT JOIN table_zone as z on z.zone_id = zsm.zone_id
//LEFT JOIN table_location as l on l.location_id = r.location_id
//LEFT JOIN city as c on c.city_id = r.city', " stk.stock_id,r.retailer_id,r.retailer_name,r.retailer_code,itm.item_id,itm.item_name,itm.item_code,stk.stock_qty,s.state_name,z.zone_name,c.city_name,d.distributor_name,d.distributor_code,l.location_name,stk.created_at,stk.updated_at", '', $where . " ORDER BY stk.stock_id ASC ");

    $sort = " ORDER BY stk.stock_id ASC ";

    $auRec = $_objAdmin->_getSelectList('table_tertiary_stock as stk
LEFT JOIN table_retailer as r ON r.retailer_id = stk.retailer_id
LEFT JOIN table_distributors as d on d.distributor_id = r.distributor_id
LEFT JOIN table_item as itm ON itm.item_id = stk.item_id
LEFT JOIN state as s on s.state_id = r.state 
LEFT JOIN table_zone_state_mapping as zsm on zsm.state_id = r.state and zsm.account_id = r.account_id
LEFT JOIN table_zone as z on z.zone_id = zsm.zone_id 
LEFT JOIN table_location as l on l.location_id = r.location_id 
LEFT JOIN city as c on c.city_id = r.city', " stk.stock_id,r.retailer_id,r.retailer_name,r.retailer_code,itm.item_id,itm.item_name,itm.item_code,s.state_name,z.zone_name,c.city_name,d.distributor_name,d.distributor_code,l.location_name,stk.stock_qty,stk.created_at,stk.updated_at", '', $where . $sort);


//    echo '<pre>';
//    print_r($auRec);
//    die(' die here');

    if (is_array($auRec) && (count($auRec) > 0)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $createdTime = '';
            $createdAt = date('d M Y', strtotime($auRec[$i]->created_at));
            $createdTime = date('H:i', strtotime($auRec[$i]->created_at));
            $updatedAt = '';
            $updateTime = '';
            if (isset($auRec[$i]->updated_at) && !empty($auRec[$i]->updated_at) && $auRec[$i]->updated_at != '0000-00-00 00:00:00') {
                $updatedAt = date('d M Y', strtotime($auRec[$i]->updated_at));
                $updateTime = date('H:i', strtotime($auRec[$i]->updated_at));
            }

            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->zone_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->stock_qty . '"';
            $data .= "\t";
            $data .= '"' . $createdAt . '"';
            $data .= "\t";
            $data .= '"' . $createdTime . '"';
            $data .= "\t";
            $data .= '"' . $updatedAt . '"';
            $data .= "\t";
            $data .= '"' . $updateTime . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"dynamic_available_tertiary_stock.xls\"");
    echo $data;
    exit;
}

// Todo End :Jatin : 13 April 2023 Dynamic Available Stock

// Todo Start :Jatin : 13 April 2023 Dynamic tertiary order Report
if (isset($_GET['dynamic_export_tertiary_order_report'])) {
    $data = "Activity Date\tOrder Id\t" . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['salesman'] . " Code\tDesignation\t Reporting to\t" . $AliaseUsers['salesman'] . " Zone\t" . $AliaseUsers['salesman'] . " State\t" . $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['retailer'] . " Code\t" . $AliaseUsers['distributor'] . " Code\t" . $AliaseUsers['distributor'] . " Name  \t Zone \t State \t District \t City \tItem Code\tItem Name\t Quantity\tItem Wise Total Amount\n";

    $salesman = $_SESSION['salsInCondi'];
    $salesmanCnd = '';
    $salCond = '';

    if (isset($_SESSION['fil_salesman']) && $_SESSION['fil_salesman'] > 0) {
        $salesmanCnd = ' AND s.salesman_id = "' . $_SESSION['fil_salesman'] . '"';
    } else if (isset($_SESSION['fil_salesman_manager']) && ($_SESSION['fil_salesman_manager'] > 0)) {
        $salesmanManagerId = $_SESSION['fil_salesman_manager'];
        $account_id = $_SESSION['accountId'];
        $res = $_objAdmin->_getSelectList2('table_salesman_hierarchy_relationship AS SHR 
    LEFT JOIN table_salesman_hierarchy AS SH ON SH.hierarchy_id = SHR.hierarchy_id
    LEFT JOIN table_salesman AS s ON s.salesman_id = SHR.salesman_id', 's.salesman_id,SH.hierarchy_id,SH.sort_order', '', " SH.account_id=" . $account_id . " AND SHR.salesman_id = $salesmanManagerId ORDER BY SH.sort_order ASC ");
        $_objArrayList = new ArrayList();
        if (is_array($res) && (count($res) > 0)) {
            $sortOrder = $res[0]->sort_order;
            $getBottomUsersIdArr = $_objArrayList->getSalesmansBottomUsers(array($salesmanManagerId), $sortOrder, $account_id);

            if (is_array($getBottomUsersIdArr) && (count($getBottomUsersIdArr) > 0)) {
                $bottomUsersIds = implode(',', $getBottomUsersIdArr);
            }

            $salesmanCnd = " AND s.salesman_id IN($bottomUsersIds) ";
        }
    } else if (isset($_SESSION['fil_salesman_designation']) && ($_SESSION['fil_salesman_designation'] > 0)) {
        $account_id = $_SESSION['accountId'];
        $getDesignationWiseBottomUsersIdArr = $_objArrayList->getDesignationWiseBottomUsers($_SESSION['fil_salesman_designation'], $account_id);

        if (is_array($getDesignationWiseBottomUsersIdArr) && (count($getDesignationWiseBottomUsersIdArr) > 0)) {
            $bottomUsersIds = implode(',', $getDesignationWiseBottomUsersIdArr);
            $salesmanCnd = " AND s.salesman_id IN($bottomUsersIds) ";
        }
    } else {
        $salesmanCnd .= '';
    }
    if (isset($_SESSION['fil_salesman_zone']) && $_SESSION['fil_salesman_zone'] > 0) {
        $salesmanCnd .= ' AND z2.zone_id = "' . $_SESSION['fil_salesman_zone'] . '"';
    }
    if (isset($_SESSION['fil_salesman_state']) && $_SESSION['fil_salesman_state'] > 0) {
        $salesmanCnd .= ' AND s.state = "' . $_SESSION['fil_salesman_state'] . '"';
    }

    // Date range , month and year
    if (!isset($_SESSION['fil_from']) && empty($_SESSION['fil_from'])) {
        $_SESSION['fil_from'] = date('d M Y');
    }

    if (!isset($_SESSION['fil_to']) && empty($_SESSION['fil_to'])) {
        $_SESSION['fil_to'] = date('d M Y');
    }
    if (isset($_SESSION['fil_month']) && !empty($_SESSION['fil_month']) && isset($_SESSION['fil_year']) && !empty($_SESSION['fil_year'])) {
        $_SESSION['fil_from'] = date('Y-m-d', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
        $_SESSION['fil_to'] = date('Y-m-t', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
    }

    // -------------End dynamic filter condition------------

    $auRec = $_objAdmin->_getSelectList('table_tertiary_order as tto 
    LEFT JOIN table_tertiary_order_detail as ttod ON tto.order_id= ttod.order_id 
    LEFT JOIN table_item as ti on ti.item_id = ttod.item_id 
    LEFT JOIN table_salesman as s on s.salesman_id = tto.salesman_id 
    LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id 
    LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id 
    LEFT JOIN table_salesman AS S2 ON S2.salesman_id = SH.rpt_user_id 
    LEFT JOIN table_retailer as tr on tr.retailer_id = tto.retailer_id 
    LEFT JOIN state as st On st.state_id = tr.state 
    LEFT JOIN table_zone_state_mapping as zsm on zsm.state_id = tr.state AND zsm.account_id = tr.account_id
    LEFT JOIN table_zone as z on z.zone_id = zsm.zone_id 
    LEFT JOIN city as c on c.city_id = tr.city 
    LEFT JOIN table_location as tl on tl.location_id = tr.location_id 
    LEFT JOIN table_distributors as d on d.distributor_id = tr.distributor_id
    LEFT JOIN state as st2 on st2.state_id = s.state 
    LEFT JOIN table_zone_state_mapping as zsm2 on zsm2.state_id = s.state AND zsm2.account_id = s.account_id
    LEFT JOIN table_zone as z2 on z2.zone_id = zsm2.zone_id', 'tto.*,tto.date_of_order,s.salesman_name,tr.retailer_name,tr.retailer_code,st.state_name,c.city_name,tl.location_name,H.description AS designation, S2.salesman_name AS rptPerson,ti.item_code,ti.item_name,ttod.quantity,ttod.total,z.zone_name,d.distributor_name,d.distributor_code,st2.state_name as salesman_state,z2.zone_name as salesman_zone,s.employee_code', '', " (tto.date_of_order BETWEEN '" . date('Y-m-d', strtotime($_SESSION['fil_from'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['fil_to'])) . "') $salesman  $salesmanCnd  ORDER BY s.salesman_name DESC");

//    echo '<pre>';
//    print_r($productItemsDet);
//    die(' die here');

    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . $_objAdmin->_changeDate($auRec[$i]->date_of_order) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->order_id . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->designation . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->rptPerson . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_zone . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_state . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->zone_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->quantity . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->total . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"tertiary_order_report.xls\"");
    echo $data;
    exit;
}
// Todo End :Jatin : 13 April 2023 Dynamic tertiary order Report


//Todo Start : Jatin : 18 April 2023 : Export Retailer Wise Item code
if (isset($_GET['export_ret_wise_item_code'])) {
    $data = $AliaseUsers['retailer'] . " Code \t " . $AliaseUsers['retailer'] .
        " Name \tItem Code\tItem Name \t Brand\t Category\t " . $AliaseUsers['retailer'] .
        " Item Code\t Status\n";
    //Todo Start : sudhanshu 17 june 2024 : add status filter
    $statusCondi = '';
    if (isset($_SESSION['MasRetWiseItmCode']) && $_SESSION['MasRetWiseItmCode'] != 'all' && $_SESSION['MasRetWiseItmCode'] != '') {
        $statusCondi = " AND rtim.status ='" . $_SESSION['MasRetWiseItmCode'] . "'";
    }
    //Todo End : sudhanshu 17 june 2024 : add status filter
    $condi = " c.status='A' and i.account_id='" . $_SESSION['accountId'] . "' and i.item_type='I' $statusCondi ORDER BY i.item_name ASC";

    $auRec = $_objAdmin->_getSelectList2('table_retailer_wise_item_code as rtim
            left join table_retailer as r on r.retailer_id = rtim.retailer_id
			left join table_item as i ON i.item_id = rtim.item_id
			left join table_category as c on i.category_id = c.category_id 
			left join table_brands as b on b.brand_id=i.brand_id',
        "rtim.*,i.item_name,i.item_code,c.category_name,b.brand_name,r.retailer_name,r.retailer_code", '', " $condi ");

    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $status = ($auRec[$i]->status == 'A') ? "Active" : "Inactive";

            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->brand_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->category_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->ret_item_code . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['retailer'] . "_wise_item_code_list.xls\"");
    echo $data;
    exit;
}
//Todo End: Jatin  : 18 April 2023 : Export Retailer Wise Item code


// Todo Start : Sagar : 24th April 2023 : Export Salesman Attendance Report
if (isset($_GET['export_all_salesman_attendance_report'])) {
    $data = $AliaseUsers['salesman'] . " Code\t" . $AliaseUsers['salesman'] . " Name\tDesignation\tReporting To\tReporting Person\tZone\tState\tDistrict\tCity\tAttendance Type\tComment\tBattery Level\tDate\tDay\tIn Time\tOut Time\tWorking Hours\n";

    $salesman = $_SESSION['allSalsInCondi'];
    $daywork = array();

    $salCond = '';
    $salCond2 = '';
    if ($_SESSION['SalAttList'] != "") {
        $salCond = " and asa.salesman_id=" . $_SESSION['SalAttList'];
        $salCond2 = " and s.salesman_id=" . $_SESSION['SalAttList'];
    } else {
        $salCond = $salesman;
        $salCond2 = $salesman;
    }

    if (!isset($_SESSION['filter_on']) && empty($_SESSION['filter_on'])) {
        $salIdArr = [];
        $SalArr = $_objAdmin->_getSelectList('table_salesman as s 
                LEFT JOIN state as st on st.state_id = s.state
                LEFT JOIN city as ci on ci.city_id = s.city
                LEFT JOIN table_zone_state_mapping as szsm on szsm.state_id = s.state and szsm.account_id = s.account_id
LEFT JOIN table_zone as sz on sz.zone_id = szsm.zone_id 
                LEFT JOIN table_location as loc on loc.location_id = s.location
                LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
                LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
                LEFT JOIN table_salesman_hierarchy AS H2 ON H2.hierarchy_id = SH.rpt_hierarchy_id
                LEFT JOIN table_salesman AS S2 ON S2.salesman_id = SH.rpt_user_id', 's.salesman_id,s.employee_code,s.salesman_name,st.state_name,ci.city_name,sz.zone_name,loc.location_name,H.description AS des1,H2.description AS des2,S2.salesman_name AS rptPerson', '', " $salCond2 AND s.status='A' ORDER BY s.salesman_name ASC");

        if (is_array($SalArr) && count($SalArr) > 0) {
            foreach ($SalArr as $key => $dataSal) {
                $salIdArr[$dataSal->salesman_id] = $dataSal;
            }
        }

    } else {
        $SalArr = $_objAdmin->_getSelectList2('table_salesman as s 
                    LEFT JOIN table_activity_salesman_attendance as asa on s.salesman_id=asa.salesman_id
                LEFT JOIN table_activity_salesman_attendance as asa1 on asa1.salesman_id=asa.salesman_id and asa1.activity_date = asa.activity_date AND asa1.activity_type = 12  
                LEFT JOIN state as st on st.state_id = s.state
                LEFT JOIN table_zone_state_mapping as szsm on szsm.state_id = s.state and szsm.account_id = s.account_id
                LEFT JOIN table_zone as sz on sz.zone_id = szsm.zone_id
                LEFT JOIN city as ci on ci.city_id = s.city 
                LEFT JOIN table_location as loc on loc.location_id = s.location
                LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
                LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
                LEFT JOIN table_salesman_hierarchy AS H2 ON H2.hierarchy_id = SH.rpt_hierarchy_id
                LEFT JOIN table_salesman AS S2 ON S2.salesman_id = SH.rpt_user_id
               ', "asa.salesman_id,s.salesman_id,s.salesman_name,s.employee_code,asa.activity_date,		
                asa.activity_id as in_activity,
                H.description AS des1,st.state_name,sz.zone_name,ci.city_name,loc.location_name,H2.description AS des2,S2.salesman_name AS rptPerson
                ", '', " asa.activity_type = 11 AND s.account_id = '" . $_SESSION['accountId'] . "' AND (asa.activity_date BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromAttList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToAttList'])) . "')  $salCond ORDER BY asa.activity_date DESC");


        if (is_array($SalArr) && count($SalArr) > 0) {
            foreach ($SalArr as $key => $dataSal) {
                $salIdArr[$dataSal->salesman_id] = $dataSal;
            }
        }
    }

    $auAttSt = $_objAdmin->_getSelectList2('table_activity_salesman_attendance as asa
                left join table_activity_salesman_attendance as asa1 on asa1.salesman_id=asa.salesman_id and asa1.activity_date = asa.activity_date AND asa1.activity_type = 12
                left join table_salesman as s on s.salesman_id=asa.salesman_id 
                left join table_tags as tg on tg.tag_id = asa.attendance_type and tg.tag_type=4 and tg.account_id = s.account_id', "asa.salesman_id,asa.activity_date,		
                asa.start_time as attendance_start ,
                asa1.end_time as attendance_end,
                asa.battery_level,
                asa.lat as start_let,
                asa1.lat as end_let,		
                asa.image_url as in_image_url,
                asa1.image_url as out_image_url,
                asa.activity_id as in_activity,
                asa.comment,
                tg.tag_description,
                asa1.activity_id as out_activity", '', " asa.activity_type = 11 AND s.account_id = '" . $_SESSION['accountId'] . "' AND (asa.activity_date BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromAttList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToAttList'])) . "')  $salCond ORDER BY asa.activity_date DESC, attendance_start DESC");

    $attDataArr = [];
    $inactiveSalIdsArr = [];
    if (is_array($auAttSt) && count($auAttSt) > 0) {
        foreach ($auAttSt as $key1 => $data1) {
            $attDataArr[$data1->salesman_id][] = $data1;

            if (!array_key_exists($data1->salesman_id, $salIdArr)) {
                $inactiveSalIdsArr[] = $data1->salesman_id;
            }
        }
    }

    if (is_array($inactiveSalIdsArr) && (count($inactiveSalIdsArr) > 0)) {
        $inactiveSalIds = implode(',', array_values(array_unique($inactiveSalIdsArr)));

        $inactiveSalArr = $_objAdmin->_getSelectList('table_salesman as s 
                LEFT JOIN state as st on st.state_id = s.state
                LEFT JOIN city as ci on ci.city_id = s.city
                LEFT JOIN table_zone_state_mapping as szsm on szsm.state_id = s.state and szsm.account_id = s.account_id
                LEFT JOIN table_zone as sz on sz.zone_id = szsm.zone_id 
                LEFT JOIN table_location as loc on loc.location_id = s.location
                LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
                LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
                LEFT JOIN table_salesman_hierarchy AS H2 ON H2.hierarchy_id = SH.rpt_hierarchy_id
                LEFT JOIN table_salesman AS S2 ON S2.salesman_id = SH.rpt_user_id', 's.salesman_id,s.employee_code,s.salesman_name,st.state_name,ci.city_name,sz.zone_name,loc.location_name,H.description AS des1,H2.description AS des2,S2.salesman_name AS rptPerson', '', " s.salesman_id IN($inactiveSalIds) ORDER BY s.salesman_name ASC");

        if (is_array($inactiveSalArr) && count($inactiveSalArr) > 0) {
            foreach ($inactiveSalArr as $key2 => $inactiveSalData) {
                $salIdArr[$inactiveSalData->salesman_id] = $inactiveSalData;
            }
        }
    }


    if (is_array($salIdArr) && (count($salIdArr) > 0)) {
        foreach ($salIdArr as $key => $salesmanDataArr) {
            $salId = $salesmanDataArr->salesman_id;
            if (is_array($attDataArr[$salId]) && (count($attDataArr[$salId]) > 0)) {
                foreach ($attDataArr[$salId] as $key2 => $attendanceArr) {
                    $daywork[$attendanceArr->activity_date] = $attendanceArr->activity_date;
                    if (($attendanceArr->attendance_start != '') && ($attendanceArr->attendance_end != '') && ($attendanceArr->attendance_end != '00:00:00') && ($attendanceArr->attendance_start != '00:00:00')) {
                        $startDateTime = date('Y-m-d H:i:s', strtotime($attendanceArr->activity_date . ' ' . $attendanceArr->attendance_start));
                        $endDateTime = date('Y-m-d H:i:s', strtotime($attendanceArr->activity_date . ' ' . $attendanceArr->attendance_end));
                        $work_hours = dateDifference($startDateTime, $endDateTime);
                    } else {
                        $work_hours = "-";
                    }

                    $activityDate = date('Y-m-d', strtotime($attendanceArr->activity_date));
                    $activityDay = date("l", strtotime($attendanceArr->activity_date));
                    $attendance_start = '-';
                    if ($attendanceArr->attendance_start != '') {
                        $attendance_start = $attendanceArr->attendance_start;
                    }

                    $attendance_end = 'Out Time Not Available';
                    if ($attendanceArr->attendance_end != '') {
                        $attendance_end = $attendanceArr->attendance_end;
                    }

                 
                    $data .= '"' . $salesmanDataArr->employee_code . '"';
                    $data .= "\t";
                    $data .= '"' . $salesmanDataArr->salesman_name . '"';
                    $data .= "\t";
                    $data .= '"' . $salesmanDataArr->des1 . '"';
                    $data .= "\t";
                    $data .= '"' . $salesmanDataArr->des2 . '"';
                    $data .= "\t";
                    $data .= '"' . $salesmanDataArr->rptPerson . '"';
                    $data .= "\t";
                    $data .= '"' . $salesmanDataArr->zone_name . '"';
                    $data .= "\t";
                    $data .= '"' . $salesmanDataArr->state_name . '"';
                    $data .= "\t";
                    $data .= '"' . $salesmanDataArr->city_name . '"';
                    $data .= "\t";
                    $data .= '"' . $salesmanDataArr->location_name . '"';
                    $data .= "\t";
                    $data .= '"' . $attendanceArr->tag_description . '"';
                    $data .= "\t";
                    $data .= '"' . $attendanceArr->comment . '"';
                    $data .= "\t";
                    $data .= '"' . $attendanceArr->battery_level . '"';
                    $data .= "\t";
                    $data .= '"' . $activityDate . '"';
                    $data .= "\t";
                    $data .= '"' . $activityDay . '"';
                    $data .= "\t";
                    $data .= '"' . $attendance_start . '"';
                    $data .= "\t";
                    $data .= '"' . $attendance_end . '"';
                    $data .= "\t";
                    $data .= '"' . $work_hours . '"';
                    $data .= "\n";
                }
            } else {
                $na = 'N/A';
       
                $data .= '"' . $salesmanDataArr->employee_code . '"';
                $data .= "\t";
                $data .= '"' . $salesmanDataArr->salesman_name . '"';
                $data .= "\t";
                $data .= '"' . $salesmanDataArr->des1 . '"';
                $data .= "\t";
                $data .= '"' . $salesmanDataArr->des2 . '"';
                $data .= "\t";
                $data .= '"' . $salesmanDataArr->rptPerson . '"';
                $data .= "\t";
                $data .= '"' . $salesmanDataArr->zone_name . '"';
                $data .= "\t";
                $data .= '"' . $salesmanDataArr->state_name . '"';
                $data .= "\t";
                $data .= '"' . $salesmanDataArr->city_name . '"';
                $data .= "\t";
                $data .= '"' . $salesmanDataArr->location_name . '"';
                $data .= "\t";
                $data .= '"' . $na . '"';
                $data .= "\t";
                $data .= '"' . $na . '"';
                $data .= "\t";
                $data .= '"' . $na . '"';
                $data .= "\t";
                $data .= '"' . $na . '"';
                $data .= "\t";
                $data .= '"' . $na . '"';
                $data .= "\t";
                $data .= '"' . $na . '"';
                $data .= "\t";
                $data .= '"' . $na . '"';
                $data .= "\t";
                $data .= '"' . $na . '"';
                $data .= "\n";
            }
        }
        if ($_SESSION['SalAttList'] != "") {
            $emptyVal = '';
            $ttlDays = 'Total Worked Days :';
            $data .= '"' . $ttlDays . '"';
            $data .= "\t";
            $data .= '"' . count($daywork) . '"';
            $data .= "\t";
            $data .= '"' . $emptyVal . '"';
            $data .= "\t";
            $data .= '"' . $emptyVal . '"';
            $data .= "\t";
            $data .= '"' . $emptyVal . '"';
            $data .= "\t";
            $data .= '"' . $emptyVal . '"';
            $data .= "\t";
            $data .= '"' . $emptyVal . '"';
            $data .= "\t";
            $data .= '"' . $emptyVal . '"';
            $data .= "\t";
            $data .= '"' . $emptyVal . '"';
            $data .= "\t";
            $data .= '"' . $emptyVal . '"';
            $data .= "\t";
            $data .= '"' . $emptyVal . '"';
            $data .= "\t";
            $data .= '"' . $emptyVal . '"';
            $data .= "\t";
            $data .= '"' . $emptyVal . '"';
            $data .= "\t";
            $data .= '"' . $emptyVal . '"';
            $data .= "\t";
            $data .= '"' . $emptyVal . '"';
            $data .= "\t";
            $data .= '"' . $emptyVal . '"';
            $data .= "\n";
        }
    }


    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Salesman_Attendance_Report.xls\"");
    echo $data;
    exit;
}


if (isset($_GET['export_dynamic_all_salesman_attendance_report'])) {
    $data = $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['salesman'] . " Code\tDesignation\tReporting To\tReporting Person\tState\tDistrict\tCity\tAttendance Type\tComment\tBattery Level\tDate\tDay\tIn Time\tOut Time\tWorking Hours\n";

    $salesman = $_SESSION['allSalsInCondi'];
    $daywork = array();

    $salCond = '';
    $salCond2 = '';
//    if ($_SESSION['SalAttList'] != "") {
//        $salCond = " and asa.salesman_id=" . $_SESSION['SalAttList'];
//        $salCond2 = " and s.salesman_id=" . $_SESSION['SalAttList'];
//    } else {
//        $salCond = $salesman;
//        $salCond2 = $salesman;
//    }

    $_objArrayList = new ArrayList();
    $account_id = $_SESSION['accountId'];
    if (isset($_SESSION['fil_salesman']) && !empty($_SESSION['fil_salesman']) && $_SESSION['fil_salesman'] > 0) {
        $salCond = " AND asa.salesman_id=" . $_SESSION['fil_salesman'];
        $salCond2 = " AND s.salesman_id=" . $_SESSION['fil_salesman'];

    } else if (isset($_SESSION['fil_salesman_manager']) && ($_SESSION['fil_salesman_manager'] > 0)) {
        $salesmanManagerId = $_SESSION['fil_salesman_manager'];
        $res = $_objAdmin->_getSelectList2('table_salesman_hierarchy_relationship AS SHR 
				LEFT JOIN table_salesman_hierarchy AS SH ON SH.hierarchy_id = SHR.hierarchy_id
				LEFT JOIN table_salesman AS s ON s.salesman_id = SHR.salesman_id', 's.salesman_id,SH.hierarchy_id,SH.sort_order', '', " SH.account_id=" . $account_id . " AND SHR.salesman_id = $salesmanManagerId ORDER BY SH.sort_order ASC ");

        if (is_array($res) && (count($res) > 0)) {
            $sortOrder = $res[0]->sort_order;
            $getBottomUsersIdArr = $_objArrayList->getSalesmansBottomUsers(array($salesmanManagerId), $sortOrder, $account_id);

            if (is_array($getBottomUsersIdArr) && (count($getBottomUsersIdArr) > 0)) {
                $bottomUsersIds = implode(',', $getBottomUsersIdArr);
            }

            $salCond = " AND asa.salesman_id IN($bottomUsersIds) ";
            $salCond2 = " AND s.salesman_id IN($bottomUsersIds) ";
        }
    } else if (isset($_SESSION['fil_salesman_designation']) && ($_SESSION['fil_salesman_designation'] > 0)) {

        $getDesignationWiseBottomUsersIdArr = $_objArrayList->getDesignationWiseBottomUsers($_SESSION['fil_salesman_designation'], $account_id);

        if (is_array($getDesignationWiseBottomUsersIdArr) && (count($getDesignationWiseBottomUsersIdArr) > 0)) {
            $bottomUsersIds = implode(',', $getDesignationWiseBottomUsersIdArr);
            $salCond = " AND asa.salesman_id IN($bottomUsersIds) ";
            $salCond2 = " AND s.salesman_id IN($bottomUsersIds) ";
        }
    } else {
        $salCond = $salesman;
        $salCond2 = $salesman;
    }


    if (isset($_SESSION['fil_salesman_state']) && !empty($_SESSION['fil_salesman_state']) && $_SESSION['fil_salesman_state'] > 0) {
        $salCond .= " AND s.state=" . $_SESSION['fil_salesman_state'];
        $salCond2 .= " AND s.state=" . $_SESSION['fil_salesman_state'];
    }
    //echo "<pre>"; print_r($_SESSION);
    if (isset($_SESSION['fil_salesman_zone']) && !empty($_SESSION['fil_salesman_zone']) && $_SESSION['fil_salesman_zone'] > 0) {
        $salCond .= " AND zms.zone_id=" . $_SESSION['fil_salesman_zone'];
        $salCond2 .= " AND zms.zone_id=" . $_SESSION['fil_salesman_zone'];
    }
    if (isset($_SESSION['fil_attendance_type']) && !empty($_SESSION['fil_attendance_type']) && $_SESSION['fil_attendance_type'] > 0) {
        $salCond .= " AND asa.attendance_type=" . $_SESSION['fil_attendance_type'];
    }

    if (isset($_SESSION['fil_month']) && !empty($_SESSION['fil_month']) && isset($_SESSION['fil_year']) && !empty($_SESSION['fil_year'])) {
        $_SESSION['fil_from'] = date('Y-m-d', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
        $_SESSION['fil_to'] = date('Y-m-t', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
    }

    $salIdArr = [];
    $SalArr = $_objAdmin->_getSelectList('table_salesman as s 
                LEFT JOIN state as st on st.state_id = s.state
                LEFT JOIN table_zone_state_mapping as zms on zms.state_id=s.state AND zms.account_id = s.account_id
				LEFT join table_zone as z on z.zone_id = zms.zone_id
                LEFT JOIN city as ci on ci.city_id = s.city 
                LEFT JOIN table_location as loc on loc.location_id = s.location
                LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
                LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
                LEFT JOIN table_salesman_hierarchy AS H2 ON H2.hierarchy_id = SH.rpt_hierarchy_id
                LEFT JOIN table_salesman AS S2 ON S2.salesman_id = SH.rpt_user_id', 's.salesman_id,s.employee_code,s.salesman_name,st.state_name,ci.city_name,loc.location_name,H.description AS des1,H2.description AS des2,S2.salesman_name AS rptPerson', '', " $salCond2 AND s.status='A' ORDER BY s.salesman_name ASC");

    if (is_array($SalArr) && count($SalArr) > 0) {
        foreach ($SalArr as $key => $dataSal) {
            $salIdArr[$dataSal->salesman_id] = $dataSal;
        }
    }


    $auAttSt = $_objAdmin->_getSelectList2('table_activity_salesman_attendance as asa
                left join table_activity_salesman_attendance as asa1 on asa1.salesman_id=asa.salesman_id and asa1.activity_date = asa.activity_date AND asa1.activity_type = 12
                left join table_salesman as s on s.salesman_id=asa.salesman_id 
                LEFT join state as st on st.state_id = s.state
                left join table_zone_state_mapping as zms on zms.state_id=s.state AND zms.account_id = s.account_id
				LEFT join table_zone as z on z.zone_id = zms.zone_id
                left join table_tags as tg on tg.tag_id = asa.attendance_type and tg.tag_type=4 and tg.account_id = s.account_id', "asa.salesman_id,asa.activity_date,		
                asa.start_time as attendance_start ,
                asa1.end_time as attendance_end,
                asa.battery_level,
                asa.lat as start_let,
                asa1.lat as end_let,		
                asa.image_url as in_image_url,
                asa1.image_url as out_image_url,
                asa.activity_id as in_activity,
                asa.comment,
                tg.tag_description,
                asa1.activity_id as out_activity", '', " asa.activity_type = 11 AND s.account_id = '" . $_SESSION['accountId'] . "' AND (asa.activity_date BETWEEN '" . date('Y-m-d', strtotime($_SESSION['fil_from'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['fil_to'])) . "')  $salCond ORDER BY asa.activity_date DESC, attendance_start DESC");

    $attDataArr = [];
    $inactiveSalIdsArr = [];
    if (is_array($auAttSt) && count($auAttSt) > 0) {
        foreach ($auAttSt as $key1 => $data1) {
            $attDataArr[$data1->salesman_id][] = $data1;

            if (!array_key_exists($data1->salesman_id, $salIdArr)) {
                $inactiveSalIdsArr[] = $data1->salesman_id;
            }
        }
    }

    if (is_array($inactiveSalIdsArr) && (count($inactiveSalIdsArr) > 0)) {
        $inactiveSalIds = implode(',', array_values(array_unique($inactiveSalIdsArr)));

        $inactiveSalArr = $_objAdmin->_getSelectList('table_salesman as s 
                LEFT JOIN state as st on st.state_id = s.state
                LEFT JOIN city as ci on ci.city_id = s.city 
                LEFT JOIN table_location as loc on loc.location_id = s.location
                LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
                LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
                LEFT JOIN table_salesman_hierarchy AS H2 ON H2.hierarchy_id = SH.rpt_hierarchy_id
                LEFT JOIN table_salesman AS S2 ON S2.salesman_id = SH.rpt_user_id', 's.salesman_id,s.employee_code,s.salesman_name,st.state_name,ci.city_name,loc.location_name,H.description AS des1,H2.description AS des2,S2.salesman_name AS rptPerson', '', " s.salesman_id IN($inactiveSalIds) ORDER BY s.salesman_name ASC");

        if (is_array($inactiveSalArr) && count($inactiveSalArr) > 0) {
            foreach ($inactiveSalArr as $key2 => $inactiveSalData) {
                $salIdArr[$inactiveSalData->salesman_id] = $inactiveSalData;
            }
        }
    }


    if (is_array($salIdArr) && (count($salIdArr) > 0)) {
        foreach ($salIdArr as $key => $salesmanDataArr) {
            $salId = $salesmanDataArr->salesman_id;
            if (is_array($attDataArr[$salId]) && (count($attDataArr[$salId]) > 0)) {
                foreach ($attDataArr[$salId] as $key2 => $attendanceArr) {
                    $daywork[$attendanceArr->activity_date] = $attendanceArr->activity_date;
                    if (($attendanceArr->attendance_start != '') && ($attendanceArr->attendance_end != '') && ($attendanceArr->attendance_end != '00:00:00') && ($attendanceArr->attendance_start != '00:00:00')) {
                        $startDateTime = date('Y-m-d H:i:s', strtotime($attendanceArr->activity_date . ' ' . $attendanceArr->attendance_start));
                        $endDateTime = date('Y-m-d H:i:s', strtotime($attendanceArr->activity_date . ' ' . $attendanceArr->attendance_end));
                        $work_hours = dateDifference($startDateTime, $endDateTime);
                    } else {
                        $work_hours = "-";
                    }

                    $activityDate = date('Y-m-d', strtotime($attendanceArr->activity_date));
                    $activityDay = date("l", strtotime($attendanceArr->activity_date));
                    $attendance_start = '-';
                    if ($attendanceArr->attendance_start != '') {
                        $attendance_start = $attendanceArr->attendance_start;
                    }

                    $attendance_end = 'Out Time Not Available';
                    if ($attendanceArr->attendance_end != '') {
                        $attendance_end = $attendanceArr->attendance_end;
                    }

                    $data .= '"' . $salesmanDataArr->salesman_name . '"';
                    $data .= "\t";
                    $data .= '"' . $salesmanDataArr->employee_code . '"';
                    $data .= "\t";
                    $data .= '"' . $salesmanDataArr->des1 . '"';
                    $data .= "\t";
                    $data .= '"' . $salesmanDataArr->des2 . '"';
                    $data .= "\t";
                    $data .= '"' . $salesmanDataArr->rptPerson . '"';
                    $data .= "\t";
                    $data .= '"' . $salesmanDataArr->state_name . '"';
                    $data .= "\t";
                    $data .= '"' . $salesmanDataArr->city_name . '"';
                    $data .= "\t";
                    $data .= '"' . $salesmanDataArr->location_name . '"';
                    $data .= "\t";
                    $data .= '"' . $attendanceArr->tag_description . '"';
                    $data .= "\t";
                    $data .= '"' . $attendanceArr->comment . '"';
                    $data .= "\t";
                    $data .= '"' . $attendanceArr->battery_level . '"';
                    $data .= "\t";
                    $data .= '"' . $activityDate . '"';
                    $data .= "\t";
                    $data .= '"' . $activityDay . '"';
                    $data .= "\t";
                    $data .= '"' . $attendance_start . '"';
                    $data .= "\t";
                    $data .= '"' . $attendance_end . '"';
                    $data .= "\t";
                    $data .= '"' . $work_hours . '"';
                    $data .= "\n";
                }
            } else {
                $na = 'N/A';
                $data .= '"' . $salesmanDataArr->salesman_name . '"';
                $data .= "\t";
                $data .= '"' . $salesmanDataArr->employee_code . '"';
                $data .= "\t";
                $data .= '"' . $salesmanDataArr->des1 . '"';
                $data .= "\t";
                $data .= '"' . $salesmanDataArr->des2 . '"';
                $data .= "\t";
                $data .= '"' . $salesmanDataArr->rptPerson . '"';
                $data .= "\t";
                $data .= '"' . $salesmanDataArr->state_name . '"';
                $data .= "\t";
                $data .= '"' . $salesmanDataArr->city_name . '"';
                $data .= "\t";
                $data .= '"' . $salesmanDataArr->location_name . '"';
                $data .= "\t";
                $data .= '"' . $na . '"';
                $data .= "\t";
                $data .= '"' . $na . '"';
                $data .= "\t";
                $data .= '"' . $na . '"';
                $data .= "\t";
                $data .= '"' . $na . '"';
                $data .= "\t";
                $data .= '"' . $na . '"';
                $data .= "\t";
                $data .= '"' . $na . '"';
                $data .= "\t";
                $data .= '"' . $na . '"';
                $data .= "\t";
                $data .= '"' . $na . '"';
                $data .= "\n";
            }
        }
        if ($_SESSION['SalAttList'] != "") {
            $emptyVal = '';
            $ttlDays = 'Total Worked Days :';
            $data .= '"' . $ttlDays . '"';
            $data .= "\t";
            $data .= '"' . count($daywork) . '"';
            $data .= "\t";
            $data .= '"' . $emptyVal . '"';
            $data .= "\t";
            $data .= '"' . $emptyVal . '"';
            $data .= "\t";
            $data .= '"' . $emptyVal . '"';
            $data .= "\t";
            $data .= '"' . $emptyVal . '"';
            $data .= "\t";
            $data .= '"' . $emptyVal . '"';
            $data .= "\t";
            $data .= '"' . $emptyVal . '"';
            $data .= "\t";
            $data .= '"' . $emptyVal . '"';
            $data .= "\t";
            $data .= '"' . $emptyVal . '"';
            $data .= "\t";
            $data .= '"' . $emptyVal . '"';
            $data .= "\t";
            $data .= '"' . $emptyVal . '"';
            $data .= "\t";
            $data .= '"' . $emptyVal . '"';
            $data .= "\t";
            $data .= '"' . $emptyVal . '"';
            $data .= "\t";
            $data .= '"' . $emptyVal . '"';
            $data .= "\t";
            $data .= '"' . $emptyVal . '"';
            $data .= "\n";
        }
    }


    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Salesman_Attendance_Report.xls\"");
    echo $data;
    exit;
}
// Todo End : Sagar : 24th April 2023 : Export Salesman Attendance Report


//Todo Start: Sagar: 9th Mar 2023 : Export Dynamic Distributor Check in out report
if (isset($_GET['export_dynamic_distributor_check_in_out_report'])) {
    $data = "Salesman Code\tSalesman Name\tSalesman Zone\tSalesman State\tDistributor Name\tDistributor Code\tDistributor Zone\tDistributor State\tDistrict\tPurpose of Visit\t Date\tCheck In Time\tCheck Out Time\tTime Spent\tCheck In Distance\n";

    $salesmanCnd = '';
    $salCond = '';
    if (isset($_SESSION['fil_salesman']) && $_SESSION['fil_salesman'] > 0) {
        $salCond .= ' AND dcc.salesman_id = "' . $_SESSION['fil_salesman'] . '"';
        $salesmanCnd .= ' AND s.salesman_id = "' . $_SESSION['fil_salesman'] . '"';
    } elseif (isset($_SESSION['fil_salesman_manager']) && ($_SESSION['fil_salesman_manager'] > 0)) {
        $salesmanManagerId = $_SESSION['fil_salesman_manager'];
        $account_id = $_SESSION['accountId'];
        $res = $_objAdmin->_getSelectList2('table_salesman_hierarchy_relationship AS SHR 
    LEFT JOIN table_salesman_hierarchy AS SH ON SH.hierarchy_id = SHR.hierarchy_id
    LEFT JOIN table_salesman AS s ON s.salesman_id = SHR.salesman_id', 's.salesman_id,SH.hierarchy_id,SH.sort_order', '', " SH.account_id=" . $account_id . " AND SHR.salesman_id = $salesmanManagerId ORDER BY SH.sort_order ASC ");

        if (is_array($res) && (count($res) > 0)) {
            $sortOrder = $res[0]->sort_order;
            $getBottomUsersIdArr = $_objArrayList->getSalesmansBottomUsers(array($salesmanManagerId), $sortOrder, $account_id);

            if (is_array($getBottomUsersIdArr) && (count($getBottomUsersIdArr) > 0)) {
                $bottomUsersIds = implode(',', $getBottomUsersIdArr);
            }

            $salCond .= " AND dcc.salesman_id IN($bottomUsersIds) ";
            $salesmanCnd .= " AND s.salesman_id IN($bottomUsersIds) ";
        }
    } else if (isset($_SESSION['fil_salesman_designation']) && ($_SESSION['fil_salesman_designation'] > 0)) {
        $account_id = $_SESSION['accountId'];
        $getDesignationWiseBottomUsersIdArr = $_objArrayList->getDesignationWiseBottomUsers($_SESSION['fil_salesman_designation'], $account_id);

        if (is_array($getDesignationWiseBottomUsersIdArr) && (count($getDesignationWiseBottomUsersIdArr) > 0)) {
            $bottomUsersIds = implode(',', $getDesignationWiseBottomUsersIdArr);

            $salCond .= " AND dcc.salesman_id IN($bottomUsersIds) ";
            $salesmanCnd .= " AND s.salesman_id IN($bottomUsersIds) ";
        }
    } else {
        $salCond .= '';
        $salesmanCnd .= '';
    }

    if (isset($_SESSION['fil_distributor']) && $_SESSION['fil_distributor'] > 0) {
        $salCond .= ' AND dcc.distributor_id = "' . $_SESSION['fil_distributor'] . '"';
    }

    if (isset($_SESSION['fil_salesman_zone']) && $_SESSION['fil_salesman_zone'] > 0) {
        $salCond .= ' AND szsm.zone_id = "' . $_SESSION['fil_salesman_zone'] . '"';
        $salesmanCnd .= ' AND zms.zone_id = "' . $_SESSION['fil_salesman_zone'] . '"';
    }

    if (isset($_SESSION['fil_salesman_state']) && $_SESSION['fil_salesman_state'] > 0) {
        $salCond .= ' AND s.state = "' . $_SESSION['fil_salesman_state'] . '"';
        $salesmanCnd .= ' AND s.state = "' . $_SESSION['fil_salesman_state'] . '"';
    }

    if (isset($_SESSION['fil_distributor_zone']) && $_SESSION['fil_distributor_zone'] > 0) {
        $salCond .= ' AND dzsm.zone_id = "' . $_SESSION['fil_distributor_zone'] . '"';
    }

    if (isset($_SESSION['fil_distributor_state']) && $_SESSION['fil_distributor_state'] > 0) {
        $salCond .= ' AND d.state = "' . $_SESSION['fil_distributor_state'] . '"';
    }
    if (!isset($_SESSION['fil_from']) && empty($_SESSION['fil_from'])) {
        $_SESSION['fil_from'] = date('d M Y');
    }

    if (!isset($_SESSION['fil_to']) && empty($_SESSION['fil_to'])) {
        $_SESSION['fil_to'] = date('d M Y');
    }

    if (isset($_SESSION['fil_month']) && !empty($_SESSION['fil_month']) && isset($_SESSION['fil_year']) && !empty($_SESSION['fil_year'])) {
        $_SESSION['fil_from'] = date('Y-m-d', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
        $_SESSION['fil_to'] = date('Y-m-t', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
    }

    if (isset($_SESSION['salesmanIdsCond']) && !empty($_SESSION['salesmanIdsCond'])) {
        $salesman = $_SESSION['salesmanIdsCond'];
    }
    //getting checkin checkouts for above checkins
    $auRec = $_objAdmin->_getSelectList('table_distributor_capture_checkin_out as dcc
LEFT JOIN table_salesman AS s ON s.salesman_id = dcc.salesman_id
LEFT JOIN table_zone_state_mapping as szsm on szsm.state_id = s.state and szsm.account_id = s.account_id
LEFT JOIN table_zone as sz on sz.zone_id = szsm.zone_id
LEFT JOIN state as st ON st.state_id = s.state
LEFT JOIN table_distributors as d ON d.distributor_id = dcc.distributor_id
LEFT JOIN table_zone_state_mapping as dzsm on dzsm.state_id = d.state and dzsm.account_id = d.account_id
LEFT JOIN table_zone as dz on dz.zone_id = dzsm.zone_id
LEFT JOIN state as sd ON sd.state_id = d.state
LEFT JOIN table_purpose_visit as pv ON pv.purpose_visit_id = dcc.purpose_visit_id
LEFT JOIN city as ct ON ct.city_id = d.city', 'dcc.id as checkin_id,s.salesman_name,sz.zone_name as sal_zone,st.state_name as sal_state,s.employee_code,d.distributor_name,d.distributor_code,dz.zone_name as distributor_zone,sd.state_name,ct.city_name,dcc.checkin_date,dcc.checkin_time,dcc.checkout_time,pv.purpose,dcc.distributor_id,dcc.lat,dcc.lng', '', " dcc.checkin_date BETWEEN '" . date('Y-m-d', strtotime($_SESSION['fil_from'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['fil_to'])) . "' AND s.status='A' AND d.status = 'A' $salesman $salCond ORDER BY dcc.checkin_date DESC, dcc.checkin_time DESC");

//Todo Start : get distributor lat lag : sudhanshu : 22 nov 2023
    $getDisSurveyLatLng = $_objAdmin->_getSelectList("table_distributors as d", "d.distributor_id,d.lat,d.lng", "", " d.status = 'A' AND d.lat_lng_capcure_accuracy!=0 AND (d.lat != '0.0' AND d.lng != '0.0') AND (d.lat != '' AND d.lng != '') ORDER BY d.distributor_id ASC");
    $disSurveyLatLngArr = [];
    if (is_array($getDisSurveyLatLng) && (count($getDisSurveyLatLng) > 0)) {
        foreach ($getDisSurveyLatLng as $key => $disSurveyLatLng) {
            $disSurveyLatLngArr[$disSurveyLatLng->distributor_id] = $disSurveyLatLng;
        }
    }

//    echo '<pre>';
//    print_r($data);
//    echo '<br>';
//    print_r($auRec);
//    die(' die here in exp');

    if (is_array($auRec) && (count($auRec) > 0)) {
        foreach ($auRec as $key => $checkinData) {
            $checkin_date = date('d M Y', strtotime($checkinData->checkin_date));
            if (!empty($checkinData->checkout_time) && ($checkinData->checkout_time != '00:00:00')) {
                $checkinDateTime = date('Y-m-d H:i:s', strtotime($checkinData->checkin_date . ' ' . $checkinData->checkin_time));
                $checkoutDateTime = date('Y-m-d H:i:s', strtotime($checkinData->checkin_date . ' ' . $checkinData->checkout_time));
                $timeSpent = dateDifference($checkinDateTime, $checkoutDateTime);
            } else {
                $timeSpent = "-";
            }
            if ((isset($checkinData->lat) && !empty($checkinData->lat) && ($checkinData->lat != '0.0')) && (isset($checkinData->lng) && !empty($checkinData->lng) && ($checkinData->lng != '0.0')) && (isset($disSurveyLatLngArr[$checkinData->distributor_id]) && !empty($disSurveyLatLngArr[$checkinData->distributor_id]))) {
                $disSurLat = $disSurveyLatLngArr[$checkinData->distributor_id]->lat;
                $disSurLng = $disSurveyLatLngArr[$checkinData->distributor_id]->lng;
                $checkinDistance = round(distance($checkinData->lat, $checkinData->lng, $disSurLat, $disSurLng, 'K'), 2) . ' KM';
            } else {
                $checkinDistance = '-';
            }
            $data .= '"' . $checkinData->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->sal_zone . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->sal_state . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->distributor_zone . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->state_name . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->city_name . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->purpose . '"';
            $data .= "\t";
            $data .= '"' . $checkin_date . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->checkin_time . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->checkout_time . '"';
            $data .= "\t";
            $data .= '"' . $timeSpent . '"';
            $data .= "\t";
            $data .= '"' . $checkinDistance . '"';
            $data .= "\n";

        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"dynamic_distributor_check_in_out_report.xls\"");
    echo $data;
    exit;
}
//Todo End: Sagar: 9th Mar 2023 : Export Dynamic Distributor Check in out report


//Todo Start:Jatin : 9th Feb 2023 : Export Dynamic Product Wise Sales Report
if (isset($_GET['dynamic_export_product_wise_sales_report'])) {
    $data = "Activity Date\tActivity Time\t" . $AliaseUsers['salesman'] . " Code\t" . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['salesman'] . " State \t" . $AliaseUsers['salesman'] . " Zone\t" . $AliaseUsers['retailer'] . " Code\t" . $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['retailer'] . " Group\t" . $AliaseUsers['retailer'] . " Channel\t" . $AliaseUsers['retailer'] . " Classification\t" . $AliaseUsers['retailer'] . " Type\t" . $AliaseUsers['retailer'] . " State\t" . $AliaseUsers['retailer'] . " Zone\tTotal Order Amount\tItem Code\tItem Name\t Category\t Brand\t Item Grade\t Quantity\tItem Wise Total Amount\n";

    $salesman = $_SESSION['salsInCondi'];

    $queryConditions = '';
    // Salesman
    if (isset($_SESSION['fil_from']) && !empty($_SESSION['fil_from'])) {
        $fromdate = " and tm.server_date >= '" . date('Y-m-d', strtotime($_SESSION['fil_from'])) . "'";
    } else {
        $fromdate = " and tm.server_date >= '" . date('Y-m-d') . "'";
    }
    if (isset($_SESSION['fil_to']) && !empty($_SESSION['fil_to'])) {
        $todate = " and tm.server_date <= '" . date('Y-m-d', strtotime($_SESSION['fil_to'])) . "'";
    } else {
        $todate = " and tm.server_date <= '" . date('Y-m-d') . "'";
    }
    $salesmanCnd = "";
    if ($_SESSION['userLoginType'] == 5) {
        $salesmanCnd = $salesman;
    }

    if (isset($_SESSION['fil_salesman']) && !empty($_SESSION['fil_salesman']) && $_SESSION['fil_salesman'] > 0) {
        $salesmanCnd = " AND s.salesman_id=" . $_SESSION['fil_salesman'];
    } else if (isset($_SESSION['fil_salesman_manager']) && ($_SESSION['fil_salesman_manager'] > 0)) {
        $salesmanManagerId = $_SESSION['fil_salesman_manager'];
        $account_id = $_SESSION['accountId'];
        $res = $_objAdmin->_getSelectList2('table_salesman_hierarchy_relationship AS SHR 
        LEFT JOIN table_salesman_hierarchy AS SH ON SH.hierarchy_id = SHR.hierarchy_id
        LEFT JOIN table_salesman AS s ON s.salesman_id = SHR.salesman_id', 's.salesman_id,SH.hierarchy_id,SH.sort_order', '', " SH.account_id=" . $account_id . " AND SHR.salesman_id = $salesmanManagerId ORDER BY SH.sort_order ASC ");

        if (is_array($res) && (count($res) > 0)) {
            $sortOrder = $res[0]->sort_order;
            $getBottomUsersIdArr = $_objArrayList->getSalesmansBottomUsers(array($salesmanManagerId), $sortOrder, $account_id);

            if (is_array($getBottomUsersIdArr) && (count($getBottomUsersIdArr) > 0)) {
                $bottomUsersIds = implode(',', $getBottomUsersIdArr);
            }

            $salesmanCnd .= " AND s.salesman_id IN($bottomUsersIds) ";
        }
    } else if (isset($_SESSION['fil_salesman_designation']) && ($_SESSION['fil_salesman_designation'] > 0)) {
        $account_id = $_SESSION['accountId'];
        $getDesignationWiseBottomUsersIdArr = $_objArrayList->getDesignationWiseBottomUsers($_SESSION['fil_salesman_designation'], $account_id);

        if (is_array($getDesignationWiseBottomUsersIdArr) && (count($getDesignationWiseBottomUsersIdArr) > 0)) {
            $bottomUsersIds = implode(',', $getDesignationWiseBottomUsersIdArr);
            $salesmanCnd .= " AND s.salesman_id IN($bottomUsersIds) ";
        }
    } else {
        $salesmanCnd .= '';
    }

    if (isset($_SESSION['fil_retailer']) && !empty($_SESSION['fil_retailer']) && $_SESSION['fil_retailer'] > 0) {
        $queryConditions .= " AND tr.retailer_id=" . $_SESSION['fil_retailer'];
    }
    if (isset($_SESSION['fil_salesman_zone']) && $_SESSION['fil_salesman_zone'] > 0) {
        $queryConditions .= ' AND tzsm.zone_id = "' . $_SESSION['fil_salesman_zone'] . '"';
    }
    if (isset($_SESSION['fil_retailer_zone']) && $_SESSION['fil_retailer_zone'] > 0) {
        $queryConditions .= ' AND tzsm1.zone_id = "' . $_SESSION['fil_retailer_zone'] . '"';
    }

    if (isset($_SESSION['fil_salesman_state']) && !empty($_SESSION['fil_salesman_state']) && $_SESSION['fil_salesman_state'] > 0) {
        $queryConditions .= " AND s.state=" . $_SESSION['fil_salesman_state'];
    }
    if (isset($_SESSION['fil_retailer_state']) && !empty($_SESSION['fil_retailer_state']) && $_SESSION['fil_retailer_state'] > 0) {
        $queryConditions .= " AND tr.state=" . $_SESSION['fil_retailer_state'];
    }

    if (isset($_SESSION['fil_month']) && !empty($_SESSION['fil_month']) && isset($_SESSION['fil_year']) && !empty($_SESSION['fil_year'])) {
        $firstDate = date('Y-m-d', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
        $lastdate = date('Y-m-t', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
        $fromdate = " and tm.server_date >= '" . $firstDate . "'";
        $todate = " and tm.server_date <= '" . $lastdate . "'";
    }


    $Where = $queryConditions . $fromdate . $todate . $salesmanCnd;
    $auRec = $_objAdmin->_getSelectList('table_mir AS tm
                LEFT JOIN table_mir_details as tmd on tmd.mir_id=tm.mir_id 
				LEFT JOIN table_item as i on i.item_id=tmd.item_id 
                left join table_grade as bg on bg.grade_id=i.grade_id
                left join table_category as c on c.category_id=i.category_id 
                left join table_brands as b on b.brand_id=i.brand_id
				LEFT JOIN table_salesman AS s ON s.salesman_id = tm.salesman_id
				LEFT JOIN state AS s1 ON s1.state_id = s.state
				LEFT JOIN table_retailer AS tr ON tr.retailer_id = tm.retailer_id
                LEFT JOIN table_retailer_group as rg ON rg.group_id = tr.group_id
                left join table_retailer_type_master as rtm ON rtm.type_id=tr.type_id
                left join table_retailer_channel_master as rc ON rc.channel_id=tr.channel_id 
                left join table_relationship as rel ON rel.relationship_id=tr.relationship_id 
				LEFT JOIN table_zone_state_mapping as tzsm1 on tzsm1.state_id = tr.state and tzsm1.account_id = tr.account_id 
				LEFT JOIN table_zone as tz1 on tz1.zone_id = tzsm1.zone_id
				LEFT JOIN state AS ss ON s.state = ss.state_id
				LEFT JOIN table_zone_state_mapping AS tzsm ON tzsm.state_id = s.state and tzsm.account_id = s.account_id
				LEFT JOIN table_zone AS tz ON tz.zone_id = tzsm.zone_id', 'tm.*,s.salesman_name,s.employee_code,s1.state_name AS salesman_state,ifnull(tz.zone_name ,s1.state_name)	AS salesman_zone,s.state,tr.retailer_name,tr.retailer_code,ss.state_name AS retailer_state,i.item_name,i.item_code,tmd.quantity,tmd.ttl_item_wise_amt,ifnull(tz1.zone_name,ss.state_name)  as retailer_zone,rg.group_name,rtm.type_name,rc.channel_name,rel.relationship_code as relation,b.brand_name,bg.grade_name,c.category_name', '', " s.status='A' AND tr.status='A' $Where ORDER BY tm.mir_id DESC ");

//    echo '<pre>';
//    print_r($auRec);
//    die(' testing');

    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . $_objAdmin->_changeDate($auRec[$i]->server_date) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->server_time . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_state . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_zone . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->group_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->channel_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->relation . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->type_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_state . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_zone . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->ttl_order_amt . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->category_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->brand_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->grade_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->quantity . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->ttl_item_wise_amt . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"dynamic_product_wise_sales_report.xls\"");
    echo $data;
    exit;
}
//Todo End:Jatin : 9th Feb 2023 : Export Dynamic Product Wise Sales Report


if (isset($_GET['dynamic_export_order_list'])) {
    $data = " Date of Order\t Time of Order\t Order Number\t Total Invoice Amount\t Total Number Of Item\t Ordered Quantity\t" . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\t Distributor Type\t" . $AliaseUsers['distributor'] . " Zone\t" . $AliaseUsers['distributor'] . " State\t " . $AliaseUsers['salesman'] . " Name\t  " . $AliaseUsers['salesman'] . " Code\t  " . $AliaseUsers['salesman'] . " Zone\t  " . $AliaseUsers['salesman'] . " State\tReporting To\t " . $AliaseUsers['retailer'] . "  Name\t " . $AliaseUsers['retailer'] . "  Code\t " . $AliaseUsers['retailer'] . "  Zone\t" . $AliaseUsers['retailer'] . "  State\t " . $AliaseUsers['retailer'] . "  District\t" . $AliaseUsers['retailer'] . " Group\t" . $AliaseUsers['retailer'] . " Channel\t " . $AliaseUsers['retailer'] . " Classifiaction\t " . $AliaseUsers['retailer'] . " Type\tRetailer Phone No\t Display Outlet\t" . $AliaseUsers['retailer'] . " Market\t " . $AliaseUsers['retailer'] . " Address\t Order Type\tOrder By\tOrder Status\tComments\t Reason\t Delivery Date\tPhoto Count\n";

    $sort = " ORDER BY date_of_order desc,time_of_order desc";
    $queryConditions = '';
    if (isset($_SESSION['fil_from']) && !empty($_SESSION['fil_from'])) {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['fil_from'])) . "'";
    } else {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d') . "'";
    }
    if (isset($_SESSION['fil_to']) && !empty($_SESSION['fil_to'])) {
        $todate = " and o.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['fil_to'])) . "'";
    } else {
        $todate = " and o.date_of_order <= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['userLoginType'] == 3 && $_SESSION['distributorId'] != "" && $_SESSION['distributorId'] > 0) {
        $queryConditions .= " AND o.distributor_id=" . $_SESSION['distributorId'];
    } else if (isset($_SESSION['fil_distributor']) && !empty($_SESSION['fil_distributor']) && $_SESSION['fil_distributor'] > 0) {
        $queryConditions .= " AND o.distributor_id=" . $_SESSION['fil_distributor'];
    }

    if ($_SESSION['userLoginType'] == 7 && $_SESSION['stockistId'] != "" && $_SESSION['stockistId'] > 0) {
        $queryConditions .= " AND d.stockist_id=" . $_SESSION['stockistId'];

    } else if (isset($_SESSION['fil_stockist']) && !empty($_SESSION['fil_stockist']) && $_SESSION['fil_stockist'] > 0) {
        $queryConditions .= " AND d.stockist_id=" . $_SESSION['fil_stockist'];
    }
    $salesmanCnd = "";
    if ($_SESSION['userLoginType'] == 5) {
        $salesmanCnd = str_replace("s.", "o.", $_SESSION['salesmanIdsCond']);
    }

    if (isset($_SESSION['fil_salesman']) && !empty($_SESSION['fil_salesman']) && $_SESSION['fil_salesman'] > 0) {
        $salesmanCnd = " AND o.salesman_id=" . $_SESSION['fil_salesman'];
    } else if (isset($_SESSION['fil_salesman_manager']) && ($_SESSION['fil_salesman_manager'] > 0)) {
        $salesmanManagerId = $_SESSION['fil_salesman_manager'];
        $account_id = $_SESSION['accountId'];
        $res = $_objAdmin->_getSelectList2('table_salesman_hierarchy_relationship AS SHR 
				LEFT JOIN table_salesman_hierarchy AS SH ON SH.hierarchy_id = SHR.hierarchy_id
				LEFT JOIN table_salesman AS s ON s.salesman_id = SHR.salesman_id', 's.salesman_id,SH.hierarchy_id,SH.sort_order', '', " SH.account_id=" . $account_id . " AND SHR.salesman_id = $salesmanManagerId ORDER BY SH.sort_order ASC ");

        if (is_array($res) && (count($res) > 0)) {
            $sortOrder = $res[0]->sort_order;
            $_objArrayList = new ArrayList();
            $getBottomUsersIdArr = $_objArrayList->getSalesmansBottomUsers(array($salesmanManagerId), $sortOrder, $account_id);

            if (is_array($getBottomUsersIdArr) && (count($getBottomUsersIdArr) > 0)) {
                $bottomUsersIds = implode(',', $getBottomUsersIdArr);
            }

            $salesmanCnd = " AND o.salesman_id IN($bottomUsersIds) ";
        }
    } else if (isset($_SESSION['fil_salesman_designation']) && ($_SESSION['fil_salesman_designation'] > 0)) {
        $_objArrayList = new ArrayList();
        $account_id = $_SESSION['accountId'];
        $getDesignationWiseBottomUsersIdArr = $_objArrayList->getDesignationWiseBottomUsers($_SESSION['fil_salesman_designation'], $account_id);

        if (is_array($getDesignationWiseBottomUsersIdArr) && (count($getDesignationWiseBottomUsersIdArr) > 0)) {
            $bottomUsersIds = implode(',', $getDesignationWiseBottomUsersIdArr);
            $salesmanCnd .= " AND o.salesman_id IN($bottomUsersIds) ";
        }
    } else {
        $salesmanCnd .= '';
    }
    //echo $bottomUsersIds; die;
    if (isset($_SESSION['fil_retailer']) && !empty($_SESSION['fil_retailer']) && $_SESSION['fil_retailer'] > 0) {
        $queryConditions .= " AND o.retailer_id=" . $_SESSION['fil_retailer'];
    }
    if (isset($_SESSION['fil_salesman_state']) && !empty($_SESSION['fil_salesman_state']) && $_SESSION['fil_salesman_state'] > 0) {
        $queryConditions .= " AND s.state=" . $_SESSION['fil_salesman_state'];
    }
    if (isset($_SESSION['fil_retailer_state']) && !empty($_SESSION['fil_retailer_state']) && $_SESSION['fil_retailer_state'] > 0) {
        $queryConditions .= " AND r.state=" . $_SESSION['fil_retailer_state'];
    }
    if (isset($_SESSION['fil_distributor_state']) && !empty($_SESSION['fil_distributor_state']) && $_SESSION['fil_distributor_state'] > 0) {
        $queryConditions .= " AND d.state=" . $_SESSION['fil_distributor_state'];
    }

    if (isset($_SESSION['fil_salesman_zone']) && !empty($_SESSION['fil_salesman_zone']) && $_SESSION['fil_salesman_zone'] > 0) {
        $queryConditions .= " AND zms.zone_id=" . $_SESSION['fil_salesman_zone'];
    }
    if (isset($_SESSION['fil_retailer_zone']) && !empty($_SESSION['fil_retailer_zone']) && $_SESSION['fil_retailer_zone'] > 0) {
        $queryConditions .= " AND zmr.zone_id=" . $_SESSION['fil_retailer_zone'];
    }
    if (isset($_SESSION['fil_distributor_zone']) && !empty($_SESSION['fil_distributor_zone']) && $_SESSION['fil_distributor_zone'] > 0) {
        $queryConditions .= " AND zmd.zone_id=" . $_SESSION['fil_distributor_zone'];
    }
    if (isset($_SESSION['fil_month']) && !empty($_SESSION['fil_month']) && isset($_SESSION['fil_year']) && !empty($_SESSION['fil_year'])) {
        $firstDate = date('Y-m-d', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
        $lastdate = date('Y-m-t', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
        $fromdate = " and o.date_of_order >= '" . $firstDate . "'";
        $todate = " and o.date_of_order <= '" . $lastdate . "'";
    }

    if (isset($_SESSION['fil_order_status']) && !empty($_SESSION['fil_order_status'])) {
        $queryConditions .= " AND o.order_status='" . $_SESSION['fil_order_status'] . "'";
    } else {
        //$queryConditions .=" and order_status IN('A','I') ";
    }
    if (isset($_SESSION['fil_order_type']) && !empty($_SESSION['fil_order_type'])) {
        $queryConditions .= " AND o.order_type='" . $_SESSION['fil_order_type'] . "'";
    } else {
        //$queryConditions .=" AND o.order_type !='Return'";
    }

    // Todo Start : add order category FIler : sudhanshu : 13 march
    if (isset($_SESSION['fil_order_category']) && !empty($_SESSION['fil_order_category']) && count($_SESSION['fil_order_category']) > 0) {
        $orderCategory = $_SESSION['fil_order_category'];
        $orderCate = "'" . implode("', '", $orderCategory) . "'";
        if (implode(',', $orderCategory) != 'all') {
            $queryConditions .= " AND LOWER(o.order_type) IN (" . $orderCate . ")";
        }
    }
    // Todo End : add order category FIler : sudhanshu : 13 march
    // Todo Start : add order ditributor type filter : sudhanshu : 05 jul 2024
    if (isset($_SESSION['fil_distributor_type']) && !empty($_SESSION['fil_distributor_type'])  && $_SESSION['fil_distributor_type'] > 0) {
        $disType = $_SESSION['fil_distributor_type'];


        $queryConditions .= " AND d.distributor_type_id = $disType ";

    }
    // Todo End : add order ditributor type filter : sudhanshu : 05 jul 2024
    $queryConditions = $queryConditions . $salesmanCnd . $fromdate . $todate;


    $where = $queryConditions;
    //$whereret = " $disLogCond  $fromdate $todate and r.new='' and o.type='R' $orderby ";
    /*	$auRec=$_objAdmin->_getSelectList('table_order as o left join table_retailer as r on o.retailer_id=r.retailer_id left join table_salesman as s on o.salesman_id=s.salesman_id left join table_distributors as d on o.distributor_id=d.distributor_id left join table_retailer_channel_master as cm on cm.channel_id=r.channel_id left join state as st on st.state_id=d.state left join city as c on c.city_id=d.city left join table_region as re on re.region_id=d.region_id',"o.*,r.retailer_name,r.retailer_address,r.retailer_location,cm.channel_name,r.display_outlet,r.lat as retlat,r.lng as retlng,s.salesman_name,d.distributor_name,st.state_name,c.city_name,re.region_name ",'',$where.$sort,'');*/

    $auRec = $_objAdmin->_getSelectList("table_order as o 
            left join table_order_detail as ord on o.order_type != 'No' and ord.order_id = o.order_id and ord.type = 1 
            left join table_item as i on i.item_id = ord.item_id 
            left join table_retailer as r on o.retailer_id=r.retailer_id 
            left join table_salesman as s on o.salesman_id=s.salesman_id 
            left join table_salesman_hierarchy_relationship as shr on shr.salesman_id = s.salesman_id
            left join table_salesman as s2 on s2.salesman_id=shr.rpt_user_id
            left join table_distributors as d on o.distributor_id=d.distributor_id 
            left join table_retailer_channel_master as cm on r.channel_id=cm.channel_id
            LEFT JOIN table_retailer_group as rg ON rg.group_id = r.group_id
            left join table_retailer_type_master as rtm ON rtm.type_id=r.type_id
            left join table_relationship as rel ON rel.relationship_id=r.relationship_id 
            left join state as str on str.state_id=r.state 
            left join state as sts on sts.state_id=s.state 
            left join state as std on std.state_id=d.state 
            left join city as c on c.city_id=r.city 
            left join table_zone_state_mapping as zms on zms.state_id=s.state and zms.account_id = s.account_id
			left join table_zone as sz on sz.zone_id=zms.zone_id 
			left join table_zone_state_mapping as zmr on zmr.state_id=r.state and zmr.account_id = r.account_id
			left join table_zone as rz on rz.zone_id=zmr.zone_id
			left join table_zone_state_mapping as zmd on zmd.state_id=d.state and zmd.account_id = d.account_id
			left join table_zone as dz on dz.zone_id=zmd.zone_id
            left join table_distributor_type_master as dt on dt.dis_type_id = d.distributor_type_id",
        "  o.order_id,count(ord.item_id) as total_item,SUM(ord.acc_quantity) as total_ordered_qty,o.retailer_id,o.order_type,o.order_status,
			o.date_of_order,o.time_of_order,o.acc_total_invoice_amount,o.order_by,
	r.retailer_name,r.retailer_code,o.photo_count,
	r.retailer_address,r.retailer_location,cm.channel_name,r.display_outlet,r.retailer_phone_no,
	s.salesman_name,s.employee_code,s2.salesman_name as rpt_to,d.distributor_name,d.distributor_code,
	sz.zone_name as sal_zone,rz.zone_name as ret_zone,dz.zone_name as dist_zone,str.state_name as ret_state,sts.state_name as sal_state,std.state_name as dist_state,c.city_name,rg.group_name,rtm.type_name,rel.relationship_code as relation,o.delivery_date,o.comments,o.tag_description,dt.dis_type_name", '', $where . " GROUP BY o.order_id " . $sort, '');


    // echo "<pre>";
    // print_r($auRec);die;


    $remove = array("\n", "\r", ",", "\t");
    for ($i = 0; $i < count($auRec); $i++) {
        $orderType = '';


        if ($auRec[$i]->order_type == 'Yes') {
            $orderType = 'Sales Order';

            if ($auRec[$i]->order_status == 'A') {
                $status = "New Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }
            if ($auRec[$i]->order_status == 'C') {
                $status = "Cancelled";
            }
            $color = ($auRec[$i]->order_status == 'A') ? "A" : "P";
        }
        if ($auRec[$i]->order_type == 'No') {
            $orderType = 'No Order';

            $status = ($auRec[$i]->order_status == 'A') ? "No Order" : "Processed";
            $color = ($auRec[$i]->order_status == 'A') ? "I" : "P";
        }
        if ($auRec[$i]->order_type == 'Adhoc') {
            //Todo Start : Sudhanshu 27 may 2024 : adhoc Nomenclature
            $orderType = $AliaseUsers['adhoc'] . ' Order';

            if ($auRec[$i]->order_status == 'A') {
                $status = "New " . $AliaseUsers['adhoc'] . " Order";
            }
            //Todo End : Sudhanshu 27 may 2024 : adhoc Nomenclature
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }
            if ($auRec[$i]->order_status == 'C') {
                $status = "Cancelled";
            }
            //$status=($auRec[$i]->order_status=='A')?"New Adhoc Order":"Processed";
            $color = ($auRec[$i]->order_status == 'A') ? "O" : "P";
        }

        if (strtolower($auRec[$i]->order_type) == 'return') {
            $orderType = 'Return Order';
        }

        // display oulet
        if ($auRec[$i]->display_outlet == 'Y') {
            $outlet = 'Yes';
        } elseif ($auRec[$i]->display_outlet == 'N') {
            $outlet = 'No';
        }
        switch ($auRec[$i]->order_by) {
            case 'S':
                $order_by = $AliaseUsers['salesman'];
                break;
            case "D":
                $order_by = $AliaseUsers['distributor'];
                break;
            case "R":
                $order_by = $AliaseUsers['retailer'];
                break;
            default :
                $order_by = '';
        }

        //$auRec2 = $_objAdmin->_getSelectList2('table_order_detail', "count( distinct(item_id)) as total_item", '', " order_id = " . $auRec[$i]->order_id . " and type = 1");

        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);
        $date_of_delivery = $_objAdmin->_changeDate($auRec[$i]->delivery_date);
        $data .= "" . $date_of_order . "\t" .
            $auRec[$i]->time_of_order . "\t" .
            $auRec[$i]->order_id . "\t" .
            $auRec[$i]->acc_total_invoice_amount . "\t" .
            $auRec[$i]->total_item . "\t" .
            $auRec[$i]->total_ordered_qty . "\t" .
            $auRec[$i]->distributor_name . "\t" .
            $auRec[$i]->distributor_code . "\t" .
            $auRec[$i]->dis_type_name . "\t" .
            $auRec[$i]->dist_zone . "\t" .
            $auRec[$i]->dist_state . "\t" .
            $auRec[$i]->salesman_name . "\t" .
            $auRec[$i]->employee_code . "\t" .
            $auRec[$i]->sal_zone . "\t" .
            $auRec[$i]->sal_state . "\t" .
            $auRec[$i]->rpt_to . "\t" .
            $auRec[$i]->retailer_name . "\t" .
            $auRec[$i]->retailer_code . "\t" .
            $auRec[$i]->ret_zone . "\t" .
            $auRec[$i]->ret_state . "\t" .
            $auRec[$i]->city_name . "\t" .
            $auRec[$i]->group_name . "\t" .
            $auRec[$i]->channel_name . "\t" .
            $auRec[$i]->relation . "\t" .
            $auRec[$i]->type_name . "\t" .
            $auRec[$i]->retailer_phone_no . "\t" .
            $outlet . "\t" .
            str_replace($remove, ' ', $auRec[$i]->retailer_location) . "\t" .
            str_replace($remove, ' ', $auRec[$i]->retailer_address) . "\t" .
            $orderType . "\t" .
            $order_by . "\t" .
            $status . "\t" .
            str_replace($remove, ' ', $auRec[$i]->comments) . "\t" .
            str_replace($remove, ' ', $auRec[$i]->tag_description) .
            "\t" . $date_of_delivery . "\t" . $auRec[$i]->photo_count . "\n";;


    }

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Order List.xls\"");
    echo $data;
    exit;
}

//Todo Start : Jatin : 19 May 2023 : Export Retailer type Wise Item code
if (isset($_GET['export_ret_type_wise_item_code'])) {
    $data = $AliaseUsers['retailer'] . " Type \tItem Code\tItem Name \t Brand\t Category\t " . $AliaseUsers['retailer'] .
        " Type Item Code\t Created Date\t Updated Date\t Status\n";
    //Todo Start : sudhanshu 13 june 2024 : add status filter
    $statusCondi = '';
    if (isset($_SESSION['MasRetTypeItmCode']) && $_SESSION['MasRetTypeItmCode'] != 'all' && $_SESSION['MasRetTypeItmCode'] != '') {
        $statusCondi = " AND rtim.status ='" . $_SESSION['MasRetTypeItmCode'] . "'";
    }
    //Todo End : sudhanshu 13 june 2024 : add status filter
    $condi = " i.account_id='" . $_SESSION['accountId'] . "' and i.item_type='I' $statusCondi ORDER BY r.type_name ASC";

    $auRec = $_objAdmin->_getSelectList2('table_retailer_type_wise_item_code as rtim
        LEFT JOIN table_retailer_type_master as r ON r.type_id = rtim.type_id
			left join table_item as i ON i.item_id = rtim.item_id
			left join table_category as c on i.category_id = c.category_id 
			left join table_brands as b on b.brand_id=i.brand_id',
        "rtim.*,i.item_name,i.item_code,c.category_name,b.brand_name,r.type_name", '', " $condi ");

    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $status = ($auRec[$i]->status == 'A') ? "Active" : "Inactive";
            $created_date = $_objAdmin->_changeDate($auRec[$i]->created_at);
            $updated_date = $_objAdmin->_changeDate($auRec[$i]->updated_at);
            $data .= '"' . $auRec[$i]->type_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->brand_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->category_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->ret_item_code . '"';
            $data .= "\t";
            $data .= '"' . $created_date . '"';
            $data .= "\t";
            $data .= '"' . $updated_date . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['retailer'] . "_type_wise_item_code_list.xls\"");
    echo $data;
    exit;
}
//Todo End: Jatin  : Jatin : 19 May 2023 : Export Retailer type Wise Item code

//Todo Start: Jatin  : Jatin : 31 May 2023 : Export Retailer Detail Order List
if (isset($_GET['export_retailer_detail_order_list'])) {
    $data = "Order For\tDate\tTime\tOrder Number\tOrder By\tOrder By User Type\tTotal Order Amount\tBill Type\tBill Description\t" .
        $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\t" . $AliaseUsers['salesman'] . "\t" . $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['retailer'] . " Code\tRoute Name\tState\tCity\tMarket\tAddress\tOrder Type\tOrder Status\tCancel By User Type\t Cancel By\tCategory Name\tCategory Code\tItem Name\tItem Code\tQuantity\tPrice\tTotal\n";
    $sort = " ORDER BY date_of_order desc,time_of_order desc";
    if ($_SESSION['SalDisList'] != '') {
        $salesman = " and s.salesman_id='" . $_SESSION['SalDisList'] . "'";
    }
    if ($_SESSION['FromDisList'] != '') {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['FromDisList'])) . "'";
    } else {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['ToDisList'] != '') {
        $todate = " and o.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToDisList'])) . "'";
    } else {
        $todate = " and o.date_of_order <= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['distributorId'] != "A") {
        $disList = " and o.distributor_id=" . $_SESSION['distributorId'];
    } else {
        $disList = "";
    }
    if ($_SESSION['OrderBy'] != '') {
        if ($_SESSION['OrderBy'] == 1) {
            $orderby = "";
        }
        if ($_SESSION['OrderBy'] == 2) {
            $orderby = " and o.order_status='A' ";
        }
        if ($_SESSION['OrderBy'] == 3) {
            $orderby = " and o.order_status='I' ";
        }
        if ($_SESSION['OrderBy'] == 4) {
            $orderby = " and o.order_status='D' ";
        }
    } else {
        $orderby = "";
    }
    if ($_SESSION['userLoginType'] == 3 && $_SESSION['distributorId'] > 0) {
        $distributorCond = " AND o.distributor_id ='" . $_SESSION['distributorId'] . "' ";
    }
    //get the partial pending orders till 31st March 2020
    mysql_query("SET SESSION group_concat_max_len = 100000000");
    $validated_default_date = date("Y-m-d", strtotime("-2 Months"));
    $where = " o.order_for='R' AND o.order_status !='D' and o.distributor_id!='' $salesman $fromdate $todate  
		 $distributorCond $disList $orderby and o.account_id =" . $_SESSION['accountId'];
    $auRec = $_objAdmin->_getSelectList('table_order as o
            left join table_order_detail as tod on tod.order_id = o.order_id
            left join table_retailer as r on o.retailer_id=r.retailer_id
            left join table_item as i on i.item_id = tod.item_id
            left join table_category as cat on cat.category_id = i.category_id
            left join table_salesman as s on o.salesman_id=s.salesman_id
            left join table_distributors as d on d.distributor_id=o.distributor_id
            left join state as st on st.state_id=r.state
            left join city as c on c.city_id=r.city', "o.*,r.retailer_name, r.retailer_code,r.retailer_address,r.retailer_location,r.display_outlet,s.salesman_name,d.distributor_name,cat.category_name,cat.category_code,d.distributor_code, st.state_name,c.city_name,i.item_name,i.item_code,tod.quantity,tod.total,tod.price", $rp, $where . $sort, '');
//    echo "<pre>";
//    print_R($auRec);
//    die;
    $retIdArr = [];
    if (is_array($auRec) && (count($auRec) > 0)) {
        foreach ($auRec as $key => $auRecData) {
            if (isset($auRecData->retailer_id) && !empty($auRecData->retailer_id) && (intval($auRecData->retailer_id) > 0)) {
                $retIdArr[] = $auRecData->retailer_id;
            }
        }
        $retIds = implode(',', array_unique($retIdArr));
        $getRetailerRoutes = $_objAdmin->_getSelectList("table_route_retailer as rr 
LEFT JOIN table_route as r ON r.route_id = rr.route_id", "rr.retailer_id, GROUP_CONCAT(DISTINCT r.route_name SEPARATOR ' | ') as route_names", "", " rr.retailer_id IN($retIds) GROUP BY rr.retailer_id ORDER BY rr.retailer_id ASC ");
        $retailerWiseRoutesArr = [];
        if (is_array($getRetailerRoutes) && (count($getRetailerRoutes) > 0)) {
            foreach ($getRetailerRoutes as $key => $retRoutes) {
                if (isset($retRoutes->route_names) && !empty($retRoutes->route_names)) {
                    $retailerWiseRoutesArr[$retRoutes->retailer_id] = $retRoutes->route_names;
                }
            }
        }
    }
    $remove = array("\n", "\r", "\n \r", "\t", ",");
    for ($i = 0; $i < count($auRec); $i++) {
        if ($auRec[$i]->order_status == 'A') {
            $status = "New Order";
            $color = "N";
        }
        if ($auRec[$i]->order_status == 'I') {
            $status = "Processed";
            $color = "I";
        }
        if ($auRec[$i]->order_status == 'D') {
            $status = "Dispatched";
            $color = "A";
        }
        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);
        /* Bill Type */
        $billTYPE = '';
        $billTYPE = '';
        switch (strtolower($auRec[$i]->order_for)) {
            case 'r':
                $order_for = 'Retailer';
                break;
            case 'd':
                $order_for = 'Distributor';
                break;
        }
        if ($auRec[$i]->order_type == 'Yes') {
            if ($auRec[$i]->order_status == 'A') {
                $orderType = "Sales Order";
            }
        }
        if ($auRec[$i]->order_type == 'Return') {
            //if ($auRec[$i]->order_status == 'A') {
            $orderType = "Return Order";
            //}
        }

        $CheckOrderSts = $_objAdmin->_getSelectList2('table_order as o inner join table_order_detail as od on o.order_id = od.order_id', "od.quantity, od.acc_quantity, od.is_processed ", '', " o.order_id='" . $auRec[$i]->order_id . "' AND (((CAST(od.quantity AS DECIMAL(10,2)) = CAST(od.acc_quantity AS DECIMAL(10,2))) AND od.is_processed=0) OR ((CAST(od.quantity AS DECIMAL(10,2)) > CAST(od.acc_quantity AS DECIMAL(10,2))) AND od.is_processed = 1)) AND od.free_item_id = 0 ");


        if ($auRec[$i]->order_status == 'A') {
            $orderStatus = 'Fully Pending';
        } elseif ($auRec[$i]->order_status == 'C') {
            $orderStatus = 'Cancelled Order';
        } else if (is_array($CheckOrderSts) && count($CheckOrderSts) > 0) {
            $orderStatus = 'Partially Invoiced';
        } else {
            $orderStatus = 'Fully Invoiced';
        }

        //Todo Start : sudhanshu add order by column 19 march 2024

        if ($auRec[$i]->order_by == 'salesman') {
            $orderBy = 'Salesman';
            $ordTakeBy = $auRec[$i]->salesman_name;
        }
        if ($auRec[$i]->order_by == 'D') {
            $orderBy = 'Distributor';
            $ordTakeBy = $auRec[$i]->distributor_name;
        }
        if ($auRec[$i]->order_by == 'R') {
            $orderBy = 'Salesman';
            $ordTakeBy = $auRec[$i]->retailer_name;
        }
        //Todo End : sudhanshu add order by column 19 march 2024
        //Todo Start : Sudhanshu 01 may 2024 : add cancel by column
        $cancelByUserType = '';
        $cancel_by = '';
        if (strtolower($auRec[$i]->cancel_by_user_type) == 'admin') {
            $cancelByUserType = 'Admin';
            $cancel_by = 'Admin';
        } elseif (strtolower($auRec[$i]->cancel_by_user_type) == 'distributor') {
            $cancelByUserType = $AliaseUsers['distributor'];
            $cancel_by = $auRec[$i]->distributor_name;
        } elseif (strtolower($auRec[$i]->cancel_by_user_type) == 'salesman') {
            $cancelByUserType = $AliaseUsers['salesman'];
            $cancel_by = $auRec[$i]->salesman_name;
        }
        //Todo End : Sudhanshu 01 May 2024 : add cancel by column
        $routeName = (isset($retailerWiseRoutesArr[$auRec[$i]->retailer_id]) && !empty($retailerWiseRoutesArr[$auRec[$i]->retailer_id])) ? $retailerWiseRoutesArr[$auRec[$i]->retailer_id] : '';
        $data .= $order_for . "\t" . $date_of_order . "\t" . $auRec[$i]->time_of_order .
            "\t" . $auRec[$i]->order_id .
            "\t" . $ordTakeBy .
            "\t" . $orderBy .
            "\t" . number_format($auRec[$i]->acc_total_invoice_amount, 2) . "\t" .
            $billTYPE .
            "\t" .
            $bill_desc . "\t" . $auRec[$i]->distributor_name . "\t" . $auRec[$i]->distributor_code . "\t" .
            $auRec[$i]->salesman_name . "\t" . $auRec[$i]->retailer_name . "\t" . $auRec[$i]->retailer_code . "\t" .
            $routeName . "\t" . $auRec[$i]->state_name . "\t" . str_replace($remove, ' ', $auRec[$i]->city_name) . "\t" . str_replace($remove, ' ', $auRec[$i]->retailer_location) . "\t" . str_replace($remove, ' ', $auRec[$i]->retailer_address) . "\t" . $orderType . "\t" . $orderStatus . "\t" . $cancelByUserType . "\t" . $cancel_by . "\t" . $auRec[$i]->category_name . "\t" . $auRec[$i]->category_code . "\t" . $auRec[$i]->item_name . "\t" . $auRec[$i]->item_code . "\t" . $auRec[$i]->quantity . "\t" . $auRec[$i]->price . "\t" . $auRec[$i]->total . "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['retailer'] . " Detail Order List.xls\"");
    echo $data;
    exit;
}
//Todo End: Jatin  : Jatin : 31 May 2023 : Export Retailer Detail Order List

//Todo Start: Jatin  : Jatin : 31 May 2023 : Export Distributor Detail Order List
if (isset($_GET['export_distributor_detail_order_listing'])) {
    //echo hello;exit;
    $data = "Order For \t Date\t Time\t Order Number\tOrder By\tOrder By User Type\tInvoice Status\t Total Order Amount\t Total No. Of Items\t" . $AliaseUsers['stockist'] . " Name\t" . $AliaseUsers['stockist'] . " Code\t " . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\t " . $AliaseUsers['salesman'] . "\t  State\t City\t Market \t Address \t Order Status \t Cancel By User Type\tCancel By\tComments\t Reason\tCategory Name\tCategory Code\tItem Name\tItem Code\tQuantity\tPrice\tTotal\n";
    $sort = " ORDER BY date_of_order desc,time_of_order desc";
    if ($_SESSION['SalDisList'] != '') {
        $salesman = " and s.salesman_id='" . $_SESSION['SalDisList'] . "'";
    }
    if ($_SESSION['FromOrderList'] != '') {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['FromOrderList'])) . "'";
    } else {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['ToOrderList'] != '') {
        $todate = " and o.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToOrderList'])) . "'";
    } else {
        $todate = " and o.date_of_order <= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['distributorId'] != "A") {
        $disList = " o.distributor_id=" . $_SESSION['distributorId'] . " and";
    } else {
        $disList = "";
    }
    if ($_SESSION['OrderBy'] != '') {
        if ($_SESSION['OrderBy'] == 1) {
            $orderby = "";
        }
        if ($_SESSION['OrderBy'] == 2) {
            $orderby = " and o.order_status='A' ";
        }
        if ($_SESSION['OrderBy'] == 3) {
            $orderby = " and o.order_status='I' ";
        }
        if ($_SESSION['OrderBy'] == 4) {
            $orderby = " and o.order_status='D' ";
        }
    } else {
        $orderby = "";
    }

    if ($_SESSION['userLoginType'] == 3 && $_SESSION['distributorId'] > 0) {
        $distributorCond = " AND o.distributor_id ='" . $_SESSION['distributorId'] . "' ";
    }
    if ($_SESSION['userLoginType'] == 7 && $_SESSION['stockistId'] > 0) {
        $distributorCond .= " AND o.stockist_id ='" . $_SESSION['stockistId'] . "' ";
    }
    $where = " o.order_for='D' and o.order_type IN('Yes', 'Return', 'Adhoc') and o.distributor_id!=''  $salesman $fromdate $todate  $distributorCond $orderby";
    $auRec = $_objAdmin->_getSelectList('table_distributor_order as o
            left join table_distributor_order_detail as tod on tod.order_id = o.order_id
            left join table_item as i on i.item_id = tod.item_id
            left join table_category as cat on cat.category_id = i.category_id
			left join table_salesman as s on o.salesman_id=s.salesman_id
			left join table_distributors as d on d.distributor_id=o.distributor_id			
			 left join table_stockist as stk on stk.stockist_id = o.stockist_id		
			left join state as st on st.state_id=d.state
			left join city as c on c.city_id=d.city 
			', "o.*,s.salesman_name,d.distributor_name,d.distributor_code,st.state_name,c.city_name, d.distributor_location, d.distributor_address,i.item_name,i.item_code,tod.quantity,tod.price,tod.total,cat.category_name,cat.category_code,stk.stockist_name,stk.stockist_code", $rp, $where . $sort, '');
//    echo "<pre>";
//    print_R($auRec);
//    die;
    $remove = array("\n", "\r", "\n \r", "\t", ",");
    for ($i = 0; $i < count($auRec); $i++) {
        if ($auRec[$i]->order_type == 'Yes') {
            if ($auRec[$i]->order_status == 'A') {
                $status = "New Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }
            if ($auRec[$i]->order_status == 'C') {
                $status = "Cancelled";
            }
            $color = ($auRec[$i]->order_status == 'A') ? "A" : "P";
        }
        if ($auRec[$i]->order_type == 'No') {
            $status = ($auRec[$i]->order_status == 'A') ? "No Order" : "Processed";
            $color = ($auRec[$i]->order_status == 'A') ? "I" : "P";
        }
        if ($auRec[$i]->order_type == 'Adhoc') {
            if ($auRec[$i]->order_status == 'A') {
                $status = "New Adhoc Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }

            $color = ($auRec[$i]->order_status == 'A') ? "O" : "P";
        }
        if ($auRec[$i]->order_type == 'Return') {
            if ($auRec[$i]->order_status == 'A') {
                $status = "Return Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }

            $color = ($auRec[$i]->order_status == 'A') ? "O" : "P";
        }


        //Todo Start : sudhanshu add order by column 15 march 2024
        if ($auRec[$i]->order_by == 'S') {
            $orderBy = 'Salesman';
            $orderTakeBy = $auRec[$i]->salesman_name;
        }
        if ($auRec[$i]->order_by == 'stockist') {
            $orderBy = 'Stockist';
            $orderTakeBy = $auRec[$i]->stockist_name;
        }
        if ($auRec[$i]->order_by == 'distributor') {
            $orderBy = 'Distributor';
            $orderTakeBy = $auRec[$i]->distributor_name;
        }
        //Todo End : sudhanshu add order by column 15 march 2024
        $CheckOrderSts = $_objAdmin->_getSelectList2('table_distributor_order as o 
        inner join table_distributor_order_detail as od on o.order_id = od.order_id',
            "od.quantity, od.acc_quantity,od.is_processed ", '', " o.order_id='" . $auRec[$i]->order_id . "' 
          AND ((od.quantity = od.acc_quantity AND od.is_processed=0) OR (od.quantity >od.acc_quantity AND od.is_processed=1)) 
          and od.free_item_id = 0");
        if ($auRec[$i]->order_status == 'A') {
            $orderStatus = 'Fully Pending';
        } else if (is_array($CheckOrderSts) && count($CheckOrderSts) > 0) {
            $orderStatus = 'Partially Invoiced';
        } else {
            $orderStatus = 'Fully Invoiced';
        }

        if ($auRec[$i]->order_status == 'C') {
            $orderStatus = '';
        }
        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);
        $auRec2 = $_objAdmin->_getSelectList2('table_distributor_order_detail', "count( distinct(item_id)) as total_item", '', " order_id = " . $auRec[$i]->order_id . " and type = 1");
        switch (strtolower($auRec[$i]->order_for)) {
            case 'r':
                $order_for = 'Retailer';
                break;
            case 'd':
                $order_for = 'Distributor';
                break;
        }
        //Todo Start : Sudhanshu 15 April : add cancel by column
        $cancelByUserType = '';
        $cancel_by = '';
        if (strtolower($auRec[$i]->cancel_by_user_type) == 'admin') {
            $cancelByUserType = 'Admin';
            $cancel_by = 'Admin';
        } elseif (strtolower($auRec[$i]->cancel_by_user_type) == 'stockist') {
            $cancelByUserType = $AliaseUsers['stockist'];
            $cancel_by = $auRec[$i]->stockist_name;
        } elseif (strtolower($auRec[$i]->cancel_by_user_type) == 'distributor') {
            $cancelByUserType = $AliaseUsers['distributor'];
            $cancel_by = $auRec[$i]->distributor_name;
        } elseif (strtolower($auRec[$i]->cancel_by_user_type) == 'salesman') {
            $cancelByUserType = $AliaseUsers['salesman'];
            $cancel_by = $auRec[$i]->salesman_name;
        }
        //Todo End : Sudhanshu 15 April : add cancel by column

        $data .= trim($order_for) . "\t" . $date_of_order . "\t" . $auRec[$i]->time_of_order . "\t" . trim($auRec[$i]->order_id) . "\t" . trim($orderTakeBy) . "\t" . trim($orderBy) . "\t" . trim($orderStatus)
            . "\t" . $auRec[$i]->acc_total_invoice_amount . "\t" . $auRec2[0]->total_item . "\t" . str_replace
            ($remove, ' ', $auRec[$i]->stockist_name) . "\t" .
            str_replace($remove, ' ', $auRec[$i]->stockist_code) . "\t" .
            str_replace($remove, ' ', $auRec[$i]->distributor_name) . "\t" .
            trim($auRec[$i]->distributor_code) . "\t" . trim($auRec[$i]->salesman_name) . "\t" . trim($auRec[$i]->state_name) . "\t" . trim($auRec[$i]->city_name) . "\t" . str_replace($remove, ' ', $auRec[$i]->distributor_location) . "\t" . str_replace($remove, ' ', $auRec[$i]->distributor_address) . "\t" . $status . "\t" . $cancelByUserType . "\t" . $cancel_by . "\t" . trim($auRec[$i]->comments) . "\t" . trim($auRec[$i]->tag_description) . "\t" . trim($auRec[$i]->category_name) . "\t" . trim($auRec[$i]->category_code) . "\t" . trim($auRec[$i]->item_name) . "\t" . trim($auRec[$i]->item_code) . "\t" . $auRec[$i]->quantity . "\t" . $auRec[$i]->price . "\t" . $auRec[$i]->total . "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['distributor'] . " Detail Order List.xls\"");
    echo $data;
    exit;
}

//Todo End: Jatin  : Jatin : 31 May 2023 : Export Distributor Detail Order List

//Todo start: Jatin  : Jatin : 1 June 2023 : Export Distributor Primary Order List
if (isset($_GET['export_distributor_primary_stock_summary'])) {
    $data = "" . $AliaseUsers['distributor'] . " Name \t" . $AliaseUsers['distributor'] . " Code\t Date Of Order \t Time of Order\t Zone \t State \t District\t City  \t" . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['salesman'] . " Code\t Reporting To  \t Item Name \t Item Code \t UOM\t Quantity \t Price \t Total\n";
    $distributorId = "";
    $stateId = "";
    $location_id = '';
    if ($_SESSION['FromDate'] != '') {
        $fromdate = " ods.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['FromDate'])) . "'";
    } else {
        $fromdate = " ods.date_of_order >= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['ToDate'] != '') {
        $todate = " and ods.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToDate'])) . "'";
    } else {
        $todate = " and ods.date_of_order <= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['disID'] != '' & $_SESSION['disID'] != 'All') {
        $distributorId = " and d.distributor_id='" . $_SESSION['disID'] . "'";
    } else if ($_SESSION['stockistId'] != "" && $_SESSION['stockistId'] != "0") {
        $distributorId = " and d.stockist_id='" . $_SESSION['stockistId'] . "'";
    }
    if ($_SESSION['Disstate'] != '') {
        $stateId = " and st.state_id='" . $_SESSION['Disstate'] . "'";
    }
    if ($_SESSION['Dislocation_id'] != '') {
        $location_id = " and ct.city_id='" . $_SESSION['Dislocation_id'] . "'";
    }
    $RoleBrands = $_objAdmin->getUserRoleBrand();
    $brandCnd = '';
    if (!empty($RoleBrands)) {
        $brandCnd = " and b.brand_id IN(" . $RoleBrands . ")";
    }
    $where = " $fromdate $todate $distributorId $stateId $location_id $brandCnd and d.distributor_name!='' ";
    $auRec = $_objAdmin->_getSelectList('table_primary_order_distributor_stock as ods 
  		inner join table_primary_order_detail_distributor_stock as ods_detail on ods.stock_id=ods_detail.stock_id 
		LEFT join table_distributors as d on d.distributor_id=ods.distributor_id 
		LEFT join state as st on st.state_id=d.state
		LEFT join table_zone_state_mapping as zsm on zsm.state_id = d.state and d.account_id = zsm.account_id
		LEFT join table_zone as z on z.zone_id = zsm.zone_id 
		LEFT join city as ct on ct.city_id=d.city
		left join table_location as c on c.location_id= d.location
		LEFT JOIN table_item as i on i.item_id = ods_detail.item_id  
		LEFT join table_salesman as s on s.salesman_id=ods.salesman_id
		LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
		LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
		LEFT JOIN table_salesman_hierarchy AS H2 ON H2.hierarchy_id = SH.rpt_hierarchy_id
		LEFT JOIN table_salesman AS S2 ON S2.salesman_id = SH.rpt_user_id', "ods.*,ods_detail.*,d.distributor_id,d.distributor_name,d.distributor_code,i.item_name,i.item_id,i.item_code,st.state_id,st.state_name,ct.city_name,s.salesman_name,c.location_name,s.employee_code,S2.salesman_name AS rptPerson,z.zone_name,(ods_detail.price * ods_detail.openning_stock_volume) as total", "", $where . " order by ods.time_of_order desc", '');

    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {

            //Todo Start :  Sudhanshu 21 march 2024 : aadd collumn UOM
            $uom = ($auRec[$i]->item_unit_type != '') ? $auRec[$i]->item_unit_type : 'Pcs';
            //Todo End : Sudhanshu 21 march 2024 : aadd collumn UOM

            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . date("Y-m-d", strtotime($auRec[$i]->date_of_order)) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->time_of_order . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->zone_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->rptPerson . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $uom . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->openning_stock_volume . '"';
            $data .= "\t";
            $data .= '"' . intval($auRec[$i]->price) . '"';
            $data .= "\t";
            $data .= '"' . intval($auRec[$i]->total) . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['distributor'] . "_summary_primary_order_report.xls\"");
    echo $data;
    exit;
}
//Todo End: Jatin  : Jatin : 1 June 2023 : Export Distributor Primary Order List

//Todo start: Jatin  : Jatin : 7 June 2023 : Export Distributor payment collection List
if (isset($_GET['export_dist_payment_transaction_list'])) {
    $data = "PMT Number\tPayment Date\tPayment Time\t" . $AliaseUsers['distributor'] . " Code\t" . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['stockist'] . " Code\t" . $AliaseUsers['stockist'] . " Name\tPayment Reference Number\tPayment Amount\tAdjusted Amount\tPending Amount\tPayment Method\tCheque No.\tBank Detail\tPayment Remarks\tClearing Status\tStatus\tRemarks\n";
    if ($_SESSION['FromDisList'] != '') {
        $fromdate = date('Y-m-d', strtotime($_SESSION['FromDisList']));
    } else {
        $fromdate = date('Y-m-d');
    }
    if ($_SESSION['ToDisList'] != '') {
        $todate = date('Y-m-d', strtotime($_SESSION['ToDisList']));
    } else {
        $todate = date('Y-m-d');
    }
    if ($_SESSION['distributor_id'] != '' && $_SESSION['distributor_id'] > 0) {
        $disLogCond = " AND o.distributor_id='" . $_SESSION['distributor_id'] . "' ";
    }
    if ($_SESSION['userLoginType'] != '' && $_SESSION['userLoginType'] == 7) {
        $stCond = " AND o.stockist_id='" . $_SESSION['stockistId'] . "' ";
    }

    $where = " o.payment_date BETWEEN '" . $fromdate . "' AND '" . $todate . "' $disLogCond  $stCond";
    $auRec = $_objAdmin->_getSelectList2('table_distributor_payment_transactions AS o
				LEFT JOIN table_distributors as d on d.distributor_id = o.distributor_id
				LEFT JOIN table_stockist as st ON st.stockist_id = o.stockist_id
				LEFT JOIN table_payment_method as pp on pp.payment_method_id = o.payment_method_id', " o.*, d.distributor_name, d.distributor_code, st.stockist_name, st.stockist_code, pp.payment_method_desc", "", $where . $sort, '');
    $remove = array("\n", "\r\n", "\r", ",");
    for ($i = 0; $i < count($auRec); $i++) {
        $status = ($auRec[$i]->status == 'C') ? 'Cancelled' : '';
        $pending_amount = ROUND((($auRec[$i]->total_amount) - ($auRec[$i]->adjusted_amount)), 0);
        $data .= $auRec[$i]->payment_id;
        $data .= "\t";
        $data .= $_objAdmin->_changeDate($auRec[$i]->payment_date);
        $data .= "\t";
        $data .= $auRec[$i]->payment_time;
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->distributor_code);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->distributor_name);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->stockist_code);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->stockist_name);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->payment_ref_no);
        $data .= "\t";
        $data .= $auRec[$i]->total_amount;
        $data .= "\t";
        $data .= $auRec[$i]->adjusted_amount;
        $data .= "\t";
        $data .= $pending_amount;
        $data .= "\t";
        $data .= $auRec[$i]->payment_method_desc;
        $data .= "\t";
        $data .= $auRec[$i]->cheque_no;
        $data .= "\t";
        $data .= $auRec[$i]->bank_details;
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->payment_remarks);
        $data .= "\t";
        $data .= $auRec[$i]->clearing_status;
        $data .= "\t";
        $data .= $status;
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->remarks);
        $data .= "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['distributor'] . "_payment_list.xls\"");
    echo $data;
    exit;
}
//Todo start: Jatin : 7 June 2023 : Export Distributor payment collection List

//Todo Start : Jatin : export stockist invoice list
if (isset($_GET['export_stockist_invoice_list'])) {
//    echo "<pre>";print_r($_REQUEST);die;
    //echo hello;exit;
    $data = "Order Date\tInvoice Date\tInvoice Number \t " . $AliaseUsers['stockist'] . " Code \t " . $AliaseUsers['stockist'] . " Name\tInvoice Amount\tPayment Status\tOrder Ref\tInvoice For \tBill Type \tBill Description \tState\tDistrict\tMarket \tAddress\tOrder Status\tRemarks\tShipping Address\tBilling Address\n";
    if ($_SESSION['SalDisList'] != '') {
        $salesman = " and o.stockist_id='" . $_SESSION['SalDisList'] . "'";
    }
    // Todo Start : Jatin : show its data only 24 June 2024
    if (isset($_SESSION['stockistId']) && $_SESSION['stockistId'] > 0) {
        $stockistCond = " AND o.stockist_id ='" . $_SESSION['stockistId'] . "' ";
    }
    // Todo End : Jatin : show its data only 24 June 2024
    if ($_SESSION['FromDisList'] != '') {
        $fromdate = " and o.bill_date >= '" . date('Y-m-d', strtotime($_SESSION['FromDisList'])) . "'";
    } else {
        $fromdate = " and o.bill_date >= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['ToDisList'] != '') {
        $todate = " and o.bill_date <= '" . date('Y-m-d', strtotime($_SESSION['ToDisList'])) . "'";
    } else {
        $todate = " and o.bill_date <= '" . date('Y-m-d') . "'";
    }

    if (isset($_SESSION['invoice_type']) && $_SESSION['invoice_type'] != '' && $_SESSION['invoice_type'] != 'All') {
        if (strtolower($_SESSION['invoice_type']) == 'invoice') {
            $distributorCond .= " AND o.order_type='Yes' AND o.invoice_status='A' ";
        } elseif (strtolower($_SESSION['invoice_type']) == 'return') {
            $distributorCond .= " AND o.order_type='return' AND o.invoice_status='A' ";
        } elseif (strtolower($_SESSION['invoice_type']) == 'cancel') {
            $distributorCond .= " AND o.invoice_status='C' ";
        }
    }
    $where = " AND o.order_for='D' AND o.order_status ='D' $fromdate $todate $distributorCond $orderby $stockistCond and o.account_id =" . $_SESSION['accountId'];
    $ordertime = ',time_of_order desc';
    $sortname = 'bill_date';
    $sortorder = 'desc';
    $sort = " ORDER BY $sortname $sortorder $ordertime";
    $groupBy = " GROUP BY o.invoice_id ";
    $auRec = $_objAdmin->_getSelectList('table_stockist_invoice as o
	LEFT JOIN table_stockist_invoice_detail as OD ON OD.order_id = o.order_id
    left join table_stockist as stc on o.stockist_id=stc.stockist_id
    left join state as st on st.state_id=stc.state
    left join city as c on c.city_id=stc.city
    left join table_stockist_address as ad on ad.address_id=o.shipping_address
    left join table_stockist_address as ad2 on ad2.address_id=o.billing_address
    ', "o.*,GROUP_CONCAT(o.ref_order_id) as ref_orders, stc.stockist_name,
    stc.stockist_code,stc.stockist_name,stc.stockist_address,stc.stockist_location,st.state_name,
    c.city_name,ad.address as shipping_address,ad2.address as billing_address,ad.zipcode as shipping_zip,ad2.zipcode as billing_zip", $rp, $where . $groupBy . $sort, '');

    $remove = array("\n", "\r", "\n \r", "\t", ",");
    $gTotalAmount = 0;
    for ($i = 0; $i < count($auRec); $i++) {
        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);
        $date_of_invoice = $_objAdmin->_changeDate($auRec[$i]->bill_date);
        /* Bill Type */
        $billTYPE = '';
        $billTYPE = '';
        switch (strtolower($auRec[$i]->bill_type)) {
            case 'apc':
                $billTYPE = "Advance Payment Collection";
                $bill_desc = $auRec[$i]->bill_desc;
                break;
            case 'ac':
                $billTYPE = "Advance Cheque";
                $bill_desc = $auRec[$i]->bill_desc;
                break;
            case 'fp':
                $billTYPE = "Flexible Plan";
                $bill_desc = $auRec[$i]->bill_desc;
                break;
        }
        switch (strtolower($auRec[$i]->order_for)) {
            case 'r':
                $order_for = 'Retailer';
                break;
            case 'd':
                $order_for = 'Distributor';
                break;
        }
        if ($auRec[$i]->order_status == 'D' && $auRec[$i]->invoice_status == 'A') {
            $status = "Invoiced";
            $payment_sts = ($auRec[$i]->payment_received == 0) ? "Payment Pending" : "Payment Received";
            if ($auRec[$i]->order_type == 'Return') {
                $status = "Return Invoiced";

                $payment_sts = "";
            }
            $due_date = $_objAdmin->_changeDate($auRec[$i]->due_date);
        } elseif ($auRec[$i]->order_status == 'D' && $auRec[$i]->invoice_status == 'C') {
            $status = 'Cancelled Invoice';
            $payment_sts = "";
        }
        //Todo Start : sudhanshu 21 may 2024 : shiiping and billing address chnage in query also
        $shipping_address = $auRec[$i]->shipping_address . ' ' . $auRec[$i]->shipping_zip;
        $billing_address = $auRec[$i]->billing_address . ' ' . $auRec[$i]->billing_zip;
        //Todo End : sudhanshu 21 may 2024 : shiiping and billing address chnage in query also
        $data .= $date_of_order;
        $data .= "\t";
        $data .= $date_of_invoice;
        $data .= "\t";
        $data .= $auRec[$i]->bill_no;
        $data .= "\t";
        $data .= $auRec[$i]->stockist_code;
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->stockist_name);
        $data .= "\t";
        $data .= number_format(floor($auRec[$i]->acc_total_invoice_amount), 2);
        $data .= "\t";
        $data .= $payment_sts;
        $data .= "\t";
        $data .= $auRec[$i]->ref_orders;
        $data .= "\t";
        $data .= $order_for;
        $data .= "\t";
        $data .= $billTYPE;
        $data .= "\t";
        $data .= $bill_desc;
        $data .= "\t";
        $data .= $auRec[$i]->state_name;
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->city_name);
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->stockist_location);
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->stockist_address);
        $data .= "\t";
        $data .= $status;
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->remark);
        //Todo Start : sudhanshu 14 may 2024 : add shipping and billing address
        $data .= "\t";
        $data .= str_replace($remove, ' ', $shipping_address);
        $data .= "\t";
        $data .= str_replace($remove, ' ', $billing_address);
        //Todo End : sudhanshu 14 may 2024 : add shipping and billing address
        $data .= "\n";
        $gTotalAmount = $gTotalAmount + floor($auRec[$i]->acc_total_invoice_amount);
    }
    $data .= "\t\t\t\tGrand Total\t";
    $data .= $gTotalAmount;
    $data .= "\n";
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['stockist'] . " Invoice List.xls\"");
    echo $data;
    exit;
}
//Todo Start: Jatin : export stockist invoice list


//******************************************** Export new distributor report */
if (isset($_GET['export_distribute_report'])) {

    $data = " Order For \t Order Number \t Order Date \t " . $AliaseUsers['distributor'] . " Name \t " . $AliaseUsers['distributor'] . " Code \t " . " Region Name \t State Name \t City Name \t " . $AliaseUsers['salesman'] . " Name \t " . $AliaseUsers['salesman'] . " Code\t Category Name \t Item Name \t Item Code \t UOM \t Order Quantity \t Order Amount \t Invoiced Quantity \t Invoiced Amount \t Pendng Order Quantity \t Pending Order Amount \t Order From\t Reason\t Remark\n";
    $sort = " ORDER BY o.date_of_order desc";
    $_objArrayList = new ArrayList();
    $salsList = $_objArrayList->SalesmanArrayList();
    $salesman = $_objArrayList->getSalesCondition($salsList);
    //print_r($salsList);die;
    if (isset($_SESSION['SalOrderList']) && $_SESSION['SalOrderList'] != '') {
        $salesman = " AND s.salesman_id IN (" . $_SESSION['SalOrderList'] . ")";
    }
    if (isset($_SESSION['REGIONID']) && $_SESSION['REGIONID'] != '') {
        $condition .= " re.region_id = " . $_SESSION['REGIONID'] . " AND ";
    }
    if (isset($_SESSION['STATEID']) && $_SESSION['STATEID'] != '') {
        $condition .= " Dis.state = " . $_SESSION['STATEID'] . " AND ";
    }
    if ($_SESSION['categoryID'] != '' && $_SESSION['categoryID'] != 'all') {
        $condition .= " c.category_id = " . $_SESSION['categoryID'] . " AND ";
    }
    if ($_SESSION['itemID'] != '' && $_SESSION['itemID'] != 'all') {
        $condition .= " o.item_id = " . $_SESSION['itemID'] . " AND ";
    }
    if ($_SESSION['FromProductList'] != '') {
        $fromdate = "  o.date_of_order  >= '" . date('Y-m-d', strtotime($_SESSION['FromProductList'])) . "' AND ";
        $Invfromdate = " inv.date_of_order  >= '" . date('Y-m-d', strtotime($_SESSION['FromProductList'])) . "' AND ";
    } else {
        $fromdate = " o.date_of_order  >= '" . date('Y-m-d') . "' AND ";
        $Invfromdate = " inv.date_of_order  >= '" . date('Y-m-d') . "' AND ";
    }
    if ($_SESSION['ToProductList'] != '') {
        $todate = " o.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToProductList'])) . "' ";
        $Invtodate = " inv.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToProductList'])) . "' ";
    } else {
        $todate = "  o.date_of_order <= '" . date('Y-m-d') . "'";
        $Invtodate = "  inv.date_of_order <= '" . date('Y-m-d') . "'";
    }
    $groupby = " group by o.order_id,o.item_id";

    //get the partial pending orders till 31st March 2020
    mysql_query("SET SESSION group_concat_max_len = 100000000");
    $validated_default_date = date("Y-m-d", strtotime("-2 Months"));
    // $discarded_orders = $_objAdmin->_getSelectList2('table_order', "GROUP_CONCAT(order_id) as order_ids", '', " date_of_order <='".$validated_default_date."' AND order_status IN('A', 'I')");
    $flag = true;
    /*
	if(strtotime(date('Y-m-d', strtotime($_SESSION['FromProductList']))) < strtotime($validated_default_date) && $flag)
     {
        $where   = " o.account_id='" . $_SESSION['accountId'] . "'  AND o.order_status NOT IN('A', 'I') and $condition $fromdate $todate $salesOrgCond";    //$salesman
     }
     else
     {
        $where   = " o.account_id='" . $_SESSION['accountId'] . "' and $condition $fromdate $todate $salesOrgCond";
     }*/
    $where = " o.account_id='" . $_SESSION['accountId'] . "' and $condition $fromdate $todate $salesOrgCond";
    //    echo $where;die;
    $auRec = $_objAdmin->_getSelectList2('DISTRIBUTOR_ORDER_QTY as o
			left join table_measurement_units as mu on mu.unit_id=o.unit_id
			left join table_order_remarks as tor on tor.remark_id=o.reason
			LEFT JOIN table_item AS I ON I.item_id=o.item_id
			LEFT JOIN table_category AS c ON c.category_id = I.category_id
			LEFT JOIN table_salesman AS s ON o.salesman_id = s.salesman_id
		
			LEFT JOIN table_distributors AS Dis ON Dis.distributor_id = o.distributor_id
			LEFT JOIN state as st on st.state_id=Dis.state
			LEFT JOIN city as ct on ct.city_id=Dis.city
			LEFT JOIN table_region as re on st.region_id=re.region_id			
			
			
		    ',
        'o.order_id,o.date_of_order,tor.remark,o.reason_remark,
			Dis.distributor_name, Dis.distributor_code,
			
			CASE WHEN o.order_for="D" THEN re.region_name
			   WHEN o.order_for="D" THEN re.region_name END AS region_name,
			CASE WHEN o.order_for="D" THEN st.state_name
				   WHEN o.order_for="D" THEN st.state_name END AS state_name,
				CASE WHEN o.order_for="D" THEN ct.city_name
				  WHEN o.order_for="D" THEN ct.city_name END AS city_name,
			CASE WHEN o.salesman_id="0" THEN "PEPUP"
				   WHEN o.salesman_id !="0" THEN "APP" END AS order_from,
			o.order_for,s.salesman_name,s.employee_code,c.category_name,o.item_id,I.item_name,I.item_code,o.unit_id,mu.unit_code,
			o.order_quantity,ROUND(o.order_amount) as order_amount,
			"" as invoiced_quantity,
			"" as pendng_order_quantity,
			"" as invoiced_amount,
			"" as pendng_order_amount', $rp, $where . $groupby . $sort, '');

    $invoiceData = array();
    $invWhre = $Invfromdate . $Invtodate . " group by inv.ref_order_id,inv.item_id";
    $invoiceList = $_objAdmin->_getSelectList2('ORDER_WISE_DISTRIBUTOR_INVOICE_LIST_NEWW as inv ',
        "inv.ref_order_id,inv.item_id,inv.invoiced_quantity as invoiced_quantity,ROUND(inv.invoiced_amount) as invoiced_amount", '', $invWhre, '');
    if (count($invoiceList) > 0) {
        foreach ($invoiceList as $key => $value) {
            $invoiceData[$value->ref_order_id][$value->item_id] = $value;
        }
    }
    for ($i = 0; $i < count($auRec); $i++) {

        $resonRemark = $remarktxt = '';
        if ($auRec[$i]->date_of_order != "" && $auRec[$i]->date_of_order != "0000:00:00") {
            $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);
        } else {
            $date_of_order = "";
        }
        switch (strtolower($auRec[$i]->order_for)) {
            case 'r':
                $order_for = 'Retailer';
                break;
            case 'd':
                $order_for = 'Distributor';
                $retailer_type = 'Existing Distributor';
                break;
        }

        if (isset($invoiceData[$auRec[$i]->order_id][$auRec[$i]->item_id])) {
            $auRec[$i]->pendng_order_quantity = (floatval($auRec[$i]->order_quantity) - floatval($invoiceData[$auRec[$i]->order_id][$auRec[$i]->item_id]->invoiced_quantity));
            $auRec[$i]->pendng_order_amount = ((($auRec[$i]->pendng_order_quantity != '') ? ROUND($auRec[$i]->order_amount - $invoiceData[$auRec[$i]->order_id][$auRec[$i]->item_id]->invoiced_amount) : '0'));
            $auRec[$i]->invoiced_quantity = ($invoiceData[$auRec[$i]->order_id][$auRec[$i]->item_id]->invoiced_quantity);
            $auRec[$i]->invoiced_amount = ($invoiceData[$auRec[$i]->order_id][$auRec[$i]->item_id]->invoiced_amount);
        }
        $resonRemark = preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace(array('\t', '\n', '	', ','), ' ', $auRec[$i]->reason_remark));
        $remarktxt = preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace(array('\t', '\n', '	', ','), ' ', $auRec[$i]->remark));
        // Calculate Tonnage separate column  is required in the this Report AJAY@2016-03-22
        $data .= $order_for . "\t" . $auRec[$i]->order_id . "\t" . $date_of_order . "\t" . str_replace(array('\t', '\n', '  ', ','), ' ', $auRec[$i]->distributor_name) . "\t" . str_replace(array('\t', '\n', '  ', ','), ' ', $auRec[$i]->distributor_code) . "\t" .
            str_replace(array('\t', '\n', '  ', ','), ' ', $auRec[$i]->region_name) . "\t" . str_replace(array('\t', '\n', '  ', ','), ' ', $auRec[$i]->state_name) . "\t" . str_replace(array('\t', '\n', '  ', ','), ' ', $auRec[$i]->city_name) . "\t" .
            str_replace(array('\t', '\n', '  ', ','), ' ', $auRec[$i]->salesman_name) . "\t" . str_replace(array('\t', '\n', '  ', ','), ' ', $auRec[$i]->employee_code) . "\t" . str_replace(array('\t', '\n', '  ', ','), ' ', $auRec[$i]->category_name) . "\t" . $auRec[$i]->item_name . "\t" . $auRec[$i]->item_code . "\t" .
            $auRec[$i]->unit_code . "\t" . $auRec[$i]->order_quantity . "\t" . $auRec[$i]->order_amount . "\t" . $auRec[$i]->invoiced_quantity . "\t" . $auRec[$i]->invoiced_amount . "\t" .
            ((empty($auRec[$i]->pendng_order_quantity) && empty($auRec[$i]->invoiced_quantity)) ? ($auRec[$i]->order_quantity) : $auRec[$i]->pendng_order_quantity) . "\t" . (($auRec[$i]->pendng_order_amount == '') ? $auRec[$i]->order_amount : (($auRec[$i]->pendng_order_quantity == 0) ? 0 : $auRec[$i]->pendng_order_amount)) . "\t" . $auRec[$i]->order_from . "\t" . $remarktxt . "\t" . $resonRemark . "\n";


    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"New_Distributor_Report.xls\"");
    echo $data;
    exit;
}


//********************************************* Export Distributor Fully  Pending Order ******************************************** */
if (isset($_GET['export_distributor_fully_pending_order'])) {
    // echo "hello";exit;
    $data = "Date of Order\t Time\t Order Number\t Invoice Status\t Total Order Amount\t Total No. Of Items\t " .
        $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\t " . $AliaseUsers['salesman']
        . "\t  State\t District\t Market \t Address \t Order Status\tCancellation Date\tCancellation Remark\t Cancel By User Type\tCancel By\tReturn Remark \t Comments\t Reason\n";
    $sort = " ORDER BY date_of_order desc,time_of_order desc";
    if ($_SESSION['sel_sal'] != '') {
        $salesman .= " and s.salesman_id='" . $_SESSION['sel_sal'] . "'";
    }
    if ($_SESSION['FromOrderList'] != '') {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['FromOrderList'])) . "'";
    } else {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['ToOrderList'] != '') {
        $todate = " and o.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToOrderList'])) . "'";
    } else {
        $todate = " and o.date_of_order <= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['sel_dis'] != "") {
        $salesman .= " and o.distributor_id=" . $_SESSION['sel_dis'] . " ";
    } else {
        $salesman .= "";
    }
    if ($_SESSION['OrderBy'] != '') {
        if ($_SESSION['OrderBy'] == 1) {
            $orderby = "";
        }
        if ($_SESSION['OrderBy'] == 2) {
            $orderby = " and o.order_status='A' ";
        }
        if ($_SESSION['OrderBy'] == 3) {
            $orderby = " and o.order_status='I' ";
        }
        if ($_SESSION['OrderBy'] == 4) {
            $orderby = " and o.order_status='D' ";
        }
    } else {
        $orderby = "";
    }

    if ($_SESSION['userLoginType'] == 3 && $_SESSION['distributorId'] > 0) {
        $distributorCond = " AND o.distributor_id ='" . $_SESSION['distributorId'] . "' ";
    }
    //Todo Start : sudhanshu 03 May 2024 : change stocksit consditon for multip,e stocksit also chage in query
    if ($_SESSION['userLoginType'] == 7) {
        $StockistLogCond = " AND o.stockist_id='" . $_SESSION['stockistId'] . "' ";
    }
    //Todo End : sudhanshu 03 May 2024 : change stocksit consditon for multip,e stocksit also chage in query
    $where = " o.order_for='D' AND o.order_type IN('Yes','Return') AND (o.order_status='A' OR o.order_status='C')   $salesman $fromdate $todate  $distributorCond $StockistLogCond $orderbyand and o.account_id =" . $_SESSION['accountId'];
    // echo $where;die;
    $auRec = $_objAdmin->_getSelectList('table_distributor_order as o
             left join table_salesman as s on o.salesman_id=s.salesman_id
             left join table_distributors as d on d.distributor_id=o.distributor_id	
             left join table_stockist as stk on stk.stockist_id=o.stockist_id		
             left join state as st on st.state_id=d.state
            
             left join city as c on c.city_id=d.city
             ', "o.*,s.salesman_name,d.distributor_name,d.distributor_code, st.state_name,c.city_name, d.distributor_location, d.distributor_address,stk.stockist_name", $rp, $where . $sort, '');
    // echo "<pre>";
    // print_r($auRec);die;
    $remove = array("\n", "\r", "\n \r", "\t", ",");
    for ($i = 0; $i < count($auRec); $i++) {
        if ($auRec[$i]->order_type == 'Yes') {
            if ($auRec[$i]->order_status == 'A') {
                $status = "New Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }
            if ($auRec[$i]->order_status == 'C') {
                $status = "Cancelled";
            }
            $color = ($auRec[$i]->order_status == 'A') ? "A" : "P";
        }
        if ($auRec[$i]->order_type == 'No') {
            $status = ($auRec[$i]->order_status == 'A') ? "No Order" : "Processed";
            $color = ($auRec[$i]->order_status == 'A') ? "I" : "P";
        }
        if ($auRec[$i]->order_type == 'Adhoc') {
            if ($auRec[$i]->order_status == 'A') {
                $status = "New Adhoc Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }

            $color = ($auRec[$i]->order_status == 'A') ? "O" : "P";
        }
        //  echo "<pre>";
        //  print_r($auRec);die;
        if ($auRec[$i]->order_type == 'Return') {
            if ($auRec[$i]->order_status == 'A') {
                $status = "Return Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }

            $color = ($auRec[$i]->order_status == 'A') ? "O" : "P";
        }


        if ($auRec[$i]->order_status == 'A') {

            $orderStatus = 'Fully Pending';

        } else if ($auRec[$i]->order_status == 'C') {
            $orderStatus = '';
        } else if (is_array($CheckOrderSts) && count($CheckOrderSts) > 0) {
            $orderStatus = 'Partially Invoiced';
        } else {
            $orderStatus = 'Fully Invoiced';
        }
        //Todo Start : Sudhanshu 15 April : add cancel by column
        $cancelByUserType = '';
        $cancel_by = '';
        if (strtolower($auRec[$i]->cancel_by_user_type) == 'admin') {
            $cancelByUserType = 'Admin';
            $cancel_by = 'Admin';
        } elseif (strtolower($auRec[$i]->cancel_by_user_type) == 'stockist') {
            $cancelByUserType = $AliaseUsers['stockist'];
            $cancel_by = $auRec[$i]->stockist_name;
        } elseif (strtolower($auRec[$i]->cancel_by_user_type) == 'distributor') {
            $cancelByUserType = $AliaseUsers['distributor'];
            $cancel_by = $auRec[$i]->distributor_name;
        } elseif (strtolower($auRec[$i]->cancel_by_user_type) == 'salesman') {
            $cancelByUserType = $AliaseUsers['salesman'];
            $cancel_by = $auRec[$i]->salesman_name;
        }
        //Todo End : Sudhanshu 15 April : add cancel by column
        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);
        $auRec2 = $_objAdmin->_getSelectList2('table_distributor_order_detail', "count( distinct(item_id)) as total_item", '', " order_id = " . $auRec[$i]->order_id . " and type = 1");
        switch (strtolower($auRec[$i]->order_for)) {
            case 'r':
                $order_for = 'Retailer';
                break;
            case 'd':
                $order_for = 'Distributor';
                break;
        }

        if ($auRec[$i]->cancellation_date != "0000-00-00 00:00:00") {
            $cancel_date = $_objAdmin->_changeDate($auRec[$i]->cancellation_date);
        } else {
            $cancel_date = '';
        }

        $data .= $date_of_order . "\t" . $auRec[$i]->time_of_order . "\t" . $auRec[$i]->order_id . "\t" . $orderStatus .
            "\t" . $auRec[$i]->acc_total_invoice_amount . "\t" . $auRec2[0]->total_item . "\t" . str_replace($remove,
                ' ', $auRec[$i]->distributor_name) . "\t" . $auRec[$i]->distributor_code . "\t" .
            $auRec[$i]->salesman_name . "\t" . $auRec[$i]->state_name . "\t" . $auRec[$i]->city_name . "\t" .
            str_replace($remove, ' ', $auRec[$i]->distributor_location) . "\t" . str_replace($remove, ' ',
                $auRec[$i]->distributor_address) . "\t" . $status . "\t" . $cancel_date . "\t"
            . $auRec[$i]->cancellation_remark
            . "\t"
            . $cancelByUserType . "\t" . $cancel_by . $auRec[$i]->remark . "\t" .
            "\t" .
            $auRec[$i]->comments . "\t" . $auRec[$i]->tag_description . "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['distributor'] . " Fully Pending Order List.xls\"");
    echo $data;
    exit;
}

//******************************************** End Export Distributor Fully pending order ******************************************/
//********************************* distributor sales gst report ***************************/
if (isset($_GET['distributor_sales_gst_report'])) {
    $data = "GSTIN/UIN of Recipient\tReceiver Code\tReceiver Name\tPlace Of Supply\tInvoice Number\tInvoice Date\tBefore Discount Amount\tScheme Discount\tBefore Tax Value\tSGST\tCGST\tIGST\tTaxable Value\tCess Amount\n";
    if ($_SESSION['FromOrderList'] != '') {
        $fromdate = date('Y-m-d', strtotime($_SESSION['FromOrderList']));
    } else {
        $fromdate = date('Y-m-d');
    }
    if ($_SESSION['ToOrderList'] != '') {
        $todate = date('Y-m-d', strtotime($_SESSION['ToOrderList']));
    } else {
        $todate = date('Y-m-d');
    }
    if ($_SESSION['distributor_id'] != '' && $_SESSION['userLoginType'] != 3) {
        $disLogCond = " AND o.distributor_id='" . $_SESSION['distributor_id'] . "' ";
    }
    if ($_SESSION['userLoginType'] == 3) {
        $disLogCond = " AND o.distributor_id='" . $_SESSION['distributorId'] . "' ";
    }
    $sort = " ORDER BY o.bill_no DESC";
    $groupby = " GROUP BY o.invoice_id";
    $where = " od.type=1 and o.bill_date BETWEEN '" . $fromdate . "' AND '" . $todate . "' AND o.order_type='Yes' AND o.order_status='D' AND o.order_for='D' AND (o.order_type='Yes' OR o.order_type='Return') AND o.invoice_status='A' $disLogCond";
    // echo $where.'<br>'.$groupby;die;

    $auRec = $_objAdmin->_getSelectList('table_distributor_invoice AS o
					inner JOIN table_distributor_invoice_detail as od on od.invoice_id = o.invoice_id and od.ref_order_id = o.ref_order_id
					LEFT JOIN table_distributors as d ON d.distributor_id=o.distributor_id
					LEFT JOIN state as st on st.state_id = d.state',
        " SUM(od.total) as total_invoice_amt,o.acc_total_invoice_amount,o.date_of_order, o.bill_no,
					d.distributor_code, d.distributor_name, d.gst_no, st.state_name, st.state_code,
					SUM(od.acc_quantity*od.price) as before_dis_amount,SUM(od.discount_amount) as discount_amount,
					SUM(od.discount_amount) as acc_discount_amount,0 as new_scheme_discount,
					SUM((od.acc_quantity*od.price)-(od.discount_amount)) as amt_before_tax, SUM(od.gst_amount) as sgst_amount,
					SUM(od.cgst_amount) as cgst_amount, SUM(od.igst_amount) as igst_amount", '', $where . $groupby . $sort);
    $remove = array("\n", "\r\n", "\r", ",");
    $ttl_sgst_amount = $ttl_cgst_amount = $ttl_igst_amount = $gTotalAmount = $gTotalAfterTaxAmount = 0;
    $gTotaltoken = 0;
    $gTotalscheme = 0;
    for ($i = 0; $i < count($auRec); $i++) {
        $sgst_amount = $cgst_amount = $igst_amount = 0;
        $amt_before_tax = $amt_after_tax = 0;
//        if ($auRec[$i]->amt_before_tax > 0) {
//            $amt_before_tax = ROUND($auRec[$i]->amt_before_tax, 2);
//        }
        $bill_no = '';
        $bill_details = explode('-', $auRec[$i]->bill_no);
        $bill_no = end($bill_details);
        //$amt_before_tax = ($auRec[$i]->acc_total_invoice_amount-($sgst_amount+$cgst_amount+$igst_amount));
//        $amt_after_tax = floor($auRec[$i]->total_invoice_amt);
        $beforeDisAmount = round($auRec[$i]->before_dis_amount, 2);
        $DisAmount = $auRec[$i]->acc_discount_amount;
        $amt_before_tax = round(($auRec[$i]->before_dis_amount - $DisAmount), 2);
        if ($auRec[$i]->sgst_amount > 0) {
            $sgst_amount = $auRec[$i]->sgst_amount;
        }
        if ($auRec[$i]->cgst_amount > 0) {
            $cgst_amount = $auRec[$i]->cgst_amount;
        }
        if ($auRec[$i]->igst_amount > 0) {
            $igst_amount = $auRec[$i]->igst_amount;
        }
        $amt_after_tax = round(($auRec[$i]->before_dis_amount - $DisAmount) + $sgst_amount + $cgst_amount + $igst_amount, 2);
        $distributor_name = htmlentities($auRec[$i]->distributor_name, ENT_QUOTES | ENT_IGNORE, "UTF-8");
        $state_name = htmlentities($auRec[$i]->state_name, ENT_QUOTES | ENT_IGNORE, "UTF-8");
        $data .= $auRec[$i]->gst_no;
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->distributor_code);
        $data .= "\t";
        $data .= str_replace($remove, '', str_replace('&amp;', '&', $distributor_name));
        $data .= "\t";
        $data .= str_replace($remove, '', str_replace('&amp;', '&', $state_name));
        $data .= "\t";
        $data .= $bill_no;
        $data .= "\t";
        $data .= $_objAdmin->_changeDate($auRec[$i]->date_of_order);
        $data .= "\t";

        $data .= ROUND($beforeDisAmount, 2);
        $data .= "\t";
        $data .= ROUND($auRec[$i]->acc_discount_amount, 2);
        $data .= "\t";
        $data .= ROUND($amt_before_tax, 2);
        $data .= "\t";
        $data .= ROUND($sgst_amount, 2);
        $data .= "\t";
        $data .= ROUND($cgst_amount, 2);
        $data .= "\t";
        $data .= ROUND($igst_amount, 2);
        $data .= "\t";
        $data .= ROUND($amt_after_tax, 2);
        $data .= "\n";

        $gTotalBeforeDisAmount = $gTotalBeforeDisAmount + $beforeDisAmount;
        $gTotalDisAmount = $gTotalDisAmount + $DisAmount;
        $gTotalAmount = $gTotalAmount + ($beforeDisAmount - $DisAmount);
        $ttl_sgst_amount = $ttl_sgst_amount + $sgst_amount;
        $ttl_cgst_amount = $ttl_cgst_amount + $cgst_amount;
        $ttl_igst_amount = $ttl_igst_amount + $igst_amount;
        $gTotalAfterTaxAmount = $gTotalAfterTaxAmount + $amt_after_tax;
        $gTotaltoken = $gTotaltoken + $auRec[$i]->acc_discount_amount;
        $gTotalscheme = $gTotalscheme + $auRec[$i]->new_scheme_discount;
    }
    $data .= "\t\t\t\t\tGrand Total\t";

    $data .= $gTotalBeforeDisAmount;
    $data .= "\t";
    $data .= $gTotaltoken;
    $data .= "\t";
    $data .= $gTotalAmount;
    $data .= "\t";
    $data .= $ttl_sgst_amount;
    $data .= "\t";
    $data .= $ttl_cgst_amount;
    $data .= "\t";
    $data .= $ttl_igst_amount;
    $data .= "\t";
    $data .= floor($gTotalAfterTaxAmount);
    $data .= "\n";
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"DISTRIBUTOR_SALES_GST_REPORT.xls\"");
    echo $data;
    exit;
}
//**************************************** distriutor sales gst detals report *************************/
//**************************************** distriutor sales gst detals report *************************/
if (isset($_GET['distributor_sales_gst_detail_report'])) {

    $data = "GSTIN/UIN of Recipient\tReceiver Code\tReceiver Name\tPlace Of Supply\tInvoice Number\tInvoice Date\tItem Code\tItem Name\tHSN Code\tQuantity";
    $data .= "\tBefore Discount Amount\tScheme Discount\tRate\tBefore Tax Value\tSGST\tCGST\tIGST\tTaxable Value\tCess Amount\n";
    if ($_SESSION['FromOrderList'] != '') {
        $fromdate = date('Y-m-d', strtotime($_SESSION['FromOrderList']));
    } else {
        $fromdate = date('Y-m-d');
    }
    if ($_SESSION['ToOrderList'] != '') {
        $todate = date('Y-m-d', strtotime($_SESSION['ToOrderList']));
    } else {
        $todate = date('Y-m-d');
    }
    if ($_SESSION['userLoginType'] == 3) {
        $disLogCond = " AND o.distributor_id='" . $_SESSION['distributorId'] . "' ";
    }
    $groupby = " GROUP BY o.invoice_id, od.ref_order_id,od.item_id";
    $where = " od.type=1 and o.date_of_order BETWEEN '" . $fromdate . "' AND '" . $todate . "' AND o.order_type='Yes' AND o.order_status='D' AND o.order_for='D' AND o.invoice_status='A' $disLogCond";
    $auRec = $_objAdmin->_getSelectList('table_distributor_invoice AS o
					inner JOIN table_distributor_invoice_detail as od on od.invoice_id = o.invoice_id and od.ref_order_id = o.ref_order_id
					inner JOIN table_item as i on i.item_id = od.item_id
					LEFT JOIN table_group as g on g.group_id = i.group_id
					LEFT JOIN table_distributors as d ON d.distributor_id=o.distributor_id
					LEFT JOIN state as st on st.state_id = d.state', " o.bill_date, o.bill_no, d.distributor_code, 
					d.distributor_name, d.gst_no,
					i.item_name, i.item_code, od.*, g.hsn_code, st.state_name, st.state_code", '', $where . $groupby . $sort, '');
    $remove = array("\n", "\r\n", "\r", ",");
    $unArr = array();
    $ttl_sgst = $ttl_cgst = $ttl_igst = $ttl_before_tax_amount = $ttl_taxable_amount = 0;
    $ttl_token = 0;
    $ttl_scheme = 0;
    for ($i = 0; $i < count($auRec); $i++) {

        $amount_before_discount = '';
        $discount_amount = '';
        $sgst_amount = $cgst_amount = $igst_amount = 0;
        if ($auRec[$i]->gst_amount > 0) {
            $sgst_amount = $auRec[$i]->gst_amount;
        }
        if ($auRec[$i]->cgst_amount > 0) {
            $cgst_amount = $auRec[$i]->cgst_amount;
        }
        if ($auRec[$i]->igst_amount > 0) {
            $igst_amount = $auRec[$i]->igst_amount;
        }
        $data .= $auRec[$i]->gst_no;
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->distributor_code);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->distributor_name);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->state_name);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->bill_no);
        $data .= "\t";
        $data .= $_objAdmin->_changeDate($auRec[$i]->bill_date);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->item_code);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->item_name);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->hsn_code);
        $data .= "\t";
        $qty = $auRec[$i]->quantity;
        $data .= $qty;
        $data .= "\t";

        /*Added on request by veera sir. Added on 5 Dec by sachin*/
        $amount_before_discount = ($auRec[$i]->quantity * $auRec[$i]->price);
        $discount_amount = ($auRec[$i]->acc_discount_amount);
        $data .= $amount_before_discount;
        $data .= "\t";
        $data .= $auRec[$i]->acc_discount_amount;
        $data .= "\t";
        /*Added on request by veera sir. Added on 5 Dec by sachin*/
        $data .= ($auRec[$i]->gst_rate + $auRec[$i]->cgst_rate + $auRec[$i]->igst_rate);
        $data .= "\t";
        $data .= (($auRec[$i]->price * $auRec[$i]->quantity) - ($auRec[$i]->acc_discount_amount));
        $data .= "\t";
        $data .= $sgst_amount;
        $data .= "\t";
        $data .= $cgst_amount;
        $data .= "\t";
        $data .= $igst_amount;
        $data .= "\t";
        $data .= ((($auRec[$i]->quantity * $auRec[$i]->price) - ($auRec[$i]->acc_discount_amount)) + ($auRec[$i]->gst_amount + $auRec[$i]->cgst_amount + $auRec[$i]->igst_amount));
        $data .= "\t";
        $data .= '';
        $data .= "\n";
        $ttl_beforeDisAmt = $ttl_beforeDisAmt + $amount_before_discount;
        $ttl_DisAmt = $ttl_DisAmt + $discount_amount;
        $ttl_token = $ttl_token + $auRec[$i]->acc_discount_amount;

        $ttl_sgst = $ttl_sgst + $sgst_amount;
        $ttl_cgst = $ttl_cgst + $cgst_amount;
        $ttl_igst = $ttl_igst + $igst_amount;

        $ttl_before_tax_amount = $ttl_before_tax_amount + (($auRec[$i]->price * $auRec[$i]->quantity) - ($auRec[$i]->acc_discount_amount));
        $ttl_taxable_amount = ($ttl_taxable_amount + (((($auRec[$i]->quantity * $auRec[$i]->price) - ($auRec[$i]->acc_discount_amount))) + (($auRec[$i]->gst_amount) + ($auRec[$i]->cgst_amount) + ($auRec[$i]->igst_amount))));
    }
    $data .= "\t\t\t\t\t\t\t\t\tGrand Total\t";

    $data .= $ttl_beforeDisAmt;
    $data .= "\t";
    $data .= $ttl_token;
    $data .= "\t";
    $data .= "\t";
    $data .= $ttl_before_tax_amount;
    $data .= "\t";
    $data .= $ttl_sgst;
    $data .= "\t";
    $data .= $ttl_cgst;
    $data .= "\t";
    $data .= $ttl_igst;
    $data .= "\t";
    $data .= floor($ttl_taxable_amount);
    $data .= "\t";
    $data .= '';
    $data .= "\n";
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"DISTRIBUTOR_SALES_GST_DETAIL_REPORT.xls\"");
    echo $data;
    exit;
}
//******************************************************************************* */

//******************************************distributor pending order report *********************/
if (isset($_GET['export_distributor_pending_order_list'])) {
    //echo hello;exit;
    $data = "Order For\tDate\tTime\tOrder Number\tTotal Invoice Amount\t" . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\t" . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['salesman'] . " Code\t" . $AliaseUsers['stockist'] . " Name\t" . $AliaseUsers['stockist'] . " Code\tBranch Name\tBranch Code\tRegion\tState\tCity\tMarket\tAddress\tOrder Type\tOrder Status\n";
    $sort = " ORDER BY date_of_order desc,time_of_order desc";
    // if ($_SESSION['SalDisList'] != '') {
    //     $salesman = " and s.salesman_id='" . $_SESSION['SalDisList'] . "'";
    // }
    if ($_SESSION['salesmanId'] != 'All') {
        $salesman = " and o.salesman_id='" . $_SESSION['salesmanId'] . "'";
    }
    $validated_default_date = date("Y-m-d", strtotime("-7 days"));
    if ($_SESSION['FromDisList'] != '') {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['FromDisList'])) . "'";
    } else {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['ToDisList'] != '') {
        $todate = " and o.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToDisList'])) . "'";
    } else {
        $todate = " and o.date_of_order <= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['stockistId'] != "A") {
        $disList = "AND o.stockist_id=" . $_SESSION['stockistId'] . " ";
    } else {
        $disList = "";
    }
    if ($_SESSION['OrderBy'] != '') {
        if ($_SESSION['OrderBy'] == 1) {
            $orderby = "";
        }
        if ($_SESSION['OrderBy'] == 2) {
            $orderby = " and o.order_status='A' ";
        }
        if ($_SESSION['OrderBy'] == 3) {
            $orderby = " and o.order_status='I' ";
        }
        if ($_SESSION['OrderBy'] == 4) {
            $orderby = " and o.order_status='D' ";
        }
    } else {
        $orderby = "";
    }
    if ($_SESSION['userLoginType'] == 3 && $_SESSION['distributorId'] > 0) {
        $distributorCond = " AND o.distributor_id ='" . $_SESSION['distributorId'] . "' ";
    }
    $where = " AND d.new='' AND o.order_for='D' AND o.order_status !='D' AND o.order_status IN('A', 'I') AND 
	order_type IN('Yes', 'Return', 'Adhoc') AND o.distributor_id!='' $disList $disLogCond $salesman $fromdate $todate $regionCondition $stateCondition $salesOrgCond $distributorCond $orderby AND o.account_id =" . $_SESSION['accountId'];
    //echo $where;die;
    $auRec = $_objAdmin->_getSelectList('table_distributor_order as o
      left join table_stockist as stk on o.stockist_id=stk.stockist_id
      left join table_salesman as s on o.salesman_id=s.salesman_id
      left join table_distributors as d on d.distributor_id=o.distributor_id      
      left join state as st on st.state_id=d.state
      left join table_region as re on re.region_id=st.region_id
      left join city as c on c.city_id=d.city
      left join table_branch as br on br.branch_id = d.branch_id',
        "o.*,stk.stockist_name, stk.stockist_code,d.distributor_address,d.distributor_location,s.salesman_name,s.employee_code,d.distributor_name,d.distributor_code, re.region_name,st.state_name,c.city_name, br.branch_name, br.branch_code", '', $where . $sort, '');
    $remove = array("\n", "\r", "\n \r", "\t", ",");
    for ($i = 0; $i < count($auRec); $i++) {
        if ($auRec[$i]->order_status == 'A') {
            $status = "New Order";
            $color = "N";
        }
        if ($auRec[$i]->order_status == 'I') {
            $status = "Processed";
            $color = "I";
        }
        if ($auRec[$i]->order_status == 'D') {
            $status = "Dispatched";
            $color = "A";
        }

        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);
        /* Bill Type */
        $billTYPE = '';
        $billTYPE = '';
        switch (strtolower($auRec[$i]->bill_type)) {
            case 'apc':
                $billTYPE = "Advance Payment Collection";
                $bill_desc = $auRec[$i]->bill_desc;
                break;
            case 'ac':
                $billTYPE = "Advance Cheque";
                $bill_desc = $auRec[$i]->bill_desc;
                break;
            case 'fp':
                $billTYPE = "Flexible Plan";
                $bill_desc = $auRec[$i]->bill_desc;
                break;
        }
        switch (strtolower($auRec[$i]->order_for)) {
            case 'r':
                $order_for = 'Retailer';
                break;
            case 'd':
                $order_for = 'Distributor';
                break;
        }
        if ($auRec[$i]->order_type == 'Yes') {
            if ($auRec[$i]->order_status == 'A') {
                $orderType = "Sales Order";
            }
            //$color = 'A';
        }
        if ($auRec[$i]->order_type == 'Return') {
            if ($auRec[$i]->order_status == 'A') {
                $orderType = "Return Order";
            }
            //$color = 'O';
        }
        if ($auRec[$i]->order_status != 'A') {
            $CheckOrderSts = $_objAdmin->_getSelectList2('table_order as o inner join table_order_detail as od on o.order_id = od.order_id', "od.quantity, od.acc_quantity, od.is_processed ", '', " o.order_id='" . $auRec[$i]->order_id . "' AND ((od.quantity = od.acc_quantity AND od.is_processed=0) OR (od.quantity >od.acc_quantity AND od.is_processed=1)) ");
            if (is_array($CheckOrderSts) && count($CheckOrderSts) > 0) {
                $orderStatus = 'Partially Pending';
            } else {
                $orderStatus = 'Fully Invoiced';
            }
        } else {
            $orderStatus = 'Fully Pending';
        }
        if ($orderStatus != "Fully Invoiced") {
            $data .= $order_for . "\t" . $date_of_order . "\t" . $auRec[$i]->time_of_order . "\t" . $auRec[$i]->order_id . "\t" . ROUND($auRec[$i]->acc_total_invoice_amount, 2) . "\t" . $auRec[$i]->distributor_name . "\t" . $auRec[$i]->distributor_code . "\t" . $auRec[$i]->salesman_name . "\t" . $auRec[$i]->employee_code . "\t" . $auRec[$i]->stockist_name . "\t" . $auRec[$i]->stockist_code . "\t" . $auRec[$i]->branch_name . "\t" . $auRec[$i]->branch_code . "\t" . $auRec[$i]->region_name . "\t" . $auRec[$i]->state_name . "\t" . str_replace($remove, ' ', $auRec[$i]->city_name) . "\t" . str_replace($remove, ' ', $auRec[$i]->distributor_location) . "\t" . str_replace($remove, ' ', $auRec[$i]->distributor_address) . "\t" . $orderType . "\t" . $orderStatus . "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['distribuotor'] . " Fully Partial Pending Order List.xls\"");
    echo $data;
    exit;
}
//************************************end distributor pending order */
// Todo Start : Jatin : 5 july 2023 : replice export of distributor list master
if (isset($_GET['export_distributors_master_list'])) {
    $data = "" . $AliaseUsers['distributor'] . " Code\t" . $AliaseUsers['distributor'] . " Name\t Phone Number1 \t Phone Number2 \t " . $AliaseUsers['distributor'] . " Address  \t Country\t Zone\tState \t District \t City \t " . $AliaseUsers['distributor'] . " Type\t Username\tSurvey Status\tGST NO \t " . $AliaseUsers['stockist'] . " Name \t   Routes\t Zipcode \t SMS Mobile Number \t   Landline Number \t Contact Person1 \t Contact Person Number1 \t Contact Person2 \t Contact Person Number2 \t Email ID1 \t Email ID2 \tStart Date\tEnd Date\tStatus\n";


    $dis = '';
    if ($_SESSION['stockistId'] != "" && $_SESSION['stockistId'] != "0") {
        $dis = " and d.stockist_id='" . $_SESSION['stockistId'] . "'";
    }
    //Todo Start : sudhanshu 28 may 2024 : add status filet
    $statusCond = '';
    if (isset($_SESSION['disStatus1']) && $_SESSION['disStatus1'] != '') {
        $statusCond = " AND d.status='" . $_SESSION['disStatus1'] . "'";
    }
    //Todo End : sudhanshu 28 may 2024 : add status filet
    $condi = " d.account_id='" . $_SESSION['accountId'] . "' $dis AND d.new = ''  $statusCond GROUP BY d.distributor_id ORDER BY d.distributor_name ASC";
    $auRec = $_objAdmin->_getSelectList('table_distributors as d 
    LEFT JOIN table_route_retailer as rr ON rr.distributor_id = d.distributor_id
	LEFT JOIN table_route AS RT ON RT.route_id = rr.route_id
	left join country as con on con.country_id = d.country
	left join state as s on d.state=s.state_id 
	left join table_web_users as w on w.distributor_id=d.distributor_id 
	left join city as c on d.city=c.city_id
	LEFT JOIN table_zone_state_mapping as szsm on szsm.state_id = d.state and szsm.account_id = d.account_id
    LEFT JOIN table_zone as sz on sz.zone_id = szsm.zone_id 
	left join table_location as loc on loc.location_id = d.location
	left join table_stockist as ts on ts.stockist_id = d.stockist_id
	left join table_distributor_type_master as tdm on tdm.dis_type_id = d.distributor_type_id', "d.*,con.country_name,loc.location_name,s.state_name,tdm.dis_type_name,w.username,c.city_name,ts.stockist_name,GROUP_CONCAT(DISTINCT RT.route_name SEPARATOR ', ') AS routes,sz.zone_name", '', $condi);
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $surveyStatus = '';
            if (strtolower($auRec[$i]->survey_status) == 'c') {
                $surveyStatus = 'Surveyed';
            } elseif (strtolower($auRec[$i]->survey_status) == 'i') {
                $surveyStatus = 'Not Surveyed';
            } elseif (strtolower($auRec[$i]->survey_status) == 'n') {
                $surveyStatus = 'Rejected';
            } else {
                $surveyStatus = '';
            }
            $distStatus = (strtolower($auRec[$i]->status) == 'a') ? 'Active' : 'Inactive';
            $start_date = $_objAdmin->_changeDate($auRec[$i]->start_date);
            $end_date = $_objAdmin->_changeDate($auRec[$i]->end_date);

            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_phone_no . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_phone_no2 . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_address . '"';
            $data .= "\t";
//            $data .= '"' . $auRec[$i]->distributor_address2 . '"';
//            $data .= "\t";
            $data .= '"' . $auRec[$i]->country_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->zone_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->dis_type_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->username . '"';
            $data .= "\t";
            $data .= '"' . $surveyStatus . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->gst_no . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->stockist_name . '"';
            $data .= "\t";

            $data .= '"' . $auRec[$i]->routes . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->zipcode . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->sms_number . '"';
            $data .= "\t";

//            $data .= '"' . $auRec[$i]->distributor_phone_no3 . '"';
//            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_leadline_no . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->contact_person . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->contact_number . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->contact_person2 . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->contact_number2 . '"';
            $data .= "\t";
//            $data .= '"' . $auRec[$i]->contact_person3 . '"';
//            $data .= "\t";
//            $data .= '"' . $auRec[$i]->contact_number3 . '"';
//            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_email . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_email2 . '"';
            $data .= "\t";
//            $data .= '"' . $auRec[$i]->distributor_email3 . '"';
//            $data .= "\t";

//            $data .= '"' . $auRec[$i]->region_name . '"';
//            $data .= "\t";
            $data .= '"' . $start_date . '"';
            $data .= "\t";
            $data .= '"' . $end_date . '"';
            $data .= "\t";
            $data .= '"' . $distStatus . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['distributor'] . "_list.xls\"");
    echo $data;
    exit;
}

// Todo Start : Jatin : 11 July 2023 : export of distributor salesman report in dms

if (isset($_GET['export_distributor_salesman_detail_order_listing'])) {
    //echo hello;exit;
    $data = "Order For \t Date\t Time\t Order Number\t Total Order Amount\t Total No. Of Items\t " . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\t " . $AliaseUsers['salesman'] . "\t  State\t City\t Market \t Address \t Order Status \t Comments\t Reason\tItem Name\tItem Code\tItem Remark\tUOM\tQuantity\tPrice\tTotal\n";
    $sort = " ORDER BY date_of_order desc,time_of_order desc";
    if ($_SESSION['SalDisList'] != '') {
        $salesman = " and s.salesman_id='" . $_SESSION['SalDisList'] . "'";
    }
    if ($_SESSION['FromOrderList'] != '') {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['FromOrderList'])) . "'";
    } else {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['ToOrderList'] != '') {
        $todate = " and o.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToOrderList'])) . "'";
    } else {
        $todate = " and o.date_of_order <= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['distributorId'] != "A") {
        $disList = " o.distributor_id=" . $_SESSION['distributorId'] . " and";
    } else {
        $disList = "";
    }
    if ($_SESSION['OrderBy'] != '') {
        if ($_SESSION['OrderBy'] == 1) {
            $orderby = "";
        }
        if ($_SESSION['OrderBy'] == 2) {
            $orderby = " and o.order_status='A' ";
        }
        if ($_SESSION['OrderBy'] == 3) {
            $orderby = " and o.order_status='I' ";
        }
        if ($_SESSION['OrderBy'] == 4) {
            $orderby = " and o.order_status='D' ";
        }
    } else {
        $orderby = "";
    }

    if ($_SESSION['userLoginType'] == 3 && $_SESSION['distributorId'] > 0) {
        $distributorCond = " AND o.distributor_id ='" . $_SESSION['distributorId'] . "' ";
    }
    if ($_SESSION['userLoginType'] == 7 && $_SESSION['stockistId'] > 0) {
        $distributorCond .= " AND o.stockist_id ='" . $_SESSION['stockistId'] . "' ";
    }
    // When salesman is loggedin
    if (($_SESSION['userLoginType'] == 5) && ($_SESSION['salesmanId'] > 0)) {
        $disIdArr = $_objAdmin->getRouteWiseDistributors($_SESSION['salesmanId'], $_SESSION['accountId']);

        if (is_array($disIdArr) && (count($disIdArr) > 0)) {
            $disIds = implode(',', $disIdArr);
            $distributorCond .= " AND o.distributor_id IN($disIds) ";

        }
    }
    $where = " o.order_for='D' and o.distributor_id!=''  $salesman $fromdate $todate  $distributorCond $orderby";
    $auRec = $_objAdmin->_getSelectList('table_distributor_order as o
            left join table_distributor_order_detail as tod on tod.order_id = o.order_id
            left join table_item as i on i.item_id = tod.item_id
			left join table_salesman as s on o.salesman_id=s.salesman_id
			left join table_distributors as d on d.distributor_id=o.distributor_id			
			left join state as st on st.state_id=d.state
			left join city as c on c.city_id=d.city
			left join table_tags as t on t.tag_id=o.reason
			', "o.*,s.salesman_name,d.distributor_name,d.distributor_code,st.state_name,c.city_name, d.distributor_location, d.distributor_address,i.item_name,i.item_code,tod.quantity,tod.price,tod.total,tod.item_unit_type,tod.remarks,t.tag_description", $rp, $where . $sort, '');
//    echo "<pre>";
//    print_R($auRec);
//    die;
    $remove = array("\n", "\r", "\n \r", "\t", ",");
    for ($i = 0; $i < count($auRec); $i++) {
        if ($auRec[$i]->order_type == 'Yes') {
            if ($auRec[$i]->order_status == 'A') {
                $status = "New Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }
            $color = ($auRec[$i]->order_status == 'A') ? "A" : "P";
        }
        if ($auRec[$i]->order_type == 'No') {
            $status = ($auRec[$i]->order_status == 'A') ? "No Order" : "Processed";
            $color = ($auRec[$i]->order_status == 'A') ? "I" : "P";
        }
        if ($auRec[$i]->order_type == 'Adhoc') {
            if ($auRec[$i]->order_status == 'A') {
                $status = "New Adhoc Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }

            $color = ($auRec[$i]->order_status == 'A') ? "O" : "P";
        }
        if ($auRec[$i]->order_type == 'Return') {
            if ($auRec[$i]->order_status == 'A') {
                $status = "Return Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }

            $color = ($auRec[$i]->order_status == 'A') ? "O" : "P";
        }

        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);
        $auRec2 = $_objAdmin->_getSelectList2('table_distributor_order_detail', "count( distinct(item_id)) as total_item", '', " order_id = " . $auRec[$i]->order_id . " and type = 1");
        switch (strtolower($auRec[$i]->order_for)) {
            case 'r':
                $order_for = 'Retailer';
                break;
            case 'd':
                $order_for = 'Distributor';
                break;
        }


        //Todo Start :  Sudhanshu 21 march 2024 : aadd collumn UOM
        $uom = ($auRec[$i]->item_unit_type != '') ? $auRec[$i]->item_unit_type : 'Pcs';
        //Todo End : Sudhanshu 21 march 2024 : aadd collumn UOM
        $data .= $order_for . "\t" . $date_of_order . "\t" . $auRec[$i]->time_of_order . "\t" . $auRec[$i]->order_id
            . "\t" . number_format(floor($auRec[$i]->acc_total_invoice_amount), 2) . "\t" . $auRec2[0]->total_item . "\t" . str_replace($remove, ' ', $auRec[$i]->distributor_name) . "\t" . $auRec[$i]->distributor_code . "\t" . $auRec[$i]->salesman_name . "\t" . $auRec[$i]->state_name . "\t" . $auRec[$i]->city_name . "\t" . str_replace($remove, ' ', $auRec[$i]->distributor_location) . "\t" . str_replace($remove, ' ', $auRec[$i]->distributor_address) . "\t" . $status . "\t" . $auRec[$i]->reason_remark . "\t" . $auRec[$i]->tag_description . "\t" . $auRec[$i]->item_name . "\t" . $auRec[$i]->item_code . "\t" . $auRec[$i]->remarks . "\t" . $uom . "\t" . $auRec[$i]->quantity . "\t" . $auRec[$i]->price . "\t" . $auRec[$i]->total . "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['distributor'] . " Detail Order List.xls\"");
    echo $data;
    exit;
}

if (isset($_GET['export_distributor_salesman_order_listing'])) {
    //echo hello;exit;
    $data = "Order For \t Date\t Time\t Order Number\t Total Order Amount\t Total No. Of Items\tTotal Order Qty\t " .
        $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\t " . $AliaseUsers['salesman'] . "\t  State\t City\t Market \t Address \t Order Status \t Comments\t Reason\tPhoto Count\n";
    $sort = " ORDER BY date_of_order desc,time_of_order desc";
    if ($_SESSION['SalDisList'] != '') {
        $salesman = " and s.salesman_id='" . $_SESSION['SalDisList'] . "'";
    }
    if ($_SESSION['FromOrderList'] != '') {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['FromOrderList'])) . "'";
    } else {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['ToOrderList'] != '') {
        $todate = " and o.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToOrderList'])) . "'";
    } else {
        $todate = " and o.date_of_order <= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['distributorId'] != "A") {
        $disList = " o.distributor_id=" . $_SESSION['distributorId'] . " and";
    } else {
        $disList = "";
    }
    if ($_SESSION['OrderBy'] != '') {
        if ($_SESSION['OrderBy'] == 1) {
            $orderby = "";
        }
        if ($_SESSION['OrderBy'] == 2) {
            $orderby = " and o.order_status='A' ";
        }
        if ($_SESSION['OrderBy'] == 3) {
            $orderby = " and o.order_status='I' ";
        }
        if ($_SESSION['OrderBy'] == 4) {
            $orderby = " and o.order_status='D' ";
        }
    } else {
        $orderby = "";
    }

    if ($_SESSION['userLoginType'] == 3 && $_SESSION['distributorId'] > 0) {
        $distributorCond = " AND o.distributor_id ='" . $_SESSION['distributorId'] . "' ";
    }
    if ($_SESSION['userLoginType'] == 7 && $_SESSION['stockistId'] > 0) {
        $distributorCond .= " AND o.stockist_id ='" . $_SESSION['stockistId'] . "' ";
    }
    // When salesman is loggedin
    if (($_SESSION['userLoginType'] == 5) && ($_SESSION['salesmanId'] > 0)) {
        $disIdArr = $_objAdmin->getRouteWiseDistributors($_SESSION['salesmanId'], $_SESSION['accountId']);

        if (is_array($disIdArr) && (count($disIdArr) > 0)) {
            $disIds = implode(',', $disIdArr);
            $distributorCond .= " AND o.distributor_id IN($disIds) ";

        }
    }

    $where = " o.order_for='D' and o.distributor_id!=''  $salesman $fromdate $todate  $distributorCond $orderby";
    $auRec = $_objAdmin->_getSelectList('table_distributor_order as o
			left join table_salesman as s on o.salesman_id=s.salesman_id
			left join table_distributors as d on d.distributor_id=o.distributor_id			
			left join state as st on st.state_id=d.state
			left join city as c on c.city_id=d.city
			left join table_tags as t on t.tag_id=o.reason
			', "o.*,s.salesman_name,d.distributor_name,d.distributor_code,st.state_name,c.city_name, d.distributor_location, d.distributor_address,t.tag_description", $rp, $where . $sort, '');
    $remove = array("\n", "\r", "\n \r", "\t", ",");
    for ($i = 0; $i < count($auRec); $i++) {
        if ($auRec[$i]->order_type == 'Yes') {
            if ($auRec[$i]->order_status == 'A') {
                $status = "New Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }
            $color = ($auRec[$i]->order_status == 'A') ? "A" : "P";
        }
        if ($auRec[$i]->order_type == 'No') {
            $status = ($auRec[$i]->order_status == 'A') ? "No Order" : "Processed";
            $color = ($auRec[$i]->order_status == 'A') ? "I" : "P";
        }
        if ($auRec[$i]->order_type == 'Adhoc') {
            if ($auRec[$i]->order_status == 'A') {
                $status = "New Adhoc Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }

            $color = ($auRec[$i]->order_status == 'A') ? "O" : "P";
        }
        if ($auRec[$i]->order_type == 'Return') {
            if ($auRec[$i]->order_status == 'A') {
                $status = "Return Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }

            $color = ($auRec[$i]->order_status == 'A') ? "O" : "P";
        }

        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);
        $auRec2 = $_objAdmin->_getSelectList2('table_distributor_order_detail', "count( distinct(item_id)) as total_item,sum(quantity) as  total_qty", '', " order_id = " . $auRec[$i]->order_id . " and type = 1");
        switch (strtolower($auRec[$i]->order_for)) {
            case 'r':
                $order_for = 'Retailer';
                break;
            case 'd':
                $order_for = 'Distributor';
                break;
        }

        $data .= $order_for . "\t" . $date_of_order . "\t" . $auRec[$i]->time_of_order . "\t" . $auRec[$i]->order_id
            . "\t" . number_format(floor($auRec[$i]->acc_total_invoice_amount), 2) . "\t" . $auRec2[0]->total_item . "\t" . $auRec2[0]->total_qty . "\t" . str_replace($remove, ' ', $auRec[$i]->distributor_name) . "\t" . $auRec[$i]->distributor_code . "\t" . $auRec[$i]->salesman_name . "\t" . $auRec[$i]->state_name . "\t" . $auRec[$i]->city_name . "\t" . str_replace($remove, ' ', $auRec[$i]->distributor_location) . "\t" . str_replace($remove, ' ', $auRec[$i]->distributor_address) . "\t" . $status . "\t" . $auRec[$i]->reason_remark . "\t" . $auRec[$i]->tag_description . "\t" . $auRec[$i]->photo_count . "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['distributor'] . " Order List.xls\"");
    echo $data;
    exit;
}


// Todo End : Jatin : 11 July 2023 : export of distributor salesman report in dms

// Todo Start : Jatin : 12-July-2023 : export marketing item report
if (isset($_GET['export_marketing_item_report'])) {
    $data = "Activity Date \t Activity Time \t" . $AliaseUsers['salesman'] . " Code\t" . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['retailer'] . " Code\t" . $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['retailer'] . " Group\t" . $AliaseUsers['retailer'] . " Channel\t" . $AliaseUsers['retailer'] . " Classification\t" . $AliaseUsers['retailer'] . " Type\t" . $AliaseUsers['distributor'] . " Code\t" . $AliaseUsers['distributor'] . " Name\t Item Name \t Item Code \t Item Grade\t Category\t Brand\t Quantity\tPhoto Count \n";

    $auRec = $_objAdmin->_getSelectList2('table_market_item_order as mio 
    left join table_market_item_order_detail as dtl on dtl.market_item_order_id = mio.market_item_order_id
    left join table_item as i on i.item_id = dtl.item_id
    left join table_grade as bg on bg.grade_id=i.grade_id
    left join table_category as c on c.category_id=i.category_id 
    left join table_brands as b on b.brand_id=i.brand_id
    left join table_salesman as s on mio.salesman_id = s.salesman_id 
    left join table_retailer as tr on mio.retailer_id = tr.retailer_id 
    LEFT JOIN table_retailer_group as rg ON rg.group_id = tr.group_id
    left join table_retailer_type_master as rtm ON rtm.type_id=tr.type_id
    left join table_retailer_channel_master as rc ON rc.channel_id=tr.channel_id 
    left join table_relationship as rel ON rel.relationship_id=tr.relationship_id 
    left join table_distributors as td on tr.distributor_id = td.distributor_id', 'mio.*,s.salesman_name,s.employee_code,tr.retailer_name ,tr.retailer_code,td.distributor_name ,td.distributor_code,i.item_code,i.item_name,dtl.quantity,rg.group_name,rtm.type_name,rc.channel_name,rel.relationship_desc as relation,b.brand_name,bg.grade_name,c.category_name', '', " (mio.order_date BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromAttList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToAttList'])) . "') $salesman ORDER BY mio.market_item_order_id DESC");

    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . $_objAdmin->_changeDate($auRec[$i]->order_date) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->order_time . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->group_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->channel_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->relation . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->type_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->grade_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->category_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->brand_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->quantity . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->photo_count . '"';
            $data .= "\n";
        }
    }

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Market Item Report List.xls\"");
    echo $data;
    exit;
}
// Todo End : Jatin : 12-July-2023 : export marketing item report

// Todo Start : Jatin : 18 July 2023 : export dynamic route wise distributor Dms order Report
if (isset($_GET['dynamic_export_distributor_salesman_order_listing'])) {
    //echo hello;exit;
    $data = "Order For \t Date\t Time\t Order Number\t Total Order Amount\t Total No. Of Items\tTotal Order Qty\t " . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\t" . $AliaseUsers['distributor'] . " Zone\t" . $AliaseUsers['distributor'] . " State\t" . $AliaseUsers['distributor'] . " District\t" . $AliaseUsers['salesman'] . " Name \t" . $AliaseUsers['salesman'] . " Zone \t " . $AliaseUsers['salesman'] . " State\t" . $AliaseUsers['salesman'] . " District\t Market \t Address \t Order Status \t Order Distance\tComments\t Reason\tPhoto Count\n";
    $sort = " ORDER BY date_of_order desc,time_of_order desc";

    // ---------------start dynamic filter condition-----------
    $salesmanCnd = '';
    $salCond = '';

    if (isset($_SESSION['fil_salesman']) && $_SESSION['fil_salesman'] > 0) {
        $salesmanCnd = ' AND s.salesman_id = "' . $_SESSION['fil_salesman'] . '"';
    } else if (isset($_SESSION['fil_salesman_manager']) && ($_SESSION['fil_salesman_manager'] > 0)) {
        $salesmanManagerId = $_SESSION['fil_salesman_manager'];
        $account_id = $_SESSION['accountId'];
        $res = $this->_getSelectList2('table_salesman_hierarchy_relationship AS SHR 
    LEFT JOIN table_salesman_hierarchy AS SH ON SH.hierarchy_id = SHR.hierarchy_id
    LEFT JOIN table_salesman AS s ON s.salesman_id = SHR.salesman_id', 's.salesman_id,SH.hierarchy_id,SH.sort_order', '', " SH.account_id=" . $account_id . " AND SHR.salesman_id = $salesmanManagerId ORDER BY SH.sort_order ASC ");
        if (is_array($res) && (count($res) > 0)) {
            $sortOrder = $res[0]->sort_order;
            $_objArrayList = new ArrayList();
            $getBottomUsersIdArr = $_objArrayList->getSalesmansBottomUsers(array($salesmanManagerId), $sortOrder, $account_id);

            if (is_array($getBottomUsersIdArr) && (count($getBottomUsersIdArr) > 0)) {
                $bottomUsersIds = implode(',', $getBottomUsersIdArr);
            }

            $salesmanCnd = " AND s.salesman_id IN($bottomUsersIds) ";
        }
    } else if (isset($_SESSION['fil_salesman_designation']) && ($_SESSION['fil_salesman_designation'] > 0)) {
        $account_id = $_SESSION['accountId'];
        $_objArrayList = new ArrayList();
        $getDesignationWiseBottomUsersIdArr = $_objArrayList->getDesignationWiseBottomUsers($_SESSION['fil_salesman_designation'], $account_id);

        if (is_array($getDesignationWiseBottomUsersIdArr) && (count($getDesignationWiseBottomUsersIdArr) > 0)) {
            $bottomUsersIds = implode(',', $getDesignationWiseBottomUsersIdArr);
            $salesmanCnd = " AND s.salesman_id IN($bottomUsersIds) ";
        }
    } else {
        $salesmanCnd .= '';
    }
    if (isset($_SESSION['fil_distributor']) && $_SESSION['fil_distributor'] > 0) {
        $salesmanCnd .= ' AND d.distributor_id = "' . $_SESSION['fil_distributor'] . '"';
    }
    if (isset($_SESSION['fil_salesman_zone']) && $_SESSION['fil_salesman_zone'] > 0) {
        $salesmanCnd .= ' AND z.zone_id = "' . $_SESSION['fil_salesman_zone'] . '"';
    }
    if (isset($_SESSION['fil_salesman_state']) && $_SESSION['fil_salesman_state'] > 0) {
        $salesmanCnd .= ' AND s.state = "' . $_SESSION['fil_salesman_state'] . '"';
    }
    if (isset($_SESSION['fil_distributor_state']) && !empty($_SESSION['fil_distributor_state']) && $_SESSION['fil_distributor_state'] > 0) {
        $salesmanCnd .= " AND d.state=" . $_SESSION['fil_distributor_state'];
    }
    if (isset($_SESSION['fil_distributor_zone']) && !empty($_SESSION['fil_distributor_zone']) && $_SESSION['fil_distributor_zone'] > 0) {
        $salesmanCnd .= " AND z2.zone_id=" . $_SESSION['fil_distributor_zone'];
    }
    if (isset($_SESSION['fil_order_status']) && !empty($_SESSION['fil_order_status'])) {
        $salesmanCnd .= ' AND o.order_status="' . $_SESSION['fil_order_status'] . '"';
    }


    // Date range , month and year
    if (!isset($_SESSION['fil_from']) && empty($_SESSION['fil_from'])) {
        $_SESSION['fil_from'] = date('d M Y');
    }

    if (!isset($_SESSION['fil_to']) && empty($_SESSION['fil_to'])) {
        $_SESSION['fil_to'] = date('d M Y');
    }
    if (isset($_SESSION['fil_month']) && !empty($_SESSION['fil_month']) && isset($_SESSION['fil_year']) && !empty($_SESSION['fil_year'])) {
        $_SESSION['fil_from'] = date('Y-m-d', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
        $_SESSION['fil_to'] = date('Y-m-t', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
    }
    $tim_date = " and o.date_of_order BETWEEN '" . date('Y-m-d', strtotime
        ($_SESSION['fil_from'])) .
        "' AND '" . date('Y-m-d', strtotime($_SESSION['fil_to'])) . "'";


    // -------------End dynamic filter condition------------

    if ($_SESSION['distributorId'] != "A") {
        $disList = " o.distributor_id=" . $_SESSION['distributorId'] . " and";
    } else {
        $disList = "";
    }
    if ($_SESSION['OrderBy'] != '') {
        if ($_SESSION['OrderBy'] == 1) {
            $orderby = "";
        }
        if ($_SESSION['OrderBy'] == 2) {
            $orderby = " and o.order_status='A' ";
        }
        if ($_SESSION['OrderBy'] == 3) {
            $orderby = " and o.order_status='I' ";
        }
        if ($_SESSION['OrderBy'] == 4) {
            $orderby = " and o.order_status='D' ";
        }
    } else {
        $orderby = "";
    }

    if ($_SESSION['userLoginType'] == 3 && $_SESSION['distributorId'] > 0) {
        $distributorCond = " AND o.distributor_id ='" . $_SESSION['distributorId'] . "' ";
    }
    if ($_SESSION['userLoginType'] == 7 && $_SESSION['stockistId'] > 0) {
        $distributorCond .= " AND o.stockist_id ='" . $_SESSION['stockistId'] . "' ";
    }
    // When salesman is loggedin
    if (($_SESSION['userLoginType'] == 5) && ($_SESSION['salesmanId'] > 0)) {
        $disIdArr = $_objAdmin->getRouteWiseDistributors($_SESSION['salesmanId'], $_SESSION['accountId']);

        if (is_array($disIdArr) && (count($disIdArr) > 0)) {
            $disIds = implode(',', $disIdArr);
            $distributorCond .= " AND o.distributor_id IN($disIds) ";

        }
    }

    $where = " o.order_for='D' and o.distributor_id!=''  $salesman $tim_date $salesmanCnd $distributorCond $orderby";
    $auRec = $_objAdmin->_getSelectList('table_distributor_order as o
    left join table_salesman as s on o.salesman_id=s.salesman_id
    left join table_distributors as d on d.distributor_id=o.distributor_id
    left join state as ss on ss.state_id = s.state
    left join state as st on st.state_id = d.state
    left join table_zone_state_mapping as zsm1 on zsm1.state_id = s.state and zsm1.account_id = s.account_id
    left join table_zone as z on z.zone_id = zsm1.zone_id
  	left join table_zone_state_mapping as zsm on zsm.state_id = d.state and zsm.account_id = d.account_id 
  	left join table_tags as t on t.tag_id=o.reason
  	left join table_zone as z1 on z1.zone_id = zsm.zone_id
  	left join city as c on c.city_id=d.city
  	left join city as c1 on c1.city_id = s.city
			', "o.*,s.salesman_name,d.distributor_name,d.distributor_code,d.distributor_location, d.distributor_address, st.state_name as dis_state,c1.city_name as sal_city ,c.city_name as dis_city,ss.state_name as sal_state,z.zone_name as sal_zone,z1.zone_name as dis_zone,t.tag_description", $rp, $where . $sort, '');

    //Todo Start : get distributor lat lag : sudhanshu : 02 july 2024

    $getDisSurveyLatLng = $_objAdmin->_getSelectList("table_distributors as d", "d.distributor_id,d.lat,d.lng", "", " d.status = 'A' AND d.lat_lng_capcure_accuracy!=0 AND (d.lat != '0.0' AND d.lng != '0.0') AND (d.lat != '' AND d.lng != '') ORDER BY d.distributor_id ASC");
    $disSurveyLatLngArr = [];
    if (is_array($getDisSurveyLatLng) && (count($getDisSurveyLatLng) > 0)) {
        foreach ($getDisSurveyLatLng as $key => $disSurveyLatLng) {
            $disSurveyLatLngArr[$disSurveyLatLng->distributor_id] = $disSurveyLatLng;
        }
    }

    //Todo End : get distributor lat lag : sudhanshu : 02 july 2024
    $remove = array("\n", "\r", "\n \r", "\t", ",");
    for ($i = 0; $i < count($auRec); $i++) {
        if ($auRec[$i]->order_type == 'Yes') {
            if ($auRec[$i]->order_status == 'A') {
                $status = "New Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }
            $color = ($auRec[$i]->order_status == 'A') ? "A" : "P";
        }
        if ($auRec[$i]->order_type == 'No') {
            $status = ($auRec[$i]->order_status == 'A') ? "No Order" : "Processed";
            $color = ($auRec[$i]->order_status == 'A') ? "I" : "P";
        }
        if ($auRec[$i]->order_type == 'Adhoc') {
            if ($auRec[$i]->order_status == 'A') {
                $status = "New Adhoc Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }

            $color = ($auRec[$i]->order_status == 'A') ? "O" : "P";
        }
        if ($auRec[$i]->order_type == 'Return') {
            if ($auRec[$i]->order_status == 'A') {
                $status = "Return Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }

            $color = ($auRec[$i]->order_status == 'A') ? "O" : "P";
        }

        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);
        $auRec2 = $_objAdmin->_getSelectList2('table_distributor_order_detail', "count( distinct(item_id)) as total_item,sum(quantity) as total_qty", '', " order_id = " . $auRec[$i]->order_id . " and type = 1");
        switch (strtolower($auRec[$i]->order_for)) {
            case 'r':
                $order_for = 'Retailer';
                break;
            case 'd':
                $order_for = 'Distributor';
                break;
        }
        //Todo Start : sudhanshu 02 july 204 : get distance
        if ((isset($auRec[$i]->lat) && !empty($auRec[$i]->lat) && ($auRec[$i]->lat != '0.0')) && (isset($auRec[$i]->lng) && !empty($auRec[$i]->lng) && ($auRec[$i]->lng != '0.0')) && (isset($disSurveyLatLngArr[$auRec[$i]->distributor_id]) && !empty($disSurveyLatLngArr[$auRec[$i]->distributor_id]))) {


            $retSurLat = $disSurveyLatLngArr[$auRec[$i]->distributor_id]->lat;
            $retSurLng = $disSurveyLatLngArr[$auRec[$i]->distributor_id]->lng;

            $orderDistance = round(distance($auRec[$i]->lat, $auRec[$i]->lng, $retSurLat, $retSurLng, 'K'), 2) . ' KM';
        } else {
            $orderDistance = '-';
        }
        //Todo End : sudhanshu 02 july 204 : get distance

        $data .= $order_for . "\t" . $date_of_order . "\t" . $auRec[$i]->time_of_order . "\t" . $auRec[$i]->order_id
            . "\t" . number_format(floor($auRec[$i]->acc_total_invoice_amount), 2) . "\t" . $auRec2[0]->total_item . "\t" . $auRec2[0]->total_qty . "\t" . str_replace($remove, ' ', $auRec[$i]->distributor_name) . "\t" . $auRec[$i]->distributor_code . "\t" . $auRec[$i]->dis_zone . "\t" . $auRec[$i]->dis_state . "\t" . $auRec[$i]->dis_city . "\t" . $auRec[$i]->salesman_name . "\t" . $auRec[$i]->sal_zone . "\t" . $auRec[$i]->sal_state . "\t" . $auRec[$i]->sal_city . "\t" . str_replace($remove, ' ', $auRec[$i]->distributor_location) . "\t" . str_replace($remove, ' ', $auRec[$i]->distributor_address) . "\t" . $status . "\t" . $orderDistance . "\t" . $auRec[$i]->reason_remark . "\t" . $auRec[$i]->tag_description . "\t" . $auRec[$i]->photo_count . "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['distributor'] . " Order List.xls\"");
    echo $data;
    exit;
}
// Todo End : Jatin : 18 July 2023 : export dynamic route wise distributor Dms order Report


// Todo Start : Jatin : 18 July 2023 : Export Dynamic route wise distributor Dms order Detail Report

if (isset($_GET['dynamic_export_distributor_salesman_detail_order_listing'])) {
    //echo hello;exit;
//    $data = "Order For \t Date\t Time\t Order Number\t Total Order Amount\t Total No. Of Items\t " . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\t " . $AliaseUsers['salesman'] . "\t  State\t City\t Market \t Address \t Order Status \t Comments\t Reason\tItem Name\tItem Code\tQuantity\tPrice\tTotal\n";

    $data = "Order For \t Date\t Time\t Order Number\t Total Order Amount\t Total No. Of Items\t " . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\t" . $AliaseUsers['distributor'] . " Zone\t" . $AliaseUsers['distributor'] . " State\t" . $AliaseUsers['distributor'] . " District\t" . $AliaseUsers['salesman'] . " Name \t" . $AliaseUsers['salesman'] . " Zone \t " . $AliaseUsers['salesman'] . " State\t" . $AliaseUsers['salesman'] . " District\t Market \t Address \t Order Status \t Order Distance\t Comments\t Reason\tItem Name\tItem Code\tUOM\tQuantity\tPrice\tTotal\n";

    $sort = " ORDER BY date_of_order desc,time_of_order desc";

    // ---------------start dynamic filter condition-----------
    $salesmanCnd = '';
    $salCond = '';

    if (isset($_SESSION['fil_salesman']) && $_SESSION['fil_salesman'] > 0) {
        $salesmanCnd = ' AND s.salesman_id = "' . $_SESSION['fil_salesman'] . '"';
    } else if (isset($_SESSION['fil_salesman_manager']) && ($_SESSION['fil_salesman_manager'] > 0)) {
        $salesmanManagerId = $_SESSION['fil_salesman_manager'];
        $account_id = $_SESSION['accountId'];
        $res = $this->_getSelectList2('table_salesman_hierarchy_relationship AS SHR 
    LEFT JOIN table_salesman_hierarchy AS SH ON SH.hierarchy_id = SHR.hierarchy_id
    LEFT JOIN table_salesman AS s ON s.salesman_id = SHR.salesman_id', 's.salesman_id,SH.hierarchy_id,SH.sort_order', '', " SH.account_id=" . $account_id . " AND SHR.salesman_id = $salesmanManagerId ORDER BY SH.sort_order ASC ");
        if (is_array($res) && (count($res) > 0)) {
            $sortOrder = $res[0]->sort_order;
            $_objArrayList = new ArrayList();
            $getBottomUsersIdArr = $_objArrayList->getSalesmansBottomUsers(array($salesmanManagerId), $sortOrder, $account_id);

            if (is_array($getBottomUsersIdArr) && (count($getBottomUsersIdArr) > 0)) {
                $bottomUsersIds = implode(',', $getBottomUsersIdArr);
            }

            $salesmanCnd = " AND s.salesman_id IN($bottomUsersIds) ";
        }
    } else if (isset($_SESSION['fil_salesman_designation']) && ($_SESSION['fil_salesman_designation'] > 0)) {
        $account_id = $_SESSION['accountId'];
        $_objArrayList = new ArrayList();
        $getDesignationWiseBottomUsersIdArr = $_objArrayList->getDesignationWiseBottomUsers($_SESSION['fil_salesman_designation'], $account_id);

        if (is_array($getDesignationWiseBottomUsersIdArr) && (count($getDesignationWiseBottomUsersIdArr) > 0)) {
            $bottomUsersIds = implode(',', $getDesignationWiseBottomUsersIdArr);
            $salesmanCnd = " AND s.salesman_id IN($bottomUsersIds) ";
        }
    } else {
        $salesmanCnd .= '';
    }
    if (isset($_SESSION['fil_distributor']) && $_SESSION['fil_distributor'] > 0) {
        $salesmanCnd .= ' AND d.distributor_id = "' . $_SESSION['fil_distributor'] . '"';
    }
    if (isset($_SESSION['fil_salesman_zone']) && $_SESSION['fil_salesman_zone'] > 0) {
        $salesmanCnd .= ' AND z.zone_id = "' . $_SESSION['fil_salesman_zone'] . '"';
    }
    if (isset($_SESSION['fil_salesman_state']) && $_SESSION['fil_salesman_state'] > 0) {
        $salesmanCnd .= ' AND s.state = "' . $_SESSION['fil_salesman_state'] . '"';
    }
    if (isset($_SESSION['fil_distributor_state']) && !empty($_SESSION['fil_distributor_state']) && $_SESSION['fil_distributor_state'] > 0) {
        $salesmanCnd .= " AND d.state=" . $_SESSION['fil_distributor_state'];
    }
    if (isset($_SESSION['fil_distributor_zone']) && !empty($_SESSION['fil_distributor_zone']) && $_SESSION['fil_distributor_zone'] > 0) {
        $salesmanCnd .= " AND z2.zone_id=" . $_SESSION['fil_distributor_zone'];
    }
    if (isset($_SESSION['fil_order_status']) && !empty($_SESSION['fil_order_status'])) {
        $salesmanCnd .= ' AND o.order_status="' . $_SESSION['fil_order_status'] . '"';
    }


    // Date range , month and year
    if (!isset($_SESSION['fil_from']) && empty($_SESSION['fil_from'])) {
        $_SESSION['fil_from'] = date('d M Y');
    }

    if (!isset($_SESSION['fil_to']) && empty($_SESSION['fil_to'])) {
        $_SESSION['fil_to'] = date('d M Y');
    }
    if (isset($_SESSION['fil_month']) && !empty($_SESSION['fil_month']) && isset($_SESSION['fil_year']) && !empty($_SESSION['fil_year'])) {
        $_SESSION['fil_from'] = date('Y-m-d', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
        $_SESSION['fil_to'] = date('Y-m-t', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
    }
    $tim_date = " and o.date_of_order BETWEEN '" . date('Y-m-d', strtotime
        ($_SESSION['fil_from'])) .
        "' AND '" . date('Y-m-d', strtotime($_SESSION['fil_to'])) . "'";


    // -------------End dynamic filter condition------------

    if ($_SESSION['OrderBy'] != '') {
        if ($_SESSION['OrderBy'] == 1) {
            $orderby = "";
        }
        if ($_SESSION['OrderBy'] == 2) {
            $orderby = " and o.order_status='A' ";
        }
        if ($_SESSION['OrderBy'] == 3) {
            $orderby = " and o.order_status='I' ";
        }
        if ($_SESSION['OrderBy'] == 4) {
            $orderby = " and o.order_status='D' ";
        }
    } else {
        $orderby = "";
    }

    if ($_SESSION['userLoginType'] == 3 && $_SESSION['distributorId'] > 0) {
        $distributorCond = " AND o.distributor_id ='" . $_SESSION['distributorId'] . "' ";
    }
    if ($_SESSION['userLoginType'] == 7 && $_SESSION['stockistId'] > 0) {
        $distributorCond .= " AND o.stockist_id ='" . $_SESSION['stockistId'] . "' ";
    }
    // When salesman is loggedin
    if (($_SESSION['userLoginType'] == 5) && ($_SESSION['salesmanId'] > 0)) {
        $disIdArr = $_objAdmin->getRouteWiseDistributors($_SESSION['salesmanId'], $_SESSION['accountId']);

        if (is_array($disIdArr) && (count($disIdArr) > 0)) {
            $disIds = implode(',', $disIdArr);
            $distributorCond .= " AND o.distributor_id IN($disIds) ";

        }
    }
//    $where = " o.order_for='D' and o.distributor_id!=''  $salesman $fromdate $todate  $distributorCond $orderby";
//    $auRec = $_objAdmin->_getSelectList('table_distributor_order as o
//            left join table_distributor_order_detail as tod on tod.order_id = o.order_id
//            left join table_item as i on i.item_id = tod.item_id
//			left join table_salesman as s on o.salesman_id=s.salesman_id
//			left join table_distributors as d on d.distributor_id=o.distributor_id
//			left join state as st on st.state_id=d.state
//			left join city as c on c.city_id=d.city
//			', "o.*,s.salesman_name,d.distributor_name,d.distributor_code,st.state_name,c.city_name, d.distributor_location, d.distributor_address,i.item_name,i.item_code,tod.quantity,tod.price,tod.total", $rp, $where . $sort, '');
//    echo "<pre>";
//    print_R($auRec);
//    die;

    $where = " o.order_for='D' and o.distributor_id!=''  $salesman $tim_date $salesmanCnd $distributorCond $orderby";
    $auRec = $_objAdmin->_getSelectList('table_distributor_order as o
    left join table_salesman as s on o.salesman_id=s.salesman_id
    left join table_distributor_order_detail as tod on tod.order_id = o.order_id
    left join table_item as i on i.item_id = tod.item_id
    left join table_distributors as d on d.distributor_id=o.distributor_id
    left join state as ss on ss.state_id = s.state
    left join state as st on st.state_id = d.state
    left join table_zone_state_mapping as zsm1 on zsm1.state_id = s.state and zsm1.account_id = s.account_id
    left join table_zone as z on z.zone_id = zsm1.zone_id
  	left join table_zone_state_mapping as zsm on zsm.state_id = d.state and zsm.account_id = d.account_id 
  	left join table_tags as t on t.tag_id=o.reason
  	left join table_zone as z1 on z1.zone_id = zsm.zone_id
  	left join city as c on c.city_id=d.city
  	left join city as c1 on c1.city_id = s.city
			', "o.*,s.salesman_name,d.distributor_name,d.distributor_code,d.distributor_location, d.distributor_address, st.state_name as dis_state,c1.city_name as sal_city ,c.city_name as dis_city,ss.state_name as sal_state,z.zone_name as sal_zone,z1.zone_name as dis_zone,i.item_name,i.item_code,tod.quantity,tod.price,tod.total,t.tag_description,tod.item_unit_type", $rp, $where . $sort, '');

    //Todo Start : get distributor lat lag : sudhanshu : 02 july 2024

    $getDisSurveyLatLng = $_objAdmin->_getSelectList("table_distributors as d", "d.distributor_id,d.lat,d.lng", "", " d.status = 'A' AND d.lat_lng_capcure_accuracy!=0 AND (d.lat != '0.0' AND d.lng != '0.0') AND (d.lat != '' AND d.lng != '') ORDER BY d.distributor_id ASC");
    $disSurveyLatLngArr = [];
    if (is_array($getDisSurveyLatLng) && (count($getDisSurveyLatLng) > 0)) {
        foreach ($getDisSurveyLatLng as $key => $disSurveyLatLng) {
            $disSurveyLatLngArr[$disSurveyLatLng->distributor_id] = $disSurveyLatLng;
        }
    }

    //Todo End : get distributor lat lag : sudhanshu : 02 july 2024
    $remove = array("\n", "\r", "\n \r", "\t", ",");
    for ($i = 0; $i < count($auRec); $i++) {
        if ($auRec[$i]->order_type == 'Yes') {
            if ($auRec[$i]->order_status == 'A') {
                $status = "New Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }
            $color = ($auRec[$i]->order_status == 'A') ? "A" : "P";
        }
        if ($auRec[$i]->order_type == 'No') {
            $status = ($auRec[$i]->order_status == 'A') ? "No Order" : "Processed";
            $color = ($auRec[$i]->order_status == 'A') ? "I" : "P";
        }
        if ($auRec[$i]->order_type == 'Adhoc') {
            if ($auRec[$i]->order_status == 'A') {
                $status = "New Adhoc Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }

            $color = ($auRec[$i]->order_status == 'A') ? "O" : "P";
        }
        if ($auRec[$i]->order_type == 'Return') {
            if ($auRec[$i]->order_status == 'A') {
                $status = "Return Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }

            $color = ($auRec[$i]->order_status == 'A') ? "O" : "P";
        }

        //Todo Start :  Sudhanshu 21 march 2024 : aadd collumn UOM
        $uom = ($auRec[$i]->item_unit_type != '') ? $auRec[$i]->item_unit_type : 'Pcs';
        //Todo End : Sudhanshu 21 march 2024 : aadd collumn UOM
        //Todo Start : sudhanshu 02 july 204 : get distance
        if ((isset($auRec[$i]->lat) && !empty($auRec[$i]->lat) && ($auRec[$i]->lat != '0.0')) && (isset($auRec[$i]->lng) && !empty($auRec[$i]->lng) && ($auRec[$i]->lng != '0.0')) && (isset($disSurveyLatLngArr[$auRec[$i]->distributor_id]) && !empty($disSurveyLatLngArr[$auRec[$i]->distributor_id]))) {


            $retSurLat = $disSurveyLatLngArr[$auRec[$i]->distributor_id]->lat;
            $retSurLng = $disSurveyLatLngArr[$auRec[$i]->distributor_id]->lng;

            $orderDistance = round(distance($auRec[$i]->lat, $auRec[$i]->lng, $retSurLat, $retSurLng, 'K'), 2) . ' KM';
        } else {
            $orderDistance = '-';
        }
        //Todo End : sudhanshu 02 july 204 : get distance

        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);
        $auRec2 = $_objAdmin->_getSelectList2('table_distributor_order_detail', "count( distinct(item_id)) as total_item", '', " order_id = " . $auRec[$i]->order_id . " and type = 1");
        switch (strtolower($auRec[$i]->order_for)) {
            case 'r':
                $order_for = 'Retailer';
                break;
            case 'd':
                $order_for = 'Distributor';
                break;
        }

        $data .= $order_for . "\t" . $date_of_order . "\t" . $auRec[$i]->time_of_order . "\t" . $auRec[$i]->order_id
            . "\t" . $auRec[$i]->acc_total_invoice_amount . "\t" . $auRec2[0]->total_item . "\t" . str_replace($remove, ' ', $auRec[$i]->distributor_name) . "\t" . $auRec[$i]->distributor_code . "\t" . $auRec[$i]->dis_zone . "\t" . $auRec[$i]->dis_state . "\t" . $auRec[$i]->dis_city . "\t" . $auRec[$i]->salesman_name . "\t" . $auRec[$i]->sal_zone . "\t" . $auRec[$i]->sal_state . "\t" . $auRec[$i]->sal_city . "\t" . str_replace($remove, ' ', $auRec[$i]->distributor_location) . "\t" . str_replace($remove, ' ', $auRec[$i]->distributor_address) . "\t" . $status . "\t" . $orderDistance . "\t" . $auRec[$i]->reason_remark . "\t" . $auRec[$i]->tag_description . "\t" . $auRec[$i]->item_name . "\t" . $auRec[$i]->item_code . "\t" . $uom . "\t" . $auRec[$i]->quantity . "\t" . $auRec[$i]->price . "\t" . $auRec[$i]->total . "\n";

    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['distributor'] . " Detail Order List.xls\"");
    echo $data;
    exit;
}
// Todo End : Jatin : 18 July 2023 : Export Dynamic route wise distributor Dms order Detail Report

// Todo Start : Sudhanshu : 23 July 2023 : App Sync tracking report
if (isset($_GET['export_sync_tracking_report'])) {

    $data = "" . $AliaseUsers['salesman'] . " Name \t  Sync Date\t Sync Start Time \t Sync End Time \t Last API Call \t Sync Success % \t Created Date  \t Sync Status\n";

    $sort = " ORDER BY st.sync_id DESC";
    if ($_SESSION['SalSyncList'] != '') {
        $salesmanCondi = " AND s.salesman_id='" . $_SESSION['SalSyncList'] . "' ";
    }
    //  echo $salesmanCondi;die;
    if ($_SESSION['FromSyncDate'] != '') {
        $fromdate = "  st.sync_date  >= '" . date('Y-m-d', strtotime($_SESSION['FromSyncDate'])) . "' AND ";
    } else {
        $fromdate = " st.sync_date  >= '" . date('Y-m-d') . "' AND ";
    }
    if ($_SESSION['ToSyncDate'] != '') {
        $todate = " st.sync_date <= '" . date('Y-m-d', strtotime($_SESSION['ToSyncDate'])) . "' ";
    } else {
        $todate = "  st.sync_date <= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['accId'] !== "" && $_SESSION['userLoginType'] == 'admin') {
        $accCondi = "AND st.account_id='" . $_SESSION['accId'] . "'";
    } elseif ($_SESSION['accId'] !== "" && $_SESSION['userLoginType'] !== 'admin') {
        $accCondi = "AND st.account_id='" . $_SESSION['accId'] . "'";

    } elseif ($_SESSION['accId'] == "" && $_SESSION['userLoginType'] == 'admin') {
        $accCondi = '';
    } else {
        $accCondi = "AND st.account_id='" . $_SESSION['accountId'] . "'";

    }

    $where = $fromdate . $todate . $salesmanCondi . $accCondi;

    $auRec = $_objAdmin->_getSelectList2('table_sync_tracking_api as st
        left join table_salesman as s ON s.salesman_id=st.salesman_id',
        "st.*,s.salesman_name,s.employee_code", '', $where . $sort, '');
    // echo "<pre>";print_r($auRec);die;
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $status = ($auRec[$i]->sync_status == 'S') ? "Success" : "Failed";
            $sync_date = date('d M Y', strtotime($auRec[$i]->sync_date));
            $created_date = date('d M Y', strtotime($auRec[$i]->created_date));
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $sync_date . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->sync_start_time . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->sync_end_time . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->last_api_call . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->sync_success_per . '"';
            $data .= "\t";
            $data .= '"' . $created_date . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"app_sync_tracking_report.xls\"");
    echo $data;
    exit;
}
// Todo End : Sudhanshu : 23 July 2023 : App Sync tracking report

// Todo Start : Jatin : 14 August 2023  :  Contact person phone No List
if (isset($_GET['export_lead_contact_no'])) {
    $data = "Lead ID\tLead Ref. ID\tTitle\tLead Start Date\tUpdated At\t Contact person\t Contact person phone number\tContact person designation\tLead Status\n";
    $filterConditions = '';
    if (isset($_SESSION['state_id']) && !empty($_SESSION['state_id']) && (intval($_SESSION['state_id']) > 0)) {
        $filterConditions .= ' AND E.state_id = ' . $_SESSION['state_id'];
    }
    if (isset($_SESSION['salid']) && !empty($_SESSION['salid']) && (intval($_SESSION['salid']) > 0)) {
        $filterConditions .= ' AND E.assign_to_id = ' . $_SESSION['salid'];
    }

    if (isset($_SESSION['val_sts_id']) && !empty($_SESSION['val_sts_id']) && (intval($_SESSION['val_sts_id']) > 0)) {
        $filterConditions .= ' AND E.validation_status_id = ' . $_SESSION['val_sts_id'];
    }
    if (isset($_SESSION['lead_status_id']) && !empty($_SESSION['lead_status_id']) && (intval($_SESSION['lead_status_id']) > 0)) {
        $filterConditions .= ' AND E.lead_status_id = ' . $_SESSION['lead_status_id'];
    }
    if (!empty($_SESSION['frmDate']) && !empty($_SESSION['toDate']) && ($_SESSION['frmDate'] != 'all') && ($_SESSION['toDate'] != 'all')) {
        $frmDate = date('Y-m-d', strtotime($_SESSION['frmDate']));
        $toDate = date('Y-m-d', strtotime($_SESSION['toDate']));
        if (isset($_SESSION['dateFilterOn']) && !empty($_SESSION['dateFilterOn'])) {
            $dateFilterOn = $_SESSION['dateFilterOn'];
            $where = " AND (DATE(E.$dateFilterOn) BETWEEN '" . $frmDate . "' AND '" . $toDate . "') ";
        } else {
            $where = " AND (DATE(E.lead_start_date) BETWEEN '" . $frmDate . "' AND '" . $toDate . "') ";
        }
    } else {

        $where = "";
    }
    if (!empty($_SESSION['frmDate']) && !empty($_SESSION['toDate'])) {

        $sort = " ORDER BY E.created_at DESC";
        $auRec = $_objAdmin->_getSelectList('table_lead as E
        left join table_lead_contact_person as tlcp on tlcp.lead_id = E.lead_id
        left join table_validation_status_master as vs on vs.id = E.validation_status_id
        LEFT JOIN table_designation as des ON des.designation_id = tlcp.designation_id
		left join state as st on st.state_id=E.state_id
		left join city AS ct on ct.city_id=E.city_id
		left join table_location AS loc on loc.location_id=E.location_id
		left join table_enquiry_type as ET on ET.enquiry_type_id = E.lead_type_id
		left join table_enquiry_source as ES on ES.source_id = E.lead_source_id
		left join table_enquiry_status as Ests on Ests.enquiry_status_id = E.lead_status_id
		left join table_retailer_type_master as RC on RC.type_id = E.retailer_type_id
        left join table_lead_sales_cycle_codes as lscc on lscc.id = E.cycle_code_id
        left join table_lead_next_step_master as nsm on nsm.id = E.next_step_id
        left join table_lead_reason_master as lrm on lrm.id = E.reason_id
        left join table_lead_customer_channel_master as lch on lch.id = E.channel_id
		
		left join table_salesman as s on s.salesman_id=E.assign_to_id
		left join table_salesman as s3 on s3.salesman_id=E.lead_created_by_id
		left join table_salesman as s4 on s4.salesman_id=E.validated_by_id
		left join table_salesman as s5 on s5.salesman_id=E.assigned_by_id', "E.lead_id,E.lead_code,E.title,E.lead_start_time,E.updated_at,Ests.enqury_status as lead_status, tlcp.contact_person_name,tlcp.phoneno,des.designation_name", '',
            $where . ' ' .
            $filterConditions . ' ' . $sort);


        $remove = array("\n", "\r\n", "\r", ",");
        for ($i = 0; $i < count($auRec); $i++) {

            $lead_start_date = '';
            if (isset($auRec[$i]->lead_start_time) && !empty($auRec[$i]->lead_start_time) && ($auRec[$i]->lead_start_time != '00:00:00')) {
                $lead_start_date = date('Y-m-d h:i A', strtotime($auRec[$i]->lead_start_date . ' ' . $auRec[$i]->lead_start_time));
            } else {
                $lead_start_date = date('Y-m-d', strtotime($auRec[$i]->lead_start_date));
            }
            $data .= '"' . $auRec[$i]->lead_id . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->lead_code . '"';
            $data .= "\t";
            $data .= '"' . str_replace($remove, '', $auRec[$i]->title) . '"';
            $data .= "\t";
            $data .= '"' . $lead_start_date . '"';
            $data .= "\t";
            $updatedAt = '';
            if (isset($auRec[$i]->updated_at) && !empty($auRec[$i]->updated_at) && ($auRec[$i]->updated_at != '0000-00-00 00:00:00')) {
                $updatedAt = date('Y-m-d h:i A', strtotime($auRec[$i]->updated_at));
            }
            $data .= '"' . $updatedAt . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->contact_person_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->phoneno . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->designation_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->lead_status . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"leads_Customer_Phone_No_list.xls\"");
    echo $data;
    exit;
}
// Todo End : Jatin : 14 August 2023  :  Contact person phone No List

// Todo Start : Jatin : 14 August 2023 : Lead Report
if (isset($_GET['export_lead_report_customer_contact_no'])) {
    $data = "Lead ID\tLead Ref. ID\tTitle\tLead Start Date\tUpdated At\t Contact person\t Contact person phone number\tContact person designation\tLead Status\n";
    $filterConditions = '';
    if (isset($_SESSION['state_id_rep']) && !empty($_SESSION['state_id_rep']) && (intval($_SESSION['state_id_rep']) > 0)) {
        $filterConditions .= ' AND E.state_id = ' . $_SESSION['state_id_rep'];
    }
    if (isset($_SESSION['salidrep']) && !empty($_SESSION['salidrep']) && (intval($_SESSION['salidrep']) > 0)) {
        $filterConditions .= ' AND E.assign_to_id = ' . $_SESSION['salidrep'];
    } else {
        if (isset($_SESSION['salesmanId']) && !empty($_SESSION['salesmanId']) && (intval($_SESSION['salesmanId']) > 0)) {
            $filterConditions .= $_SESSION['salInCondi'];
        } else {
            $_objArrayList = new ArrayList();
            $salsList = $_objArrayList->SalesmanArrayList();
            $salsList[] = 0;
            $adminSalCondi = implode(',', $salsList);
            $filterConditions .= ' AND E.lead_created_by_id IN(' . $adminSalCondi . ') ';
        }
    }
    if (isset($_SESSION['val_sts_id_rep']) && !empty($_SESSION['val_sts_id_rep']) && (intval($_SESSION['val_sts_id_rep']) > 0)) {
        $filterConditions .= ' AND E.validation_status_id = ' . $_SESSION['val_sts_id_rep'];
    }
    if (isset($_SESSION['lead_status_id_rep']) && !empty($_SESSION['lead_status_id_rep']) && (intval($_SESSION['lead_status_id_rep']) > 0)) {
        $filterConditions .= ' AND E.lead_status_id = ' . $_SESSION['lead_status_id_rep'];
    }
    if (!empty($_SESSION['frmDateRep']) && !empty($_SESSION['toDateRep'])) {
        $frmDate = date('Y-m-d', strtotime($_SESSION['frmDateRep']));
        $toDate = date('Y-m-d', strtotime($_SESSION['toDateRep']));
    } else {
        $frmDate = date('Y-m-d');
        $toDate = date('Y-m-d');
    }

    if (isset($_SESSION['dateFilterOn']) && !empty($_SESSION['dateFilterOn'])) {
        $dateFilterOn = $_SESSION['dateFilterOn'];
        $where = " AND (DATE(E.$dateFilterOn) BETWEEN '" . $frmDate . "' AND '" . $toDate . "') ";
    } else {
        $where = " AND (DATE(E.lead_start_date) BETWEEN '" . $frmDate . "' AND '" . $toDate . "') ";
    }

    $sort = " ORDER BY E.created_at DESC";
    $auRec = $_objAdmin->_getSelectList('table_lead as E
        left join table_lead_contact_person as tlcp on tlcp.lead_id = E.lead_id
        left join table_validation_status_master as vs on vs.id = E.validation_status_id
        LEFT JOIN table_designation as des ON des.designation_id = tlcp.designation_id
		left join state as st on st.state_id=E.state_id
		left join city AS ct on ct.city_id=E.city_id
		left join table_location AS loc on loc.location_id=E.location_id
		left join table_enquiry_type as ET on ET.enquiry_type_id = E.lead_type_id
		left join table_enquiry_source as ES on ES.source_id = E.lead_source_id
		left join table_enquiry_status as Ests on Ests.enquiry_status_id = E.lead_status_id
		left join table_retailer_type_master as RC on RC.type_id = E.retailer_type_id
        left join table_lead_sales_cycle_codes as lscc on lscc.id = E.cycle_code_id
        left join table_lead_next_step_master as nsm on nsm.id = E.next_step_id
        left join table_lead_reason_master as lrm on lrm.id = E.reason_id
        left join table_lead_customer_channel_master as lch on lch.id = E.channel_id
		
		left join table_salesman as s on s.salesman_id=E.assign_to_id
		left join table_salesman as s3 on s3.salesman_id=E.lead_created_by_id
		left join table_salesman as s4 on s4.salesman_id=E.validated_by_id
		left join table_salesman as s5 on s5.salesman_id=E.assigned_by_id', "E.lead_id,E.lead_code,E.title,E.lead_start_time,E.updated_at, tlcp.contact_person_name,Ests.enqury_status as lead_status,tlcp.phoneno,des.designation_name", '', $where . ' ' . $filterConditions . ' ' . $sort);


    $remove = array("\n", "\r\n", "\r", ",");
    for ($i = 0; $i < count($auRec); $i++) {

        $lead_start_date = '';
        if (isset($auRec[$i]->lead_start_time) && !empty($auRec[$i]->lead_start_time) && ($auRec[$i]->lead_start_time != '00:00:00')) {
            $lead_start_date = date('Y-m-d h:i A', strtotime($auRec[$i]->lead_start_date . ' ' . $auRec[$i]->lead_start_time));
        } else {
            $lead_start_date = date('Y-m-d', strtotime($auRec[$i]->lead_start_date));
        }
        $data .= '"' . $auRec[$i]->lead_id . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->lead_code . '"';
        $data .= "\t";
        $data .= '"' . str_replace($remove, '', $auRec[$i]->title) . '"';
        $data .= "\t";
        $data .= '"' . $lead_start_date . '"';
        $data .= "\t";
        $updatedAt = '';
        if (isset($auRec[$i]->updated_at) && !empty($auRec[$i]->updated_at) && ($auRec[$i]->updated_at != '0000-00-00 00:00:00')) {
            $updatedAt = date('Y-m-d h:i A', strtotime($auRec[$i]->updated_at));
        }
        $data .= '"' . $updatedAt . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->contact_person_name . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->phoneno . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->designation_name . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->lead_status . '"';
        $data .= "\n";
    }

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"lead_contact_person_list.xls\"");
    echo $data;
    exit;
}
// Todo End : Jatin : 14 August 2023 : Lead Report

// Todo Start :Jatin : 17 August 2023  : Export detail of dynamic order list
if (isset($_GET['dynamic_export_order_detail_list'])) {
    $data = " Date of Order\t Time of Order\t Order Number\t Total Invoice Amount\t Total Number Of Item\t " .
        $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\tDistributor Type\t" . $AliaseUsers['distributor'] . " Zone\t" . $AliaseUsers['distributor'] . " State\t " . $AliaseUsers['salesman'] . " Name\t " . $AliaseUsers['salesman'] . " Code\t " . $AliaseUsers['salesman'] . " Zone\t " . $AliaseUsers['salesman'] . " State\tReporting To\t " . $AliaseUsers['retailer'] . " Name\t " . $AliaseUsers['retailer'] . " Code\t " . $AliaseUsers['retailer'] . " Zone\t" . $AliaseUsers['retailer'] . " State\t" . $AliaseUsers['retailer'] . " City\t" . $AliaseUsers['retailer'] . " Market\t " . $AliaseUsers['retailer'] . " Address\t" . $AliaseUsers['retailer'] . " Group \t" . $AliaseUsers['retailer'] . " Channel\t" . $AliaseUsers['retailer'] . " Classification\t" . $AliaseUsers['retailer'] . " Type\tRetailer Phone No\t Display Outlet\t Comments\tItem Remark\t Reason\t Order Type\tOrder Status\tOrder By\tItem Name\tItem Code\tItem Grade\tCategory \tSub Category \tBrand\tQuantity\tPrice\tTotal\t Delivery Date\n";


    $sort = " ORDER BY date_of_order desc,time_of_order desc";
    $queryConditions = '';
    if (isset($_SESSION['fil_from']) && !empty($_SESSION['fil_from'])) {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['fil_from'])) . "'";
    } else {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d') . "'";
    }
    if (isset($_SESSION['fil_to']) && !empty($_SESSION['fil_to'])) {
        $todate = " and o.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['fil_to'])) . "'";
    } else {
        $todate = " and o.date_of_order <= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['userLoginType'] == 3 && $_SESSION['distributorId'] != "" && $_SESSION['distributorId'] > 0) {
        $queryConditions .= " AND o.distributor_id=" . $_SESSION['distributorId'];
    } else if (isset($_SESSION['fil_distributor']) && !empty($_SESSION['fil_distributor']) && $_SESSION['fil_distributor'] > 0) {
        $queryConditions .= " AND o.distributor_id=" . $_SESSION['fil_distributor'];
    }

    if ($_SESSION['userLoginType'] == 7 && $_SESSION['stockistId'] != "" && $_SESSION['stockistId'] > 0) {
        $queryConditions .= " AND d.stockist_id=" . $_SESSION['stockistId'];

    } else if (isset($_SESSION['fil_stockist']) && !empty($_SESSION['fil_stockist']) && $_SESSION['fil_stockist'] > 0) {
        $queryConditions .= " AND d.stockist_id=" . $_SESSION['fil_stockist'];
    }
    $salesmanCnd = "";
    if ($_SESSION['userLoginType'] == 5) {
        $salesmanCnd = str_replace("s.", "o.", $_SESSION['salesmanIdsCond']);
    }

    if (isset($_SESSION['fil_salesman']) && !empty($_SESSION['fil_salesman']) && $_SESSION['fil_salesman'] > 0) {
        $salesmanCnd = " AND o.salesman_id=" . $_SESSION['fil_salesman'];
    } else if (isset($_SESSION['fil_salesman_manager']) && ($_SESSION['fil_salesman_manager'] > 0)) {
        $salesmanManagerId = $_SESSION['fil_salesman_manager'];
        $account_id = $_SESSION['accountId'];
        $res = $_objAdmin->_getSelectList2('table_salesman_hierarchy_relationship AS SHR 
				LEFT JOIN table_salesman_hierarchy AS SH ON SH.hierarchy_id = SHR.hierarchy_id
				LEFT JOIN table_salesman AS s ON s.salesman_id = SHR.salesman_id', 's.salesman_id,SH.hierarchy_id,SH.sort_order', '', " SH.account_id=" . $account_id . " AND SHR.salesman_id = $salesmanManagerId ORDER BY SH.sort_order ASC ");

        if (is_array($res) && (count($res) > 0)) {
            $sortOrder = $res[0]->sort_order;
            $_objArrayList = new ArrayList();
            $getBottomUsersIdArr = $_objArrayList->getSalesmansBottomUsers(array($salesmanManagerId), $sortOrder, $account_id);

            if (is_array($getBottomUsersIdArr) && (count($getBottomUsersIdArr) > 0)) {
                $bottomUsersIds = implode(',', $getBottomUsersIdArr);
            }

            $salesmanCnd = " AND o.salesman_id IN($bottomUsersIds) ";
        }
    } else if (isset($_SESSION['fil_salesman_designation']) && ($_SESSION['fil_salesman_designation'] > 0)) {
        $_objArrayList = new ArrayList();
        $account_id = $_SESSION['accountId'];
        $getDesignationWiseBottomUsersIdArr = $_objArrayList->getDesignationWiseBottomUsers($_SESSION['fil_salesman_designation'], $account_id);

        if (is_array($getDesignationWiseBottomUsersIdArr) && (count($getDesignationWiseBottomUsersIdArr) > 0)) {
            $bottomUsersIds = implode(',', $getDesignationWiseBottomUsersIdArr);
            $salesmanCnd .= " AND o.salesman_id IN($bottomUsersIds) ";
        }
    } else {
        $salesmanCnd .= '';
    }
    //echo $bottomUsersIds; die;
    if (isset($_SESSION['fil_retailer']) && !empty($_SESSION['fil_retailer']) && $_SESSION['fil_retailer'] > 0) {
        $queryConditions .= " AND o.retailer_id=" . $_SESSION['fil_retailer'];
    }
    if (isset($_SESSION['fil_salesman_state']) && !empty($_SESSION['fil_salesman_state']) && $_SESSION['fil_salesman_state'] > 0) {
        $queryConditions .= " AND s.state=" . $_SESSION['fil_salesman_state'];
    }
    if (isset($_SESSION['fil_retailer_state']) && !empty($_SESSION['fil_retailer_state']) && $_SESSION['fil_retailer_state'] > 0) {
        $queryConditions .= " AND r.state=" . $_SESSION['fil_retailer_state'];
    }
    if (isset($_SESSION['fil_distributor_state']) && !empty($_SESSION['fil_distributor_state']) && $_SESSION['fil_distributor_state'] > 0) {
        $queryConditions .= " AND d.state=" . $_SESSION['fil_distributor_state'];
    }

    if (isset($_SESSION['fil_salesman_zone']) && !empty($_SESSION['fil_salesman_zone']) && $_SESSION['fil_salesman_zone'] > 0) {
        $queryConditions .= " AND zms.zone_id=" . $_SESSION['fil_salesman_zone'];
    }
    if (isset($_SESSION['fil_retailer_zone']) && !empty($_SESSION['fil_retailer_zone']) && $_SESSION['fil_retailer_zone'] > 0) {
        $queryConditions .= " AND zmr.zone_id=" . $_SESSION['fil_retailer_zone'];
    }
    if (isset($_SESSION['fil_distributor_zone']) && !empty($_SESSION['fil_distributor_zone']) && $_SESSION['fil_distributor_zone'] > 0) {
        $queryConditions .= " AND zmd.zone_id=" . $_SESSION['fil_distributor_zone'];
    }
    if (isset($_SESSION['fil_month']) && !empty($_SESSION['fil_month']) && isset($_SESSION['fil_year']) && !empty($_SESSION['fil_year'])) {
        $firstDate = date('Y-m-d', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
        $lastdate = date('Y-m-t', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_mont       h'] . '-01'));
        $fromdate = " and o.date_of_order >= '" . $firstDate . "'";
        $todate = " and o.date_of_order <= '" . $lastdate . "'";
    }

    if (isset($_SESSION['fil_order_status']) && !empty($_SESSION['fil_order_status'])) {
        $queryConditions .= " AND o.order_status='" . $_SESSION['fil_order_status'] . "'";
    } else {
        //$queryConditions .=" and order_status IN('A','I') ";
    }
    if (isset($_SESSION['fil_order_type']) && !empty($_SESSION['fil_order_type'])) {
        $queryConditions .= " AND o.order_type='" . $_SESSION['fil_order_type'] . "'";
    } else {
        //$queryConditions .=" AND o.order_type !='Return'";
    }

    // Todo Start : add order category FIler : sudhanshu : 13 march
    if (isset($_SESSION['fil_order_category']) && !empty($_SESSION['fil_order_category']) && count($_SESSION['fil_order_category']) > 0) {
        $orderCategory = $_SESSION['fil_order_category'];
        $orderCate = "'" . implode("', '", $orderCategory) . "'";
        if (implode(',', $orderCategory) != 'all') {
            $queryConditions .= " AND LOWER(o.order_type) IN (" . $orderCate . ")";
        }
    }
    // Todo End : add order category FIler : sudhanshu : 13 march
    // Todo Start : add order ditributor type filter : sudhanshu : 05 jul 2024
    if (isset($_SESSION['fil_distributor_type']) && !empty($_SESSION['fil_distributor_type'])  && $_SESSION['fil_distributor_type'] > 0) {
        $disType = $_SESSION['fil_distributor_type'];


        $queryConditions .= " AND d.distributor_type_id = $disType ";

    }
    // Todo End : add order ditributor type filter : sudhanshu : 05 jul 2024
    $queryConditions = $queryConditions . $salesmanCnd . $fromdate . $todate;
    $where = $queryConditions;

    $auRec = $_objAdmin->_getSelectList("table_order as o 
            left join table_order_detail as ord on o.order_type != 'No' and ord.order_id = o.order_id and ord.type = 1 
            left join table_item as i on i.item_id = ord.item_id 
            left join table_retailer as r on o.retailer_id=r.retailer_id 
            left join table_salesman as s on o.salesman_id=s.salesman_id 
            left join table_salesman_hierarchy_relationship as shr on shr.salesman_id = s.salesman_id
            left join table_category as tc on tc.category_id = i.category_id

             left join table_subcategory as tsc on tsc.subcategory_id = i.subcategory_id

            left join table_brands as tb on tb.brand_id = i.brand_id
            left join table_salesman as s2 on s2.salesman_id=shr.rpt_user_id
            left join table_distributors as d on o.distributor_id=d.distributor_id 
            left join table_retailer_channel_master as cm on r.channel_id=cm.channel_id 
            LEFT JOIN table_retailer_group as rg ON rg.group_id = r.group_id
            left join table_retailer_type_master as rtm ON rtm.type_id=r.type_id
            left join table_relationship as rel ON rel.relationship_id=r.relationship_id 
            left join state as str on str.state_id=r.state 
            left join state as sts on sts.state_id=s.state 
            left join state as std on std.state_id=d.state 
            left join city as c on c.city_id=r.city 
            left join table_grade as tg on tg.grade_id = i.grade_id
            left join table_zone_state_mapping as zms on zms.state_id=s.state and zms.account_id = s.account_id
			left join table_zone as sz on sz.zone_id=zms.zone_id 
			left join table_zone_state_mapping as zmr on zmr.state_id=r.state and zmr.account_id = r.account_id
			left join table_zone as rz on rz.zone_id=zmr.zone_id
			left join table_zone_state_mapping as zmd on zmd.state_id=d.state and zmd.account_id = d.account_id
			left join table_zone as dz on dz.zone_id=zmd.zone_id
            left join table_distributor_type_master as dt on dt.dis_type_id = d.distributor_type_id",
        "o.order_id,o.retailer_id,o.order_type,o.order_status,
			o.date_of_order,o.time_of_order,o.acc_total_invoice_amount,o.order_by,
	r.retailer_name,r.retailer_code,r.retailer_phone_no,
	r.retailer_address,r.retailer_location,cm.channel_name,r.display_outlet,
	s.salesman_name,s.employee_code,s2.salesman_name as rpt_to,d.distributor_name,d.distributor_code,
	sz.zone_name as sal_zone,rz.zone_name as ret_zone,dz.zone_name as dist_zone,str.state_name as ret_state,sts.state_name as sal_state,std.state_name as dist_state,c.city_name,i.item_code,i.item_name,ord.quantity,ord.price,ord.total,ord.remarks,rg.group_name,rtm.type_name,rel.relationship_code as relation,tg.grade_name,tc.category_name,tsc.subcategory_name,tb.brand_name,o.delivery_date,o.comments,o.tag_description,dt.dis_type_name", '', $where . $sort, '');

// echo $where;die;
    $remove = array("\n", "\r", ",", "\t");
    for ($i = 0; $i < count($auRec); $i++) {
        $orderType = '';


        if ($auRec[$i]->order_type == 'Yes') {
            $orderType = 'Sales Order';

            if ($auRec[$i]->order_status == 'A') {
                $status = "New Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }
            if ($auRec[$i]->order_status == 'C') {
                $status = "Cancelled";
            }
            $color = ($auRec[$i]->order_status == 'A') ? "A" : "P";
        }
        if ($auRec[$i]->order_type == 'No') {
            $orderType = 'No Order';

            $status = ($auRec[$i]->order_status == 'A') ? "No Order" : "Processed";
            $color = ($auRec[$i]->order_status == 'A') ? "I" : "P";
        }
        if ($auRec[$i]->order_type == 'Adhoc') {
            //Todo Start :  Sudhanshu 27 may 2024 : adhoc Nomenclature
            $orderType = $AliaseUsers['adhoc'] . ' Order';

            if ($auRec[$i]->order_status == 'A') {
                $status = "New " . $AliaseUsers['adhoc'] . " Order";
            }
            //Todo End Sudhanshu 27 may 2024 : adhoc Nomenclature
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }
            if ($auRec[$i]->order_status == 'C') {
                $status = "Cancelled";
            }
            //$status=($auRec[$i]->order_status=='A')?"New Adhoc Order":"Processed";
            $color = ($auRec[$i]->order_status == 'A') ? "O" : "P";
        }

        if (strtolower($auRec[$i]->order_type) == 'return') {
            $orderType = 'Return Order';
        }

        // display oulet
        if ($auRec[$i]->display_outlet == 'Y') {
            $outlet = 'Yes';
        } elseif ($auRec[$i]->display_outlet == 'N') {
            $outlet = 'No';
        }
        switch ($auRec[$i]->order_by) {
            case 'S':
                $order_by = $AliaseUsers['salesman'];
                break;
            case "D":
                $order_by = $AliaseUsers['distributor'];
                break;
            case "R":
                $order_by = $AliaseUsers['retailer'];
                break;
            default :
                $order_by = '';
        }
        $auRec2 = $_objAdmin->_getSelectList2('table_order_detail', "count( distinct(item_id)) as total_item", '', " order_id = " . $auRec[$i]->order_id . " and type = 1");

        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);
        $date_of_delivery = $_objAdmin->_changeDate($auRec[$i]->delivery_date);
        $data .= "" . $date_of_order . "\t" .
            $auRec[$i]->time_of_order . "\t" .
            $auRec[$i]->order_id . "\t" .
            $auRec[$i]->acc_total_invoice_amount . "\t" .
            $auRec2[0]->total_item . "\t" .
            $auRec[$i]->distributor_name . "\t" .
            $auRec[$i]->distributor_code . "\t" .
            $auRec[$i]->dis_type_name . "\t" .
            $auRec[$i]->dist_zone . "\t" .
            $auRec[$i]->dist_state . "\t" .
            $auRec[$i]->salesman_name . "\t" .
            $auRec[$i]->employee_code . "\t" .
            $auRec[$i]->sal_zone . "\t" .
            $auRec[$i]->sal_state . "\t" .
            $auRec[$i]->rpt_to . "\t" .
            $auRec[$i]->retailer_name . "\t" .
            $auRec[$i]->retailer_code . "\t" .
            $auRec[$i]->ret_zone . "\t" .
            $auRec[$i]->ret_state . "\t" .
            $auRec[$i]->city_name . "\t" .
            str_replace($remove, ' ', $auRec[$i]->retailer_location) . "\t" .
            str_replace($remove, ' ', $auRec[$i]->retailer_address) . "\t" .
            $auRec[$i]->group_name . "\t" .
            $auRec[$i]->channel_name . "\t" .
            $auRec[$i]->relation . "\t" .
            $auRec[$i]->type_name . "\t" .
            $auRec[$i]->retailer_phone_no . "\t" .
            $outlet . "\t" .
            str_replace($remove, ' ', $auRec[$i]->comments) . "\t" .
            str_replace($remove, ' ', $auRec[$i]->remarks) . "\t" .
            str_replace($remove, ' ', $auRec[$i]->tag_description) . "\t" .
            $orderType . "\t" .
            $status .
            "\t" . $order_by . "\t" . $auRec[$i]->item_name .
            "\t" . $auRec[$i]->item_code . "\t" . $auRec[$i]->grade_name . "\t" . $auRec[$i]->category_name . "\t" . $auRec[$i]->subcategory_name . "\t" .
            $auRec[$i]->brand_name . "\t" . $auRec[$i]->quantity .
            "\t" .
            $auRec[$i]->price . "\t" .
            $auRec[$i]->total . "\t" . $date_of_delivery . "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Order Item List.xls\"");
    echo $data;
    exit;


}
// Todo End  :Jatin : 17 August 2023  : Export detail of dynamic order list


// Todo Start : web user login details 16 aug 2023

if (isset($_GET['export_web_user_login_details'])) {

    $data = "Username \t  Logged-In User\t User Type \t IP Address \t Login Date \t Login Time\n";

    $sort = " ORDER BY login_date DESC, login_time ASC";

    if ($_SESSION['WebUser'] != '') {
        $uname = " AND w.web_user_id='" . $_SESSION['WebUser'] . "' ";
    }
    //  echo $salesmanCondi;die;
    if ($_SESSION['FromWebDate'] != '') {
        $fromdate = "  lt.login_date  >= '" . date('Y-m-d', strtotime($_SESSION['FromWebDate'])) . "' AND ";
    } else {
        $fromdate = " lt.login_date  >= '" . date('Y-m-d') . "' AND ";
    }
    if ($_SESSION['ToWebDate'] != '') {
        $todate = " lt.login_date <= '" . date('Y-m-d', strtotime($_SESSION['ToWebDate'])) . "' ";
    } else {
        $todate = "  lt.login_date <= '" . date('Y-m-d') . "'";
    }


    $where = $fromdate . $todate . $uname;

    $auRec = $_objAdmin->_getSelectList2('table_login_track as lt
    left join table_web_users as w ON lt.username=w.username
    left join table_distributors as d ON d.distributor_id=w.distributor_id
    left join table_retailer as r ON r.retailer_id=w.retailer_id
    left join table_salesman as s ON s.salesman_id=w.salesman_id
    left join table_stockist as stk ON stk.stockist_id=w.stockist_id',
        "lt.*,w.username,w.user_type,d.distributor_name,r.retailer_name,s.salesman_name,stk.stockist_name", '', $where . $sort, '');

    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            //$status = ($auRec[$i]->sync_status == 'S') ? "Success" : "Failed";
            $loginDate = $_objAdmin->_changeDate($auRec[$i]->login_date);

            if ($auRec[$i]->user_type == 1) {
                $userType = "Admin";
                $userName = "Admin User";
            } elseif ($auRec[$i]->user_type == 3) {
                $userType = "Distributor";
                $userName = $auRec[$i]->distributor_name;
            } elseif ($auRec[$i]->user_type == 4) {
                $userType = "Retailer";
                $userName = $auRec[$i]->retailer_name;
            } elseif ($auRec[$i]->user_type == 7) {
                $userType = "Stockist";
                $userName = $auRec[$i]->stockist_name;
            } elseif ($auRec[$i]->user_type == 5) {
                $userType = "Salesman";
                $userName = $auRec[$i]->salesman_name;
            }

            $data .= '"' . $auRec[$i]->username . '"';
            $data .= "\t";
            $data .= '"' . $userName . '"';
            $data .= "\t";
            $data .= '"' . $userType . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->ip_address . '"';
            $data .= "\t";

            $data .= '"' . $loginDate . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->login_time . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"web_user_login_report.xls\"");
    echo $data;
    exit;
}

// Todo : End  : Export app sync tracking report


if (isset($_GET['export_customer_wise_route_assignment_by_day'])) {

    $data = " " . $AliaseUsers['salesman'] . " Name \t " . $AliaseUsers['salesman'] . " Code \tFrom Date\t End Date \t "
        . $AliaseUsers['retailer'] . " Name\t " . $AliaseUsers['retailer'] . " Code \tSun\tMon\tTue\tWed\tThu\tFri\tSat\tStatus\tCreated Date\tUpdated Date\n";
    $_objArrayList = new ArrayList();
    $salsList = $_objArrayList->SalesmanArrayList();
    $salesman = $_objArrayList->getSalesCondition($salsList);
    //Todo Start : sudhanshu 13 june 2024 : add status filter
    $statusCondi = '';
    if (isset($_SESSION['MasCustRoutPjp']) && $_SESSION['MasCustRoutPjp'] != 'all' && $_SESSION['MasCustRoutPjp'] != '') {
        $statusCondi = " AND r.status ='" . $_SESSION['MasCustRoutPjp'] . "'";
    }
    //Todo End : sudhanshu 13 june 2024 : add status filter
    $condi = " s.status='A' $statusCondi $salesman group by j.id  ";
    $auRec = $_objAdmin->_getSelectList('table_customer_wise_route_schedule as r 
    left join table_customer_wise_route_schedule_by_day AS j ON r.route_schedule_id = j.route_schedule_id 
    left join table_salesman as s on r.salesman_id=s.salesman_id', "r.*,s.salesman_name,s.employee_code,j.Sun,
    j.Mon,j.Tue,j.Wed,j.Thu,j.Fri,j.Sat", '', $condi);

    $auRec1 = $_objAdmin->_getSelectList2('table_customer_wise_route_schedule_by_day AS j ', "j.*,j.Sun,
    j.Mon,j.Tue,j.Wed,j.Thu,j.Fri,j.Sat", '', ' j.status="A" ');
    $day = array();
    $routeArr = array();
    foreach ($auRec1 as $key => $val) {
        $day[] = $val->Sun;
        $day[] = $val->Mon;
        $day[] = $val->Tue;
        $day[] = $val->Wed;
        $day[] = $val->Thu;
        $day[] = $val->Fri;
        $day[] = $val->Sat;
        $routeArr[$val->route_schedule_id] = array_unique(array_filter($day));

        $retArr[$val->route_schedule_id]['Sun'][$val->Sun][] = $val->Sun;
        $retArr[$val->route_schedule_id]['Mon'][$val->Mon][] = $val->Mon;
        $retArr[$val->route_schedule_id]['Tue'][$val->Tue][] = $val->Tue;
        $retArr[$val->route_schedule_id]['Wed'][$val->Wed][] = $val->Wed;
        $retArr[$val->route_schedule_id]['Thu'][$val->Thu][] = $val->Thu;
        $retArr[$val->route_schedule_id]['Fri'][$val->Fri][] = $val->Fri;
        $retArr[$val->route_schedule_id]['Sat'][$val->Sat][] = $val->Sat;

    }

    function getRetId($data)
    {
        $_objAdmin = new Admin();
        if (!empty($data)) {
            foreach ($data as $key => $value) {
                if (!empty($value)) {
                    $auRec2 = $_objAdmin->_getSelectList('table_retailer', "retailer_name,retailer_code", '', "  retailer_id IN (" . $value . ") And status='A' ");
                }
            }
        }

        return $auRec2;
    }

    if (is_array($auRec)) {

        for ($i = 0; $i < count($auRec); $i++) {

            if (isset($auRec[$i]->Sun) && !empty($auRec[$i]->Sun)) {

                $retData = (isset($retArr[$auRec[$i]->route_schedule_id]['Sun'][$auRec[$i]->Sun]) && !empty
                    ($retArr[$auRec[$i]->route_schedule_id]['Sun'][$auRec[$i]->Sun])) ? getRetId
                ($retArr[$auRec[$i]->route_schedule_id]['Sun'][$auRec[$i]->Sun]) : '';

            } elseif (isset($auRec[$i]->Mon) && !empty($auRec[$i]->Mon)) {

                $retData = (isset($retArr[$auRec[$i]->route_schedule_id]['Mon'][$auRec[$i]->Mon]) && !empty
                    ($retArr[$auRec[$i]->route_schedule_id]['Mon'][$auRec[$i]->Mon])) ? getRetId
                ($retArr[$auRec[$i]->route_schedule_id]['Mon'][$auRec[$i]->Mon]) : '';

            } elseif (isset($auRec[$i]->Tue) && !empty($auRec[$i]->Tue)) {

                $retData = (isset($retArr[$auRec[$i]->route_schedule_id]['Tue'][$auRec[$i]->Tue]) && !empty
                    ($retArr[$auRec[$i]->route_schedule_id]['Tue'][$auRec[$i]->Tue])) ? getRetId
                ($retArr[$auRec[$i]->route_schedule_id]['Tue'][$auRec[$i]->Tue]) : '';

            } elseif (isset($auRec[$i]->Wed) && !empty($auRec[$i]->Wed)) {

                $retData = (isset($retArr[$auRec[$i]->route_schedule_id]['Wed'][$auRec[$i]->Wed]) && !empty
                    ($retArr[$auRec[$i]->route_schedule_id]['Wed'][$auRec[$i]->Wed])) ? getRetId
                ($retArr[$auRec[$i]->route_schedule_id]['Wed'][$auRec[$i]->Wed]) : '';

            } elseif (isset($auRec[$i]->Thu) && !empty($auRec[$i]->Thu)) {

                $retData = (isset($retArr[$auRec[$i]->route_schedule_id]['Thu'][$auRec[$i]->Thu]) && !empty
                    ($retArr[$auRec[$i]->route_schedule_id]['Thu'][$auRec[$i]->Thu])) ? getRetId
                ($retArr[$auRec[$i]->route_schedule_id]['Thu'][$auRec[$i]->Thu]) : '';

            } elseif (isset($auRec[$i]->Fri) && !empty($auRec[$i]->Fri)) {

                $retData = (isset($retArr[$auRec[$i]->route_schedule_id]['Fri'][$auRec[$i]->Fri]) && !empty
                    ($retArr[$auRec[$i]->route_schedule_id]['Fri'][$auRec[$i]->Fri])) ? getRetId
                ($retArr[$auRec[$i]->route_schedule_id]['Fri'][$auRec[$i]->Fri]) : '';

            } elseif (isset($auRec[$i]->Sat) && !empty($auRec[$i]->Sat)) {

                $retData = (isset($retArr[$auRec[$i]->route_schedule_id]['Sat'][$auRec[$i]->Sat]) && !empty
                    ($retArr[$auRec[$i]->route_schedule_id]['Sat'][$auRec[$i]->Sat])) ? getRetId
                ($retArr[$auRec[$i]->route_schedule_id]['Sat'][$auRec[$i]->Sat]) : '';

            }


            $status = ($auRec[$i]->status == 'A') ? "Active" : "Inactive";
            $Sun = in_array($auRec[$i]->Sun, $routeArr[$auRec[$i]->route_schedule_id]) ? 'yes' : '-';
            $Mon = in_array($auRec[$i]->Mon, $routeArr[$auRec[$i]->route_schedule_id]) ? 'yes' : '-';
            $Tue = in_array($auRec[$i]->Tue, $routeArr[$auRec[$i]->route_schedule_id]) ? 'yes' : '-';
            $Wed = in_array($auRec[$i]->Wed, $routeArr[$auRec[$i]->route_schedule_id]) ? 'yes' : '-';
            $Thu = in_array($auRec[$i]->Thu, $routeArr[$auRec[$i]->route_schedule_id]) ? 'yes' : '-';
            $Fri = in_array($auRec[$i]->Fri, $routeArr[$auRec[$i]->route_schedule_id]) ? 'yes' : '-';
            $Sat = in_array($auRec[$i]->Sat, $routeArr[$auRec[$i]->route_schedule_id]) ? 'yes' : '-';
            if ($auRec[$i]->created_date == '0000-00-00 00:00:00') {
                $created_dt = '';
            } else {
                $created_dt = $_objAdmin->_changeDate($auRec[$i]->created_date);
            }
            if ($auRec[$i]->last_updated == '0000-00-00 00:00:00') {
                $updated_dt = '';
            } else {
                $updated_dt = $_objAdmin->_changeDate($auRec[$i]->last_updated);
            }
            $data .= "" . $auRec[$i]->salesman_name .
                "\t" . $auRec[$i]->employee_code .
                "\t" . $_objAdmin->_changeDate($auRec[$i]->from_date) .
                "\t" . $_objAdmin->_changeDate($auRec[$i]->to_date) .
                "\t" . $retData[0]->retailer_name .
                "\t" . $retData[0]->retailer_code .
                "\t" . $Sun .
                "\t" . $Mon .
                "\t" . $Tue .
                "\t" . $Wed .
                "\t" . $Thu .
                "\t" . $Fri .
                "\t" . $Sat .
                "\t" . $status .
                "\t" . $created_dt .
                "\t" . $updated_dt .
                "\n";
        }

    }
    //die;
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"customer_wise_".$AliaseUsers['route']."_assignment_list.xls\"");
    echo $data;
    exit;
}

// Todo :Start :Jatin :1-September-2023
if (isset($_GET['export_salesman_leave_request'])) {
    $data = $AliaseUsers['salesman'] . " Name \t" . $AliaseUsers['salesman'] . " Code\t" . $AliaseUsers['salesman'] .
        " Designation\t Reporting to \t Reporting to Designation \t Leave Reason \t From Date\t To Date \tRequested On\t Remark \t Manager Status\t Approved By Manager \t Manager Status Updated On\tManager Remark\t Admin Status\t Approved By Admin\t Admin Remark\t Admin Status Updated On\n";

    if ($_SESSION['allowncesalesmanID'] != '') {
        $salArrList = $_SESSION['allowncesalesmanID'];
        $filterby = '';
        $salesman = $_objArrayList->getSalesmanConsolidatedList($salArrList, $filterby);
    } else {
        $salesman = $_SESSION['salsCondi'];
    }

    if ($_SESSION['FromallownceList'] != '') {
        $fromdate = date('Y-m-d', strtotime($_SESSION['FromallownceList']));
    } else {
        $fromdate = date('Y-m-d');
    }
    if ($_SESSION['ToallownceList'] != '') {
        $todate = date('Y-m-d', strtotime($_SESSION['ToallownceList']));
    } else {
        $todate = date('Y-m-d');
    }
    if ($_SESSION['requested'] == 'for') {
        $reqFor = " AND (DATE(slr.from_date) BETWEEN '" . $fromdate . "' AND '" . $todate . "') ";
    } else {
        $reqFor = "  AND (DATE(slr.requested_on) BETWEEN '" . $fromdate . "' AND '" . $todate . "')  ";
    }
    $where = " s.account_id = " . $_SESSION['accountId'] . " $reqFor  $salesman ";

    $auRec = $_objAdmin->_getSelectList2('table_salesman_leave_request as slr
LEFT JOIN table_leave_reason_master as lrm ON lrm.status_id = slr.leave_reason_id
LEFT JOIN table_salesman as s on s.salesman_id = slr.salesman_id 
LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
LEFT JOIN table_salesman_hierarchy AS H2 ON H2.hierarchy_id = SH.rpt_hierarchy_id 
LEFT JOIN table_salesman AS s2 ON s2.salesman_id = SH.rpt_user_id
LEFT JOIN table_salesman as mngr on mngr.salesman_id = slr.aproved_by_id 
LEFT JOIN table_salesman as adm on adm.salesman_id = slr.admin_id', "slr.*,slr.id as request_id,s.salesman_name,s.employee_code,H.description AS sal_desg,s2.salesman_name AS rpt_to, H2.description AS rpt_to_desg,lrm.status_title as leave_reason,mngr.salesman_name as mngr_name,adm.salesman_name as admin_name", '', $where);

    for ($i = 0; $i < count($auRec); $i++) {
        $fromDate = date('d M Y', strtotime($auRec[$i]->from_date));
        $toDate = date('d M Y', strtotime($auRec[$i]->to_date));
        $requestedOnDate = date('d M Y H:i', strtotime($auRec[$i]->requested_on));
        $mngrStatus = '';
        if (strtolower($auRec[$i]->leave_status) == 'p') {
            $mngrStatus = 'Pending';
        } else if (strtolower($auRec[$i]->leave_status) == 'a') {
            $mngrStatus = 'Approved';
        } else if (strtolower($auRec[$i]->leave_status) == 'r') {
            $mngrStatus = 'Rejected';
        }
        $mngr_sts_updtd_on = '';
        if ($auRec[$i]->aproved_on != '0000-00-00 00:00:00') {
            $mngr_sts_updtd_on = date('d M Y H:i', strtotime($auRec[$i]->aproved_on));
        }
        $adminName = '';
        if (intval($auRec[$i]->is_approved_by_admin) > 0) {
            if (intval($auRec[$i]->admin_id) > 0) {
                $adminName = $auRec[$i]->admin_name;
            } else {
                $adminName = 'Admin';
            }
        }
        $adminStatus = '';
        if (strtolower($auRec[$i]->admin_leave_status) == 'p') {
            $adminStatus = 'Pending';
        } else if (strtolower($auRec[$i]->admin_leave_status) == 'a') {
            $adminStatus = 'Approved';
        } else if (strtolower($auRec[$i]->admin_leave_status) == 'r') {
            $adminStatus = 'Rejected';
        }
        $admin_sts_updtd_on = '';
        if ($auRec[$i]->admin_status_updated_on != '0000-00-00 00:00:00') {
            $admin_sts_updtd_on = date('d M Y H:i', strtotime($auRec[$i]->admin_status_updated_on));
        }

        $data .= '"' . $auRec[$i]->salesman_name . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->employee_code . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->sal_desg . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->rpt_to . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->rpt_to_desg . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->leave_reason . '"';
        $data .= "\t";
        $data .= '"' . $fromDate . '"';
        $data .= "\t";
        $data .= '"' . $toDate . '"';
        $data .= "\t";
        $data .= '"' . $requestedOnDate . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->comment . '"';
        $data .= "\t";
        $data .= '"' . $mngrStatus . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->mngr_name . '"';
        $data .= "\t";
        $data .= '"' . $mngr_sts_updtd_on . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->manager_remark . '"';
        $data .= "\t";
        $data .= '"' . $adminStatus . '"';
        $data .= "\t";
        $data .= '"' . $adminName . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->admin_remark . '"';
        $data .= "\t";
        $data .= '"' . $admin_sts_updtd_on . '"';
        $data .= "\n";


    }

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['salesman'] . "_leave_request.xls\"");
    echo $data;
    exit;
}
// Todo :End :Jatin :1-September-2023

/******************************* Start Export Item List : 05 sept : Sudhanshu ******************************************************************/

if (isset($_GET['export_item_list'])) {

    $data = "Item Name \t Item Code\t Brand Name\t Category Name\n";

    $RoleBrands = $_objAdmin->getUserRoleBrand();
    $brandCnd = '';
    if (!empty($RoleBrands)) {
        $brandCnd = " and b.brand_id IN(" . $RoleBrands . ")";
    }
    $condi = " c.status='A' and i.account_id='" . $_SESSION['accountId'] . "' and i.item_type='I' and i.status='A' $brandCnd ORDER BY item_name";
    $auRec = $_objAdmin->_getSelectList('table_item as i      
        left join table_category as c on i.category_id = c.category_id 
        left join table_brands as b on b.brand_id=i.brand_id',
        "i.item_id,i.item_name,i.item_code,b.brand_name,c.category_name", '', $condi);
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {

            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->brand_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->category_name . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"item_listing.xls\"");
    echo $data;
    exit;
}
/******************************************** End Export Item List ******************************************************************/

// Todo Start : Sudhanshu : Export app user login details 28 aug 2023

if (isset($_GET['export_app_user_login_details'])) {

    $data = "Username \t  " . $AliaseUsers['salesman'] . " Name \t " . $AliaseUsers['salesman'] . " Code \t Activity \t Activity Date \t Activity Time\n";

    $sort = " ORDER BY login_date DESC, login_time ASC";
    $salName = '';
    if ($_SESSION['Sal_Id'] != '') {
        $salName = " AND lt.salesman_id='" . $_SESSION['Sal_Id'] . "' ";
    }
    //  echo $salesmanCondi;die;
    if ($_SESSION['FromWebDate'] != '') {
        $fromdate = "  lt.login_date  >= '" . date('Y-m-d', strtotime($_SESSION['FromWebDate'])) . "' AND ";
    } else {
        $fromdate = " lt.login_date  >= '" . date('Y-m-d') . "' AND ";
    }
    if ($_SESSION['ToWebDate'] != '') {
        $todate = " lt.login_date <= '" . date('Y-m-d', strtotime($_SESSION['ToWebDate'])) . "' ";
    } else {
        $todate = "  lt.login_date <= '" . date('Y-m-d') . "'";
    }


    $where = $fromdate . $todate . $salName . " AND s.account_id='" . $_SESSION['accountId'] . "'";

    $auRec = $_objAdmin->_getSelectList2('table_app_login_track as lt
    left join table_web_users as w ON lt.salesman_id=w.salesman_id   
    left join table_salesman as s ON s.salesman_id=w.salesman_id',
        "lt.*,w.username,w.user_type,s.salesman_name,s.employee_code", '', $where . $sort, '');

    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            //$status = ($auRec[$i]->sync_status == 'S') ? "Success" : "Failed";
            $loginDate = $_objAdmin->_changeDate($auRec[$i]->login_date);


            $data .= '"' . $auRec[$i]->username . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->activity_type . '"';
            $data .= "\t";

            $data .= '"' . $loginDate . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->login_time . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"app_user_login_report.xls\"");
    echo $data;
    exit;
}

// Todo : End  app user login details 28 aug 2023

//Todo Start: Sudhanshu: 06 sep 2023:  Start Export Grade List
if (isset($_GET['export_grades'])) {
    $data = "Grade Name\n";
    //Todo Start : sudhanshu 12 june 2024 : add status filter
    $statusCondi = '';
    if (isset($_SESSION['MasGrade']) && $_SESSION['MasGrade'] != 'all' && $_SESSION['MasGrade'] != '') {
        $statusCondi = " status ='" . $_SESSION['MasGrade'] . "'";
    }
    $where = " $statusCondi ";
    //Todo End : sudhanshu 12 june 2024 : add status filter
    $auRec = $_objAdmin->_getSelectList('table_grade', "grade_name", '', $where);
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . $auRec[$i]->grade_name . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"grade_list.xls\"");
    echo $data;
    exit;
}

//Todo Start: Sudhanshu: 07 sep 2023:  Start Export Retailer Group List

if (isset($_GET['export_retailer_group'])) {
    $data = "Group Name\n";
    //Todo Start : sudhanshu 13 june 2024 : add status filter
    $statusCondi = '';
    if (isset($_SESSION['MasRetGroup']) && $_SESSION['MasRetGroup'] != 'all' && $_SESSION['MasRetGroup'] != '') {
        $statusCondi = " status ='" . $_SESSION['MasRetGroup'] . "'";
    }
    //Todo End : sudhanshu 13 june 2024 : add status filter
    $auRec = $_objAdmin->_getSelectList('table_retailer_group', "group_name", '', $statusCondi);
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . $auRec[$i]->group_name . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"retailer_group_list.xls\"");
    echo $data;
    exit;
}


//Todo Start: Sudhanshu: 13 sep 2023:  Start Export Purpose of Visit

if (isset($_GET['export_purpose_visit'])) {
    $data = "Purpose of Visit\n";
    //Todo Start : sudhanshu 10 june 2024 : add status filter
    $statusCondi = '';
    if (isset($_SESSION['MasPer']) && $_SESSION['MasPer'] != 'all' && $_SESSION['MasPer'] != '') {
        $statusCondi = " status ='" . $_SESSION['MasPer'] . "'";
    }
    $where = " $statusCondi ORDER BY purpose ASC";
    //Todo End : sudhanshu 10 june 2024 : add status filter
    $auRec = $_objAdmin->_getSelectList('table_purpose_visit', "purpose", '', $where);
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . $auRec[$i]->purpose . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"purpose_visit_list.xls\"");
    echo $data;
    exit;
}

if (isset($_GET['export_merchandising_report'])) {
    $data = "Activity Date\t Activity Time\t " . $AliaseUsers['salesman'] . " Name\t " . $AliaseUsers['salesman'] . " Code\t " . $AliaseUsers['retailer'] . " Name\t " . $AliaseUsers['retailer'] . " Code\t " . $AliaseUsers['retailer'] . " Group\t " . $AliaseUsers['retailer'] . " Channel\t " . $AliaseUsers['retailer'] . " Classification\t " . $AliaseUsers['retailer'] . " Type\t" . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\t Photo Count\n";
    $auRec = $_objAdmin->_getSelectList('table_mgb as tm 
    left join table_salesman as s on tm.salesman_id = s.salesman_id 
    left join table_retailer as tr on tm.retailer_id = tr.retailer_id
    LEFT JOIN table_retailer_group as rg ON rg.group_id = tr.group_id
    left join table_retailer_type_master as rtm ON rtm.type_id=tr.type_id
    left join table_retailer_channel_master as rc ON rc.channel_id=tr.channel_id 
    left join table_relationship as rel ON rel.relationship_id=tr.relationship_id 
    left join table_distributors as d on d.distributor_id = tr.distributor_id',
        'tm.*,s.salesman_name,s.employee_code,d.distributor_name,d.distributor_code,tr.retailer_name,tr.retailer_code,rg.group_name,rtm.type_name,rc.channel_name,rel.relationship_code as relation', '',
        " (tm.mgb_date BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromAttList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToAttList'])) . "') 
    " . $_SESSION['SaleId'] . " ORDER BY tm.mgb_id DESC");

    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . $_objAdmin->_changeDate($auRec[$i]->mgb_date) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->mgb_time . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->group_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->channel_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->relation . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->type_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->mgb_photo_count . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"merchandising_report.xls\"");
    echo $data;
    exit;
}

if (isset($_GET['export_retailer_order_report'])) {
    $data = "Activity Date\t Activity Day\t" . $AliaseUsers['salesman'] . " Code\t" . $AliaseUsers['salesman'] . " Name\t Designation\t " . $AliaseUsers['retailer'] . " Code\t" . $AliaseUsers['retailer'] . " Name\t State\t District\t City\tType\tMapped ".$AliaseUsers['route']."\tOrder Amount\t No Order Reason\n";

    $sort = " ORDER BY date_of_order desc,time_of_order desc";

    if ($_SESSION['FromDisList'] != '') {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['FromDisList'])) . "'";
    } else {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d') . "'";
    }
    // -----retailer
    if ($_SESSION['FromDisList'] != '') {
        $retStartDate = " and r.start_date >= '" . date('Y-m-d', strtotime($_SESSION['FromDisList'])) . "'";
    } else {
        $retStartDate = " and r.start_date >= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['ToDisList'] != '') {
        $todate = " and o.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToDisList'])) . "'";
    } else {
        $todate = " and o.date_of_order <= '" . date('Y-m-d') . "'";
    }
    //-------
    if ($_SESSION['ToDisList'] != '') {
        $toretdate = " and r.start_date <= '" . date('Y-m-d', strtotime($_SESSION['ToDisList'])) . "'";
    } else {
        $toretdate = " and r.start_date <= '" . date('Y-m-d') . "'";
    }


    if ($_SESSION['SalDisList'] != '' && $_SESSION['SalDisList'] > 0) {

        $salesman = " AND s.salesman_id = " . $_SESSION['SalDisList'];
    } else {
        $salesman = "";
    }
    if ($_SESSION['retId'] != '' && $_SESSION['retId'] > 0) {

        $retailer = " AND r.retailer_id = " . $_SESSION['retId'];
    } else {
        $retailer = "";
    }


    $where = " o.salesman_id > 0 and o.order_for='R' and o.order_status !='C' and (o.order_type = 'NO'  || o.order_type = 'Yes' )
     $retailer $salesman $fromdate $todate $orderby";

    if ($query) $where .= " AND $qtype LIKE '%$query%' ";
    $auRec = $_objAdmin->_getSelectList('table_order as o            
            left join table_retailer as r on o.retailer_id=r.retailer_id 
            left join table_salesman as s on o.salesman_id=s.salesman_id 
            LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id 
            LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id         
            left join state as st on st.state_id=r.state            
            left join city as c on c.city_id=r.city
            left join table_location as loc on loc.location_id=r.location_id',
        "o.*,r.retailer_name,r.retailer_code,r.start_date,s.salesman_name,s.employee_code,
     st.state_name,c.city_name,loc.location_name,H.description as desig", '', $where . $sort, '');

    $retCondi = " r.salesman_id > 0 $retStartDate $toretdate $salesman";

    $retRec = $_objAdmin->_getSelectList('table_retailer r
     left join table_salesman as s on r.salesman_id=s.salesman_id 
     LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id 
     LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id         
     left join state as st on st.state_id=r.state            
     left join city as c on c.city_id=r.city
     left join table_location as loc on loc.location_id=r.location_id',
        "retailer_name,retailer_code,r.start_date as date_of_order,retailer_id,s.salesman_name,s.employee_code,
      st.state_name,c.city_name,loc.location_name,H.description as desig", '', $retCondi, '');


    if ((count($retRec) > 0 && !empty($retRec)) && (count($auRec) > 0 && !empty($auRec))) {

        $array = array();
        $array = array_merge($auRec, $retRec);
        $auRec = $_objAdmin->sortArrayByColumn($array, array('date_of_order', 'time_of_order'));
        $total = count($auRec);

    } elseif ((count($auRec) > 0 && !empty($auRec)) && (count($retRec) <= 0 && empty($retRec))) {

        $auRec = $auRec;
        $total = count($auRec);
    } else {
        $auRec = $retRec;
        $total = count($auRec);
    }


    //------------ now get retailer mapped  route

    $condi = "";
    $routeRec = $_objAdmin->_getSelectList('table_route_retailer as rr            
     left join table_retailer as r on rr.retailer_id=r.retailer_id 
     left join table_route as rt on rr.route_id=rt.route_id',
        "rt.route_name,rr.retailer_id", '', $condi, '');

    $routeArr = [];
    foreach ($routeRec as $rout) {
        $routeArr[$rout->retailer_id][] = $rout->route_name;
    }
    $routeNewArr = [];
    foreach ($routeArr as $key => $val) {
        $routeNewArr[$key] = implode(" | ", $val);
    }

    //--------------------


    $remove = array("\n", "\r", ",", "\t");
    for ($i = 0; $i < count($auRec); $i++) {


        if ($auRec[$i]->tag_description != '') {
            $noOrderReason = $auRec[$i]->tag_description;
        } else {
            $noOrderReason = "N/A";
        }
        if ($auRec[$i]->order_type != 'No') {
            $orderAmount = $auRec[$i]->total_invoice_amount;
        } else {
            $orderAmount = 0;
        }

        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);

        $orderDay = strtotime($auRec[$i]->date_of_order);

        $rStartDate = strtotime($auRec[$i]->start_date);

        $Day = date('D', $orderDay);

        if ($rStartDate == $orderDay) {
            $type = "New";
        } elseif (!isset($auRec[$i]->order_id)) {
            $type = "New";
        } else {
            $type = "Existing";
        }

        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);

        $data .= "" . $date_of_order . "\t" . $Day . "\t" . $auRec[$i]->employee_code . "\t" .
            $auRec[$i]->salesman_name . "\t" . $auRec[$i]->desig . "\t" .
            $auRec[$i]->retailer_code . "\t" .
            $auRec[$i]->retailer_name . "\t" .
            $auRec[$i]->state_name . "\t" . str_replace($remove, ' ', $auRec[$i]->location_name) . "\t" . str_replace($remove, ' ', $auRec[$i]->city_name) . "\t" .
            $type . "\t" . str_replace($remove, ' ', $routeNewArr[$auRec[$i]->retailer_id]) . "\t" .
            $orderAmount . "\t" . $noOrderReason . "\n";
    }

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\" " . $AliaseUsers['retailer'] . " Order Report.xls\"");
    echo $data;
    exit;
}


if (isset($_GET['export_survey_feedback_transaction_activity'])) {

    $data = "Activity Date\t" . $AliaseUsers['salesman'] . " Code\t" . $AliaseUsers['salesman'] . " Name\tReporting Person Name\tSurvey Code\tSurvey Name\tSurvey Start Date\tSurvey End Date\t" . $AliaseUsers['retailer'] . " Code\t" . $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['retailer'] . " Type\tRetailer State\t Retailer District\t Retailer City\t Photo Count\n";

    $sort = " ORDER BY sr.activity_date, sr.activity_time DESC";

    if (isset($_SESSION['from']) && !empty($_SESSION['from'])) {
        $from = date('Y-m-d', strtotime($_SESSION['from']));
    } else {
        $from = date('Y-m-d');
    }

    if (isset($_SESSION['to']) && !empty($_SESSION['to'])) {
        $to = date('Y-m-d', strtotime($_SESSION['to']));
    } else {
        $to = date('Y-m-d');
    }


    $salesmanCondi = '';
    if (($_SESSION['salQuest'] != 'All') && !empty($_SESSION['salQuest']) && (intval($_SESSION['salQuest']) > 0)) {
        $salesmanCondi = " and s.salesman_id = " . $_SESSION['salQuest'];
    }


    $where = " sr.activity_date between '" . $from . "' AND '" . $to . "' $salesmanCondi ";

    $auRec = $_objAdmin->_getSelectList('table_feedback_survey_activity as sr
            LEFT JOIN table_feedback_survey_master as sq on sq.survey_id = sr.survey_id
            LEFT JOIN table_salesman as s on s.salesman_id = sr.salesman_id
            LEFT JOIN table_retailer as r ON r.retailer_id = sr.retailer_id
            LEFT JOIN state as st on st.state_id=r.state
            LEFT JOIN city as ct on ct.city_id=r.city
            LEFT JOIN table_location as loc on loc.location_id = r.location_id 
            LEFT JOIN table_distributors as d ON d.distributor_id = sr.distributor_id
            LEFT JOIN table_distributor_type_master as dtm ON dtm.dis_type_id = d.distributor_type_id
            LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
            LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
            LEFT JOIN table_salesman AS S2 ON S2.salesman_id = SH.rpt_user_id
            LEFT JOIN table_retailer_type_master as rtm On rtm.type_id = r.type_id
            LEFT JOIN table_lead as l ON l.lead_id = sr.lead_id',
        "sr.*,sq.survey_name,s.salesman_name,s.employee_code,r.retailer_name,r.retailer_code,d.distributor_name,d.distributor_code,l.title as lead_title,l.lead_code,sq.survey_code,rtm.type_name,dtm.dis_type_name,sq.from_date,sq.to_date,H.description AS des1, S2.salesman_name AS rptPerson,st.state_name,ct.city_name,loc.location_name", '', $where . $sort, '');


    if (is_array($auRec)) {

        for ($i = 0; $i < count($auRec); $i++) {

            if (strtolower($auRec[$i]->activity_type) == 'r') {
                $actType = $AliaseUsers['retailer'];
            } elseif (strtolower($auRec[$i]->activity_type) == 'd') {
                $actType = $AliaseUsers['distributor'];
            } elseif (strtolower($auRec[$i]->activity_type) == 'l') {
                $actType = 'Lead';
            } else {
                $actType = '';
            }

            // Todo start : photo count : 04 march : sudhanshu
            $auPhoto = $_objAdmin->_getSelectList('table_survey_ans_images as srm
           
             ', 'COUNT(srm.activity_id) as photo_count', '', " srm.activity_id='" . $auRec[$i]->activity_id . "'");

            // todo End  : photo count : sudhanshu : 04 march


            $data .= '"' . date('d M Y', strtotime($auRec[$i]->activity_date)) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            // $data .= '"' . $auRec[$i]->des1 . '"';
            // $data .= "\t";
            $data .= '"' . $auRec[$i]->rptPerson . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->survey_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->survey_name . '"';
            $data .= "\t";
            $data .= '"' . date('d M Y', strtotime($auRec[$i]->from_date)) . '"';
            $data .= "\t";
            $data .= '"' . date('d M Y', strtotime($auRec[$i]->to_date)) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->type_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\t";
            $data .= '"' . $auPhoto[0]->photo_count . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"feedback_activity_report.xls\"");
    echo $data;
    exit;
}


if (isset($_GET['export_survey_salesman_mapping'])) {
    $data = "Survey Name\tSurvey Code\t" . $AliaseUsers['salesman'] . " Name\t " . $AliaseUsers['salesman'] . " Code\t" . $AliaseUsers['salesman'] . " Designation\t Mapping Update Date \t Mapping Status\n";

    $condi = "ssm.survey_id='" . $_SESSION['surId'] . "'";

    $auRec = $_objAdmin->_getSelectList2('table_survey_employee_type_mapping as ssm
    LEFT JOIN table_feedback_survey_master as sm ON sm.survey_id=ssm.survey_id
    LEFT join table_salesman as s on ssm.employee_id=s.salesman_id
    LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
    LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
    LEFT JOIN table_salesman AS S2 ON S2.salesman_id = SH.rpt_user_id',
        "s.salesman_id,s.salesman_name,s.employee_code,sm.survey_name,survey_code, H.description AS des1,ssm.updated_on,ssm.status", '',
        " $condi ");


    $surRec = $_objAdmin->_getSelectList('table_feedback_survey_master as ssm',
        "survey_name,survey_code", '', $condi);

    $surName = $surRec[0]->survey_name;
    $surCode = $surRec[0]->survey_code;

//    if ($_SESSION['allEmp'] == 1) {
//
//        $auRec = $_objAdmin->_getSelectList('table_salesman as s
//        LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
//        LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
//        LEFT JOIN table_salesman AS S2 ON S2.salesman_id = SH.rpt_user_id',
//            "s.salesman_id,s.salesman_name,s.employee_code,H.description AS des1,s.status", '', " s.status='A'");
//
//    }
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {

            $updated_date = ($auRec[$i]->updated_on != '0000-00-00 00:00:00') ? $_objAdmin->_changeDate
            ($auRec[$i]->updated_on) : '';
            $status = ($auRec[$i]->status == 'A') ? 'Active' : 'Inactive';

            $data .= '"' . $surName . '"';
            $data .= "\t";
            $data .= '"' . $surCode . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->des1 . '"';
            $data .= "\t";
            $data .= '"' . $updated_date . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"survey_salesman_mapping.xls\"");
    echo $data;
    exit;
}

//Todo Start : Jatin : 25th October 2023 Dynamic Retailer Available Stock report export

if (isset($_GET['export_dynamic_retailer_batch_wise_opening_stock'])) {
    $data = "Activity Date \t" . $AliaseUsers['salesman'] . " Code\t" . $AliaseUsers['salesman'] . " Name\t" .
        $AliaseUsers['salesman'] . " Zone\t" . $AliaseUsers['salesman'] . " State\t" . $AliaseUsers['retailer'] . " Code\t " . $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['retailer'] . " Zone\t" . $AliaseUsers['retailer'] . " State\t" . $AliaseUsers['retailer'] . " Channel\t" . $AliaseUsers['retailer'] . " Display Outlet\tBrand\tCategory\t Item Code\t Item Name\t Stock Quantity\tStock Value (PTR)\tStock Value (MRP)\t Previous Available Stock\n";

    $sort = " ORDER BY date_of_order desc,time_of_order desc";

    $salesmanCnd = '';
//    $salCond = '';

    if (isset($_SESSION['fil_salesman']) && $_SESSION['fil_salesman'] > 0) {
        $salesmanCnd .= ' AND s.salesman_id = "' . $_SESSION['fil_salesman'] . '"';
    } else if (isset($_SESSION['fil_salesman_manager']) && ($_SESSION['fil_salesman_manager'] > 0)) {
        $salesmanManagerId = $_SESSION['fil_salesman_manager'];
        $account_id = $_SESSION['accountId'];
        $res = $_objAdmin->_getSelectList2('table_salesman_hierarchy_relationship AS SHR 
    LEFT JOIN table_salesman_hierarchy AS SH ON SH.hierarchy_id = SHR.hierarchy_id
    LEFT JOIN table_salesman AS s ON s.salesman_id = SHR.salesman_id', 's.salesman_id,SH.hierarchy_id,SH.sort_order', '', " SH.account_id=" . $account_id . " AND SHR.salesman_id = $salesmanManagerId ORDER BY SH.sort_order ASC ");
        $_objArrayList = new ArrayList();
        if (is_array($res) && (count($res) > 0)) {
            $sortOrder = $res[0]->sort_order;
            $getBottomUsersIdArr = $_objArrayList->getSalesmansBottomUsers(array($salesmanManagerId), $sortOrder,
                $account_id);

            if (is_array($getBottomUsersIdArr) && (count($getBottomUsersIdArr) > 0)) {
                $bottomUsersIds = implode(',', $getBottomUsersIdArr);
            }

            $salesmanCnd = " AND s.salesman_id IN($bottomUsersIds) ";
        }
    } else if (isset($_SESSION['fil_salesman_designation']) && ($_SESSION['fil_salesman_designation'] > 0)) {
        $account_id = $_SESSION['accountId'];
        $_objArrayList = new ArrayList();
        $getDesignationWiseBottomUsersIdArr = $_objArrayList->getDesignationWiseBottomUsers($_SESSION['fil_salesman_designation'], $account_id);

        if (is_array($getDesignationWiseBottomUsersIdArr) && (count($getDesignationWiseBottomUsersIdArr) > 0)) {
            $bottomUsersIds = implode(',', $getDesignationWiseBottomUsersIdArr);
            $salesmanCnd = " AND s.salesman_id IN($bottomUsersIds) ";
        }
    } else {
        $salesmanCnd .= $_SESSION['salsInCond'];
    }
    if (isset($_SESSION['fil_salesman_zone']) && $_SESSION['fil_salesman_zone'] > 0) {
//        $salCond .= ' AND rz1.zone_id = "' . $_SESSION['fil_salesman_zone'] . '"';
        $salesmanCnd .= ' AND rz1.zone_id = "' . $_SESSION['fil_salesman_zone'] . '"';
    }
    if (isset($_SESSION['fil_retailer_zone']) && $_SESSION['fil_retailer_zone'] > 0) {
//        $salCond .= ' AND rz.zone_id = "' . $_SESSION['fil_retailer_zone'] . '"';
        $salesmanCnd .= ' AND rz.zone_id = "' . $_SESSION['fil_retailer_zone'] . '"';
    }

    if (isset($_SESSION['fil_salesman_state']) && $_SESSION['fil_salesman_state'] > 0) {
//        $salCond .= ' AND ss.state = "' . $_SESSION['fil_salesman_state'] . '"';
        $salesmanCnd .= ' AND ss.state = "' . $_SESSION['fil_salesman_state'] . '"';
    }
    if (isset($_SESSION['fil_retailer']) && $_SESSION['fil_retailer'] > 0) {
//        $salCond .= ' AND r.retailer_id = "' . $_SESSION['fil_retailer'] . '"';
        $salesmanCnd .= ' AND r.retailer_id = "' . $_SESSION['fil_retailer'] . '"';
    }
    if (!isset($_SESSION['fil_from']) && empty($_SESSION['fil_from'])) {
        $_SESSION['fil_from'] = date('d M Y');
    }

    if (!isset($_SESSION['fil_to']) && empty($_SESSION['fil_to'])) {
        $_SESSION['fil_to'] = date('d M Y');
    }
    if (isset($_SESSION['fil_month']) && !empty($_SESSION['fil_month']) && isset($_SESSION['fil_year']) && !empty($_SESSION['fil_year'])) {
        $_SESSION['fil_from'] = date('Y-m-d', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
        $_SESSION['fil_to'] = date('Y-m-t', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
    }


    if (isset($_SESSION['userLoginType']) && in_array($_SESSION['userLoginType'], array(6, 7, 8, 9))) {
        $condwhere = $_objAdmin->getSalesMenID();
    }


    $where = " ot.ostype='R' $salesmanCnd and ot.date_of_order between '" . date('Y-m-d', strtotime($_SESSION['fil_from'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['fil_to'])) . "' ";


    $auRec = $_objAdmin->_getSelectList('table_order_os AS ot
		  	LEFT JOIN table_order_detail_os AS tod ON tod.os_id=ot.os_id
			LEFT JOIN table_retailer AS r ON r.retailer_id=ot.retailer_id
			LEFT JOIN table_distributors as d on d.distributor_id = r.distributor_id 
			LEFT JOIN state as rs ON rs.state_id = r.state
			LEFT JOIN table_zone_state_mapping as zsm ON zsm.state_id = r.state AND zsm.account_id = r.account_id
			LEFT JOIN table_zone as rz ON rz.zone_id = zsm.zone_id
			LEFT JOIN table_salesman AS s ON s.salesman_id=ot.salesman_id
			LEFT JOIN state as ss ON ss.state_id = s.state
			LEFT JOIN table_zone_state_mapping as zsm1 ON zsm1.state_id = s.state AND zsm1.account_id = s.account_id
			LEFT JOIN table_zone as rz1 ON rz1.zone_id = zsm1.zone_id
			LEFT JOIN table_item AS i ON i.item_id=tod.item_id
			LEFT JOIN table_price AS p ON p.item_id=tod.item_id
			LEFT JOIN table_brands as br ON br.brand_id = i.brand_id
			LEFT JOIN table_category AS c ON c.category_id=i.category_id
			LEFT JOIN table_retailer_channel_master AS cm on cm.channel_id=r.channel_id', "ot.*,tod.*,r.retailer_name,r.retailer_code,rs.state_name as retailer_state,rz.zone_name as retailer_zone,cm.channel_name,r.display_outlet,s.salesman_name,s.employee_code,d.distributor_name,d.distributor_code,ss.state_name as salesman_state,rz1.zone_name as salesman_zone ,i.item_name,i.item_code,c.category_name,(p.item_mrp * tod.quantity) as stockValuePTR, (p.item_dp * tod.quantity) as stockValueMRP,br.brand_name", '', $where . $condwhere . $sort, '');
//echo "<pre>";
//print_R($auRec);die;
    for ($i = 0; $i < count($auRec); $i++) {
        if ($auRec[$i]->display_outlet == 'Y') {
            $outlet = 'Yes';
        } elseif ($auRec[$i]->display_outlet == 'No') {
            $outlet = 'No';
        } else {
            $outlet = '';
        }

        $closingStock = $_objAdmin->_getSelectList("table_order_os AS ot
		  LEFT JOIN table_order_detail_os AS tod ON tod.os_id=ot.os_id
		  LEFT JOIN table_order AS O ON O.salesman_id = ot.salesman_id AND O.retailer_id = ot.retailer_id 
		  LEFT JOIN table_order_detail AS OD ON OD.order_id = O.order_id", "tod.quantity AS closing_stock ,OD.quantity AS order_quantity ", "", " ot.salesman_id =" . $auRec[$i]->salesman_id . " AND ot.retailer_id ='" . $auRec[$i]->retailer_id . "' AND ot.date_of_order <='" . $auRec[$i]->date_of_order . "' AND tod.item_id = '" . $auRec[$i]->item_id . "' AND O.order_status!='D' ORDER BY ot.os_id, O.order_id DESC LIMIT 1,1");

        $data .= $_objAdmin->_changeDate($auRec[$i]->date_of_order) . "\t" .
            $auRec[$i]->employee_code . "\t" .
            $auRec[$i]->salesman_name . "\t" .
            $auRec[$i]->salesman_zone . "\t" .
            $auRec[$i]->salesman_state . "\t" .
            $auRec[$i]->retailer_code . "\t" .
            $auRec[$i]->retailer_name . "\t" .
            $auRec[$i]->retailer_zone . "\t" .
            $auRec[$i]->retailer_state . "\t" .
            $auRec[$i]->channel_name . "\t" .
            $outlet . "\t" .
            $auRec[$i]->brand_name . "\t" .
            $auRec[$i]->category_name . "\t" .
            $auRec[$i]->item_code . "\t" .
            $auRec[$i]->item_name . "\t" .
            $auRec[$i]->quantity . "\t" .
            round($auRec[$i]->stockValuePTR, 2) . "\t" .
            round($auRec[$i]->stockValueMRP, 2) . "\t" .
            $closingStock[0]->closing_stock . "\t" .
            //$closingStock[0]->order_quantity .
            "\n";
    }

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['retailer'] . " Available Stock.xls\"");
    echo $data;
    exit;
}


if (isset($_GET['export_dynamic_retailer_detail_batch_wise_opening_stock'])) {
    $data = "Activity Date \t" . $AliaseUsers['salesman'] . " Code\t" . $AliaseUsers['salesman'] . " Name\t" .
        $AliaseUsers['salesman'] . " Zone\t" . $AliaseUsers['salesman'] . " State\t" . $AliaseUsers['retailer'] . " Code\t " . $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['retailer'] . " Zone\t" . $AliaseUsers['retailer'] . " State\t" . $AliaseUsers['retailer'] . " Channel\t" . $AliaseUsers['retailer'] . " Display Outlet\tBrand\tCategory\t Item Code\t Item Name\tBatch Code\t Batch Number\t Batch MFG Date \t Batch EXP Date\t Stock Quantity\tStock Value (PTR)\tStock Value (MRP)\t Previous Available Stock\tComment\n";

    $sort = " ORDER BY date_of_order desc,time_of_order desc";

    $salesmanCnd = '';

    if (isset($_SESSION['fil_salesman']) && $_SESSION['fil_salesman'] > 0) {
        $salesmanCnd .= ' AND s.salesman_id = "' . $_SESSION['fil_salesman'] . '"';
    } else if (isset($_SESSION['fil_salesman_manager']) && ($_SESSION['fil_salesman_manager'] > 0)) {
        $salesmanManagerId = $_SESSION['fil_salesman_manager'];
        $account_id = $_SESSION['accountId'];
        $res = $_objAdmin->_getSelectList2('table_salesman_hierarchy_relationship AS SHR 
    LEFT JOIN table_salesman_hierarchy AS SH ON SH.hierarchy_id = SHR.hierarchy_id
    LEFT JOIN table_salesman AS s ON s.salesman_id = SHR.salesman_id', 's.salesman_id,SH.hierarchy_id,SH.sort_order', '', " SH.account_id=" . $account_id . " AND SHR.salesman_id = $salesmanManagerId ORDER BY SH.sort_order ASC ");
        $_objArrayList = new ArrayList();
        if (is_array($res) && (count($res) > 0)) {
            $sortOrder = $res[0]->sort_order;
            $getBottomUsersIdArr = $_objArrayList->getSalesmansBottomUsers(array($salesmanManagerId), $sortOrder,
                $account_id);

            if (is_array($getBottomUsersIdArr) && (count($getBottomUsersIdArr) > 0)) {
                $bottomUsersIds = implode(',', $getBottomUsersIdArr);
            }

            $salesmanCnd = " AND s.salesman_id IN($bottomUsersIds) ";
        }
    } else if (isset($_SESSION['fil_salesman_designation']) && ($_SESSION['fil_salesman_designation'] > 0)) {
        $account_id = $_SESSION['accountId'];
        $_objArrayList = new ArrayList();
        $getDesignationWiseBottomUsersIdArr = $_objArrayList->getDesignationWiseBottomUsers($_SESSION['fil_salesman_designation'], $account_id);

        if (is_array($getDesignationWiseBottomUsersIdArr) && (count($getDesignationWiseBottomUsersIdArr) > 0)) {
            $bottomUsersIds = implode(',', $getDesignationWiseBottomUsersIdArr);
            $salesmanCnd = " AND s.salesman_id IN($bottomUsersIds) ";
        }
    } else {
        $salesmanCnd .= $_SESSION['salsInCond'];
    }
    if (isset($_SESSION['fil_salesman_zone']) && $_SESSION['fil_salesman_zone'] > 0) {
//        $salCond .= ' AND rz1.zone_id = "' . $_SESSION['fil_salesman_zone'] . '"';
        $salesmanCnd .= ' AND rz1.zone_id = "' . $_SESSION['fil_salesman_zone'] . '"';
    }
    if (isset($_SESSION['fil_retailer_zone']) && $_SESSION['fil_retailer_zone'] > 0) {
//        $salCond .= ' AND rz.zone_id = "' . $_SESSION['fil_retailer_zone'] . '"';
        $salesmanCnd .= ' AND rz.zone_id = "' . $_SESSION['fil_retailer_zone'] . '"';
    }

    if (isset($_SESSION['fil_salesman_state']) && $_SESSION['fil_salesman_state'] > 0) {
//        $salCond .= ' AND ss.state = "' . $_SESSION['fil_salesman_state'] . '"';
        $salesmanCnd .= ' AND ss.state = "' . $_SESSION['fil_salesman_state'] . '"';
    }
    if (isset($_SESSION['fil_retailer']) && $_SESSION['fil_retailer'] > 0) {
//        $salCond .= ' AND r.retailer_id = "' . $_SESSION['fil_retailer'] . '"';
        $salesmanCnd .= ' AND r.retailer_id = "' . $_SESSION['fil_retailer'] . '"';
    }
    if (!isset($_SESSION['fil_from']) && empty($_SESSION['fil_from'])) {
        $_SESSION['fil_from'] = date('d M Y');
    }

    if (!isset($_SESSION['fil_to']) && empty($_SESSION['fil_to'])) {
        $_SESSION['fil_to'] = date('d M Y');
    }
    if (isset($_SESSION['fil_month']) && !empty($_SESSION['fil_month']) && isset($_SESSION['fil_year']) && !empty($_SESSION['fil_year'])) {
        $_SESSION['fil_from'] = date('Y-m-d', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
        $_SESSION['fil_to'] = date('Y-m-t', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
    }


    if (isset($_SESSION['userLoginType']) && in_array($_SESSION['userLoginType'], array(6, 7, 8, 9))) {
        $condwhere = $_objAdmin->getSalesMenID();
    }


    $where = " ot.ostype='R' $salesmanCnd and ot.date_of_order between '" . date('Y-m-d', strtotime($_SESSION['fil_from'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['fil_to'])) . "' ";


    $auRec = $_objAdmin->_getSelectList('table_order_os AS ot
		  	LEFT JOIN table_order_detail_os AS tod ON tod.os_id=ot.os_id
		  	LEFT JOIN table_order_detail_os_batch_wise as tbs ON tbs.os_detail_id = tod.os_detail_id
			LEFT JOIN table_retailer AS r ON r.retailer_id=ot.retailer_id
			LEFT JOIN table_distributors as d on d.distributor_id = r.distributor_id 
			LEFT JOIN state as rs ON rs.state_id = r.state
			LEFT JOIN table_zone_state_mapping as zsm ON zsm.state_id = r.state AND zsm.account_id = r.account_id
			LEFT JOIN table_zone as rz ON rz.zone_id = zsm.zone_id
			LEFT JOIN table_salesman AS s ON s.salesman_id=ot.salesman_id
			LEFT JOIN state as ss ON ss.state_id = s.state
			LEFT JOIN table_zone_state_mapping as zsm1 ON zsm1.state_id = s.state AND zsm1.account_id = s.account_id
			LEFT JOIN table_zone as rz1 ON rz1.zone_id = zsm1.zone_id
			LEFT JOIN table_item AS i ON i.item_id=tod.item_id
			LEFT JOIN table_price AS p ON p.item_id=tod.item_id
			LEFT JOIN table_brands as br ON br.brand_id = i.brand_id
			LEFT JOIN table_color as clr ON clr.color_id = tbs.batch_id
			LEFT JOIN table_category AS c ON c.category_id=i.category_id
			LEFT JOIN table_retailer_channel_master AS cm on cm.channel_id=r.channel_id', "ot.*,tod.*,r.retailer_name,r.retailer_code,rs.state_name as retailer_state,rz.zone_name as retailer_zone,cm.channel_name,r.display_outlet,s.salesman_name,s.employee_code,d.distributor_name,d.distributor_code,ss.state_name as salesman_state,rz1.zone_name as salesman_zone ,i.item_name,i.item_code,c.category_name,(p.item_mrp * tbs.qty) as stockValuePTR, (p.item_dp * tbs.qty) as stockValueMRP,br.brand_name,clr.color_code,clr.color_desc,clr.mfg_date,clr.expiry_date,tbs.*", '', $where . $condwhere . $sort, '');
    //echo "<pre>";print_R($auRec);die;
    for ($i = 0; $i < count($auRec); $i++) {
        if ($auRec[$i]->display_outlet == 'Y') {
            $outlet = 'Yes';
        } elseif ($auRec[$i]->display_outlet == 'No') {
            $outlet = 'No';
        } else {
            $outlet = '';
        }

        $closingStock = $_objAdmin->_getSelectList("table_order_os AS ot
		  LEFT JOIN table_order_detail_os AS tod ON tod.os_id=ot.os_id
		  LEFT JOIN table_order AS O ON O.salesman_id = ot.salesman_id AND O.retailer_id = ot.retailer_id 
		  LEFT JOIN table_order_detail AS OD ON OD.order_id = O.order_id", "tod.quantity AS closing_stock ,OD.quantity AS order_quantity ", "", " ot.salesman_id =" . $auRec[$i]->salesman_id . " AND ot.retailer_id ='" . $auRec[$i]->retailer_id . "' AND ot.date_of_order <='" . $auRec[$i]->date_of_order . "' AND tod.item_id = '" . $auRec[$i]->item_id . "' AND O.order_status!='D' ORDER BY ot.os_id, O.order_id DESC LIMIT 1,1");

        $data .= $_objAdmin->_changeDate($auRec[$i]->date_of_order) . "\t" .
            $auRec[$i]->employee_code . "\t" .
            $auRec[$i]->salesman_name . "\t" .
            $auRec[$i]->salesman_zone . "\t" .
            $auRec[$i]->salesman_state . "\t" .
            $auRec[$i]->retailer_code . "\t" .
            $auRec[$i]->retailer_name . "\t" .
            $auRec[$i]->retailer_zone . "\t" .
            $auRec[$i]->retailer_state . "\t" .
            $auRec[$i]->channel_name . "\t" .
            $outlet . "\t" .
            $auRec[$i]->brand_name . "\t" .
            $auRec[$i]->category_name . "\t" .
            $auRec[$i]->item_code . "\t" .
            $auRec[$i]->item_name . "\t" .
            $auRec[$i]->color_code . "\t" .
            $auRec[$i]->color_desc . "\t" .
            $_objAdmin->_changeDate($auRec[$i]->mfg_date) . "\t" .
            $_objAdmin->_changeDate($auRec[$i]->expiry_date) . "\t" .
            $auRec[$i]->qty . "\t" .
            round($auRec[$i]->stockValuePTR, 2) . "\t" .
            round($auRec[$i]->stockValueMRP, 2) . "\t" .
            $closingStock[0]->closing_stock . "\t" .
            $auRec[$i]->comment .
            "\n";
    }

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['retailer'] . " Available Stock.xls\"");
    echo $data;
    exit;
}
//Todo End : Jatin : 25th October 2023 Dynamic Retailer Available Stock report export


// Todo Start : Jatin :27th Oct 2023 : Dynamic Distributor wise Available Stock

if (isset($_GET['export_dynamic_distributor_batch_wise_opening_stock'])) {

    $data = "Activity Date \t" . $AliaseUsers['salesman'] . " Code\t" . $AliaseUsers['salesman'] . " Name\t" .
        $AliaseUsers['distributor'] . " Code\t " . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['retailer']
        . " Zone\t" . $AliaseUsers['retailer'] . " State\tDistrict \tCity \tBrand\tCategory\t Item Code\t Item Name\t Stock Quantity\tStock Value(PTD)\n";

    $sort = " ORDER BY date_of_order desc,time_of_order desc";

    // ---------------start dynamic filter condition-----------
    $salesmanCnd = '';

    if (isset($_SESSION['fil_salesman']) && $_SESSION['fil_salesman'] > 0) {

        $salesmanCnd = ' AND s.salesman_id = "' . $_SESSION['fil_salesman'] . '"';

    } else if (isset($_SESSION['fil_salesman_manager']) && ($_SESSION['fil_salesman_manager'] > 0)) {
        $salesmanManagerId = $_SESSION['fil_salesman_manager'];
        $account_id = $_SESSION['accountId'];
        $res = $_objAdmin->_getSelectList2('table_salesman_hierarchy_relationship AS SHR 
    LEFT JOIN table_salesman_hierarchy AS SH ON SH.hierarchy_id = SHR.hierarchy_id
    LEFT JOIN table_salesman AS s ON s.salesman_id = SHR.salesman_id', 's.salesman_id,SH.hierarchy_id,SH.sort_order', '', " SH.account_id=" . $account_id . " AND SHR.salesman_id = $salesmanManagerId ORDER BY SH.sort_order ASC ");
        $_objArrayList = new ArrayList();
        if (is_array($res) && (count($res) > 0)) {
            $sortOrder = $res[0]->sort_order;
            $getBottomUsersIdArr = $_objArrayList->getSalesmansBottomUsers(array($salesmanManagerId), $sortOrder,
                $account_id);

            if (is_array($getBottomUsersIdArr) && (count($getBottomUsersIdArr) > 0)) {
                $bottomUsersIds = implode(',', $getBottomUsersIdArr);
            }

            $salesmanCnd = " AND s.salesman_id IN($bottomUsersIds) ";
        }
    } else if (isset($_SESSION['fil_salesman_designation']) && ($_SESSION['fil_salesman_designation'] > 0)) {
        $account_id = $_SESSION['accountId'];
        $_objArrayList = new ArrayList();
        $getDesignationWiseBottomUsersIdArr = $_objArrayList->getDesignationWiseBottomUsers($_SESSION['fil_salesman_designation'], $account_id);

        if (is_array($getDesignationWiseBottomUsersIdArr) && (count($getDesignationWiseBottomUsersIdArr) > 0)) {
            $bottomUsersIds = implode(',', $getDesignationWiseBottomUsersIdArr);
            $salesmanCnd = " AND s.salesman_id IN($bottomUsersIds) ";
        }
    } else {
        $salesmanCnd .= $salesman;
    }
    if (isset($_SESSION['fil_retailer']) && $_SESSION['fil_retailer'] > 0) {

        $salesmanCnd .= ' AND r.retailer_id = "' . $_SESSION['fil_retailer'] . '"';
    }
    if (isset($_SESSION['fil_distributor']) && $_SESSION['fil_distributor'] > 0) {

        $salesmanCnd .= ' AND d.distributor_id = "' . $_SESSION['fil_distributor'] . '"';
    }
    if (isset($_SESSION['fil_distributor_zone']) && $_SESSION['fil_distributor_zone'] > 0) {

        $salesmanCnd .= ' AND szsm.zone_id = "' . $_SESSION['fil_distributor_zone'] . '"';
    }
    if (isset($_SESSION['fil_distributor_state']) && $_SESSION['fil_distributor_state'] > 0) {

        $salesmanCnd .= ' AND d.state = "' . $_SESSION['fil_distributor_state'] . '"';
    }
    if (!isset($_SESSION['fil_from']) && empty($_SESSION['fil_from'])) {
        $_SESSION['fil_from'] = date('d M Y');
    }

    if (!isset($_SESSION['fil_to']) && empty($_SESSION['fil_to'])) {
        $_SESSION['fil_to'] = date('d M Y');
    }
    if (isset($_SESSION['fil_month']) && !empty($_SESSION['fil_month']) && isset($_SESSION['fil_year']) && !empty($_SESSION['fil_year'])) {
        $_SESSION['fil_from'] = date('Y-m-d', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
        $_SESSION['fil_to'] = date('Y-m-t', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
    }

    // -------------End dynamic filter condition------------

    if (isset($_SESSION['userLoginType']) && in_array($_SESSION['userLoginType'], array(6, 7, 8, 9))) {
        $condwhere = $_objAdmin->getSalesMenID();
    }


    $where = " ods.date_of_order BETWEEN '" . date('Y-m-d', strtotime($_SESSION['fil_from'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['fil_to'])) . "' $salesmanCnd $brandCnd and d.distributor_name!='' ";


    $auRec = $_objAdmin->_getSelectList('table_order_distributor_stock as ods
  		inner join table_order_detail_distributor_stock as ods_detail on ods.stock_id=ods_detail.stock_id 
  		left join table_distributors as d on d.distributor_id=ods.distributor_id 
  		left join state as st on st.state_id=d.state 
  		left join city as ci on ci.city_id=d.city
  		left join table_item as i on i.item_id=ods_detail.item_id
  		left join table_price as p on p.item_id = i.item_id
		LEFT JOIN table_brands AS b ON b.brand_id=i.brand_id
  		left join table_category as c on c.category_id=i.category_id
  		LEFT JOIN table_zone_state_mapping as szsm on szsm.state_id = d.state and szsm.account_id = d.account_id
  		left join table_location as tl on tl.location_id =d.location
        LEFT JOIN table_zone as sz on sz.zone_id = szsm.zone_id
  		left join table_salesman as s on s.salesman_id=ods.salesman_id', "ods.*,ods_detail.*,d.distributor_id,d.distributor_name,d.distributor_code,i.item_name,i.item_id,b.brand_name,i.item_code,c.category_name,c.category_id,sz.zone_name,st.state_id,st.state_name,ci.city_name,ci.city_id ,s.salesman_id,s.salesman_name,s.employee_code,p.dist_price,p.item_dp,tl.location_name", '', $where . $condwhere . $sort, '');
//echo "<pre>";
//print_R($auRec);die;
    for ($i = 0; $i < count($auRec); $i++) {

        $ptd = ($auRec[$i]->dist_price > 0 && !empty($auRec[$i]->dist_price)) ? $auRec[$i]->dist_price :
            $auRec[$i]->item_dp;

        $data .= $_objAdmin->_changeDate($auRec[$i]->date_of_order) . "\t" .
            $auRec[$i]->employee_code . "\t" .
            $auRec[$i]->salesman_name . "\t" .
            $auRec[$i]->distributor_code . "\t" .
            $auRec[$i]->distributor_name . "\t" .
            $auRec[$i]->zone_name . "\t" .
            $auRec[$i]->state_name . "\t" .
            $auRec[$i]->city_name . "\t" .
            $auRec[$i]->location_name . "\t" .
            $auRec[$i]->brand_name . "\t" .
            $auRec[$i]->category_name . "\t" .
            $auRec[$i]->item_code . "\t" .
            $auRec[$i]->item_name . "\t" .
            $auRec[$i]->openning_stock_volume . "\t" .
            round(($ptd * $auRec[$i]->openning_stock_volume), 2) . "\n";

    }

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['distributor'] . " Available Stock.xls\"");
    echo $data;
    exit;
}


if (isset($_GET['export_dynamic_distributor_detail_batch_wise_opening_stock'])) {

    $data = "Activity Date \t" . $AliaseUsers['salesman'] . " Code\t" . $AliaseUsers['salesman'] . " Name\t" .
        $AliaseUsers['distributor'] . " Code\t " . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['retailer']
        . " Zone\t" . $AliaseUsers['retailer'] . " State\tDistrict \tCity\tBrand\tCategory\t Item Code\t Item Name\tBatch Code\tBatch Number\t Batch MFG Date\t Batch Exp Date \t Stock Quantity\tStock Value(PTD)\tComment\n";

    $sort = " ORDER BY date_of_order desc,time_of_order desc";

    // ---------------start dynamic filter condition-----------
    $salesmanCnd = '';

    if (isset($_SESSION['fil_salesman']) && $_SESSION['fil_salesman'] > 0) {

        $salesmanCnd = ' AND s.salesman_id = "' . $_SESSION['fil_salesman'] . '"';

    } else if (isset($_SESSION['fil_salesman_manager']) && ($_SESSION['fil_salesman_manager'] > 0)) {
        $salesmanManagerId = $_SESSION['fil_salesman_manager'];
        $account_id = $_SESSION['accountId'];
        $res = $_objAdmin->_getSelectList2('table_salesman_hierarchy_relationship AS SHR 
    LEFT JOIN table_salesman_hierarchy AS SH ON SH.hierarchy_id = SHR.hierarchy_id
    LEFT JOIN table_salesman AS s ON s.salesman_id = SHR.salesman_id', 's.salesman_id,SH.hierarchy_id,SH.sort_order', '', " SH.account_id=" . $account_id . " AND SHR.salesman_id = $salesmanManagerId ORDER BY SH.sort_order ASC ");
        $_objArrayList = new ArrayList();
        if (is_array($res) && (count($res) > 0)) {
            $sortOrder = $res[0]->sort_order;
            $getBottomUsersIdArr = $_objArrayList->getSalesmansBottomUsers(array($salesmanManagerId), $sortOrder,
                $account_id);

            if (is_array($getBottomUsersIdArr) && (count($getBottomUsersIdArr) > 0)) {
                $bottomUsersIds = implode(',', $getBottomUsersIdArr);
            }

            $salesmanCnd = " AND s.salesman_id IN($bottomUsersIds) ";
        }
    } else if (isset($_SESSION['fil_salesman_designation']) && ($_SESSION['fil_salesman_designation'] > 0)) {
        $account_id = $_SESSION['accountId'];
        $_objArrayList = new ArrayList();
        $getDesignationWiseBottomUsersIdArr = $_objArrayList->getDesignationWiseBottomUsers($_SESSION['fil_salesman_designation'], $account_id);

        if (is_array($getDesignationWiseBottomUsersIdArr) && (count($getDesignationWiseBottomUsersIdArr) > 0)) {
            $bottomUsersIds = implode(',', $getDesignationWiseBottomUsersIdArr);
            $salesmanCnd = " AND s.salesman_id IN($bottomUsersIds) ";
        }
    } else {
        $salesmanCnd .= $salesman;
    }
    if (isset($_SESSION['fil_retailer']) && $_SESSION['fil_retailer'] > 0) {

        $salesmanCnd .= ' AND r.retailer_id = "' . $_SESSION['fil_retailer'] . '"';
    }
    if (isset($_SESSION['fil_distributor']) && $_SESSION['fil_distributor'] > 0) {

        $salesmanCnd .= ' AND d.distributor_id = "' . $_SESSION['fil_distributor'] . '"';
    }
    if (isset($_SESSION['fil_distributor_zone']) && $_SESSION['fil_distributor_zone'] > 0) {

        $salesmanCnd .= ' AND szsm.zone_id = "' . $_SESSION['fil_distributor_zone'] . '"';
    }
    if (isset($_SESSION['fil_distributor_state']) && $_SESSION['fil_distributor_state'] > 0) {

        $salesmanCnd .= ' AND d.state = "' . $_SESSION['fil_distributor_state'] . '"';
    }
    if (!isset($_SESSION['fil_from']) && empty($_SESSION['fil_from'])) {
        $_SESSION['fil_from'] = date('d M Y');
    }

    if (!isset($_SESSION['fil_to']) && empty($_SESSION['fil_to'])) {
        $_SESSION['fil_to'] = date('d M Y');
    }
    if (isset($_SESSION['fil_month']) && !empty($_SESSION['fil_month']) && isset($_SESSION['fil_year']) && !empty($_SESSION['fil_year'])) {
        $_SESSION['fil_from'] = date('Y-m-d', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
        $_SESSION['fil_to'] = date('Y-m-t', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
    }

    // -------------End dynamic filter condition------------

    if (isset($_SESSION['userLoginType']) && in_array($_SESSION['userLoginType'], array(6, 7, 8, 9))) {
        $condwhere = $_objAdmin->getSalesMenID();
    }


    $where = " ods.date_of_order BETWEEN '" . date('Y-m-d', strtotime($_SESSION['fil_from'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['fil_to'])) . "' $salesmanCnd $brandCnd and d.distributor_name!='' ";


    $auRec = $_objAdmin->_getSelectList('table_order_distributor_stock as ods
  		inner join table_order_detail_distributor_stock as ods_detail on ods.stock_id=ods_detail.stock_id 
  		left join table_order_detail_distributor_stock_batch_wise as odds on odds.os_detail_id =ods_detail.stock_detail_id
  		left join table_distributors as d on d.distributor_id=ods.distributor_id 
  		left join state as st on st.state_id=d.state 
  		left join city as ci on ci.city_id=d.city
  		left join table_location as tl on tl.location_id =d.location
  		left join table_item as i on i.item_id=ods_detail.item_id
  		left join table_price as p on p.item_id = i.item_id
		LEFT JOIN table_brands AS b ON b.brand_id=i.brand_id
		LEFT JOIN table_color as clr ON clr.color_id = odds.batch_id
  		left join table_category as c on c.category_id=i.category_id
  		LEFT JOIN table_zone_state_mapping as szsm on szsm.state_id = d.state and szsm.account_id = d.account_id
        LEFT JOIN table_zone as sz on sz.zone_id = szsm.zone_id
  		left join table_salesman as s on s.salesman_id=ods.salesman_id', "ods.*,ods_detail.*,d.distributor_id,d.distributor_name,d.distributor_code,i.item_name,i.item_id,b.brand_name,i.item_code,c.category_name,c.category_id,sz.zone_name,st.state_id,st.state_name,ci.city_name,ci.city_id ,s.salesman_id,s.salesman_name,s.employee_code,p.dist_price,p.item_dp,clr.color_code,clr.color_desc,clr.mfg_date,clr.expiry_date,tl.location_name,odds.qty,odds.comment", '', $where . $condwhere . $sort, '');

    for ($i = 0; $i < count($auRec); $i++) {

        $ptd = ($auRec[$i]->dist_price > 0 && !empty($auRec[$i]->dist_price)) ? $auRec[$i]->dist_price :
            $auRec[$i]->item_dp;

        $data .= $_objAdmin->_changeDate($auRec[$i]->date_of_order) . "\t" .
            $auRec[$i]->employee_code . "\t" .
            $auRec[$i]->salesman_name . "\t" .
            $auRec[$i]->distributor_code . "\t" .
            $auRec[$i]->distributor_name . "\t" .
            $auRec[$i]->zone_name . "\t" .
            $auRec[$i]->state_name . "\t" .
            $auRec[$i]->city_name . "\t" .
            $auRec[$i]->location_name . "\t" .
            $auRec[$i]->brand_name . "\t" .
            $auRec[$i]->category_name . "\t" .
            $auRec[$i]->item_code . "\t" .
            $auRec[$i]->item_name . "\t" .
            $auRec[$i]->color_code . "\t" .
            $auRec[$i]->color_desc . "\t" .
            $_objAdmin->_changeDate($auRec[$i]->mfg_date) . "\t" .
            $_objAdmin->_changeDate($auRec[$i]->expiry_date) . "\t" .
            $auRec[$i]->qty . "\t" .
            round(($ptd * $auRec[$i]->qty), 2) . "\t" .
            $auRec[$i]->comment . "\n";

    }

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['distributor'] . " Available Batch Wise Stock.xls\"");
    echo $data;
    exit;
}
// Todo End : Jatin :27th Oct 2023 : Dynamic Distributor wise Available Stock

//Todo Start : Sudhanshu : batch master export : 25 oct 2023

if (isset($_GET['export_batch'])) {
    $data = "Batch Code\tBatch Number\tMFG Date\t Expiry Date\t Created Date\t Updated Date\t Status\n";

    $sort = " ORDER BY color_desc ASC";
    //Todo Start : sudhanshu 12 june 2024 : add status filter
    $statusCondi = '';
    if (isset($_SESSION['MasBatch']) && $_SESSION['MasBatch'] != 'all' && $_SESSION['MasBatch'] != '') {
        $statusCondi = " status ='" . $_SESSION['MasBatch'] . "'";

    }
    $where = " $statusCondi ";
    //Todo End : sudhanshu 12 june 2024 : add status filter

    $auRec = $_objAdmin->_getSelectList('table_color', "* ", '', $where . $sort, '');

    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $sts = ($auRec[$i]->status == 'A') ? "Active" : "Inactive";
            $mfg_date = $_objAdmin->_changeDate($auRec[$i]->mfg_date);
            $expiry_date = $_objAdmin->_changeDate($auRec[$i]->expiry_date);
            $created_date = $_objAdmin->_changeDate($auRec[$i]->created_date);
            $updated = $_objAdmin->_changeDate($auRec[$i]->last_update_date);
            $data .= '"' . $auRec[$i]->color_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->color_desc . '"';
            $data .= "\t";
            $data .= '"' . $mfg_date . '"';
            $data .= "\t";
            $data .= '"' . $expiry_date . '"';
            $data .= "\t";
            $data .= '"' . $created_date . '"';
            $data .= "\t";
            $data .= '"' . $updated . '"';
            $data .= "\t";
            $data .= '"' . $sts . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"batch_master.xls\"");
    echo $data;
    exit;
}

//Todo End : Sudhanshu : batch master export : 25 oct 2023


//Todo Start : Sudhanshu : Item & batch mapping export : 25 oct 2023

if (isset($_GET['export_item_batch_mapping'])) {
    $data = "Batch Code\tBatch Number\tItem Code\tItem Name\tMFG Date\t Expiry Date\t Mapping Created Date\t Mapping Updated Date\t Status\n";
//Todo Start : sudhanshu 12 june 2024 : add status filter
    $statusCondi = '';
    if (isset($_SESSION['MasItmBatch']) && $_SESSION['MasItmBatch'] != 'all' && $_SESSION['MasItmBatch'] != '') {
        $statusCondi = " ci.status ='" . $_SESSION['MasItmBatch'] . "'";
    }
    $where = " $statusCondi ";
    //Todo End : sudhanshu 12 june 2024 : add status filter
    $sort = " ORDER BY ci.color_id ASC";

    $auRec = $_objAdmin->_getSelectList('table_item_color as ci
    left join table_color as c  ON c.color_id=ci.color_id
    left join table_item as i ON i.item_id=ci.item_id',
        "ci.item_color_id,ci.status,ci.created_on,ci.updated_on,c.color_desc,c.color_code,c.mfg_date,c.expiry_date,i.item_code,i.item_name ", '', $where . $sort, '');


    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $sts = ($auRec[$i]->status == 'A') ? "Active" : "Inactive";
            $mfg_date = $_objAdmin->_changeDate($auRec[$i]->mfg_date);
            $expiry_date = $_objAdmin->_changeDate($auRec[$i]->expiry_date);
            $created_date = $_objAdmin->_changeDate($auRec[$i]->created_on);
            $updated = $_objAdmin->_changeDate($auRec[$i]->updated_on);
            $data .= '"' . $auRec[$i]->color_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->color_desc . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $mfg_date . '"';
            $data .= "\t";
            $data .= '"' . $expiry_date . '"';
            $data .= "\t";
            $data .= '"' . $created_date . '"';
            $data .= "\t";
            $data .= '"' . $updated . '"';
            $data .= "\t";
            $data .= '"' . $sts . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"item_batch_mapping.xls\"");
    echo $data;
    exit;
}

//Todo End : Sudhanshu : Item & batch mapping export : 25 oct 2023


// Todo Start : sudhanshu : 20 Oct 2023 : Leave status report

if (isset($_GET['export_leave_status_report'])) {
    $data = $AliaseUsers['salesman'] . " Name \t" . $AliaseUsers['salesman'] . " Code\t" . $AliaseUsers['salesman'] .
        " Designation\t Reporting to \t Reporting to Designation \t Leave Reason \t From Date\t To Date \tRequested On\t Remark \t Manager Status\t Approved By Manager \t Manager Status Updated On\tManager Remark\t Admin Status\t Approved By Admin\t Admin Remark\t Admin Status Updated On\n";

    if ($_SESSION['allowncesalesmanID'] != '') {
        $salArrList = $_SESSION['allowncesalesmanID'];
        $filterby = '';
        $salesman = $_objArrayList->getSalesmanConsolidatedList($salArrList, $filterby);
    } else {
        $salesman = $_SESSION['salsCondi'];
    }

    if ($_SESSION['FromallownceStatus'] != '') {
        $fromdate = date('Y-m-d', strtotime($_SESSION['FromallownceStatus']));
    } else {
        $fromdate = date('Y-m-d');
    }
    if ($_SESSION['ToallownceStatus'] != '') {
        $todate = date('Y-m-d', strtotime($_SESSION['ToallownceStatus']));
    } else {
        $todate = date('Y-m-d');
    }
    if ($_SESSION['requestedS'] == 'for') {
        $reqFor = " AND (DATE(slr.from_date) BETWEEN '" . $fromdate . "' AND '" . $todate . "') ";
    } else {
        $reqFor = "  AND (DATE(slr.requested_on) BETWEEN '" . $fromdate . "' AND '" . $todate . "')  ";
    }
    $where = " s.account_id = " . $_SESSION['accountId'] . " $reqFor  $salesman ";

    $auRec = $_objAdmin->_getSelectList2('table_salesman_leave_request as slr
LEFT JOIN table_leave_reason_master as lrm ON lrm.status_id = slr.leave_reason_id
LEFT JOIN table_salesman as s on s.salesman_id = slr.salesman_id 
LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
LEFT JOIN table_salesman_hierarchy AS H2 ON H2.hierarchy_id = SH.rpt_hierarchy_id 
LEFT JOIN table_salesman AS s2 ON s2.salesman_id = SH.rpt_user_id
LEFT JOIN table_salesman as mngr on mngr.salesman_id = slr.aproved_by_id 
LEFT JOIN table_salesman as adm on adm.salesman_id = slr.admin_id', "slr.*,slr.id as request_id,s.salesman_name,s.employee_code,H.description AS sal_desg,s2.salesman_name AS rpt_to, H2.description AS rpt_to_desg,lrm.status_title as leave_reason,mngr.salesman_name as mngr_name,adm.salesman_name as admin_name", '', $where);

    for ($i = 0; $i < count($auRec); $i++) {
        $fromDate = date('d M Y', strtotime($auRec[$i]->from_date));
        $toDate = date('d M Y', strtotime($auRec[$i]->to_date));
        $requestedOnDate = date('d M Y H:i', strtotime($auRec[$i]->requested_on));
        $mngrStatus = '';
        if (strtolower($auRec[$i]->leave_status) == 'p') {
            $mngrStatus = 'Pending';
        } else if (strtolower($auRec[$i]->leave_status) == 'a') {
            $mngrStatus = 'Approved';
        } else if (strtolower($auRec[$i]->leave_status) == 'r') {
            $mngrStatus = 'Rejected';
        }
        $mngr_sts_updtd_on = '';
        if ($auRec[$i]->aproved_on != '0000-00-00 00:00:00') {
            $mngr_sts_updtd_on = date('d M Y H:i', strtotime($auRec[$i]->aproved_on));
        }
        $adminName = '';
        if (intval($auRec[$i]->is_approved_by_admin) > 0) {
            if (intval($auRec[$i]->admin_id) > 0) {
                $adminName = $auRec[$i]->admin_name;
            } else {
                $adminName = 'Admin';
            }
        }
        $adminStatus = '';
        if (strtolower($auRec[$i]->admin_leave_status) == 'p') {
            $adminStatus = 'Pending';
        } else if (strtolower($auRec[$i]->admin_leave_status) == 'a') {
            $adminStatus = 'Approved';
        } else if (strtolower($auRec[$i]->admin_leave_status) == 'r') {
            $adminStatus = 'Rejected';
        }
        $admin_sts_updtd_on = '';
        if ($auRec[$i]->admin_status_updated_on != '0000-00-00 00:00:00') {
            $admin_sts_updtd_on = date('d M Y H:i', strtotime($auRec[$i]->admin_status_updated_on));
        }

        $data .= '"' . $auRec[$i]->salesman_name . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->employee_code . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->sal_desg . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->rpt_to . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->rpt_to_desg . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->leave_reason . '"';
        $data .= "\t";
        $data .= '"' . $fromDate . '"';
        $data .= "\t";
        $data .= '"' . $toDate . '"';
        $data .= "\t";
        $data .= '"' . $requestedOnDate . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->comment . '"';
        $data .= "\t";
        $data .= '"' . $mngrStatus . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->mngr_name . '"';
        $data .= "\t";
        $data .= '"' . $mngr_sts_updtd_on . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->manager_remark . '"';
        $data .= "\t";
        $data .= '"' . $adminStatus . '"';
        $data .= "\t";
        $data .= '"' . $adminName . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->admin_remark . '"';
        $data .= "\t";
        $data .= '"' . $admin_sts_updtd_on . '"';
        $data .= "\n";


    }

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['salesman'] . "_leave_request.xls\"");
    echo $data;
    exit;
}

// Todo End : sudhanshu : 20 Oct 2023 : Leave status report

//Todo Start: Sudhanshu: 12 Oct 2023:  Start Export Retailer Class

if (isset($_GET['export_retailer_class'])) {
    $data = "Retailer Class\t Status\n";
    $sort = " ORDER BY relationship_code ASC ";
    //Todo Start : sudhanshu 13 june 2024 : add status filter
    $statusCondi = '';
    if (isset($_SESSION['MasRelationship']) && $_SESSION['MasRelationship'] != 'all' && $_SESSION['MasRelationship'] != '') {
        $statusCondi = "  status ='" . $_SESSION['MasRelationship'] . "'";
    }
    //Todo End : sudhanshu 13 june 2024 : add status filter
    $auRec = $_objAdmin->_getSelectList('table_relationship', "relationship_code,status", '', $statusCondi . $sort);

    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $status = ($auRec[$i]->status == 'A') ? "Active" : "Inactive";

            $data .= '"' . $auRec[$i]->relationship_code . '"';
            $data .= "\t";
            // $data .= '"' . $auRec[$i]->relationship_desc . '"';
            // $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"retailer_class_list.xls\"");
    echo $data;
    exit;
}

//Todo End: Sudhanshu: 12 Oct 2023:  Start Export Retailer Class

if (isset($_GET['export_retailer_channel'])) {
    $data = "Channel Name\t Status\n";
    $sort = " ORDER BY channel_name asc ";
    //Todo Start : sudhanshu 13 june 2024 : add status filter
    $statusCondi = '';
    if (isset($_SESSION['MasChannel']) && $_SESSION['MasChannel'] != 'all' && $_SESSION['MasChannel'] != '') {
        $statusCondi = " status ='" . $_SESSION['MasChannel'] . "'";
    }
    $where = " $statusCondi ";
    //Todo End : sudhanshu 13 june 2024 : add status filter
    $auRec = $_objAdmin->_getSelectList('table_retailer_channel_master', "*", '', $where . $sort);

    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $status = ($auRec[$i]->status == 'A') ? "Active" : "Inactive";

            $data .= '"' . $auRec[$i]->channel_name . '"';
            $data .= "\t";

            $data .= '"' . $status . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"retailer_channel_list.xls\"");
    echo $data;
    exit;
}

if (isset($_GET['export_retailer_type'])) {
    $data = "Retailer Type\t Status\n";
//Todo Start : sudhanshu 13 june 2024 : add status filter
    $statusCondi = '';
    if (isset($_SESSION['MasRetType']) && $_SESSION['MasRetType'] != 'all' && $_SESSION['MasRetType'] != '') {
        $statusCondi = " status ='" . $_SESSION['MasRetType'] . "'";
    }

    //Todo End : sudhanshu 13 june 2024 : add status filter
    $auRec = $_objAdmin->_getSelectList('table_retailer_type_master', "*", '', $statusCondi . ' order by type_name asc');

    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $status = ($auRec[$i]->status == 'A') ? "Active" : "Inactive";

            $data .= '"' . $auRec[$i]->type_name . '"';
            $data .= "\t";

            $data .= '"' . $status . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"retailer_type_list.xls\"");
    echo $data;
    exit;
}


// Todo Start : Jatin : 16 Nov 2023 : pjp Adherence report

if (isset($_GET['export_pjp_adherence_report'])) {
    $data = "Date\t " . $AliaseUsers['salesman'] . " Code \t" . $AliaseUsers['salesman'] . " Name\tPlanned Visits\tActual Visit\tNot Visited\tVisit %\n";
    $condi = '';
    if ($_SESSION['SalAttList'] > 0) {
        $condi .= " AND rs.salesman_id ='" . $_SESSION['SalAttList'] . "'";
    }

    if (isset($_SESSION['dismonth']) && $_SESSION['dismonth'] > 0) {
        $month = $_SESSION['dismonth'];
    } else {
        $month = date('m');
    }
    if (isset($_SESSION['disCyear']) && $_SESSION['disCyear'] > 0) {
        $year = $_SESSION['disCyear'];
    } else {
        $year = date('Y');
    }
    $monthStr = date('M', strtotime($year . '-' . $month . '-01'));

    $salesman = $_SESSION['salesman'];
    $remove = array("\n", "\r\n", "\r", ",");

    $where .= " r.account_id=" . $_SESSION['accountId'] . " and rs.month='" . intval($month) . "' AND rs.year='" . intval($year) . "' and rs.status='A' and rsd.status='A' and r.status='A' $salesman $condi";

    $auRec = $_objAdmin->_getSelectList2('table_salesman_retailer_assignment as rs
                left join table_salesman_retailer_assignment_details as rsd on rsd.route_schedule_id = rs.route_schedule_id        
		inner join table_retailer as r on r.retailer_id = rsd.retailer_id
        left join table_salesman as s on s.salesman_id = rs.salesman_id', "
		distinct rsd.assign_day as visit_dates,rs.salesman_id,rsd.retailer_id, s.employee_code, s.salesman_id, s.salesman_name,rs.year,rs.month,rs.route_schedule_id", $rp, $where . ' group by rsd.assign_day ,s.salesman_id' . $sort, '');

    $plvisData = $_objAdmin->_getSelectList2('table_salesman_retailer_assignment_details as ta',
        " retailer_id,ta.route_schedule_id,assign_day", '', ' ta.status="A" group by ta.assign_day ,ta.details_id ', '');

    $dataArr = array();
    if (is_array($plvisData) && count($plvisData) > 0) {
        foreach ($plvisData as $key => $data1) {
            $dataArr[$data1->route_schedule_id][$data1->assign_day][] = $data1->retailer_id;
        }
    }

    for ($i = 0; $i < count($auRec); $i++) {

        $date_sch = date('y-m-d', strtotime($auRec[$i]->year . '-' . $auRec[$i]->month . '-' . $auRec[$i]->visit_dates));

        $data .= '"' . $_objAdmin->_changeDate($date_sch) . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->employee_code . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->salesman_name . '"';
        $data .= "\t";


        if (strtotime(date('Y-m')) != strtotime($year . '-' . $month)) {
            $sDate = date('Y-m-01', strtotime($year . '-' . $month . '-01'));
            $eDate = date('Y-m-t', strtotime($year . '-' . $month . '-01'));
        } else {
            $sDate = date('Y-m-01');
            $eDate = date('Y-m-d');
        }

        $planned_visitss = count($dataArr[$auRec[$i]->route_schedule_id][$auRec[$i]->visit_dates]);

        $condition = " ta.retailer_id='" . $auRec[$i]->retailer_id . "' AND (ta.activity_type=3 OR ta.activity_type=28 OR ta.activity_type=50) AND ta.activity_date BETWEEN '" . $sDate . "' AND '" . $eDate . "'";
        $dayRet = $_objAdmin->_getSelectList2('table_activity as ta',
            "ta.activity_date, '' as in_route, '' as on_date", '', $condition . ' GROUP BY ta.activity_date ORDER BY ta.activity_date ASC ', '');
        $visitArr = array();
        $actualpjpArr = array();

        $assign_day_list = explode(',', $auRec[$i]->visit_dates);
        foreach ($dayRet as $dayRetVal) {
            $visitArr[] = $dayRetVal->activity_date;
            $visitDay = intval(date('d', strtotime($dayRetVal->activity_date)));
            if (in_array($visitDay, $assign_day_list)) {
                $actualpjpArr[] = $dayRetVal->activity_date;
            }
        }
        $pjp_gap = 0;
        $pjp_Adherancce = 0;
        $actual_pjp = COUNT($actualpjpArr);
        $pjp_gap = $planned_visitss - $actual_pjp;
        $pjp_Adherancce = ROUND(($actual_pjp * 100 / $planned_visitss), 2);

        $data .= '"' . $planned_visitss . '"';
        $data .= "\t";
        $data .= '"' . $actual_pjp . '"';
        $data .= "\t";
        $data .= '"' . $pjp_gap . '"';
        $data .= "\t";
        $data .= '"' . $pjp_Adherancce . '%"';
        $data .= "\n";
    }


    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"pjp_adherence_report.xls\"");
    echo $data;
    exit();
}
// Todo End : Jatin : 16 Nov 2023 : pjp Adherence report

// Todo Start : Order Execution Export


if (isset($_GET['export_execution_order_list'])) {
    $data = "Date\t Order Number\t Ordered Amount\tAccepted Order Amount\t Balanced Amount\t Rejected Order Amount\t" . $AliaseUsers['distributor'] . " Name\t " .
        $AliaseUsers['distributor'] . " Code\tZone \tState\t District\t City\t " . $AliaseUsers['salesman'] . " Name \t " .
        $AliaseUsers['salesman'] . " Code\t " . $AliaseUsers['retailer'] . " Name\t  " . $AliaseUsers['retailer'] . " Code\t " . $AliaseUsers['retailer'] . " Channel \t" . $AliaseUsers['retailer'] . " Class\t" . $AliaseUsers['retailer'] . " Type\t " .
        $AliaseUsers['retailer'] . " Group\tItem Name\t Item Code\t Item Brand\t Item Category\t Item Grade\t Ordered Qty\t Accepted Qty\tBalanced Qty\tRejected Qty\n";


    $sort = " ORDER BY date_of_order desc,time_of_order desc";


    if ($_SESSION['FromDisList'] != '') {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['FromDisList'])) . "'";
    } else {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['ToDisList'] != '') {
        $todate = " and o.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToDisList'])) . "'";
    } else {
        $todate = " and o.date_of_order <= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['disId'] != "" && $_SESSION['disId'] > 0) {
        $disList = " o.distributor_id=" . $_SESSION['disId'] . " and";
    } else {
        $disList = "";
    }
    if ($_SESSION['userLoginType'] == 7) {
        $stkList = " d.stockist_id=" . $_SESSION['stockistId'] . " and";
    } else {
        $stkList = "";
    }
    if ($_SESSION['OrderBy'] != '') {
        if ($_SESSION['OrderBy'] == 1) {
            $orderby = " and order_status IN('A','I') ";
        }
        if ($_SESSION['OrderBy'] == 2) {
            $orderby = " and o.order_status='A' ";
        }
        if ($_SESSION['OrderBy'] == 3) {
            $orderby = " and o.order_status='I' ";
        }
        if ($_SESSION['OrderBy'] == 4) {
            $orderby = " and o.order_status='D' ";
        }
    } else {
        $orderby = " and order_status IN('A','I') ";
    }
    //$where = " 1=1 ";
    //Added condition for role based access at brand lavel.
    $RoleBrands = $_objAdmin->getUserRoleBrand();
    $orderIds = '';
    if (is_array($_SESSION['SalDisList']) && (count($_SESSION['SalDisList']) > 0)) {
        $salectedSalIds = implode(',', $_SESSION['SalDisList']);
        $salesman = " AND s.salesman_id IN(" . $salectedSalIds . ") ";
    } else if (!empty($RoleBrands)) {
        $salesman = "";
    }

    if (!empty($RoleBrands)) {
        $brandWhere = " o.order_for='R' and o.order_status !='C' and o.order_type !='Return' and o.distributor_id !='' $fromdate $todate ";
        $orderIds = $_objAdmin->getBrandsOrder($RoleBrands, $brandWhere);
    }
    $where = " $disList $stkList r.new='' and o.order_for='R' and o.order_status !='C' and o.order_type !='Return' 
    and o.distributor_id!='' and ord.quantity > 0 $orderIds $orderIds $salesman $fromdate $todate $orderby";

    if ($query) $where .= " AND $qtype LIKE '%$query%' ";
    $auRec = $_objAdmin->_getSelectList('table_order as o 
            left join table_order_detail as ord on ord.order_id = o.order_id 
            left join table_retailer as r on o.retailer_id=r.retailer_id 
            left join table_salesman as s on o.salesman_id=s.salesman_id 
            left join table_distributors as d on d.distributor_id=o.distributor_id 
            left join table_retailer_channel_master as cm on cm.channel_id=r.channel_id
            LEFT JOIN table_retailer_group AS rg ON rg.group_id = r.group_id
            left join table_retailer_type_master as tm on tm.type_id=r.type_id 
            LEFT JOIN table_relationship as tr on tr.relationship_id=r.relationship_id  
            left join state as st on st.state_id=r.state 
            LEFT JOIN table_zone_state_mapping as szsm on szsm.state_id = r.state and szsm.account_id = d.account_id
            LEFT JOIN table_zone as sz on sz.zone_id = szsm.zone_id
            left join city as c on c.city_id=r.city
            left join table_location as loc on loc.location_id=r.location_id
            left join table_item as i on ord.item_id=i.item_id 
            left join table_grade as bg on bg.grade_id=i.grade_id
            left join table_brands as b on b.brand_id=i.brand_id
            left join table_category as ci on ci.category_id=i.category_id ',
        "o.*,ord.order_detail_id,ord.price,ord.quantity,ord.order_detail_status,ord.acc_quantity,ord.total,ord.acc_total,r.retailer_name,r.retailer_code,r.retailer_address,r.retailer_location,cm.channel_name,r.display_outlet,s.salesman_name,s.employee_code,tr.relationship_code as relation,tm.type_name,rg.group_name,
    d.distributor_name,d.distributor_code, st.state_name,c.city_name,sz.zone_name,loc.location_name,i.item_name,i.item_code,bg.grade_name,b.brand_name,ci.category_name", $rp, $where . '  ' . $sort, '');

    $remove = array("\n", "\r", ",", "\t");
    for ($i = 0; $i < count($auRec); $i++) {

        $status = '-';


        //-------- now get item wise accept reject status
        // $rejected_amt = 0;
        // $pending_amt = 0;
        // $rejected_qty = 0;
        // $pending_qty = 0;
        // $accQty = $auRec[$i]->acc_quantity;
        // $ordQty = $auRec[$i]->quantity;
        // $price  = $auRec[$i]->price;

        // if($auRec[$i]->order_detail_status == 3){
        //     $rejected_amt =  $price * $ordQty - $accQty;
        //     $rejected_qty =  $ordQty;

        // }else{

        //     $pending_amt = $price * ($ordQty - $accQty);
        //     $pending_qty = $ordQty - $accQty;
        // }

        $totalOrder = $_objAdmin->_getSelectList2('table_order_accept_reject as a
        left join table_order_detail as o ON o.order_detail_id=a.order_detail_id', 'SUM(effected_qty*o.price) as total_amt,SUM(effected_qty) as total_qty', '', " a.order_detail_id='" . $auRec[$i]->order_detail_id . "'");
        $act = $_objAdmin->_getSelectList2('table_order_accept_reject as a
        left join table_order_detail as o ON o.order_detail_id=a.order_detail_id', 'SUM(effected_qty*o.price) as accepted_amt,SUM(effected_qty) as accepted_qty', '', " a.order_detail_id='" . $auRec[$i]->order_detail_id . "' and action='act'");
        $rej = $_objAdmin->_getSelectList2('table_order_accept_reject as a
        left join table_order_detail as o ON o.order_detail_id=a.order_detail_id', 'SUM(effected_qty*o.price) as rejected_amt,SUM(effected_qty) as rejected_qty', '', " a.order_detail_id='" . $auRec[$i]->order_detail_id . "' and action='rej'");

        $pending_amt = $auRec[$i]->total - $totalOrder[0]->total_amt;
        $pending_qty = $auRec[$i]->quantity - $totalOrder[0]->total_qty;
        $accepted_amt = (($act[0]->accepted_amt) ? $act[0]->accepted_amt : 0);
        $rejected_amt = (($rej[0]->rejected_amt) ? $rej[0]->rejected_amt : 0);
        $accepted_qty = (($act[0]->accepted_qty) ? $act[0]->accepted_qty : 0);
        $rejected_qty = (($rej[0]->rejected_qty) ? $rej[0]->rejected_qty : 0);

        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);

        $data .= "" . $date_of_order . "\t" . $auRec[$i]->order_id . "\t" . $auRec[$i]->total . "\t" .
            $accepted_amt . "\t" . $pending_amt . "\t" .
            $rejected_amt . "\t" .
            $auRec[$i]->distributor_name . "\t" .
            $auRec[$i]->distributor_code . "\t" . $auRec[$i]->zone_name . "\t" . $auRec[$i]->state_name . "\t" .
            $auRec[$i]->location_name . "\t" . $auRec[$i]->city_name . "\t" .
            $auRec[$i]->salesman_name . "\t" . $auRec[$i]->employee_code . "\t" . $auRec[$i]->retailer_name . "\t" . $auRec[$i]->retailer_code . "\t" . $auRec[$i]->channel_name . "\t" .
            $auRec[$i]->relation . "\t" . $auRec[$i]->type_name . "\t" . $auRec[$i]->group_name . "\t" . $auRec[$i]->item_name . "\t" . $auRec[$i]->item_code . "\t" . $auRec[$i]->brand_name . "\t" . $auRec[$i]->category_name . "\t" . $auRec[$i]->grade_name . "\t" .
            $auRec[$i]->quantity . "\t" . $accepted_qty . "\t" . $pending_qty . "\t" . $rejected_qty .

            "\n";
    }

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"  Order Execution Report.xls\"");
    echo $data;
    exit;
}

// Todo End : Order Execution Export


//Todo Start : Sudhanshu : Salesman login list : 14 Nov 2023

if (isset($_GET['export_salesman_login_list'])) {
    $data = $AliaseUsers['salesman'] . " Name \t" . $AliaseUsers['salesman'] . " Code\tState\tUsername\tDesignation\tEmail ID\tPhone Number\t App Type\tApp Version \tLogin Status\n";

    $sort = " ORDER BY salesman_name ASC";
    $salesman = $_SESSION['salCond'];
    $where = " s.status='A' $salesman ";
    $auRec = $_objAdmin->_getSelectList('table_salesman as s 
    LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
    LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
    left join table_account as a on a.account_id=s.account_id
    left join table_pepup_app_version as vs on vs.salesman_id = s.salesman_id 
    left join state as st on st.state_id = s.state
    left join table_web_users as w on w.salesman_id=s.salesman_id', "s.*,w.username,w.email_id,w.web_user_id,w.status as loginStatus,vs.app_type,vs.app_version, H.description AS des1,st.state_name", $rp, $where . $sort, '');


    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {

            if ($auRec[$i]->session_id != '') {
                $sts = "Logged In";
                $LogSts = 'Log out';
            } else {
                $sts = "Logged Out";
                $LogSts = "-";
            }

            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->username . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->des1 . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->email_id . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_phome_no . '"';
            $data .= "\t";
            $data .= '"' . ucfirst($auRec[$i]->app_type) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->app_version . '"';
            $data .= "\t";
            $data .= '"' . $sts . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"salesman login list.xls\"");
    echo $data;
    exit;
}

// Todo End : Sudhanshu : Salesman login list : 14 Nov 2023

//Todo Start: Sudhanshu: 06 Oct 2023:  Start Export Competition Potential Report

if (isset($_GET['export_competition_potential_report'])) {
    $data = $AliaseUsers['salesman'] . " Name\t " . $AliaseUsers['salesman'] . " Code\t " . $AliaseUsers['retailer'] . " Name\t " . $AliaseUsers['retailer'] . " Code\t " . $AliaseUsers['retailer'] . " Group\t " . $AliaseUsers['retailer'] . " Channel\t " . $AliaseUsers['retailer'] . " Classification\t " . $AliaseUsers['retailer'] . " Type\t" . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\tDate\tTime\n";
    $salesman = $_SESSION['SalIds'];

    $auRec = $_objAdmin->_getSelectList('table_potential_information as tpi 
                        left join table_salesman as s on tpi.salesman_id = s.salesman_id 
                        left join table_retailer as tr on tpi.retailer_id = tr.retailer_id
                        LEFT JOIN table_retailer_group as rg ON rg.group_id = tr.group_id
                        left join table_retailer_type_master as rtm ON rtm.type_id=tr.type_id
                        left join table_retailer_channel_master as rc ON rc.channel_id=tr.channel_id 
                        left join table_relationship as rel ON rel.relationship_id=tr.relationship_id  
                        left join table_distributors as td on tr.distributor_id = td.distributor_id
                        ', 'tpi.*,s.salesman_name,s.employee_code,tr.retailer_name,tr.retailer_code,td.distributor_name,td.distributor_code,rg.group_name,rtm.type_name,rc.channel_name,rel.relationship_desc as relation', '', " (tpi.app_date BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromAttList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToAttList'])) . "') $salesman ORDER BY tpi.potential_id DESC");
                       
    
                        if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->group_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->channel_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->relation . '"';
            $data .= "\t";

            $data .= '"' . $auRec[$i]->type_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $_objAdmin->_changeDate($auRec[$i]->app_date) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->app_time . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"competition_potential_report.xls\"");
    echo $data;
    exit;
}

//Todo End: Sahil: 06 Oct 2023:  Start Export Competition Potential Report


//Todo Start: Sahil: 24 Oct 2024:  Start Export Detail

if (isset($_GET['export_competition_potential_report_detailed'])) {
    $data = $AliaseUsers['salesman'] . " Name\t " . $AliaseUsers['salesman'] . " Code\t " . $AliaseUsers['retailer'] . " Name\t " . $AliaseUsers['retailer'] . " Code\t " . $AliaseUsers['retailer'] . " Group\t " . $AliaseUsers['retailer'] . " Channel\t " . $AliaseUsers['retailer'] . " Classification\t " . $AliaseUsers['retailer'] . " Type\t" . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\tPotential Name\tQuantity\tDate\tTime\n";
     
    $salesman = ($_SESSION['salesman_cond']) ? $_SESSION['salesman_cond'] : "";

    $auRec = $_objAdmin->_getSelectList('table_potential_information as tpi 
    left join table_salesman as s on tpi.salesman_id = s.salesman_id 
    left join table_retailer as tr on tpi.retailer_id = tr.retailer_id
    LEFT JOIN table_retailer_group as rg ON rg.group_id = tr.group_id
    left join table_retailer_type_master as rtm ON rtm.type_id=tr.type_id
    left join table_retailer_channel_master as rc ON rc.channel_id=tr.channel_id 
    left join table_relationship as rel ON rel.relationship_id=tr.relationship_id  
    left join table_distributors as td on tr.distributor_id = td.distributor_id
    left join table_potential_details as tpid on tpi.potential_id = tpid.potential_id 
    left join table_comptition as tpdc on tpid.comptition_id=tpdc.comptition_id
    ', 'tpi.*,tpid.quantity as tpd_quantity,tpdc.comptition_name, s.salesman_name,s.employee_code,tr.retailer_name,tr.retailer_code,td.distributor_name,td.distributor_code,rg.group_name,rtm.type_name,rc.channel_name,rel.relationship_desc as relation', '', " (tpi.app_date BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromAttList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToAttList'])) . "') $salesman ORDER BY tpi.salesman_id DESC");

    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->group_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->channel_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->relation . '"';
            $data .= "\t";

            $data .= '"' . $auRec[$i]->type_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->comptition_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->tpd_quantity . '"';
            $data .= "\t";
            $data .= '"' . $_objAdmin->_changeDate($auRec[$i]->app_date) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->app_time . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"competition_potential_report.xls\"");
    echo $data;
    exit;
}

//Todo End: Sudhanshu: 06 Oct 2023:  Start Export Competition Potential Report


//Todo Start : Sudhanshu : Distributor survey report: 09 nov 2023

if (isset($_GET['export_distributor_survey_report'])) {
    // remove on extra tab : sudhanshu : 11 march 2024
    $data = "Salesman Name\tSalesman Designation\tZone\tState\tDistrict\tCity\t Distributor Name\tPhoto Count\t Date\t Time\tSurvey Approval Status\tSurvey Remark\tSurvey Verified By User Type\tSurvey Verified By\n";


    if (isset($_SESSION['salesman_state']) && $_SESSION['salesman_state'] != '' && $_SESSION['salesman_state'] != 'All') {
        $stateCond = " and s.state= '" . $_SESSION['salesman_state'] . "' ";
    }
    if (isset($_SESSION['dis_id']) && $_SESSION['dis_id'] != '' && $_SESSION['dis_id'] != 'All') {
        $disCond = " and tr.distributor_id= '" . $_SESSION['dis_id'] . "' ";
    }
    if (isset($_SESSION['salCond']) && $_SESSION['salCond'] != '' && $_SESSION['salCond'] != 'All') {
        $salCond = " and s.salesman_id='" . $_SESSION['salCond'] . "' ";
    } elseif ($_SESSION['salCond'] != 'All') {
        $salCond = $_SESSION['salCondExp'];
    }
    if (isset($_SESSION['fromDate']) && $_SESSION['fromDate'] != '') {
        $from_date = $_SESSION['fromDate'];
    } else {
        $from_date = $_objAdmin->_changeDate(date("Y-m-d"));
    }
    if (isset($_SESSION['toDate']) && $_SESSION['toDate'] != '') {
        $to_date = $_SESSION['toDate'];
    } else {
        $to_date = $_objAdmin->_changeDate(date("Y-m-d"));
    }


    $auRec = $_objAdmin->_getSelectList('table_distributor_survey as ts 

                                    left join table_salesman as s on ts.salesman_id = s.salesman_id 

                                    left join table_distributors as tr on ts.distributor_id = tr.distributor_id 

                                    left join state as st on st.state_id=s.state 

                                    left join city as c on c.city_id=s.city 
                                    LEFT JOIN table_location as l on l.location_id = tr.location
                                    LEFT JOIN table_zone_state_mapping as szsm on szsm.state_id = s.state and szsm.account_id = s.account_id
                                    LEFT JOIN table_zone as sz on sz.zone_id = szsm.zone_id

                                    left join table_salesman_hierarchy_relationship as tshr on tshr.salesman_id=s.salesman_id 

                                    left join table_salesman_hierarchy as tsh on tsh.hierarchy_id=tshr.hierarchy_id',
        'ts.survey_id,ts.survey_date,ts.survey_time,s.salesman_name,sz.zone_name,tr.distributor_name,st.state_name,c.city_name,tsh.description,l.location_name,ts.photo_count,ts.survey_status,ts.survey_remark,ts.survey_approve_by_user_type,ts.survey_approve_by', '',
        " (ts.survey_date BETWEEN '" . date('Y-m-d', strtotime($from_date)) . "' AND '" . date('Y-m-d', strtotime($to_date)) . "') $salCond  $stateCond $disCond ORDER BY ts.survey_date ASC");

    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {

            $survey_date = $_objAdmin->_changeDate($auRec[$i]->survey_date);
            if ($auRec[$i]->survey_status == "A") {
                $survey_approval_status = "Approved";
            } elseif ($auRec[$i]->survey_status == "N") {
                $survey_approval_status = "Rejected";
            } else {
                $survey_approval_status = "Pending";
            }

            $verify_by = '';
            $userType = '';
            if ($auRec[$i]->survey_approve_by_user_type == 1) {
                $userType = "Admin";
                $verify_by = "Admin";
            } elseif ($auRec[$i]->survey_approve_by_user_type == 3) {
                $auApp = $_objAdmin->_getSelectList('table_distributors', "distributor_name", '', " distributor_id=" . $auRec[$i]->survey_approve_by);
                $userType = $AliaseUsers['distributor'];
                if (is_array($auApp) && count($auApp) > 0) {
                    $verify_by = $auApp[0]->distributor_name;
                }
            } elseif ($auRec[$i]->survey_approve_by_user_type == 4) {
                $auApp = $_objAdmin->_getSelectList('table_retailer', "retailer_name", '', " retailer_id=" . $auRec[$i]->survey_approve_by);
                $userType = $AliaseUsers['retailer'];
                if (is_array($auApp) && count($auApp) > 0) {
                    $verify_by = $auApp[0]->retailer_name;
                }
            } elseif ($auRec[$i]->survey_approve_by_user_type == 7) {
                $auApp = $_objAdmin->_getSelectList('table_stockist', "stockist_name", '', " stocksit_id=" . $auRec[$i]->survey_approve_by);
                $userType = $AliaseUsers['stockist'];
                if (is_array($auApp) && count($auApp) > 0) {
                    $verify_by = $auApp[0]->stockist_name;
                }
            } elseif ($auRec[$i]->survey_approve_by_user_type == 5) {
                $auApp = $_objAdmin->_getSelectList('table_salesman', "salesman_name", '', " salesman_id=" . $auRec[$i]->survey_approve_by);
                $userType = $AliaseUsers['salesman'];
                if (is_array($auApp) && count($auApp) > 0) {
                    $verify_by = $auApp[0]->salesman_name;
                }
            }
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->description . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->zone_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->photo_count . '"';
            $data .= "\t";
            $data .= '"' . $survey_date . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->survey_time . '"';
            $data .= "\t";
            $data .= '"' . $survey_approval_status . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->survey_remark . '"';
            $data .= "\t";
            $data .= '"' . $userType . '"';
            $data .= "\t";
            $data .= '"' . $verify_by . '"';

            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"distributor survey report.xls\"");
    echo $data;
    exit;
}

//Todo End : Sudhanshu : Distributor survey report: 09 nov 2023


//Todo Start : Sudhanshu : retailer survey report: 09 nov 2023

if (isset($_GET['export_retailer_survey_report'])) {
    $data = "Salesman Name\tSalesman Code\tSalesman Designation\tZone\tState\tDistrict\tCity\t Retailer Name\t Retailer Code\tRetailer Channel\t Retailer Classification\t Retailer Group\tRetailer Type\tPhoto Count\t Date\t Time\tSurvey Approval Status\tRemark\tSurvey Verified By User Type\tSurvey Verified By\n";


    if (isset($_SESSION['salesman_state']) && $_SESSION['salesman_state'] != '' && $_SESSION['salesman_state'] != 'All') {
        $stateCond = " and s.state= '" . $_SESSION['salesman_state'] . "' ";
    }
    if (isset($_SESSION['ret_id']) && $_SESSION['ret_id'] != '' && $_SESSION['ret_id'] != 'All') {
        $retCond = " and tr.retailer_id= '" . $_SESSION['ret_id'] . "' ";
    }
    if (isset($_SESSION['salCond']) && $_SESSION['salCond'] != '' && $_SESSION['salCond'] != 'All') {
        $salCond = " and s.salesman_id='" . $_SESSION['salCond'] . "' ";
    } elseif ($_SESSION['salCond'] != 'All') {
        $salCond = $_SESSION['salCondExp'];
    }
    if (isset($_SESSION['fromDate']) && $_SESSION['fromDate'] != '') {
        $from_date = $_SESSION['fromDate'];
    } else {
        $from_date = $_objAdmin->_changeDate(date("Y-m-d"));
    }
    if (isset($_SESSION['toDate']) && $_SESSION['toDate'] != '') {
        $to_date = $_SESSION['toDate'];
    } else {
        $to_date = $_objAdmin->_changeDate(date("Y-m-d"));
    }


    $auRec = $_objAdmin->_getSelectList('table_survey as ts 



    left join table_salesman as s on ts.salesman_id = s.salesman_id 



    left join table_retailer as tr on ts.retailer_id = tr.retailer_id 

    LEFT JOIN table_retailer_group as rg ON rg.group_id = tr.group_id
    left join table_retailer_type_master as rtm ON rtm.type_id=tr.type_id
    left join table_retailer_channel_master as rc ON rc.channel_id=tr.channel_id 
    left join table_relationship as rel ON rel.relationship_id=tr.relationship_id 


    left join state as st on st.state_id=s.state 



    left join city as c on c.city_id=s.city 
    LEFT JOIN table_location as l on l.location_id = tr.location_id
    LEFT JOIN table_zone_state_mapping as szsm on szsm.state_id = s.state and szsm.account_id = s.account_id
    
    LEFT JOIN table_zone as sz on sz.zone_id = szsm.zone_id



    left join table_salesman_hierarchy_relationship as tshr on tshr.salesman_id=s.salesman_id 



    left join table_salesman_hierarchy as tsh on tsh.hierarchy_id=tshr.hierarchy_id',
        'ts.survey_id,ts.survey_date,ts.survey_time,s.salesman_name,s.employee_code,tr.retailer_name,tr.retailer_code,st.state_name,c.city_name,tsh.description,sz.zone_name,rg.group_name,rtm.type_name,rc.channel_name,rel.relationship_desc as relation,l.location_name,ts.photo_count,ts.survey_status,ts.survey_remark,ts.survey_approve_by,ts.survey_approve_by_user_type', '', " (ts.survey_date BETWEEN '" . date('Y-m-d', strtotime($from_date)) . "' AND '" . date('Y-m-d', strtotime($to_date)) . "') $salCond  $stateCond $retCond ORDER BY ts.survey_date ASC");

    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {

            $survey_date = $_objAdmin->_changeDate($auRec[$i]->survey_date);
            if ($auRec[$i]->survey_status == 'A') {
                $survey_status = "Approved";
            } elseif ($auRec[$i]->survey_status == 'N') {
                $survey_status = "Rejected";
            } else {
                $survey_status = "Pending";
            }

            $verify_by = '';
            if ($auRec[$i]->survey_approve_by_user_type == 1) {
                $userType = "Admin";
                $verify_by = "Admin";
            } elseif ($auRec[$i]->survey_approve_by_user_type == 3) {
                $auApp = $_objAdmin->_getSelectList('table_distributors', "distributor_name", '', " distributor_id=" . $auRec[$i]->survey_approve_by);
                $userType = $AliaseUsers['distributor'];
                if (is_array($auApp) && count($auApp) > 0) {
                    $verify_by = $auApp[0]->distributor_name;
                }
            } elseif ($auRec[$i]->survey_approve_by_user_type == 4) {
                $auApp = $_objAdmin->_getSelectList('table_retailer', "retailer_name", '', " retailer_id=" . $auRec[$i]->survey_approve_by);
                $userType = $AliaseUsers['retailer'];
                if (is_array($auApp) && count($auApp) > 0) {
                    $verify_by = $auApp[0]->retailer_name;
                }
            } elseif ($auRec[$i]->survey_approve_by_user_type == 7) {
                $auApp = $_objAdmin->_getSelectList('table_stockist', "stockist_name", '', " stocksit_id=" . $auRec[$i]->survey_approve_by);
                $userType = $AliaseUsers['stockist'];
                if (is_array($auApp) && count($auApp) > 0) {
                    $verify_by = $auApp[0]->stockist_name;
                }
            } elseif ($auRec[$i]->survey_approve_by_user_type == 5) {
                $auApp = $_objAdmin->_getSelectList('table_salesman', "salesman_name", '', " salesman_id=" . $auRec[$i]->survey_approve_by);
                $userType = $AliaseUsers['salesman'];
                if (is_array($auApp) && count($auApp) > 0) {
                    $verify_by = $auApp[0]->salesman_name;
                }
            }

            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->description . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->zone_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->channel_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->relation . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->group_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->type_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->photo_count . '"';
            $data .= "\t";
            $data .= '"' . $survey_date . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->survey_time . '"';
            $data .= "\t";
            $data .= '"' . $survey_status . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->survey_remark . '"';
            $data .= "\t";
            $data .= '"' . $userType . '"';
            $data .= "\t";
            $data .= '"' . $verify_by . '"';

            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"retailer survey report.xls\"");
    echo $data;
    exit;
}

//Todo End : Sudhanshu : retailer survey report: 09 nov 2023

// Todo Start  : Sudhanshu : Export Retailer Master New : 17 Nov 2023
if (isset($_GET['export_retailer_master'])) {
    //echo hello;exit;
    $remove = array("\n", "\r\n", "\r", "\t", ",", "-", "/", "_", ":", ";", "`", "!", "?", "'");

    $data = "  " . $AliaseUsers['retailer'] . " Code\t " . $AliaseUsers['retailer'] . " Name\tPhone Number\t State \t District\t City\t Address\t " . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\n";

    $sort = " ORDER BY r.retailer_name ASC ";


    //$groupby  = " GROUP BY table_order_detail.item_id having SUM(table_order_detail.quantity)!=0";
    //$groupby  = " AND o.order_id in (select order_id from table_order where ostype in ('D','R') AND order_type = 'Yes' AND order_status='A' AND $fromdate $todate ) group by o.item_id having SUM(o.quantity)!=0 ";

    $where = " r.new='' and r.status = 'A' ";

    $auRec = $_objAdmin->_getSelectList('table_retailer as r     
    left join state as s on s.state_id=r.state 
    left join city as c on c.city_id=r.city   
    left join table_location as loc ON loc.location_id = r.location_id   
    left join table_distributors as d on d.distributor_id=r.distributor_id', "r.retailer_name,r.retailer_code,r.retailer_address,r.retailer_phone_no,d.distributor_name,d.distributor_code,s.state_name,c.city_name,loc.location_name", $rp, $where . $sort, '');

    for ($i = 0; $i < count($auRec); $i++) {

        $data .= "" . $auRec[$i]->retailer_code . "\t" .
            str_replace($remove, ' ', $auRec[$i]->retailer_name) . "\t" .
            $auRec[$i]->retailer_phone_no . "\t" .
            $auRec[$i]->state_name . "\t" .
            $auRec[$i]->city_name . "\t" .
            $auRec[$i]->location_name . "\t" .
            str_replace($remove, ' ', $auRec[$i]->retailer_address) . "\t" .
            $auRec[$i]->distributor_name . "\t" .
            $auRec[$i]->distributor_code . "\n";
    }

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Retailer Master.xls\"");
    echo $data;
    exit;
}

// Todo : Start : 4 December 2023 : retailer batch wise order report
if (isset($_GET['dynamic_export_batch_wise_order_list'])) {
    $data = " Date of Order\t Time of Order\t Order Number\t Total Invoice Amount\t Total Number Of Item\t Ordered Quantity\t" . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\t" . $AliaseUsers['distributor'] . " Zone\t" . $AliaseUsers['distributor'] . " State\t " . $AliaseUsers['salesman'] . " Name\t  " . $AliaseUsers['salesman'] . " Code\t  " . $AliaseUsers['salesman'] . " Zone\t  " . $AliaseUsers['salesman'] . " State\tReporting To\t " . $AliaseUsers['retailer'] . "  Name\t " . $AliaseUsers['retailer'] . "  Code\t " . $AliaseUsers['retailer'] . "  Zone\t" . $AliaseUsers['retailer'] . "  State\t " . $AliaseUsers['retailer'] . "  District\t" . $AliaseUsers['retailer'] . " Group\t" . $AliaseUsers['retailer'] . " Channel\t " . $AliaseUsers['retailer'] . " Classifiaction\t " . $AliaseUsers['retailer'] . " Type\t Display Outlet\t" . $AliaseUsers['retailer'] . " Market\t " . $AliaseUsers['retailer'] . " Address\t Order Type\tOrder By\tOrder Status\tComments\t Reason\t Delivery Date\tPhoto Count\n";

    $sort = " ORDER BY date_of_order desc,time_of_order desc";
    $queryConditions = '';
    if (isset($_SESSION['fil_from']) && !empty($_SESSION['fil_from'])) {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['fil_from'])) . "'";
    } else {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d') . "'";
    }
    if (isset($_SESSION['fil_to']) && !empty($_SESSION['fil_to'])) {
        $todate = " and o.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['fil_to'])) . "'";
    } else {
        $todate = " and o.date_of_order <= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['userLoginType'] == 3 && $_SESSION['distributorId'] != "" && $_SESSION['distributorId'] > 0) {
        $queryConditions .= " AND o.distributor_id=" . $_SESSION['distributorId'];
    } else if (isset($_SESSION['fil_distributor']) && !empty($_SESSION['fil_distributor']) && $_SESSION['fil_distributor'] > 0) {
        $queryConditions .= " AND o.distributor_id=" . $_SESSION['fil_distributor'];
    }

    if ($_SESSION['userLoginType'] == 7 && $_SESSION['stockistId'] != "" && $_SESSION['stockistId'] > 0) {
        $queryConditions .= " AND d.stockist_id=" . $_SESSION['stockistId'];

    } else if (isset($_SESSION['fil_stockist']) && !empty($_SESSION['fil_stockist']) && $_SESSION['fil_stockist'] > 0) {
        $queryConditions .= " AND d.stockist_id=" . $_SESSION['fil_stockist'];
    }
    $salesmanCnd = "";
    if ($_SESSION['userLoginType'] == 5) {
        $salesmanCnd = str_replace("s.", "o.", $salesman);
    }

    if (isset($_SESSION['fil_salesman']) && !empty($_SESSION['fil_salesman']) && $_SESSION['fil_salesman'] > 0) {
        $salesmanCnd = " AND o.salesman_id=" . $_SESSION['fil_salesman'];
    } else if (isset($_SESSION['fil_salesman_manager']) && ($_SESSION['fil_salesman_manager'] > 0)) {
        $salesmanManagerId = $_SESSION['fil_salesman_manager'];
        $account_id = $_SESSION['accountId'];
        $res = $_objAdmin->_getSelectList2('table_salesman_hierarchy_relationship AS SHR 
				LEFT JOIN table_salesman_hierarchy AS SH ON SH.hierarchy_id = SHR.hierarchy_id
				LEFT JOIN table_salesman AS s ON s.salesman_id = SHR.salesman_id', 's.salesman_id,SH.hierarchy_id,SH.sort_order', '', " SH.account_id=" . $account_id . " AND SHR.salesman_id = $salesmanManagerId ORDER BY SH.sort_order ASC ");

        if (is_array($res) && (count($res) > 0)) {
            $sortOrder = $res[0]->sort_order;
            $_objArrayList = new ArrayList();
            $getBottomUsersIdArr = $_objArrayList->getSalesmansBottomUsers(array($salesmanManagerId), $sortOrder, $account_id);

            if (is_array($getBottomUsersIdArr) && (count($getBottomUsersIdArr) > 0)) {
                $bottomUsersIds = implode(',', $getBottomUsersIdArr);
            }

            $salesmanCnd = " AND o.salesman_id IN($bottomUsersIds) ";
        }
    } else if (isset($_SESSION['fil_salesman_designation']) && ($_SESSION['fil_salesman_designation'] > 0)) {
        $_objArrayList = new ArrayList();
        $account_id = $_SESSION['accountId'];
        $getDesignationWiseBottomUsersIdArr = $_objArrayList->getDesignationWiseBottomUsers($_SESSION['fil_salesman_designation'], $account_id);

        if (is_array($getDesignationWiseBottomUsersIdArr) && (count($getDesignationWiseBottomUsersIdArr) > 0)) {
            $bottomUsersIds = implode(',', $getDesignationWiseBottomUsersIdArr);
            $salesmanCnd .= " AND o.salesman_id IN($bottomUsersIds) ";
        }
    } else {
        $salesmanCnd .= '';
    }
    //echo $bottomUsersIds; die;
    if (isset($_SESSION['fil_retailer']) && !empty($_SESSION['fil_retailer']) && $_SESSION['fil_retailer'] > 0) {
        $queryConditions .= " AND o.retailer_id=" . $_SESSION['fil_retailer'];
    }
    if (isset($_SESSION['fil_salesman_state']) && !empty($_SESSION['fil_salesman_state']) && $_SESSION['fil_salesman_state'] > 0) {
        $queryConditions .= " AND s.state=" . $_SESSION['fil_salesman_state'];
    }
    if (isset($_SESSION['fil_retailer_state']) && !empty($_SESSION['fil_retailer_state']) && $_SESSION['fil_retailer_state'] > 0) {
        $queryConditions .= " AND r.state=" . $_SESSION['fil_retailer_state'];
    }
    if (isset($_SESSION['fil_distributor_state']) && !empty($_SESSION['fil_distributor_state']) && $_SESSION['fil_distributor_state'] > 0) {
        $queryConditions .= " AND d.state=" . $_SESSION['fil_distributor_state'];
    }

    if (isset($_SESSION['fil_salesman_zone']) && !empty($_SESSION['fil_salesman_zone']) && $_SESSION['fil_salesman_zone'] > 0) {
        $queryConditions .= " AND zms.zone_id=" . $_SESSION['fil_salesman_zone'];
    }
    if (isset($_SESSION['fil_retailer_zone']) && !empty($_SESSION['fil_retailer_zone']) && $_SESSION['fil_retailer_zone'] > 0) {
        $queryConditions .= " AND zmr.zone_id=" . $_SESSION['fil_retailer_zone'];
    }
    if (isset($_SESSION['fil_distributor_zone']) && !empty($_SESSION['fil_distributor_zone']) && $_SESSION['fil_distributor_zone'] > 0) {
        $queryConditions .= " AND zmd.zone_id=" . $_SESSION['fil_distributor_zone'];
    }
    if (isset($_SESSION['fil_month']) && !empty($_SESSION['fil_month']) && isset($_SESSION['fil_year']) && !empty($_SESSION['fil_year'])) {
        $firstDate = date('Y-m-d', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
        $lastdate = date('Y-m-t', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
        $fromdate = " and o.date_of_order >= '" . $firstDate . "'";
        $todate = " and o.date_of_order <= '" . $lastdate . "'";
    }

    if (isset($_SESSION['fil_order_status']) && !empty($_SESSION['fil_order_status'])) {
        $queryConditions .= " AND o.order_status='" . $_SESSION['fil_order_status'] . "'";
    } else {
        //$queryConditions .=" and order_status IN('A','I') ";
    }
    if (isset($_SESSION['fil_order_type']) && !empty($_SESSION['fil_order_type'])) {
        $queryConditions .= " AND o.order_type='" . $_SESSION['fil_order_type'] . "'";
    } else {
        //$queryConditions .=" AND o.order_type !='Return'";
    }

    $queryConditions = $queryConditions . $salesmanCnd . $fromdate . $todate;


    $where = $queryConditions;
    //$whereret = " $disLogCond  $fromdate $todate and r.new='' and o.type='R' $orderby ";
    /*	$auRec=$_objAdmin->_getSelectList('table_order as o left join table_retailer as r on o.retailer_id=r.retailer_id left join table_salesman as s on o.salesman_id=s.salesman_id left join table_distributors as d on o.distributor_id=d.distributor_id left join table_retailer_channel_master as cm on cm.channel_id=r.channel_id left join state as st on st.state_id=d.state left join city as c on c.city_id=d.city left join table_region as re on re.region_id=d.region_id',"o.*,r.retailer_name,r.retailer_address,r.retailer_location,cm.channel_name,r.display_outlet,r.lat as retlat,r.lng as retlng,s.salesman_name,d.distributor_name,st.state_name,c.city_name,re.region_name ",'',$where.$sort,'');*/

    $auRec = $_objAdmin->_getSelectList("table_order as o 
            left join table_order_detail as ord on o.order_type != 'No' and ord.order_id = o.order_id and ord.type = 1 
            left join table_item as i on i.item_id = ord.item_id 
            left join table_retailer as r on o.retailer_id=r.retailer_id 
            left join table_salesman as s on o.salesman_id=s.salesman_id 
            left join table_salesman_hierarchy_relationship as shr on shr.salesman_id = s.salesman_id
            left join table_salesman as s2 on s2.salesman_id=shr.rpt_user_id
            left join table_distributors as d on o.distributor_id=d.distributor_id 
            left join table_retailer_channel_master as cm on r.channel_id=cm.channel_id
            LEFT JOIN table_retailer_group as rg ON rg.group_id = r.group_id
            left join table_retailer_type_master as rtm ON rtm.type_id=r.type_id
            left join table_relationship as rel ON rel.relationship_id=r.relationship_id 
            left join state as str on str.state_id=r.state 
            left join state as sts on sts.state_id=s.state 
            left join state as std on std.state_id=d.state 
            left join city as c on c.city_id=r.city 
            left join table_zone_state_mapping as zms on zms.state_id=s.state and zms.account_id = s.account_id
			left join table_zone as sz on sz.zone_id=zms.zone_id 
			left join table_zone_state_mapping as zmr on zmr.state_id=r.state and zmr.account_id = r.account_id
			left join table_zone as rz on rz.zone_id=zmr.zone_id
			left join table_zone_state_mapping as zmd on zmd.state_id=d.state and zmd.account_id = d.account_id
			left join table_zone as dz on dz.zone_id=zmd.zone_id",
        "o.order_id,count(ord.item_id) as total_item,SUM(ord.acc_quantity) as total_ordered_qty,o.retailer_id,o.order_type,o.order_status,
			o.date_of_order,o.time_of_order,o.acc_total_invoice_amount,o.order_by,
	r.retailer_name,r.retailer_code,o.photo_count,
	r.retailer_address,r.retailer_location,cm.channel_name,r.display_outlet,
	s.salesman_name,s.employee_code,s2.salesman_name as rpt_to,d.distributor_name,d.distributor_code,
	sz.zone_name as sal_zone,rz.zone_name as ret_zone,dz.zone_name as dist_zone,str.state_name as ret_state,sts.state_name as sal_state,std.state_name as dist_state,c.city_name,rg.group_name,rtm.type_name,rel.relationship_code as relation,o.delivery_date,o.comments,o.tag_description", '', $where . " GROUP BY o.order_id " . $sort, '');


    $remove = array("\n", "\r", ",", "\t");
    for ($i = 0; $i < count($auRec); $i++) {
        $orderType = '';


        if ($auRec[$i]->order_type == 'Yes') {
            $orderType = 'Sales Order';

            if ($auRec[$i]->order_status == 'A') {
                $status = "New Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }
            if ($auRec[$i]->order_status == 'C') {
                $status = "Cancelled";
            }
            $color = ($auRec[$i]->order_status == 'A') ? "A" : "P";
        }
        if ($auRec[$i]->order_type == 'No') {
            $orderType = 'No Order';

            $status = ($auRec[$i]->order_status == 'A') ? "No Order" : "Processed";
            $color = ($auRec[$i]->order_status == 'A') ? "I" : "P";
        }
        if ($auRec[$i]->order_type == 'Adhoc') {
            $orderType = 'Adhoc Order';

            if ($auRec[$i]->order_status == 'A') {
                $status = "New Adhoc Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }
            if ($auRec[$i]->order_status == 'C') {
                $status = "Cancelled";
            }
            //$status=($auRec[$i]->order_status=='A')?"New Adhoc Order":"Processed";
            $color = ($auRec[$i]->order_status == 'A') ? "O" : "P";
        }

        if (strtolower($auRec[$i]->order_type) == 'return') {
            $orderType = 'Return Order';
        }

        // display oulet
        if ($auRec[$i]->display_outlet == 'Y') {
            $outlet = 'Yes';
        } elseif ($auRec[$i]->display_outlet == 'N') {
            $outlet = 'No';
        }
        switch ($auRec[$i]->order_by) {
            case 'S':
                $order_by = $AliaseUsers['salesman'];
                break;
            case "D":
                $order_by = $AliaseUsers['distributor'];
                break;
            case "R":
                $order_by = $AliaseUsers['retailer'];
                break;
            default :
                $order_by = '';
        }

        //$auRec2 = $_objAdmin->_getSelectList2('table_order_detail', "count( distinct(item_id)) as total_item", '', " order_id = " . $auRec[$i]->order_id . " and type = 1");

        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);
        $date_of_delivery = $_objAdmin->_changeDate($auRec[$i]->delivery_date);
        $data .= "" . $date_of_order . "\t" .
            $auRec[$i]->time_of_order . "\t" .
            $auRec[$i]->order_id . "\t" .
            $auRec[$i]->acc_total_invoice_amount . "\t" .
            $auRec[$i]->total_item . "\t" .
            $auRec[$i]->total_ordered_qty . "\t" .
            $auRec[$i]->distributor_name . "\t" .
            $auRec[$i]->distributor_code . "\t" .
            $auRec[$i]->dist_zone . "\t" .
            $auRec[$i]->dist_state . "\t" .
            $auRec[$i]->salesman_name . "\t" .
            $auRec[$i]->employee_code . "\t" .
            $auRec[$i]->sal_zone . "\t" .
            $auRec[$i]->sal_state . "\t" .
            $auRec[$i]->rpt_to . "\t" .
            $auRec[$i]->retailer_name . "\t" .
            $auRec[$i]->retailer_code . "\t" .
            $auRec[$i]->ret_zone . "\t" .
            $auRec[$i]->ret_state . "\t" .
            $auRec[$i]->city_name . "\t" .
            $auRec[$i]->group_name . "\t" .
            $auRec[$i]->channel_name . "\t" .
            $auRec[$i]->relation . "\t" .
            $auRec[$i]->type_name . "\t" .
            $outlet . "\t" .
            str_replace($remove, ' ', $auRec[$i]->retailer_location) . "\t" .
            str_replace($remove, ' ', $auRec[$i]->retailer_address) . "\t" .
            $orderType . "\t" .
            $order_by . "\t" .
            $status . "\t" .
            str_replace($remove, ' ', $auRec[$i]->comments) . "\t" .
            str_replace($remove, ' ', $auRec[$i]->tag_description) .
            "\t" . $date_of_delivery . "\t" . $auRec[$i]->photo_count . "\n";


    }

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Order List.xls\"");
    echo $data;
    exit;
}
// Todo : End : 4 December 2023 : retailer batch wise order report


// Todo Start : Jatin : 5 Nov 2023 : export dynamic Distributor Batch Wise Order List

if (isset($_GET['dynamic_export_distributor_batch_wise_order_listing'])) {
    //echo hello;exit;
    $data = "Order For \t Date\t Time\t Order Number\t Total Order Amount\t Total No. Of Items\tTotal Order Qty\t " .
        $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\t" . $AliaseUsers['distributor']
        . " Zone\t" . $AliaseUsers['distributor'] . " State\t" . $AliaseUsers['distributor'] . " District\t" .
        $AliaseUsers['salesman'] . " Name \t" . $AliaseUsers['salesman'] . " Zone \t " . $AliaseUsers['salesman'] . " State\t" . $AliaseUsers['salesman'] . " District\t Market \t Address \t Order Status \t Comments\t Reason\t Photo Count\t Order amount before tax\tTotal Tax Amount\tOrder Amount after Tax\n";
    $sort = " ORDER BY date_of_order desc,time_of_order desc";

    // ---------------start dynamic filter condition-----------
    $salesmanCnd = '';
    $salCond = '';

    if (isset($_SESSION['fil_salesman']) && $_SESSION['fil_salesman'] > 0) {
        $salesmanCnd = ' AND s.salesman_id = "' . $_SESSION['fil_salesman'] . '"';
    } else if (isset($_SESSION['fil_salesman_manager']) && ($_SESSION['fil_salesman_manager'] > 0)) {
        $salesmanManagerId = $_SESSION['fil_salesman_manager'];
        $account_id = $_SESSION['accountId'];
        $res = $this->_getSelectList2('table_salesman_hierarchy_relationship AS SHR 
    LEFT JOIN table_salesman_hierarchy AS SH ON SH.hierarchy_id = SHR.hierarchy_id
    LEFT JOIN table_salesman AS s ON s.salesman_id = SHR.salesman_id', 's.salesman_id,SH.hierarchy_id,SH.sort_order', '', " SH.account_id=" . $account_id . " AND SHR.salesman_id = $salesmanManagerId ORDER BY SH.sort_order ASC ");
        if (is_array($res) && (count($res) > 0)) {
            $sortOrder = $res[0]->sort_order;
            $_objArrayList = new ArrayList();
            $getBottomUsersIdArr = $_objArrayList->getSalesmansBottomUsers(array($salesmanManagerId), $sortOrder, $account_id);

            if (is_array($getBottomUsersIdArr) && (count($getBottomUsersIdArr) > 0)) {
                $bottomUsersIds = implode(',', $getBottomUsersIdArr);
            }

            $salesmanCnd = " AND s.salesman_id IN($bottomUsersIds) ";
        }
    } else if (isset($_SESSION['fil_salesman_designation']) && ($_SESSION['fil_salesman_designation'] > 0)) {
        $account_id = $_SESSION['accountId'];
        $_objArrayList = new ArrayList();
        $getDesignationWiseBottomUsersIdArr = $_objArrayList->getDesignationWiseBottomUsers($_SESSION['fil_salesman_designation'], $account_id);

        if (is_array($getDesignationWiseBottomUsersIdArr) && (count($getDesignationWiseBottomUsersIdArr) > 0)) {
            $bottomUsersIds = implode(',', $getDesignationWiseBottomUsersIdArr);
            $salesmanCnd = " AND s.salesman_id IN($bottomUsersIds) ";
        }
    } else {
        $salesmanCnd .= '';
    }
    if (isset($_SESSION['fil_distributor']) && $_SESSION['fil_distributor'] > 0) {
        $salesmanCnd .= ' AND d.distributor_id = "' . $_SESSION['fil_distributor'] . '"';
    }
    if (isset($_SESSION['fil_salesman_zone']) && $_SESSION['fil_salesman_zone'] > 0) {
        $salesmanCnd .= ' AND z.zone_id = "' . $_SESSION['fil_salesman_zone'] . '"';
    }
    if (isset($_SESSION['fil_salesman_state']) && $_SESSION['fil_salesman_state'] > 0) {
        $salesmanCnd .= ' AND s.state = "' . $_SESSION['fil_salesman_state'] . '"';
    }
    if (isset($_SESSION['fil_distributor_state']) && !empty($_SESSION['fil_distributor_state']) && $_SESSION['fil_distributor_state'] > 0) {
        $salesmanCnd .= " AND d.state=" . $_SESSION['fil_distributor_state'];
    }
    if (isset($_SESSION['fil_distributor_zone']) && !empty($_SESSION['fil_distributor_zone']) && $_SESSION['fil_distributor_zone'] > 0) {
        $salesmanCnd .= " AND z2.zone_id=" . $_SESSION['fil_distributor_zone'];
    }
    if (isset($_SESSION['fil_order_status']) && !empty($_SESSION['fil_order_status'])) {
        $salesmanCnd .= ' AND o.order_status="' . $_SESSION['fil_order_status'] . '"';
    }


    // Date range , month and year
    if (!isset($_SESSION['fil_from']) && empty($_SESSION['fil_from'])) {
        $_SESSION['fil_from'] = date('d M Y');
    }

    if (!isset($_SESSION['fil_to']) && empty($_SESSION['fil_to'])) {
        $_SESSION['fil_to'] = date('d M Y');
    }
    if (isset($_SESSION['fil_month']) && !empty($_SESSION['fil_month']) && isset($_SESSION['fil_year']) && !empty($_SESSION['fil_year'])) {
        $_SESSION['fil_from'] = date('Y-m-d', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
        $_SESSION['fil_to'] = date('Y-m-t', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
    }
    $tim_date = " and o.date_of_order BETWEEN '" . date('Y-m-d', strtotime
        ($_SESSION['fil_from'])) .
        "' AND '" . date('Y-m-d', strtotime($_SESSION['fil_to'])) . "'";


    // -------------End dynamic filter condition------------

    if ($_SESSION['distributorId'] != "A") {
        $disList = " o.distributor_id=" . $_SESSION['distributorId'] . " and";
    } else {
        $disList = "";
    }
    if ($_SESSION['OrderBy'] != '') {
        if ($_SESSION['OrderBy'] == 1) {
            $orderby = "";
        }
        if ($_SESSION['OrderBy'] == 2) {
            $orderby = " and o.order_status='A' ";
        }
        if ($_SESSION['OrderBy'] == 3) {
            $orderby = " and o.order_status='I' ";
        }
        if ($_SESSION['OrderBy'] == 4) {
            $orderby = " and o.order_status='D' ";
        }
    } else {
        $orderby = "";
    }

    if ($_SESSION['userLoginType'] == 3 && $_SESSION['distributorId'] > 0) {
        $distributorCond = " AND o.distributor_id ='" . $_SESSION['distributorId'] . "' ";
    }
    if ($_SESSION['userLoginType'] == 7 && $_SESSION['stockistId'] > 0) {
        $distributorCond .= " AND o.stockist_id ='" . $_SESSION['stockistId'] . "' ";
    }

    $where = " o.order_for='D' and o.distributor_id!=''  $salesman $tim_date $salesmanCnd $distributorCond $orderby";
    $auRec = $_objAdmin->_getSelectList('table_distributor_order as o
    left join table_salesman as s on o.salesman_id=s.salesman_id
    left join table_distributors as d on d.distributor_id=o.distributor_id
    left join state as ss on ss.state_id = s.state
    left join state as st on st.state_id = d.state
    left join table_zone_state_mapping as zsm1 on zsm1.state_id = s.state and zsm1.account_id = s.account_id
    left join table_zone as z on z.zone_id = zsm1.zone_id
  	left join table_zone_state_mapping as zsm on zsm.state_id = d.state and zsm.account_id = d.account_id 
  	left join table_tags as t on t.tag_id=o.reason
  	left join table_zone as z1 on z1.zone_id = zsm.zone_id
  	left join city as c on c.city_id=d.city
  	left join city as c1 on c1.city_id = s.city
			', "o.*,s.salesman_name,d.distributor_name,d.distributor_code,d.distributor_location, d.distributor_address, st.state_name as dis_state,c1.city_name as sal_city ,c.city_name as dis_city,ss.state_name as sal_state,z.zone_name as sal_zone,z1.zone_name as dis_zone,t.tag_description", $rp, $where . $sort, '');

    $remove = array("\n", "\r", "\n \r", "\t", ",");
    for ($i = 0; $i < count($auRec); $i++) {
        if ($auRec[$i]->order_type == 'Yes') {
            if ($auRec[$i]->order_status == 'A') {
                $status = "New Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }
            $color = ($auRec[$i]->order_status == 'A') ? "A" : "P";
        }
        if ($auRec[$i]->order_type == 'No') {
            $status = ($auRec[$i]->order_status == 'A') ? "No Order" : "Processed";
            $color = ($auRec[$i]->order_status == 'A') ? "I" : "P";
        }
        if ($auRec[$i]->order_type == 'Adhoc') {
            if ($auRec[$i]->order_status == 'A') {
                $status = "New Adhoc Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }

            $color = ($auRec[$i]->order_status == 'A') ? "O" : "P";
        }
        if ($auRec[$i]->order_type == 'Return') {
            if ($auRec[$i]->order_status == 'A') {
                $status = "Return Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }

            $color = ($auRec[$i]->order_status == 'A') ? "O" : "P";
        }

        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);
        $auRec2 = $_objAdmin->_getSelectList2('table_distributor_order_detail', "count( distinct(item_id)) as total_item,sum(quantity) as total_qty", '', " order_id = " . $auRec[$i]->order_id . " and type = 1");
        switch (strtolower($auRec[$i]->order_for)) {
            case 'r':
                $order_for = 'Retailer';
                break;
            case 'd':
                $order_for = 'Distributor';
                break;
        }

        $productTax = $_objAdmin->_getSelectList2('table_distributor_order_detail as tod left join table_item_gst as g on g.item_id = tod.item_id', "SUM(ROUND(((((tod.price*tod.quantity)-(tod.discount_amount+tod.custom_discount_amount))*ifnull(g.tax,0))/100),2)) as ttl_tax_amt ", '', " tod.order_id IN(" . $auRec[$i]->order_id . ")");

        $after_tax = ($auRec[$i]->total_invoice_amount + $productTax[0]->ttl_tax_amt);

        $data .= $order_for . "\t" . $date_of_order . "\t" . $auRec[$i]->time_of_order . "\t" . $auRec[$i]->order_id
            . "\t" . number_format(floor($auRec[$i]->acc_total_invoice_amount), 2) . "\t" . $auRec2[0]->total_item . "\t" . $auRec2[0]->total_qty . "\t" . str_replace($remove, ' ', $auRec[$i]->distributor_name) . "\t" . $auRec[$i]->distributor_code . "\t" . $auRec[$i]->dis_zone . "\t" . $auRec[$i]->dis_state . "\t" . $auRec[$i]->dis_city . "\t" . $auRec[$i]->salesman_name . "\t" . $auRec[$i]->sal_zone . "\t" . $auRec[$i]->sal_state . "\t" . $auRec[$i]->sal_city . "\t" . str_replace($remove, ' ', $auRec[$i]->distributor_location) . "\t" . str_replace($remove, ' ', $auRec[$i]->distributor_address) . "\t" . $status . "\t" . $auRec[$i]->reason_remark . "\t" . $auRec[$i]->tag_description . "\t" . $auRec[$i]->photo_count . "\t" . $auRec[$i]->total_invoice_amount . "\t" . $productTax[0]->ttl_tax_amt . "\t" . $after_tax . "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['distributor'] . " Order List.xls\"");
    echo $data;
    exit;
}

// Todo End : Jatin : 5 Nov 2023 : export dynamic Distributor Batch Wise Order List

// Todo Start :Jatin : 17 August 2023  : Export detail of dynamic order list
if (isset($_GET['dynamic_export_batch_wise_order_detail_list'])) {
    $data = " Date of Order\t Time of Order\t Order Number\t Total Invoice Amount\t Total Number Of Item\t " .
        $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\t" . $AliaseUsers['distributor'] . " Zone\t" . $AliaseUsers['distributor'] . " State\t " . $AliaseUsers['salesman'] . " Name\t " . $AliaseUsers['salesman'] . " Code\t " . $AliaseUsers['salesman'] . " Zone\t " . $AliaseUsers['salesman'] . " State\tReporting To\t " . $AliaseUsers['retailer'] . " Name\t " . $AliaseUsers['retailer'] . " Code\t " . $AliaseUsers['retailer'] . " Zone\t" . $AliaseUsers['retailer'] . " State\t" . $AliaseUsers['retailer'] . " District\t" . $AliaseUsers['retailer'] . " Market\t " . $AliaseUsers['retailer'] . " Address\t" . $AliaseUsers['retailer'] . " Group \t" . $AliaseUsers['retailer'] . " Channel\t" . $AliaseUsers['retailer'] . " Classification\t" . $AliaseUsers['retailer'] . " Type\t Display Outlet\t Comments\tRemarks\t Reason\t Order Type\tOrder Status\tOrder By\tBatch Code\tBatch Number\tBatch MFG Date\tBatch Exp.Date\tItem Name\tItem Code\tItem Grade\tCategory\tBrand\tQuantity\tPrice\tTotal\t Delivery Date\n";


    $sort = " ORDER BY date_of_order desc,time_of_order desc";
    $queryConditions = '';
    if (isset($_SESSION['fil_from']) && !empty($_SESSION['fil_from'])) {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['fil_from'])) . "'";
    } else {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d') . "'";
    }
    if (isset($_SESSION['fil_to']) && !empty($_SESSION['fil_to'])) {
        $todate = " and o.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['fil_to'])) . "'";
    } else {
        $todate = " and o.date_of_order <= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['userLoginType'] == 3 && $_SESSION['distributorId'] != "" && $_SESSION['distributorId'] > 0) {
        $queryConditions .= " AND o.distributor_id=" . $_SESSION['distributorId'];
    } else if (isset($_SESSION['fil_distributor']) && !empty($_SESSION['fil_distributor']) && $_SESSION['fil_distributor'] > 0) {
        $queryConditions .= " AND o.distributor_id=" . $_SESSION['fil_distributor'];
    }

    if ($_SESSION['userLoginType'] == 7 && $_SESSION['stockistId'] != "" && $_SESSION['stockistId'] > 0) {
        $queryConditions .= " AND d.stockist_id=" . $_SESSION['stockistId'];

    } else if (isset($_SESSION['fil_stockist']) && !empty($_SESSION['fil_stockist']) && $_SESSION['fil_stockist'] > 0) {
        $queryConditions .= " AND d.stockist_id=" . $_SESSION['fil_stockist'];
    }
    $salesmanCnd = "";
    if ($_SESSION['userLoginType'] == 5) {
        $salesmanCnd = str_replace("s.", "o.", $salesman);
    }

    if (isset($_SESSION['fil_salesman']) && !empty($_SESSION['fil_salesman']) && $_SESSION['fil_salesman'] > 0) {
        $salesmanCnd = " AND o.salesman_id=" . $_SESSION['fil_salesman'];
    } else if (isset($_SESSION['fil_salesman_manager']) && ($_SESSION['fil_salesman_manager'] > 0)) {
        $salesmanManagerId = $_SESSION['fil_salesman_manager'];
        $account_id = $_SESSION['accountId'];
        $res = $_objAdmin->_getSelectList2('table_salesman_hierarchy_relationship AS SHR 
				LEFT JOIN table_salesman_hierarchy AS SH ON SH.hierarchy_id = SHR.hierarchy_id
				LEFT JOIN table_salesman AS s ON s.salesman_id = SHR.salesman_id', 's.salesman_id,SH.hierarchy_id,SH.sort_order', '', " SH.account_id=" . $account_id . " AND SHR.salesman_id = $salesmanManagerId ORDER BY SH.sort_order ASC ");

        if (is_array($res) && (count($res) > 0)) {
            $sortOrder = $res[0]->sort_order;
            $_objArrayList = new ArrayList();
            $getBottomUsersIdArr = $_objArrayList->getSalesmansBottomUsers(array($salesmanManagerId), $sortOrder, $account_id);

            if (is_array($getBottomUsersIdArr) && (count($getBottomUsersIdArr) > 0)) {
                $bottomUsersIds = implode(',', $getBottomUsersIdArr);
            }

            $salesmanCnd = " AND o.salesman_id IN($bottomUsersIds) ";
        }
    } else if (isset($_SESSION['fil_salesman_designation']) && ($_SESSION['fil_salesman_designation'] > 0)) {
        $_objArrayList = new ArrayList();
        $account_id = $_SESSION['accountId'];
        $getDesignationWiseBottomUsersIdArr = $_objArrayList->getDesignationWiseBottomUsers($_SESSION['fil_salesman_designation'], $account_id);

        if (is_array($getDesignationWiseBottomUsersIdArr) && (count($getDesignationWiseBottomUsersIdArr) > 0)) {
            $bottomUsersIds = implode(',', $getDesignationWiseBottomUsersIdArr);
            $salesmanCnd .= " AND o.salesman_id IN($bottomUsersIds) ";
        }
    } else {
        $salesmanCnd .= '';
    }
    //echo $bottomUsersIds; die;
    if (isset($_SESSION['fil_retailer']) && !empty($_SESSION['fil_retailer']) && $_SESSION['fil_retailer'] > 0) {
        $queryConditions .= " AND o.retailer_id=" . $_SESSION['fil_retailer'];
    }
    if (isset($_SESSION['fil_salesman_state']) && !empty($_SESSION['fil_salesman_state']) && $_SESSION['fil_salesman_state'] > 0) {
        $queryConditions .= " AND s.state=" . $_SESSION['fil_salesman_state'];
    }
    if (isset($_SESSION['fil_retailer_state']) && !empty($_SESSION['fil_retailer_state']) && $_SESSION['fil_retailer_state'] > 0) {
        $queryConditions .= " AND r.state=" . $_SESSION['fil_retailer_state'];
    }
    if (isset($_SESSION['fil_distributor_state']) && !empty($_SESSION['fil_distributor_state']) && $_SESSION['fil_distributor_state'] > 0) {
        $queryConditions .= " AND d.state=" . $_SESSION['fil_distributor_state'];
    }

    if (isset($_SESSION['fil_salesman_zone']) && !empty($_SESSION['fil_salesman_zone']) && $_SESSION['fil_salesman_zone'] > 0) {
        $queryConditions .= " AND zms.zone_id=" . $_SESSION['fil_salesman_zone'];
    }
    if (isset($_SESSION['fil_retailer_zone']) && !empty($_SESSION['fil_retailer_zone']) && $_SESSION['fil_retailer_zone'] > 0) {
        $queryConditions .= " AND zmr.zone_id=" . $_SESSION['fil_retailer_zone'];
    }
    if (isset($_SESSION['fil_distributor_zone']) && !empty($_SESSION['fil_distributor_zone']) && $_SESSION['fil_distributor_zone'] > 0) {
        $queryConditions .= " AND zmd.zone_id=" . $_SESSION['fil_distributor_zone'];
    }
    if (isset($_SESSION['fil_month']) && !empty($_SESSION['fil_month']) && isset($_SESSION['fil_year']) && !empty($_SESSION['fil_year'])) {
        $firstDate = date('Y-m-d', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
        $lastdate = date('Y-m-t', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
        $fromdate = " and o.date_of_order >= '" . $firstDate . "'";
        $todate = " and o.date_of_order <= '" . $lastdate . "'";
    }

    if (isset($_SESSION['fil_order_status']) && !empty($_SESSION['fil_order_status'])) {
        $queryConditions .= " AND o.order_status='" . $_SESSION['fil_order_status'] . "'";
    } else {
        //$queryConditions .=" and order_status IN('A','I') ";
    }
    if (isset($_SESSION['fil_order_type']) && !empty($_SESSION['fil_order_type'])) {
        $queryConditions .= " AND o.order_type='" . $_SESSION['fil_order_type'] . "'";
    } else {
        //$queryConditions .=" AND o.order_type !='Return'";
    }

    $queryConditions = $queryConditions . $salesmanCnd . $fromdate . $todate;
    $where = $queryConditions;

    $auRec = $_objAdmin->_getSelectList("table_order as o 
            left join table_order_detail as ord on o.order_type != 'No' and ord.order_id = o.order_id and ord.type = 1         
            left join table_order_detail_batch_wise as tbd on tbd.order_detail_id = ord.order_detail_id
            left join table_color as clr on clr.color_id = tbd.batch_id
            left join table_item as i on i.item_id = ord.item_id 
            left join table_retailer as r on o.retailer_id=r.retailer_id 
            left join table_salesman as s on o.salesman_id=s.salesman_id 
            left join table_salesman_hierarchy_relationship as shr on shr.salesman_id = s.salesman_id
            left join table_category as tc on tc.category_id = i.category_id
            left join table_brands as tb on tb.brand_id = i.brand_id
            left join table_salesman as s2 on s2.salesman_id=shr.rpt_user_id
            left join table_distributors as d on o.distributor_id=d.distributor_id 
            left join table_retailer_channel_master as cm on r.channel_id=cm.channel_id 
            LEFT JOIN table_retailer_group as rg ON rg.group_id = r.group_id
            left join table_retailer_type_master as rtm ON rtm.type_id=r.type_id
            left join table_relationship as rel ON rel.relationship_id=r.relationship_id 
            left join state as str on str.state_id=r.state 
            left join state as sts on sts.state_id=s.state 
            left join state as std on std.state_id=d.state 
            left join city as c on c.city_id=r.city 
            left join table_grade as tg on tg.grade_id = i.grade_id
            left join table_zone_state_mapping as zms on zms.state_id=s.state and zms.account_id = s.account_id
			left join table_zone as sz on sz.zone_id=zms.zone_id 
			left join table_zone_state_mapping as zmr on zmr.state_id=r.state and zmr.account_id = r.account_id
			left join table_zone as rz on rz.zone_id=zmr.zone_id
			left join table_zone_state_mapping as zmd on zmd.state_id=d.state and zmd.account_id = d.account_id
			left join table_zone as dz on dz.zone_id=zmd.zone_id",
        "o.order_id,o.retailer_id,o.order_type,o.order_status,
			o.date_of_order,o.time_of_order,o.acc_total_invoice_amount,o.order_by,
	r.retailer_name,r.retailer_code,
	r.retailer_address,r.retailer_location,cm.channel_name,r.display_outlet,
	s.salesman_name,s.employee_code,s2.salesman_name as rpt_to,d.distributor_name,d.distributor_code,
	sz.zone_name as sal_zone,rz.zone_name as ret_zone,dz.zone_name as dist_zone,str.state_name as ret_state,sts.state_name as sal_state,std.state_name as dist_state,c.city_name,i.item_code,i.item_name,ord.quantity,ord.price,ord.total,ord.remarks,rg.group_name,rtm.type_name,rel.relationship_code as relation,tg.grade_name,tc.category_name,tb.brand_name,o.delivery_date,o.comments,o.tag_description,clr.*,tbd.qty", '', $where . $sort, '');


    $remove = array("\n", "\r", ",", "\t");
    for ($i = 0; $i < count($auRec); $i++) {
        $orderType = '';


        if ($auRec[$i]->order_type == 'Yes') {
            $orderType = 'Sales Order';

            if ($auRec[$i]->order_status == 'A') {
                $status = "New Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }
            if ($auRec[$i]->order_status == 'C') {
                $status = "Cancelled";
            }
            $color = ($auRec[$i]->order_status == 'A') ? "A" : "P";
        }
        if ($auRec[$i]->order_type == 'No') {
            $orderType = 'No Order';

            $status = ($auRec[$i]->order_status == 'A') ? "No Order" : "Processed";
            $color = ($auRec[$i]->order_status == 'A') ? "I" : "P";
        }
        if ($auRec[$i]->order_type == 'Adhoc') {
            $orderType = 'Adhoc Order';

            if ($auRec[$i]->order_status == 'A') {
                $status = "New Adhoc Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }
            if ($auRec[$i]->order_status == 'C') {
                $status = "Cancelled";
            }
            //$status=($auRec[$i]->order_status=='A')?"New Adhoc Order":"Processed";
            $color = ($auRec[$i]->order_status == 'A') ? "O" : "P";
        }

        if (strtolower($auRec[$i]->order_type) == 'return') {
            $orderType = 'Return Order';
        }

        // display oulet
        if ($auRec[$i]->display_outlet == 'Y') {
            $outlet = 'Yes';
        } elseif ($auRec[$i]->display_outlet == 'N') {
            $outlet = 'No';
        }
        switch ($auRec[$i]->order_by) {
            case 'S':
                $order_by = $AliaseUsers['salesman'];
                break;
            case "D":
                $order_by = $AliaseUsers['distributor'];
                break;
            case "R":
                $order_by = $AliaseUsers['retailer'];
                break;
            default :
                $order_by = '';
        }
        $auRec2 = $_objAdmin->_getSelectList2('table_order_detail', "count( distinct(item_id)) as total_item", '', " order_id = " . $auRec[$i]->order_id . " and type = 1");

        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);
        $date_of_delivery = $_objAdmin->_changeDate($auRec[$i]->delivery_date);
        $exp_date = !empty($_objAdmin->_changeDate($auRec[$i]->expiry_date)) ? $_objAdmin->_changeDate
        ($auRec[$i]->expiry_date) : '-';
        $mfg_date = !empty($_objAdmin->_changeDate($auRec[$i]->mfg_date)) ? $_objAdmin->_changeDate
        ($auRec[$i]->mfg_date) : '-';
        $data .= "" . $date_of_order . "\t" .
            $auRec[$i]->time_of_order . "\t" .
            $auRec[$i]->order_id . "\t" .
            $auRec[$i]->acc_total_invoice_amount . "\t" .
            $auRec2[0]->total_item . "\t" .
            $auRec[$i]->distributor_name . "\t" .
            $auRec[$i]->distributor_code . "\t" .
            $auRec[$i]->dist_zone . "\t" .
            $auRec[$i]->dist_state . "\t" .
            $auRec[$i]->salesman_name . "\t" .
            $auRec[$i]->employee_code . "\t" .
            $auRec[$i]->sal_zone . "\t" .
            $auRec[$i]->sal_state . "\t" .
            $auRec[$i]->rpt_to . "\t" .
            $auRec[$i]->retailer_name . "\t" .
            $auRec[$i]->retailer_code . "\t" .
            $auRec[$i]->ret_zone . "\t" .
            $auRec[$i]->ret_state . "\t" .
            $auRec[$i]->city_name . "\t" .
            str_replace($remove, ' ', $auRec[$i]->retailer_location) . "\t" .
            str_replace($remove, ' ', $auRec[$i]->retailer_address) . "\t" .
            $auRec[$i]->group_name . "\t" .
            $auRec[$i]->channel_name . "\t" .
            $auRec[$i]->relation . "\t" .
            $auRec[$i]->type_name . "\t" .
            $outlet . "\t" .
            str_replace($remove, ' ', $auRec[$i]->comments) . "\t" .
            str_replace($remove, ' ', $auRec[$i]->remarks) . "\t" .
            str_replace($remove, ' ', $auRec[$i]->tag_description) . "\t" .
            $orderType . "\t" .
            $status .
            "\t" . $order_by . "\t" . $auRec[$i]->color_code . "\t" . $auRec[$i]->color_desc . "\t" . $mfg_date . "\t"
            . $exp_date . "\t" . $auRec[$i]->item_name .
            "\t" . $auRec[$i]->item_code . "\t" . $auRec[$i]->grade_name . "\t" . $auRec[$i]->category_name . "\t" .
            $auRec[$i]->brand_name . "\t" . $auRec[$i]->qty .
            "\t" .
            $auRec[$i]->price . "\t" .
            ($auRec[$i]->qty * $auRec[$i]->price) . "\t" . $date_of_delivery . "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Order Item List.xls\"");
    echo $data;
    exit;


}
// Todo End  :Jatin : 17 August 2023  : Export detail of dynamic order list

// Todo Start : Jatin : 5 Dec 2023 : Export Dynamic distributor batch order Detail Report
if (isset($_GET['dynamic_export_distributor_batch_wise_detail_order_listing'])) {

    $data = "Order For \t Date\t Time\t Order Number\t Total Order Amount\t Total No. Of Items\t " . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\t" . $AliaseUsers['distributor'] . " Zone\t" . $AliaseUsers['distributor'] . " State\t" . $AliaseUsers['distributor'] . " District\t" . $AliaseUsers['salesman'] . " Name \t" . $AliaseUsers['salesman'] . " Zone \t " . $AliaseUsers['salesman'] . " State\t" . $AliaseUsers['salesman'] . " District\t Market \t Address \t Order Status \t Comments\t Reason\tBatch Code\tBatch Number\tBatch MFG Date\tBatch Expiry Date\tItem Name\tItem Code\tQuantity\tPrice\tTotal\n";

    $sort = " ORDER BY date_of_order desc,time_of_order desc";

    // ---------------start dynamic filter condition-----------
    $salesmanCnd = '';
    $salCond = '';

    if (isset($_SESSION['fil_salesman']) && $_SESSION['fil_salesman'] > 0) {
        $salesmanCnd = ' AND s.salesman_id = "' . $_SESSION['fil_salesman'] . '"';
    } else if (isset($_SESSION['fil_salesman_manager']) && ($_SESSION['fil_salesman_manager'] > 0)) {
        $salesmanManagerId = $_SESSION['fil_salesman_manager'];
        $account_id = $_SESSION['accountId'];
        $res = $this->_getSelectList2('table_salesman_hierarchy_relationship AS SHR 
    LEFT JOIN table_salesman_hierarchy AS SH ON SH.hierarchy_id = SHR.hierarchy_id
    LEFT JOIN table_salesman AS s ON s.salesman_id = SHR.salesman_id', 's.salesman_id,SH.hierarchy_id,SH.sort_order', '', " SH.account_id=" . $account_id . " AND SHR.salesman_id = $salesmanManagerId ORDER BY SH.sort_order ASC ");
        if (is_array($res) && (count($res) > 0)) {
            $sortOrder = $res[0]->sort_order;
            $_objArrayList = new ArrayList();
            $getBottomUsersIdArr = $_objArrayList->getSalesmansBottomUsers(array($salesmanManagerId), $sortOrder, $account_id);

            if (is_array($getBottomUsersIdArr) && (count($getBottomUsersIdArr) > 0)) {
                $bottomUsersIds = implode(',', $getBottomUsersIdArr);
            }

            $salesmanCnd = " AND s.salesman_id IN($bottomUsersIds) ";
        }
    } else if (isset($_SESSION['fil_salesman_designation']) && ($_SESSION['fil_salesman_designation'] > 0)) {
        $account_id = $_SESSION['accountId'];
        $_objArrayList = new ArrayList();
        $getDesignationWiseBottomUsersIdArr = $_objArrayList->getDesignationWiseBottomUsers($_SESSION['fil_salesman_designation'], $account_id);

        if (is_array($getDesignationWiseBottomUsersIdArr) && (count($getDesignationWiseBottomUsersIdArr) > 0)) {
            $bottomUsersIds = implode(',', $getDesignationWiseBottomUsersIdArr);
            $salesmanCnd = " AND s.salesman_id IN($bottomUsersIds) ";
        }
    } else {
        $salesmanCnd .= '';
    }
    if (isset($_SESSION['fil_distributor']) && $_SESSION['fil_distributor'] > 0) {
        $salesmanCnd .= ' AND d.distributor_id = "' . $_SESSION['fil_distributor'] . '"';
    }
    if (isset($_SESSION['fil_salesman_zone']) && $_SESSION['fil_salesman_zone'] > 0) {
        $salesmanCnd .= ' AND z.zone_id = "' . $_SESSION['fil_salesman_zone'] . '"';
    }
    if (isset($_SESSION['fil_salesman_state']) && $_SESSION['fil_salesman_state'] > 0) {
        $salesmanCnd .= ' AND s.state = "' . $_SESSION['fil_salesman_state'] . '"';
    }
    if (isset($_SESSION['fil_distributor_state']) && !empty($_SESSION['fil_distributor_state']) && $_SESSION['fil_distributor_state'] > 0) {
        $salesmanCnd .= " AND d.state=" . $_SESSION['fil_distributor_state'];
    }
    if (isset($_SESSION['fil_distributor_zone']) && !empty($_SESSION['fil_distributor_zone']) && $_SESSION['fil_distributor_zone'] > 0) {
        $salesmanCnd .= " AND z2.zone_id=" . $_SESSION['fil_distributor_zone'];
    }
    if (isset($_SESSION['fil_order_status']) && !empty($_SESSION['fil_order_status'])) {
        $salesmanCnd .= ' AND o.order_status="' . $_SESSION['fil_order_status'] . '"';
    }


    // Date range , month and year
    if (!isset($_SESSION['fil_from']) && empty($_SESSION['fil_from'])) {
        $_SESSION['fil_from'] = date('d M Y');
    }

    if (!isset($_SESSION['fil_to']) && empty($_SESSION['fil_to'])) {
        $_SESSION['fil_to'] = date('d M Y');
    }
    if (isset($_SESSION['fil_month']) && !empty($_SESSION['fil_month']) && isset($_SESSION['fil_year']) && !empty($_SESSION['fil_year'])) {
        $_SESSION['fil_from'] = date('Y-m-d', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
        $_SESSION['fil_to'] = date('Y-m-t', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
    }
    $tim_date = " and o.date_of_order BETWEEN '" . date('Y-m-d', strtotime
        ($_SESSION['fil_from'])) .
        "' AND '" . date('Y-m-d', strtotime($_SESSION['fil_to'])) . "'";


    // -------------End dynamic filter condition------------

    if ($_SESSION['OrderBy'] != '') {
        if ($_SESSION['OrderBy'] == 1) {
            $orderby = "";
        }
        if ($_SESSION['OrderBy'] == 2) {
            $orderby = " and o.order_status='A' ";
        }
        if ($_SESSION['OrderBy'] == 3) {
            $orderby = " and o.order_status='I' ";
        }
        if ($_SESSION['OrderBy'] == 4) {
            $orderby = " and o.order_status='D' ";
        }
    } else {
        $orderby = "";
    }

    if ($_SESSION['userLoginType'] == 3 && $_SESSION['distributorId'] > 0) {
        $distributorCond = " AND o.distributor_id ='" . $_SESSION['distributorId'] . "' ";
    }
    if ($_SESSION['userLoginType'] == 7 && $_SESSION['stockistId'] > 0) {
        $distributorCond .= " AND o.stockist_id ='" . $_SESSION['stockistId'] . "' ";
    }


    $where = " o.order_for='D' and o.distributor_id!=''  $salesman $tim_date $salesmanCnd $distributorCond $orderby";
    $auRec = $_objAdmin->_getSelectList('table_distributor_order as o
    left join table_salesman as s on o.salesman_id=s.salesman_id
    left join table_distributor_order_detail as tod on tod.order_id = o.order_id
    left join table_distributor_order_detail_batch_wise as tdd on tdd.order_detail_id = tod.order_detail_id
    left join table_color as clr on clr.color_id = tdd.batch_id
    left join table_item as i on i.item_id = tod.item_id
    left join table_distributors as d on d.distributor_id=o.distributor_id
    left join state as ss on ss.state_id = s.state
    left join state as st on st.state_id = d.state
    left join table_zone_state_mapping as zsm1 on zsm1.state_id = s.state and zsm1.account_id = s.account_id
    left join table_zone as z on z.zone_id = zsm1.zone_id
  	left join table_zone_state_mapping as zsm on zsm.state_id = d.state and zsm.account_id = d.account_id 
  	left join table_tags as t on t.tag_id=o.reason
  	left join table_zone as z1 on z1.zone_id = zsm.zone_id
  	left join city as c on c.city_id=d.city
  	left join city as c1 on c1.city_id = s.city
			', "o.*,s.salesman_name,d.distributor_name,d.distributor_code,d.distributor_location, d.distributor_address, st.state_name as dis_state,c1.city_name as sal_city ,c.city_name as dis_city,ss.state_name as sal_state,z.zone_name as sal_zone,z1.zone_name as dis_zone,i.item_name,i.item_code,tod.quantity,tod.price,tod.total,t.tag_description,clr.*,tdd.qty", $rp, $where . $sort, '');

    $remove = array("\n", "\r", "\n \r", "\t", ",");
    for ($i = 0; $i < count($auRec); $i++) {
        if ($auRec[$i]->order_type == 'Yes') {
            if ($auRec[$i]->order_status == 'A') {
                $status = "New Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }
            $color = ($auRec[$i]->order_status == 'A') ? "A" : "P";
        }
        if ($auRec[$i]->order_type == 'No') {
            $status = ($auRec[$i]->order_status == 'A') ? "No Order" : "Processed";
            $color = ($auRec[$i]->order_status == 'A') ? "I" : "P";
        }
        if ($auRec[$i]->order_type == 'Adhoc') {
            if ($auRec[$i]->order_status == 'A') {
                $status = "New Adhoc Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }

            $color = ($auRec[$i]->order_status == 'A') ? "O" : "P";
        }
        if ($auRec[$i]->order_type == 'Return') {
            if ($auRec[$i]->order_status == 'A') {
                $status = "Return Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }

            $color = ($auRec[$i]->order_status == 'A') ? "O" : "P";
        }

        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);
        $auRec2 = $_objAdmin->_getSelectList2('table_distributor_order_detail', "count( distinct(item_id)) as total_item", '', " order_id = " . $auRec[$i]->order_id . " and type = 1");
        switch (strtolower($auRec[$i]->order_for)) {
            case 'r':
                $order_for = 'Retailer';
                break;
            case 'd':
                $order_for = 'Distributor';
                break;
        }

        $mfg_date = !empty($_objAdmin->_changeDate($auRec[$i]->mfg_date)) ? $_objAdmin->_changeDate
        ($auRec[$i]->mfg_date) : '-';

        $exp_date = !empty($_objAdmin->_changeDate($auRec[$i]->expiry_date)) ? $_objAdmin->_changeDate
        ($auRec[$i]->expiry_date) : '-';

        $data .= $order_for . "\t" . $date_of_order . "\t" . $auRec[$i]->time_of_order . "\t" . $auRec[$i]->order_id
            . "\t" . number_format(floor($auRec[$i]->acc_total_invoice_amount), 2) . "\t" . $auRec2[0]->total_item . "\t" . str_replace($remove, ' ', $auRec[$i]->distributor_name) . "\t" . $auRec[$i]->distributor_code . "\t" . $auRec[$i]->dis_zone . "\t" . $auRec[$i]->dis_state . "\t" . $auRec[$i]->dis_city . "\t" . $auRec[$i]->salesman_name . "\t" . $auRec[$i]->sal_zone . "\t" . $auRec[$i]->sal_state . "\t" . $auRec[$i]->sal_city . "\t" . str_replace($remove, ' ', $auRec[$i]->distributor_location) . "\t" . str_replace($remove, ' ', $auRec[$i]->distributor_address) . "\t" . $status . "\t" . $auRec[$i]->reason_remark . "\t" . $auRec[$i]->tag_description . "\t" . $auRec[$i]->color_code . "\t" . $auRec[$i]->color_desc . "\t" . $mfg_date . "\t" . $exp_date . "\t" . $auRec[$i]->item_name . "\t" . $auRec[$i]->item_code . "\t" . $auRec[$i]->qty . "\t" . $auRec[$i]->price . "\t" . $auRec[$i]->total . "\n";

    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['distributor'] . " Detail Order List.xls\"");
    echo $data;
    exit;
}
// Todo End : Jatin : 5 Dec 2023 : Export Dynamic distributor batch order Detail Report

// Todo Start : Sudhanshu : 5 Dec 2023  : Distributor order upload
if (isset($_GET['distributor_order_upload_csv'])) {
    $data = "Item Name,Item Code*, Item Category, Quantity\n";
    $remove = array("\n", "\r\n", "\r", "\t", ",", "/", ":", ";", "`", "!", "?", "'");
    $auRec = $_objAdmin->_getSelectList('table_distributor_wise_item_description as dw 
    LEFT JOIN table_item as i ON i.item_id=dw.item_id
    LEFT JOIN table_category as c on c.category_id = i.category_id', "i.item_name,dw.item_desc,item_code,c.category_name", '', " distributor_id='" . $_SESSION['distributorId'] . "' and dw.status='A' ");

    if ($auRec <= 0) {
        $auRec = $_objAdmin->_getSelectList('table_item as i 
       
        LEFT JOIN table_category as c on i.category_id = c.category_id', "i.item_name as item_desc,item_code,c.category_name", '', "  and i.status='A'  and i.item_type='I' ");

    }
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . str_replace($remove, ' ', $auRec[$i]->item_desc) . '"';
            $data .= ",";
            $data .= '"' . str_replace($remove, ' ', $auRec[$i]->item_code) . '"';
            $data .= ",";
            $data .= '"' . str_replace($remove, ' ', $auRec[$i]->category_name) . '"';
            $data .= ",";
            $data .= '';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"distributor_order_upload_csv.csv\"");
    echo $data;
    exit;
}
// Todo End : Sudhanshu : 5 Dec 2023  : Distributor order upload

//Todo Start : sudhanshu : 07 dec 2023 distributor wise item description

if (isset($_GET['export_dis_wise_item_description'])) {
    $data = $AliaseUsers['distributor'] . " Name \t" . $AliaseUsers['distributor'] . " Code \t" . $AliaseUsers['distributor'] . " State \t" . $AliaseUsers['distributor'] . " City \tItem Code\tItem Description \tCategory\t Brand\t Grade\tDistributor Wise Item Description\t Created Date\t Updated Date\t Status\n";
    //Todo Start : sudhanshu 12 june 2024 : add status filter
    $statusCondi = '';
    if (isset($_SESSION['MasDisItm']) && $_SESSION['MasDisItm'] != 'all' && $_SESSION['MasDisItm'] != '') {
        $statusCondi = "  msi.status ='" . $_SESSION['MasDisItm'] . "'";
    }
    //Todo End : sudhanshu 12 june 2024 : add status filter
    $condi = " $statusCondi ORDER BY d.distributor_name ASC";

    $auRec = $_objAdmin->_getSelectList('table_distributor_wise_item_description as msi
    LEFT JOIN table_distributors as d ON d.distributor_id = msi.distributor_id
    LEFT JOIN state as s ON s.state_id=d.state
    LEFT JOIN table_location as loc ON loc.location_id=d.location
    LEFT JOIN table_item as it ON it.item_id = msi.item_id
    LEFT JOIN table_brands as b on b.brand_id = it.brand_id
    LEFT JOIN table_grade as g ON it.grade_id = g.grade_id
    LEFT JOIN table_category as c on c.category_id = it.category_id',
        "msi.*,d.distributor_name,d.distributor_code,it.item_code,b.brand_name,it.item_name,c.category_name,g.grade_name,s.state_name,loc.location_name", '', " $condi ");

    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $status = ($auRec[$i]->status == 'A') ? "Active" : "Inactive";
            $created_date = $_objAdmin->_changeDate($auRec[$i]->created_on);
            $updated_date = $_objAdmin->_changeDate($auRec[$i]->updated_on);
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->category_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->brand_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->grade_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_desc . '"';
            $data .= "\t";
            $data .= '"' . $created_date . '"';
            $data .= "\t";
            $data .= '"' . $updated_date . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['distributor'] . "_wise_item_description_list.xls\"");
    echo $data;
    exit;
}
//Todo End: sudhanshu : 07 dec 2023 distributor wise item description

//Todo Start: sudhanshu : 28 dec 2023 : Order status report
if (isset($_GET['export_order_invoice_status'])) {
    //echo hello;exit;
    $data = "" . $AliaseUsers['retailer'] . " Code\t" . $AliaseUsers['retailer'] . " Name\tState\tDistrict\tCity\t" . $AliaseUsers['distributor'] . " Code\t" . $AliaseUsers['distributor'] . " Name\tOrder No.\tItem Code\tItem Name\tItem Category\tBrand \tOrder Qty (Pieces)\tOrder Qty (Kg)\tOrder Qty (cases)\tOrder Amount\tInvoice Date\tInvoice Number\tInvoice Qty In Pices\tInvoice Qty In Kg\tInvoice Qty In Cases\tInvoice Amount\tOrder Status\n";
    $sort = " ORDER BY date_of_order desc,time_of_order desc";

//		$_objArrayList = new ArrayList();
//		$salsList = $_objArrayList->SalesmanArrayList();
//		$salesman = $_objArrayList->getSalesCondition($salsList);

    if ($_SESSION['retOrderList'] != '' && $_SESSION['retOrderList'] != 'all') {
        $condition .= " R.retailer_id = " . $_SESSION['retOrderList'] . " AND ";
    }

    if ($_SESSION['FromOrdList'] != '') {
        $fromdate = "  O.date_of_order  >= '" . date('Y-m-d', strtotime($_SESSION['FromOrdList'])) . "' AND ";
    } else {
        $fromdate = " O.date_of_order  >= '" . date('Y-m-d') . "' AND ";
    }
    if ($_SESSION['ToOrdList'] != '') {
        $todate = " O.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToOrdList'])) . "' ";
    } else {
        $todate = "  O.date_of_order <= '" . date('Y-m-d') . "'";
    }


    $where = "  O.account_id='" . $_SESSION['accountId'] . "' $brandCnd and D.quantity > 0 and $condition $fromdate $todate   ";
    $auRec = $_objAdmin->_getSelectList2('table_order_detail AS D 
    LEFT JOIN table_order AS O ON D.order_id = O.order_id
    
    LEFT JOIN table_item AS I ON D.item_id = I.item_id
    LEFT JOIN table_brands as b ON b.brand_id=I.brand_id
    LEFT JOIN table_category AS c ON c.category_id = I.category_id 
    LEFT JOIN table_price AS P ON D.item_id = P.item_id
    
    LEFT JOIN table_retailer AS R ON O.retailer_id = R.retailer_id
    
    LEFT JOIN table_distributors AS Dis ON O.distributor_id = Dis.distributor_id
    LEFT JOIN state as st on st.state_id=R.state
    LEFT JOIN city as ct on ct.city_id=R.city
    LEFT JOIN table_location as loc on loc.location_id = R.location_id 
    left join table_item_case_relationship as cr on cr.item_id=D.item_id
    left join table_cases as ca on ca.case_id=cr.case_id',
        'D.price, D.quantity,D.item_unit_type,D.total,R.new, I.item_name,I.item_code,I.item_size,ca.case_size,b.brand_name,
        I.item_id,
        Dis.distributor_name,Dis.distributor_code,O.retailer_id,R.retailer_name,R.retailer_code,c.category_name,O.order_id,O.date_of_order,O.time_of_order,st.state_name,ct.city_name,D.remarks,loc.location_name', '', $where . $sort);


    $remove = array("\n", "\r\n", "\r");
    for ($i = 0; $i < count($auRec); $i++) {

        $ordRec = $_objAdmin->_getSelectList2('table_invoice_detail AS D
          LEFT JOIN table_invoice AS Inv ON D.invoice_id=Inv.invoice_id', "D.price, SUM(D.quantity) as quantity,SUM(D.total) as invoice_amt,Inv.bill_date,Inv.invoice_id", '', " Inv.ref_order_id = '" . $auRec[$i]->order_id . "' AND item_id = '" . $auRec[$i]->item_id . "'  ");

        $pcs = '';
        $kg = '';
        $cases = '';
        $ipcs = '';
        $ikg = '';
        $icases = '';
        $invoiceQty = 0;

        foreach ($ordRec as $ordD) {

            if ($auRec[$i]->item_unit_type == "pcs") {
                $ipcs = $ordD->quantity;
                $ikg = (($auRec[$i]->item_size != 0) ? ROUND((($auRec[$i]->item_size * $ordD->quantity) / 1000), 2) : '');
                $icases = (($auRec[$i]->case_size != 0) ? ROUND(($ordD->quantity / $auRec[$i]->case_size), 2) : '');

            }

            if ($auRec[$i]->item_unit_type == "kg") {
                $ikg = $ordD->quantity;
                $ipcs = (($auRec[$i]->item_size != 0) ? ROUND((($ordD->quantity * 1000) / $auRec[$i]->item_size), 2) : '');
                $icases = (($auRec[$i]->case_size != 0) ? ROUND(($pcs / $auRec[$i]->case_size), 2) : '');


            }

            if ($auRec[$i]->item_unit_type == "cases") {
                $icases = $ordD->quantity;
                $ipcs = (($auRec[$i]->case_size != 0) ? ROUND(($auRec[$i]->case_size * $ordD->quantity), 2) : '');
                $ikg = (($auRec[$i]->item_size != 0) ? ROUND((($pcs * $auRec[$i]->item_size) / 1000), 2) : '');

            }
            $invoice_amt = $ordD->invoice_amt;
            $invoiceQty = $ordD->quantity;
            $invoice_date = $_objAdmin->_changeDate($ordD->bill_date);
            $invoice_no = $ordD->invoice_id;
        }


        if ($auRec[$i]->item_unit_type == "pcs") {
            $pcs = $auRec[$i]->quantity;
            $kg = (($auRec[$i]->item_size != 0) ? ROUND((($auRec[$i]->item_size * $auRec[$i]->quantity) / 1000), 2) : '');
            $cases = (($auRec[$i]->case_size != 0) ? ROUND(($auRec[$i]->quantity / $auRec[$i]->case_size), 2) : '');
            $discount = number_format((($auRec[$i]->ptr_price * $pcs) - $auRec[$i]->total), 2);
        }
        if ($auRec[$i]->item_unit_type == "kg") {
            $kg = $auRec[$i]->quantity;
            $pcs = (($auRec[$i]->item_size != 0) ? ROUND((($auRec[$i]->quantity * 1000) / $auRec[$i]->item_size), 2) : '');
            $cases = (($auRec[$i]->case_size != 0) ? ROUND(($pcs / $auRec[$i]->case_size), 2) : '');
            $discount = number_format((($auRec[$i]->ptr_price * $pcs) - $auRec[$i]->total), 2);
        }
        if ($auRec[$i]->item_unit_type == "cases") {
            $cases = $auRec[$i]->quantity;
            $pcs = (($auRec[$i]->case_size != 0) ? ROUND(($auRec[$i]->case_size * $auRec[$i]->quantity), 2) : '');
            $kg = (($auRec[$i]->item_size != 0) ? ROUND((($pcs * $auRec[$i]->item_size) / 1000), 2) : '');
            $discount = number_format((($auRec[$i]->ptr_price * $pcs) - $auRec[$i]->total), 2);
        }

        if ($invoiceQty == $auRec[$i]->quantity) {
            $status = "Fully Invoiced";
        } elseif ($invoiceQty > 0 && $invoiceQty < $auRec[$i]->quantity) {
            $status = "Partial Pending";
        } else {
            $status = "Fully Pending";
        }
//
        $data .= "" . $auRec[$i]->retailer_code . "\t"
            . $auRec[$i]->retailer_name . "\t"
            . $auRec[$i]->state_name . "\t"
            . $auRec[$i]->city_name . "\t"
            . $auRec[$i]->location_name . "\t"
            . $auRec[$i]->distributor_code . "\t"
            . $auRec[$i]->distributor_name . "\t"
            . $auRec[$i]->order_id . "\t"
            . ucwords(addslashes(preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace($remove, '', $auRec[$i]->item_code)))) . "\t"
            . ucwords(addslashes(preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace($remove, '', $auRec[$i]->item_name)))) . "\t"

            . $auRec[$i]->category_name . "\t"

            . ucwords(addslashes(preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace($remove, '', $auRec[$i]->brand_name)))) . "\t"
            . $pcs . "\t"
            . $kg . "\t"
            . $cases . "\t"

            . $auRec[$i]->total . "\t"
            . $invoice_date . "\t"
            . $invoice_no . "\t"
            . $ipcs . "\t"
            . $ikg . "\t"
            . $icases . "\t"
            . $invoice_amt . "\t"
            . $status . "\n";


    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"order status report.xls\"");
    echo $data;
    exit;
}
//Todo End: sudhanshu : 28 dec 2023 : Order status report
//Todo Start : sudhanshu : 26 dec 2023 survey feedback question master

if (isset($_GET['export_survey_feedback_master'])) {
    $data = " Serial Number \t Survey Code \t Survey Name\t Survey Start Date\tSurvey End Date\tRetailer Type\tDistributor Type\t State\t Created Date\tCompletion Status\t Status\n";
    //Todo Start : sudhanshu 12 june 2024 : add status filter
    $statusCondi = '';
    if (isset($_SESSION['MasSurFeed']) && $_SESSION['MasSurFeed'] != 'all' && $_SESSION['MasSurFeed'] != '') {
        $statusCondi = " AND sq.status ='" . $_SESSION['MasSurFeed'] . "'";
    }
    //Todo End : sudhanshu 12 june 2024 : add status filter

    $where = " sq.survey_id > 0 $statusCondi ";
    $auRec = $_objAdmin->_getSelectList('table_feedback_survey_master as sq 
    LEFT JOIN table_survey_ret_type_mapping as rtm ON rtm.survey_id = sq.survey_id and rtm.status="A"
    LEFT JOIN table_retailer_type_master as rt on rt.type_id = rtm.retailer_type_id
    LEFT JOIN table_survey_dist_type_mapping as dtm ON dtm.survey_id = sq.survey_id  and dtm.status="A"
    LEFT JOIN table_distributor_type_master as dt ON dt.dis_type_id = dtm.distributor_type_id
    LEFT JOIN table_survey_state_mapping as st ON st.survey_id = sq.survey_id and st.status="A"
    LEFT JOIN state as s ON s.state_id = st.state_id', "sq.*,GROUP_CONCAT(DISTINCT rt.type_name SEPARATOR '| ') as ret_type, GROUP_CONCAT(DISTINCT dt.dis_type_name SEPARATOR '| ') as dist_type,GROUP_CONCAT(DISTINCT s.state_name SEPARATOR '| ') as states", $rp, $where . ' GROUP BY sq.survey_id,rtm.survey_id,dtm.survey_id ' . $sort);


    if (is_array($auRec)) {

        for ($i = 0; $i < count($auRec); $i++) {
            $status = ($auRec[$i]->status == 'A') ? "Active" : "Inactive";
            $created_date = $_objAdmin->_changeDate($auRec[$i]->created_on);
            $updated_date = $_objAdmin->_changeDate($auRec[$i]->updated_on);

            $sts = $status;

            $cmpltedSts = (intval($auRec[$i]->is_verified) > 0) ? "Completed" : "Not Completed";

            $sortOrder = (($auRec[$i]->sort_order > 0) ? addslashes($auRec[$i]->sort_order) : '');

            //todo start : When Retailer Type, Distributor Type and State is defined as 'All'. In export details it is showing blank. : sudhanshu : 08 march 2024
            $retType = (isset($auRec[$i]->ret_type) && !empty($auRec[$i]->ret_type)) ? $auRec[$i]->ret_type : ((isset
                ($auRec[$i]->is_all_retailer_type)
                && $auRec[$i]->is_all_retailer_type > 0) ? 'All' : '');

            $disType = (isset($auRec[$i]->dist_type) && !empty($auRec[$i]->dist_type)) ? $auRec[$i]->dist_type : ((isset
                ($auRec[$i]->is_all_distributor_type)
                && $auRec[$i]->is_all_distributor_type > 0) ? 'All' : '');

            $retdisState = (isset($auRec[$i]->states) && !empty($auRec[$i]->states)) ? $auRec[$i]->states : ((isset
                ($auRec[$i]->is_all_state)
                && $auRec[$i]->is_all_state > 0) ? 'All' : '');


            //todo end :When Retailer Type, Distributor Type and State is defined as 'All'. In export details it is showing blank. : sudhanshu : 08 march 2024


            $sortOrder = $i + 1;
            $data .= '"' . $sortOrder . '"';
            $data .= "\t";

            $data .= '"' . $auRec[$i]->survey_code . '"';
            $data .= "\t";
            $data .= '"' . substr($auRec[$i]->survey_name, 0, 100) . '"';
            $data .= "\t";
            $data .= '"' . date('d M Y', strtotime($auRec[$i]->from_date)) . '"';
            $data .= "\t";
            $data .= '"' . date('d M Y', strtotime($auRec[$i]->to_date)) . '"';
            $data .= "\t";
            $data .= '"' . $retType . '"';
            $data .= "\t";
            $data .= '"' . $disType . '"';
            $data .= "\t";
            $data .= '"' . $retdisState . '"';
            $data .= "\t";
            $data .= '"' . $created_date . '"';
            $data .= "\t";
            $data .= '"' . $cmpltedSts . '"';
            $data .= "\t";
            $data .= '"' . $sts . '"';

            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"survey_feedback_listing.xls\"");
    echo $data;
    exit;
}
//Todo End: sudhanshu : 26 dec 2023 survey feedback question master

//product export
if (isset($_GET['export_distributor_product_report_new'])) {
    //echo hello;exit;
    $data = "" . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\tZone\tState\tCity\tRoute Name\t" . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['salesman'] . " Code\tOrder No.\tCategory Name\tItem Name\tItem Code\tBrand Name\tItem ERP Code\tItem PTR\tItem MRP\tQty in PCS\tQty in KG\tQty in Cases\tGrams\tDiscount\tOrdered Item Price\tDate of Order\tTime of Order\tRemarks\n";
    $sort = " ORDER BY date_of_order desc,time_of_order desc";

//		$_objArrayList = new ArrayList();
//		$salsList = $_objArrayList->SalesmanArrayList();
//		$salesman = $_objArrayList->getSalesCondition($salsList);
    if (isset($_SESSION['SalOrderList']) && $_SESSION['SalOrderList'] != '') {
        $salesman = " AND s.salesman_id IN (" . $_SESSION['SalOrderList'] . ")";
    } else if (($_SESSION['salesmanId'] > 0) && ($_SESSION['role_id'] > 0)) {
        $RoleBrands = $_objAdmin->getUserRoleBrand();
        if (!empty($RoleBrands)) {
            $salesman = " AND b.brand_id IN(" . $RoleBrands . ")";
        }
    } else {
        $_objArrayList = new ArrayList();
        $salsList = $_objArrayList->SalesmanArrayList();
        $salesman = $_objArrayList->getSalesCondition($salsList);
    }
    if ($_SESSION['categoryID'] != '' && $_SESSION['categoryID'] != 'all') {
        $condition .= " c.category_id = " . $_SESSION['categoryID'] . " AND ";
    }
    if ($_SESSION['itemID'] != '' && $_SESSION['itemID'] != 'all') {
        $condition .= " D.item_id = " . $_SESSION['itemID'] . " AND ";
    }
    if ($_SESSION['FromProductList'] != '') {
        $fromdate = "  O.date_of_order  >= '" . date('Y-m-d', strtotime($_SESSION['FromProductList'])) . "' AND ";
    } else {
        $fromdate = " O.date_of_order  >= '" . date('Y-m-d') . "' AND ";
    }
    if ($_SESSION['ToProductList'] != '') {
        $todate = " O.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToProductList'])) . "' ";
    } else {
        $todate = "  O.date_of_order <= '" . date('Y-m-d') . "'";
    }
//		$RoleBrands = $_objAdmin->getUserRoleBrand();
//		$brandCnd = '';
//		if(!empty($RoleBrands)){
//			$brandCnd = " and b.brand_id IN(".$RoleBrands.")";
//			if(isset($_SESSION['SalOrderList']) && $_SESSION['SalOrderList'] !='' && $_SESSION['SalOrderList'] !='All'){
//				$salesman =  " AND s.salesman_id IN (".$_SESSION['SalOrderList'].")";
//			}else{
//				$salesman ='';
//			}
//		}
    //$groupby  = " GROUP BY table_order_detail.item_id having SUM(table_order_detail.quantity)!=0";
    //$groupby  = " AND o.order_id in (select order_id from table_order where ostype in ('D','R') AND order_type = 'Yes' AND order_status='A' AND $fromdate $todate ) group by o.item_id having SUM(o.quantity)!=0 ";
//    $groupby = " GROUP BY D.item_id having D.item_id!='' ";
    $where = " D.type=1 and O.account_id='" . $_SESSION['accountId'] . "' $brandCnd and $condition $fromdate $todate $salesman ";
    $auRec = $_objAdmin->_getSelectList2('table_distributor_order_detail AS D 
		LEFT JOIN table_distributor_order AS O ON D.order_id = O.order_id
		LEFT JOIN table_item AS I ON D.item_id = I.item_id
		LEFT JOIN table_brands as b ON b.brand_id=I.brand_id
		LEFT JOIN table_category AS c ON c.category_id = I.category_id 
		LEFT JOIN table_price AS P ON D.item_id = P.item_id
		LEFT JOIN table_salesman AS s ON O.salesman_id = s.salesman_id
		
		LEFT JOIN table_distributors AS Dis ON O.distributor_id = Dis.distributor_id
		LEFT JOIN state as st on st.state_id=Dis.state
		LEFT JOIN city as ct on ct.city_id=Dis.city
		LEFT JOIN table_zone_state_mapping as szsm on szsm.state_id = Dis.state and szsm.account_id = Dis.account_id
        LEFT JOIN table_zone as sz on sz.zone_id = szsm.zone_id
		left join table_item_case_relationship as cr on cr.item_id=D.item_id
		left join table_cases as ca on ca.case_id=cr.case_id',
        'D.price, D.quantity,D.item_unit_type, D.total, I.item_name,I.item_code,I.item_size,ca.case_size,
		b.brand_name,I.item_erp_code,D.item_ptr_price as ptr_price,D.item_mrp_price as mrp_price, 
		O.order_id, s.salesman_name,s.employee_code, Dis.distributor_name,Dis.distributor_code,O.distributor_id,
		c.category_name, O.date_of_order, O.time_of_order,st.state_name,
		ct.city_name, D.remarks', '', $where . $sort);
    $disIdArr = [];
    if (is_array($auRec) && (count($auRec) > 0)) {
        foreach ($auRec as $key => $auRecData) {
            if (isset($auRecData->distributor_id) && !empty($auRecData->distributor_id) && (intval($auRecData->distributor_id) > 0)) {
                $disIdArr[] = $auRecData->distributor_id;
            }
        }
        $disIds = implode(',', array_unique($disIdArr));
        $getRetailerRoutes = $_objAdmin->_getSelectList("table_route_retailer as rr 
LEFT JOIN table_route as r ON r.route_id = rr.route_id", "rr.distributor_id, GROUP_CONCAT(DISTINCT r.route_name SEPARATOR ' | ') as route_names", "", " rr.distributor_id IN($disIds) GROUP BY rr.retailer_id ORDER BY rr.retailer_id ASC ");
        $retailerWiseRoutesArr = [];
        if (is_array($getRetailerRoutes) && (count($getRetailerRoutes) > 0)) {
            foreach ($getRetailerRoutes as $key => $retRoutes) {
                if (isset($retRoutes->route_names) && !empty($retRoutes->route_names)) {
                    $retailerWiseRoutesArr[$retRoutes->distributor_id] = $retRoutes->route_names;
                }
            }
        }
    }
    $remove = array("\n", "\r\n", "\r");
    for ($i = 0; $i < count($auRec); $i++) {
        $discount = 0;
//        if ($auRec[$i]->new == "1") {
//            $retailer_type = 'New Retailer';
//        } else {
//            $retailer_type = 'Existing Retailer';
//        }

        $pcs = '';
        $kg = '';
        $cases = '';
        if ($auRec[$i]->item_unit_type == "pcs") {
            $pcs = $auRec[$i]->quantity;
            $kg = (($auRec[$i]->item_size != 0) ? ROUND((($auRec[$i]->item_size * $auRec[$i]->quantity) / 1000), 2) : '');
            $cases = (($auRec[$i]->case_size != 0) ? ROUND(($auRec[$i]->quantity / $auRec[$i]->case_size), 2) : '');
            $discount = number_format((($auRec[$i]->price * $pcs) - $auRec[$i]->total), 2);
        }
        if ($auRec[$i]->item_unit_type == "kg") {
            $kg = $auRec[$i]->quantity;
            $pcs = (($auRec[$i]->item_size != 0) ? ROUND((($auRec[$i]->quantity * 1000) / $auRec[$i]->item_size), 2) : '');
            $cases = (($auRec[$i]->case_size != 0) ? ROUND(($pcs / $auRec[$i]->case_size), 2) : '');
            $discount = number_format((($auRec[$i]->price * $kg) - $auRec[$i]->total), 2);
        }
        if ($auRec[$i]->item_unit_type == "cases") {
            $cases = $auRec[$i]->quantity;
            $pcs = (($auRec[$i]->case_size != 0) ? ROUND(($auRec[$i]->case_size * $auRec[$i]->quantity), 2) : '');
            $kg = (($auRec[$i]->item_size != 0) ? ROUND((($pcs * $auRec[$i]->item_size) / 1000), 2) : '');
            $discount = number_format((($auRec[$i]->price * $cases) - $auRec[$i]->total), 2);
        }

//        $discount = number_format((($auRec[$i]->ptr_price * $auRec[$i]->quantity) - $auRec[$i]->total), 2);
        $routeName = (isset($retailerWiseRoutesArr[$auRec[$i]->distributor_id]) && !empty($retailerWiseRoutesArr[$auRec[$i]->distributor_id])) ? $retailerWiseRoutesArr[$auRec[$i]->distributor_id] : '';
        $data .= "" . $auRec[$i]->distributor_name . "\t"
            . $auRec[$i]->distributor_code . "\t"
            . $auRec[$i]->zone_name . "\t"
            . $auRec[$i]->state_name . "\t"
            . $auRec[$i]->city_name . "\t"

            . $routeName . "\t"
            . $auRec[$i]->salesman_name . "\t"
            . $auRec[$i]->employee_code . "\t"
            . $auRec[$i]->order_id . "\t"
            . $auRec[$i]->category_name . "\t"
            . ucwords(addslashes(preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace($remove, '', $auRec[$i]->item_name)))) . "\t"
            . ucwords(addslashes(preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace($remove, '', $auRec[$i]->item_code)))) . "\t"
            . ucwords(addslashes(preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace($remove, '', $auRec[$i]->brand_name)))) . "\t"
            . ucwords(addslashes(preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace($remove, '', $auRec[$i]->item_erp_code)))) . "\t"
            . $auRec[$i]->ptr_price . "\t"
            . $auRec[$i]->mrp_price . "\t"
            . $pcs . "\t"
            . $kg . "\t"
            . $cases . "\t"
            . $auRec[$i]->item_size . "\t"
            . $discount . "\t"
            . $auRec[$i]->total . "\t"
//            . $auRec[$i]->total . "\t"
            . $_objAdmin->_changeDate($auRec[$i]->date_of_order) . "\t"
            . $auRec[$i]->time_of_order . "\t"
            . ucwords(addslashes(preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace($remove, '', $auRec[$i]->remarks)))) . "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Distributor Product Report.xls\"");
    echo $data;
    exit;
}
//Ends product export

//Todo Start: sudhanshu : 03 Jan 2024  : Distributor Order status report
if (isset($_GET['export_distributor_order_invoice_status'])) {
    //echo hello;exit;
    $data = "" . $AliaseUsers['distributor'] . " Code\t" . $AliaseUsers['distributor'] . " Name\tState\tDistrict\tCity\tOrder No.\tItem Code\tItem Name\tItem Category\tBrand \tOrder Qty (Pices)\tOrder Qty (Kg)\tOrder Qty (cases)\tOrder Amount\tInvoice Date\tInvoice Number\tInvoice Qty In Pices\tInvoice Qty In Kg\tInvoice Qty In Cases\tInvoice Amount\tOrder Status\n";
    $sort = " ORDER BY date_of_order desc,time_of_order desc";

//		$_objArrayList = new ArrayList();
//		$salsList = $_objArrayList->SalesmanArrayList();
//		$salesman = $_objArrayList->getSalesCondition($salsList);

    if ($_SESSION['dissOrderList'] != '' && $_SESSION['dissOrderList'] != 'all') {
        $condition .= " Dis.distributor_id = " . $_SESSION['dissOrderList'] . " AND ";
    }

    if ($_SESSION['FromOrdList'] != '') {
        $fromdate = "  O.date_of_order  >= '" . date('Y-m-d', strtotime($_SESSION['FromOrdList'])) . "' AND ";
    } else {
        $fromdate = " O.date_of_order  >= '" . date('Y-m-d') . "' AND ";
    }
    if ($_SESSION['ToOrdList'] != '') {
        $todate = " O.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToOrdList'])) . "' ";
    } else {
        $todate = "  O.date_of_order <= '" . date('Y-m-d') . "'";
    }


    $where = "  O.account_id='" . $_SESSION['accountId'] . "' $brandCnd and $condition $fromdate $todate   ";
    $auRec = $_objAdmin->_getSelectList2('table_distributor_order_detail AS D 
    LEFT JOIN table_distributor_order AS O ON D.order_id = O.order_id
    
    LEFT JOIN table_item AS I ON D.item_id = I.item_id
    LEFT JOIN table_brands as b ON b.brand_id=I.brand_id
    LEFT JOIN table_category AS c ON c.category_id = I.category_id 
    LEFT JOIN table_price AS P ON D.item_id = P.item_id
    
   
    
    LEFT JOIN table_distributors AS Dis ON O.distributor_id = Dis.distributor_id
    LEFT JOIN state as st on st.state_id=Dis.state
    LEFT JOIN city as ct on ct.city_id=Dis.city
    LEFT JOIN table_location as loc on loc.location_id = Dis.location
    left join table_item_case_relationship as cr on cr.item_id=D.item_id
    left join table_cases as ca on ca.case_id=cr.case_id',
        'D.price, D.quantity,D.item_unit_type,D.total, I.item_name,I.item_code,I.item_size,ca.case_size,b.brand_name,
        I.item_id,
        Dis.distributor_name,Dis.distributor_code,O.distributor_id,c.category_name,O.order_id,O.date_of_order,O.time_of_order,st.state_name,ct.city_name,D.remarks,loc.location_name', '', $where . $sort);


    $remove = array("\n", "\r\n", "\r", ",");
    for ($i = 0; $i < count($auRec); $i++) {

        $ordRec = $_objAdmin->_getSelectList2('table_distributor_invoice_detail AS D
          LEFT JOIN table_distributor_invoice AS Inv ON D.invoice_id=Inv.invoice_id', "D.price, SUM(D.quantity) as quantity,SUM(D.total) as invoice_amt,Inv.bill_date,Inv.invoice_id", '', " Inv.ref_order_id = '" . $auRec[$i]->order_id . "' AND item_id = '" . $auRec[$i]->item_id . "'  ");

        $pcs = '';
        $kg = '';
        $cases = '';
        $ipcs = '';
        $ikg = '';
        $icases = '';
        $invoiceQty = 0;

        foreach ($ordRec as $ordD) {

            if ($auRec[$i]->item_unit_type == "pcs") {
                $ipcs = $ordD->quantity;
                $ikg = (($auRec[$i]->item_size != 0) ? ROUND((($auRec[$i]->item_size * $ordD->quantity) / 1000), 2) : '');
                $icases = (($auRec[$i]->case_size != 0) ? ROUND(($ordD->quantity / $auRec[$i]->case_size), 2) : '');

            }

            if ($auRec[$i]->item_unit_type == "kg") {
                $ikg = $ordD->quantity;
                $ipcs = (($auRec[$i]->item_size != 0) ? ROUND((($ordD->quantity * 1000) / $auRec[$i]->item_size), 2) : '');
                $icases = (($auRec[$i]->case_size != 0) ? ROUND(($pcs / $auRec[$i]->case_size), 2) : '');


            }

            if ($auRec[$i]->item_unit_type == "cases") {
                $icases = $ordD->quantity;
                $ipcs = (($auRec[$i]->case_size != 0) ? ROUND(($auRec[$i]->case_size * $ordD->quantity), 2) : '');
                $ikg = (($auRec[$i]->item_size != 0) ? ROUND((($pcs * $auRec[$i]->item_size) / 1000), 2) : '');

            }
            $invoice_amt = $ordD->invoice_amt;
            $invoiceQty = $ordD->quantity;
            $invoice_date = $_objAdmin->_changeDate($ordD->bill_date);
            $invoice_no = $ordD->invoice_id;
        }


        if ($auRec[$i]->item_unit_type == "pcs") {
            $pcs = $auRec[$i]->quantity;
            $kg = (($auRec[$i]->item_size != 0) ? ROUND((($auRec[$i]->item_size * $auRec[$i]->quantity) / 1000), 2) : '');
            $cases = (($auRec[$i]->case_size != 0) ? ROUND(($auRec[$i]->quantity / $auRec[$i]->case_size), 2) : '');
            $discount = number_format((($auRec[$i]->ptr_price * $pcs) - $auRec[$i]->total), 2);
        }
        if ($auRec[$i]->item_unit_type == "kg") {
            $kg = $auRec[$i]->quantity;
            $pcs = (($auRec[$i]->item_size != 0) ? ROUND((($auRec[$i]->quantity * 1000) / $auRec[$i]->item_size), 2) : '');
            $cases = (($auRec[$i]->case_size != 0) ? ROUND(($pcs / $auRec[$i]->case_size), 2) : '');
            $discount = number_format((($auRec[$i]->ptr_price * $pcs) - $auRec[$i]->total), 2);
        }
        if ($auRec[$i]->item_unit_type == "cases") {
            $cases = $auRec[$i]->quantity;
            $pcs = (($auRec[$i]->case_size != 0) ? ROUND(($auRec[$i]->case_size * $auRec[$i]->quantity), 2) : '');
            $kg = (($auRec[$i]->item_size != 0) ? ROUND((($pcs * $auRec[$i]->item_size) / 1000), 2) : '');
            $discount = number_format((($auRec[$i]->ptr_price * $pcs) - $auRec[$i]->total), 2);
        }

        if ($invoiceQty == $auRec[$i]->quantity) {
            $status = "Fully Invoiced";
        } elseif ($invoiceQty > 0 && $invoiceQty < $auRec[$i]->quantity) {
            $status = "Partial Pending";
        } else {
            $status = "Fully Pending";
        }
//
        $data .= "" . $auRec[$i]->distributor_code . "\t"
            . $auRec[$i]->distributor_name . "\t"
            . $auRec[$i]->state_name . "\t"
            . $auRec[$i]->city_name . "\t"
            . $auRec[$i]->location_name . "\t"

            . $auRec[$i]->order_id . "\t"
            . preg_replace('/[^a-zA-Z0-9-_\.(), ]/', '', str_replace($remove, '', $auRec[$i]->item_code)) . "\t"
            . ucwords(preg_replace('/[^a-zA-Z0-9-_\.(), ]/', '', str_replace($remove, '', $auRec[$i]->item_name))) . "\t"
            . ucwords(preg_replace('/[^a-zA-Z0-9-_\.(), ]/', '', str_replace($remove, '', $auRec[$i]->category_name))) . "\t"


            . ucwords(addslashes(preg_replace('/[^a-zA-Z0-9-_\.() ]/', '', str_replace($remove, '', $auRec[$i]->brand_name)))) . "\t"
            . $pcs . "\t"
            . $kg . "\t"
            . $cases . "\t"

            . $auRec[$i]->total . "\t"
            . $invoice_date . "\t"
            . $invoice_no . "\t"
            . $ipcs . "\t"
            . $ikg . "\t"
            . $icases . "\t"
            . $invoice_amt . "\t"
            . $status . "\n";


    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"distributor_order_status_report.xls\"");
    echo $data;
    exit;
}
//Todo End: sudhanshu : 28 dec 2023 : Order status report

// Todo Start : sudhanshu : stockist GRN status report : 09 Jan 2024

if (isset($_GET['export_stockist_grn_status'])) {
    $data = "" . $AliaseUsers['stockist'] . " Name \t " . $AliaseUsers['stockist'] . " Code\t GST No.\t PAN No. \t Bill No. \t Bill Date \t Category Name\t Brand Name \t Item Name \t Item Code \tReceived Quantity\tAccept Quantity\tPending Quantity\t Rate \t Invoice Value \t Taxable Value\t SGST Amount\t CGST Amount \t IGST AMOUNT\t CESS AMOUNT \tBill Status\t GRN Date\t Last Update Date \n";
    if ($_SESSION['stockistId'] != "" && $_SESSION['stockistId'] != "0") {
        $dis = " and st.stockist_id='" . $_SESSION['stockistId'] . "'";
    }
    //Added condition for role based access at brand lavel.
    $RoleBrands = $_objAdmin->getUserRoleBrand();
    $brandCnd = '';
    if (!empty($RoleBrands)) {
        $brandCnd = " b.brand_id IN(" . $RoleBrands . ")";
    }
    $where = $brandCnd;
    $auRec = $_objAdmin->_getSelectList('table_item_stockist_stk_inprocess AS s 
    LEFT JOIN table_cases AS clr ON clr.case_id = s.attribute_value_id
    LEFT JOIN table_category AS c ON c.category_id = s.category_id
    LEFT JOIN table_item AS i ON i.item_id = s.item_id
    left join table_brands as b on b.brand_id = i.brand_id
    LEFT JOIN table_stockist AS st ON st.stockist_id = s.stockist_id', "st.stockist_code, 
    st.stockist_name,st.gst_no,st.pan_no,b.brand_name,
    c.category_name, clr.case_size, i.item_name, i.item_code, s.acpt_stock_value,s.price, s.rec_stock_value, s.status, 
    s.bill_no,s.bill_date,(s.rec_stock_value-s.acpt_stock_value) as pending_qty,s.GRN_date,
    s.last_update_datetime,s.stockist_stk_inpro_id,s.sgst_amount,s.cgst_amount,
    s.igst_amount,s.cess_amount", "", $where . $dis . ' ORDER BY c.category_name ASC');

    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $status = ($auRec[$i]->status == 'A') ? "Accepted" : "In-Process";
            $data .= '"' . $auRec[$i]->stockist_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->stockist_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->gst_no . '"';
            $data .= "\t";
            $data .= '"' . strtoupper($auRec[$i]->pan_no) . '"';
            $data .= "\t";
            $data .= '"' . strtoupper($auRec[$i]->bill_no) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->bill_date . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->category_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->brand_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->rec_stock_value . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->acpt_stock_value . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->pending_qty . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->price . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->invoice_value . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->taxable_value . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->sgst_amount . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->cgst_amount . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->igst_amount . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->cess_amount . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\t";
            $data .= '"' . $_objAdmin->_changeDate($auRec[$i]->GRN_date) . '"';
            $data .= "\t";
            $data .= '"' . date('d M Y H:i:s', strtotime($auRec[$i]->last_update_datetime)) . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['stockist'] . "_grn_status_report.xls\"");
    echo $data;
    exit;
}

// Todo End : sudhanshu : stockist GRN status report : 09 Jan 2024

//Todo Start  : Sudhanshu : 10 Jan 2024 : Export Stockist Detail Order List
if (isset($_GET['export_stockist_detail_order_listing'])) {
    //echo hello;exit;
    $data = "Order For \t Date\t Time\t Order Number\tOrder By\tOrder By User Type\tRemark\t " . $AliaseUsers['stockist'] .
        " Name\t" .
        $AliaseUsers['stockist'] . " Code\tOrder Amount\tInvoice Status\t State\t City\t Market \t Address \t Order Status \t Cancel By User Type\t Cancel By\t Comments\t Reason\tCategory Name\tItem Name\tItem Code\tQuantity\tPrice\tTotal\n";
    $sort = " ORDER BY date_of_order desc,time_of_order desc";

    if ($_SESSION['FromOrderList'] != '') {
        $fromdate = " and so.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['FromOrderList'])) . "'";
    } else {
        $fromdate = " and so.date_of_order >= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['ToOrderList'] != '') {
        $todate = " and so.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToOrderList'])) . "'";
    } else {
        $todate = " and so.date_of_order <= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['stockistId'] != "A") {
        $disList = " so.stockist_id=" . $_SESSION['stockistId'] . " and";
    } else {
        $disList = "";
    }
    if ($_SESSION['OrderBy'] != '') {
        if ($_SESSION['OrderBy'] == 1) {
            $orderby = "";
        }
        if ($_SESSION['OrderBy'] == 2) {
            $orderby = " and so.order_status='A' ";
        }
        if ($_SESSION['OrderBy'] == 3) {
            $orderby = " and so.order_status='I' ";
        }
        if ($_SESSION['OrderBy'] == 4) {
            $orderby = " and so.order_status='D' ";
        }
    } else {
        $orderby = "";
    }


    if ($_SESSION['userLoginType'] == 7 && $_SESSION['stockistId'] > 0) {
        $distributorCond .= " AND so.stockist_id ='" . $_SESSION['stockistId'] . "' ";
    }
    $where = " so.account_id='" . $_SESSION['accountId'] . "' AND so.order_for='S' and so.order_type IN('Yes', 'Return', 'Adhoc')  $fromdate $todate  $distributorCond $orderby";
    $auRec = $_objAdmin->_getSelectList2('table_stockist_order_detail as o
            left join table_stockist_order as so on so.order_id = o.order_id
            left join table_item as i on i.item_id = o.item_id
            left join table_category as cat on cat.category_id = i.category_id
		
			left join table_stockist as s on s.stockist_id=so.stockist_id			
			left join state as st on st.state_id=s.state
			left join city as c on c.city_id=s.city 
			', "o.*,so.order_id,so.order_for,so.date_of_order,so.order_status,so.time_of_order,so.order_type,s.stockist_name,s.stockist_code,st.state_name,c.city_name, s.stockist_location, s.stockist_address,i.item_name,i.item_code,o.quantity,o.price,o.total,cat.category_name,so.order_by,so.total_invoice_amount,so.remark,so.cancel_by_user_type", $rp, $where . $sort, '');
//    echo "<pre>";
//    print_R($auRec);
//    die;
    $remove = array("\n", "\r", "\n \r", "\t", ",");
    for ($i = 0; $i < count($auRec); $i++) {
        if ($auRec[$i]->order_type == 'Yes') {
            if ($auRec[$i]->order_status == 'A') {
                $status = "New Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }
            if ($auRec[$i]->order_status == 'C') {
                $status = "Cancelled";
            }
        }

        if ($auRec[$i]->order_type == 'No') {
            $status = ($auRec[$i]->order_status == 'A') ? "No Order" : "Processed";
            $color = ($auRec[$i]->order_status == 'A') ? "I" : "P";
        }
        if ($auRec[$i]->order_type == 'Adhoc') {
            if ($auRec[$i]->order_status == 'A') {
                $status = "New Adhoc Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }

            if ($auRec[$i]->order_status == 'C') {
                $status = "Cancelled";
            }
        }
        if ($auRec[$i]->order_type == 'Return') {
            if ($auRec[$i]->order_status == 'A') {
                $status = "Return Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }

            if ($auRec[$i]->order_status == 'C') {
                $status = "Cancelled";
            }
        }

        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);

        switch (strtolower($auRec[$i]->order_for)) {
            case 's':
                $order_for = 'Stockist';
                break;
            case 'd':
                $order_for = 'Distributor';
                break;
        }

        //Todo Start : sudhanshu add order by column 15 march 2024

        if ($auRec[$i]->order_by == 'stockist') {
            $orderBy = 'Stockist';
            $orderTakeBy = $auRec[$i]->stockist_name;
        }
        if ($auRec[$i]->order_by == 'admin') {
            $orderBy = 'Admin';
            $orderTakeBy = 'Admin';
        }
        //Todo End : sudhanshu add order by column 15 march 2024

        //get total order qty : sudhanshu : 20 march 2024
        $totalQty = $_objAdmin->_getSelectList2('table_stockist_order as o 
	  inner join table_stockist_order_detail as od on o.order_id = od.order_id',
            "sum(od.quantity) as total_qty ", '', " o.order_id='" . $auRec[$i]->order_id . "' 
		
		and od.free_item_id = 0");

        $total_order_qty = $totalQty[0]->total_qty;

        //end get total order qty sudhanshu : 20 march 2024

        //now get  inovice status sudhanshu : 20 march 2024
        $invoicedQty = $_objAdmin->_getSelectList2('table_stockist_invoice as o 
	  inner join table_stockist_invoice_detail as od on o.invoice_id = od.invoice_id',
            "sum(acc_quantity) as invocie_qty", '', " o.ref_order_id='" . $auRec[$i]->order_id . "' ");

        $total_invoiced_qty = $invoicedQty[0]->invocie_qty;

        if ($auRec[$i]->order_status == 'A') {
            $orderStatus = 'Fully Pending';
        } else if (intval($total_order_qty) > intval($total_invoiced_qty)) {
            $orderStatus = 'Partially Invoiced';
        } else {
            $orderStatus = 'Fully Invoiced';
        }

        if ($auRec[$i]->order_status == 'C') {
            $orderStatus = '';
        }

        //Todo Start : Sudhanshu 02 May 2024 : add cancel by column
        $cancelByUserType = '';
        $cancel_by = '';
        if (strtolower($auRec[$i]->cancel_by_user_type) == 'admin') {
            $cancelByUserType = 'Admin';
            $cancel_by = 'Admin';
        } elseif (strtolower($auRec[$i]->cancel_by_user_type) == 'stockist') {
            $cancelByUserType = 'Stockist';
            $cancel_by = $auRec[$i]->stockist_name;
        }
        //Todo End : Sudhanshu 02 May 2024 : add cancel by column
        //end now get  inovice status sudhanshu : 20 march 2024
        $data .= $order_for . "\t" . $date_of_order . "\t" . $auRec[$i]->time_of_order . "\t" . $auRec[$i]->order_id
            . "\t" . $orderTakeBy .
            "\t" . $orderBy .
            "\t" . $auRec[$i]->remark .
            "\t" . str_replace($remove, ' ', $auRec[$i]->stockist_name) . "\t" .
            $auRec[$i]->stockist_code . "\t" . $auRec[$i]->total_invoice_amount . "\t" . $orderStatus . "\t" . $auRec[$i]->state_name . "\t" . $auRec[$i]->city_name . "\t" . str_replace($remove, ' ', $auRec[$i]->stockist_location) . "\t" . str_replace($remove, ' ', $auRec[$i]->stockist_address) . "\t" . $status . "\t" . $cancelByUserType . "\t" . $cancel_by . "\t" . $auRec[$i]->comments . "\t" . $auRec[$i]->tag_description . "\t" . $auRec[$i]->category_name . "\t" . $auRec[$i]->item_name . "\t" . $auRec[$i]->item_code . "\t" . $auRec[$i]->quantity . "\t" . $auRec[$i]->price . "\t" . $auRec[$i]->total . "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['stockist'] . " Detail Order List.xls\"");
    echo $data;
    exit;
}

//Todo End: Sudhanshu : 10 Jan 2024 : Export Stockist Detail Order List


//Todo Start : Sudhanshu : 10 Jan 2024 : Export retailer Invoice Detail  List
if (isset($_GET['export_retailer_invoice_detail_list'])) {
    //echo hello;exit;
    $data = "Order Date\tInvoice Date\tInvoice Number\t" . $AliaseUsers['retailer'] . " Code \t" . $AliaseUsers['retailer'] . " Name\tPayment Status\t" . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\tOrder Ref\tInvoice For \t" . $AliaseUsers['salesman'] . "\tBill Type \tBill Description  \tState\tDistrict\tMarket \tAddress\tInvoice Type\tInvoice Remark\tReturn Order Remark\tShipping Address\tBilling Address\tCategory\t Item Name\t Item Code\t Quantity\t Item Price\tRate %\tGST Amount\tTotal\n";
    if ($_SESSION['SalDisList'] != '') {
        $salesman = " and s.salesman_id='" . $_SESSION['SalDisList'] . "'";
    }
    if ($_SESSION['FromDisList'] != '') {
        $fromdate = " and o.bill_date >= '" . date('Y-m-d', strtotime($_SESSION['FromDisList'])) . "'";
    } else {
        $fromdate = " and o.bill_date >= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['ToDisList'] != '') {
        $todate = " and o.bill_date <= '" . date('Y-m-d', strtotime($_SESSION['ToDisList'])) . "'";
    } else {
        $todate = " and o.bill_date <= '" . date('Y-m-d') . "'";
    }

    if ($_SESSION['userLoginType'] == 3 && $_SESSION['distributorId'] > 0) {
        $distributorCond = " AND o.distributor_id ='" . $_SESSION['distributorId'] . "' ";
    }
    if (isset($_SESSION['invoice_type']) && $_SESSION['invoice_type'] != '' && $_SESSION['invoice_type'] != 'All') {
        if (strtolower($_SESSION['invoice_type']) == 'invoice') {
            $distributorCond .= " AND o.order_type='Yes' AND o.invoice_status='A' ";
        } elseif (strtolower($_SESSION['invoice_type']) == 'return') {
            $distributorCond .= " AND o.order_type='return' AND o.invoice_status='A' ";
        } elseif (strtolower($_SESSION['invoice_type']) == 'cancel') {
            $distributorCond .= " AND o.invoice_status='C' ";
        }
    }
    $where = " o.account_id='" . $_SESSION['accountId'] . "' AND o.order_for='R' AND o.order_status ='D' and o.distributor_id!=''   $fromdate $todate $distributorCond $orderby and o.account_id =" . $_SESSION['accountId'];
    $ordertime = ',time_of_order desc';
    $sortname = 'bill_date';
    $sortorder = 'desc';
    $sort = " ORDER BY $sortname $sortorder $ordertime";
    $groupBy = " ";

    $auRec = $_objAdmin->_getSelectList2('table_invoice as o
	LEFT JOIN table_invoice_detail as OD ON OD.invoice_id = o.invoice_id
    left join table_retailer as r on o.retailer_id=r.retailer_id
    left join table_item as i on i.item_id = OD.item_id
    left join table_category as cat on cat.category_id = i.category_id
    left join table_salesman as s on o.salesman_id=s.salesman_id   
    left join table_distributors as dd on dd.distributor_id=r.distributor_id
    left join state as st on st.state_id=r.state
    left join city as c on c.city_id=r.city
    left join table_retailer_address as sp ON sp.address_id=o.shipping_address
    left join table_retailer_address as bp ON bp.address_id=o.billing_address
    ', "o.*,r.retailer_name, r.retailer_code, r.retailer_location,
    r.lat as retlat,r.display_outlet,r.lng as retlng,s.salesman_name, dd.distributor_name,
    dd.distributor_code,dd.distributor_name,st.state_name,OD.quantity as qty,OD.price,OD.total as total,OD.gst_rate,OD.gst_amount,
    c.city_name,r.country as retailer_country,r.retailer_address, r.retailer_location,cat.category_name,i.item_name,i.item_code,sp.address as shipping_address,bp.address as billing_address,bp.zipcode as billing_zip,sp.zipcode as shipping_zip", $rp, $where . $groupBy . $sort, '');


    $remove = array("\n", "\r", "\n \r", "\t", ",");
    $gTotalAmount = 0;
    for ($i = 0; $i < count($auRec); $i++) {
        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);
        $date_of_invoice = $_objAdmin->_changeDate($auRec[$i]->bill_date);
        /* Bill Type */
        $billTYPE = '';
        $billTYPE = '';
        switch (strtolower($auRec[$i]->bill_type)) {
            case 'apc':
                $billTYPE = "Advance Payment Collection";
                $bill_desc = $auRec[$i]->bill_desc;
                break;
            case 'ac':
                $billTYPE = "Advance Cheque";
                $bill_desc = $auRec[$i]->bill_desc;
                break;
            case 'fp':
                $billTYPE = "Flexible Plan";
                $bill_desc = $auRec[$i]->bill_desc;
                break;
        }
        switch (strtolower($auRec[$i]->order_for)) {
            case 'r':
                $order_for = 'Retailer';
                break;
            case 'd':
                $order_for = 'Distributor';
                break;
        }
        if ($auRec[$i]->order_status == 'D' && $auRec[$i]->invoice_status == 'A') {
            $status = "Invoiced";
            $payment_sts = ($auRec[$i]->payment_received == 0) ? "Payment Pending" : "Payment Received";
            if ($auRec[$i]->order_type == 'Return') {
                $status = "Return Invoiced";

                $payment_sts = "";
            }
            $due_date = $_objAdmin->_changeDate($auRec[$i]->due_date);
        } elseif ($auRec[$i]->order_status == 'D' && $auRec[$i]->invoice_status == 'C') {
            $status = 'Cancelled Invoice';
            $payment_sts = "";
        }
        //Todo Start :sudhanshu 21 may 2024 : shipping address and billing address with zipcode also change in query
        $shipping_address = $auRec[$i]->shipping_address . ' ' . $auRec[$i]->shipping_zip;
        $billing_address = $auRec[$i]->billing_address . ' ' . $auRec[$i]->billing_zip;
        //Todo End :sudhanshu 21 may 2024 : shipping address and billing address with zipcode
        $data .= $date_of_order;
        $data .= "\t";
        $data .= $date_of_invoice;
        $data .= "\t";
        $data .= $auRec[$i]->bill_no;
        $data .= "\t";

        $data .= $auRec[$i]->retailer_code;
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->retailer_name);

        $data .= "\t";
        $data .= $payment_sts;
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->distributor_name);
        $data .= "\t";
        $data .= $auRec[$i]->distributor_code;
        $data .= "\t";
        $data .= $auRec[$i]->ref_order_id;
        $data .= "\t";
        $data .= $order_for;
        $data .= "\t";
        $data .= $auRec[$i]->salesman_name;
        $data .= "\t";
        $data .= $billTYPE;
        $data .= "\t";
        $data .= $bill_desc;
        $data .= "\t";
//        $data .= $auRec[$i]->region_name;
//        $data .= "\t";
        $data .= $auRec[$i]->state_name;
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->city_name);
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->retailer_location);
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->retailer_address);
        $data .= "\t";
        $data .= $status;
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->ref_inv_no);
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->remark);
        $data .= "\t";
        $data .= str_replace($remove, ' ', $shipping_address);
        $data .= "\t";
        $data .= str_replace($remove, ' ', $billing_address);
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->category_name);
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->item_name);
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->item_code);
        $data .= "\t";
        $data .= $auRec[$i]->qty;
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->price);
        $data .= "\t";
        $data .= $auRec[$i]->gst_rate;
        $data .= "\t";
        $data .= $auRec[$i]->gst_amount;
        $data .= "\t";
        $data .= $auRec[$i]->total;
        $data .= "\n";

    }

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Retailer Invoice Detail List.xls\"");
    echo $data;
    exit;
}

//Todo End : Sudhanshu : 10 Jan 2024 : Export retailer Invoice Detail  List

//Todo Start : Sudhanshu : 10 Jan 2024 : Export Distributor Invoice Detail  List
if (isset($_GET['export_distributor_invoice_detail_list'])) {
    //echo hello;exit;
    $data = "Order Date\tInvoice Date\tInvoice Number\t" . $AliaseUsers['distributor'] . " Name \t" . $AliaseUsers['distributor'] . " Code\tPayment Status\t" . $AliaseUsers['stockist'] . " Code\t" . $AliaseUsers['stockist'] . " Name\tOrder Ref\tRef Invoice Number\tInvoice For \t" . $AliaseUsers['salesman'] . "\tBill Type \tBill Description  \tState\tDistrict\tMarket \tAddress\tInvoice Type\tDate of Delivery\tShipping Address\tBilling Address\tRemarks\tCategory\t Item Name\t Item Code\t Quantity\t Item Price\tRate %\tGST Amount\tTotal\n";
    if ($_SESSION['SalDisList'] != '') {
        $salesman = " and s.salesman_id='" . $_SESSION['SalDisList'] . "'";
    }
    if ($_SESSION['FromDisList'] != '') {
        $fromdate = " and o.bill_date >= '" . date('Y-m-d', strtotime($_SESSION['FromDisList'])) . "'";
    } else {
        $fromdate = " and o.bill_date >= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['ToDisList'] != '') {
        $todate = " and o.bill_date <= '" . date('Y-m-d', strtotime($_SESSION['ToDisList'])) . "'";
    } else {
        $todate = " and o.bill_date <= '" . date('Y-m-d') . "'";
    }

    if ($_SESSION['userLoginType'] == 3 && $_SESSION['distributorId'] > 0) {
        $distributorCond = " AND o.distributor_id ='" . $_SESSION['distributorId'] . "' ";
    }
    //Todo Start : sudhanshu 03 may 2024 : stockist condition for multiple mappng also change in query
    if ($_SESSION['userLoginType'] == 7 && $_SESSION['stockistId'] > 0) {
        $stockistCond = " AND o.stockist_id ='" . $_SESSION['stockistId'] . "' ";
    }
    if ($_SESSION['dis'] != "A" && $_SESSION['dis'] > 0) {
        $distributorCond = " AND o.distributor_id=" . $_SESSION['dis'];
    }
    //Todo End : sudhanshu 03 may 2024 : stockist condition for multiple mappng
    if (isset($_SESSION['invoice_type']) && $_SESSION['invoice_type'] != '' && $_SESSION['invoice_type'] != 'All') {
        if (strtolower($_SESSION['invoice_type']) == 'invoice') {
            $distributorCond .= " AND o.order_type='Yes' AND o.invoice_status='A' ";
        } elseif (strtolower($_SESSION['invoice_type']) == 'return') {
            $distributorCond .= " AND o.order_type='return' AND o.invoice_status='A' ";
        } elseif (strtolower($_SESSION['invoice_type']) == 'cancel') {
            $distributorCond .= " AND o.invoice_status='C' ";
        }
    }
    $where = " o.account_id='" . $_SESSION['accountId'] . "' AND o.order_for='D' AND o.order_status ='D' and o.distributor_id!=''   $fromdate $todate $distributorCond $stockistCond $orderby and o.account_id =" . $_SESSION['accountId'];
    $ordertime = ',time_of_order desc';
    $sortname = 'bill_date';
    $sortorder = 'desc';
    $sort = " ORDER BY $sortname $sortorder $ordertime";
    $groupBy = "  ";

    $auRec = $_objAdmin->_getSelectList2('table_distributor_invoice as o
	LEFT JOIN table_distributor_invoice_detail as OD ON OD.invoice_id = o.invoice_id
    left join table_distributors as dd on o.distributor_id=dd.distributor_id
    left join table_item as i on i.item_id = OD.item_id
    left join table_category as cat on cat.category_id = i.category_id
    left join table_salesman as s on o.salesman_id=s.salesman_id   
    left join table_stockist as sto on sto.stockist_id=o.stockist_id
    left join state as st on st.state_id=dd.state
    left join city as c on c.city_id=dd.city
    left join table_distributor_address as ad on ad.address_id=o.shipping_address
    left join table_distributor_address as ad2 on ad2.address_id=o.billing_address
    ', "o.*,
    s.salesman_name, dd.distributor_name,
    dd.distributor_code,dd.distributor_name,st.state_name,OD.quantity as qty,OD.price,OD.total as total,sto.stockist_name,sto.stockist_code,
    c.city_name,dd.distributor_address, dd.distributor_location,cat.category_name,i.item_name,i.item_code,OD.gst_rate,OD.gst_amount,ad.address as shipping_address,ad2.address as billing_address,ad.zipcode as shipping_zip,ad2.zipcode as billing_zip", $rp, $where . $groupBy . $sort, '');


    $remove = array("\n", "\r", "\n \r", "\t", ",");
    $gTotalAmount = 0;
    for ($i = 0; $i < count($auRec); $i++) {
        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);
        $date_of_invoice = $_objAdmin->_changeDate($auRec[$i]->bill_date);
        /* Bill Type */
        $billTYPE = '';
        $billTYPE = '';
        switch (strtolower($auRec[$i]->bill_type)) {
            case 'apc':
                $billTYPE = "Advance Payment Collection";
                $bill_desc = $auRec[$i]->bill_desc;
                break;
            case 'ac':
                $billTYPE = "Advance Cheque";
                $bill_desc = $auRec[$i]->bill_desc;
                break;
            case 'fp':
                $billTYPE = "Flexible Plan";
                $bill_desc = $auRec[$i]->bill_desc;
                break;
        }
        switch (strtolower($auRec[$i]->order_for)) {
            case 'r':
                $order_for = 'Retailer';
                break;
            case 'd':
                $order_for = 'Distributor';
                break;
        }
        if ($auRec[$i]->order_status == 'D' && $auRec[$i]->invoice_status == 'A') {
            $status = "Invoiced";
            $payment_sts = ($auRec[$i]->payment_received == 0) ? "Payment Pending" : "Payment Received";
            if ($auRec[$i]->order_type == 'Return') {
                $status = "Return Invoiced";

                $payment_sts = "";
            }
            $due_date = $_objAdmin->_changeDate($auRec[$i]->due_date);
        } elseif ($auRec[$i]->order_status == 'D' && $auRec[$i]->invoice_status == 'C') {
            $status = 'Cancelled Invoice';
            $payment_sts = "";
        }
        //Todo Start :sudhanshu 21 may 2024 : shipping address and billing address also change in query
        $shipping_address = $auRec[$i]->shipping_address . ' ' . $auRec[$i]->shipping_zip;
        $billing_address = $auRec[$i]->billing_address . ' ' . $auRec[$i]->billing_zip;
        //Todo End :sudhanshu 21 may 2024 : shipping address and billing address also change in query
        $delivery_date = $_objAdmin->_changeDate($auRec[$i]->delivery_date);
        $data .= $date_of_order;
        $data .= "\t";
        $data .= $date_of_invoice;
        $data .= "\t";
        $data .= $auRec[$i]->bill_no;
        $data .= "\t";

        $data .= str_replace($remove, ' ', $auRec[$i]->distributor_name);
        $data .= "\t";
        $data .= $auRec[$i]->distributor_code;

        $data .= "\t";
        $data .= $payment_sts;
        $data .= "\t";
        $data .= $auRec[$i]->stockist_code;
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->stockist_name);
        $data .= "\t";
        $data .= $auRec[$i]->ref_order_id;
        $data .= "\t";
        //Todo Start : sudhanshu 31 may 2024 : add ref invoice number
        $data .= $auRec[$i]->ref_inv_no;
        $data .= "\t";
        //Todo Start : sudhanshu 31 may 2024 : add ref invoice number
        $data .= $order_for;
        $data .= "\t";
        $data .= $auRec[$i]->salesman_name;
        $data .= "\t";
        $data .= $billTYPE;
        $data .= "\t";
        $data .= $bill_desc;
        $data .= "\t";
//        $data .= $auRec[$i]->region_name;
//        $data .= "\t";
        $data .= $auRec[$i]->state_name;
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->city_name);
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->distributor_location);
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->distributor_address);
        $data .= "\t";
        $data .= $status;
        $data .= "\t";

        $data .= $delivery_date;
        $data .= "\t";
        //Todo start : sudhanshu 13 may 2024 : add shipping and billing address
        $data .= str_replace($remove, ' ', $shipping_address);
        $data .= "\t";
        $data .= str_replace($remove, ' ', $billing_address);
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->remark);
        $data .= "\t";
        //Todo start : sudhanshu 13 may 2024 : add shipping and billing address
        $data .= str_replace($remove, ' ', $auRec[$i]->category_name);
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->item_name);
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->item_code);
        $data .= "\t";
        $data .= $auRec[$i]->qty;
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->price);
        $data .= "\t";
        $data .= $auRec[$i]->gst_rate;
        $data .= "\t";
        $data .= $auRec[$i]->gst_amount;
        $data .= "\t";
        $data .= $auRec[$i]->total;
        $data .= "\n";

    }

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Distributor Invoice Detail List.xls\"");
    echo $data;
    exit;
}

//Todo Start : Sudhanshu : 10 Jan 2024 : Export Distribuotor Invoice Detail  List

//Todo Start : Sudhanshu : 11 Jan 2024 : Export Distributor Invoice Detail  List
if (isset($_GET['export_stockist_invoice_detail_list'])) {
    //echo hello;exit;
    $data = "Order Date\tInvoice Date\tInvoice Number \tPayment Status\t" . $AliaseUsers['stockist'] . " Code\t" . $AliaseUsers['stockist'] . " Name\tOrder Ref\tInvoice For\tBill Type \tBill Description  \tState\tDistrict\tMarket \tAddress\tInvoice Type\tDate of Delivery\tShipping address\tBilling Address\tRemarks\tCategory\t Item Name\t Item Code\t Quantity\t Item Price\tRate %\tGST Amount\tTotal\n";
    if ($_SESSION['SalDisList'] != '') {
        $stockist = " and o.stockist_id='" . $_SESSION['SalDisList'] . "'";
    }
    // Todo Start : Jatin : show its data only 24 June 2024
    if (isset($_SESSION['stockistId']) && $_SESSION['stockistId'] > 0) {
        $stockistCond = " AND o.stockist_id ='" . $_SESSION['stockistId'] . "' ";
    }
    // Todo End : Jatin : show its data only 24 June 2024
    if ($_SESSION['FromDisList'] != '') {
        $fromdate = " and o.bill_date >= '" . date('Y-m-d', strtotime($_SESSION['FromDisList'])) . "'";
    } else {
        $fromdate = " and o.bill_date >= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['ToDisList'] != '') {
        $todate = " and o.bill_date <= '" . date('Y-m-d', strtotime($_SESSION['ToDisList'])) . "'";
    } else {
        $todate = " and o.bill_date <= '" . date('Y-m-d') . "'";
    }

    if ($_SESSION['userLoginType'] == 3 && $_SESSION['distributorId'] > 0) {
        $distributorCond = " AND o.distributor_id ='" . $_SESSION['distributorId'] . "' ";
    }
    if (isset($_SESSION['invoice_type']) && $_SESSION['invoice_type'] != '' && $_SESSION['invoice_type'] != 'All') {
        if (strtolower($_SESSION['invoice_type']) == 'invoice') {
            $distributorCond .= " AND o.order_type='Yes' AND o.invoice_status='A' ";
        } elseif (strtolower($_SESSION['invoice_type']) == 'return') {
            $distributorCond .= " AND o.order_type='return' AND o.invoice_status='A' ";
        } elseif (strtolower($_SESSION['invoice_type']) == 'cancel') {
            $distributorCond .= " AND o.invoice_status='C' ";
        }
    }
    $where = " o.account_id='" . $_SESSION['accountId'] . "' AND o.order_for='D' AND o.order_status ='D' and o.stockist_id!='' $stockistCond   $fromdate $todate $distributorCond $orderby $stockist and o.account_id =" . $_SESSION['accountId'];
    $ordertime = ',time_of_order desc';
    $sortname = 'bill_date';
    $sortorder = 'desc';
    $sort = " ORDER BY $sortname $sortorder $ordertime";
    $groupBy = "  ";

    $auRec = $_objAdmin->_getSelectList('table_stockist_invoice as o
	LEFT JOIN table_stockist_invoice_detail as OD ON OD.invoice_id = o.invoice_id
    left join table_stockist as sto on sto.stockist_id=o.stockist_id
    left join table_item as i on i.item_id = OD.item_id
    left join table_category as cat on cat.category_id = i.category_id
 
    left join state as st on st.state_id=sto.state
    left join city as c on c.city_id=sto.city
    left join table_stockist_address as ad on ad.address_id=o.shipping_address
    left join table_stockist_address as ad2 on ad2.address_id=o.billing_address', "o.*, 
   st.state_name,OD.quantity as qty,OD.price,OD.total as total,sto.stockist_name,sto.stockist_code,OD.gst_rate,OD.gst_amount,
    c.city_name,sto.stockist_address, sto.stockist_location,cat.category_name,i.item_name,i.item_code,ad.address as shipping_address,ad2.address as billing_address,ad.zipcode as shipping_zip,ad2.zipcode as billing_zip", $rp, $where . $groupBy . $sort, '');

    //echo "<pre>";print_r($auRec);die;
    $remove = array("\n", "\r", "\n \r", "\t", ",");
    $gTotalAmount = 0;
    for ($i = 0; $i < count($auRec); $i++) {
        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);
        $date_of_invoice = $_objAdmin->_changeDate($auRec[$i]->bill_date);
        /* Bill Type */
        $billTYPE = '';
        $billTYPE = '';
        switch (strtolower($auRec[$i]->bill_type)) {
            case 'apc':
                $billTYPE = "Advance Payment Collection";
                $bill_desc = $auRec[$i]->bill_desc;
                break;
            case 'ac':
                $billTYPE = "Advance Cheque";
                $bill_desc = $auRec[$i]->bill_desc;
                break;
            case 'fp':
                $billTYPE = "Flexible Plan";
                $bill_desc = $auRec[$i]->bill_desc;
                break;
        }
        switch (strtolower($auRec[$i]->order_for)) {
            case 'r':
                $order_for = 'Retailer';
                break;
            case 'd':
                $order_for = 'Distributor';
                break;
        }
        if ($auRec[$i]->order_status == 'D' && $auRec[$i]->invoice_status == 'A') {
            $status = "Invoiced";
            $payment_sts = ($auRec[$i]->payment_received == 0) ? "Payment Pending" : "Payment Received";
            if ($auRec[$i]->order_type == 'Return') {
                $status = "Return Invoiced";

                $payment_sts = "";
            }
            $due_date = $_objAdmin->_changeDate($auRec[$i]->due_date);
        } elseif ($auRec[$i]->order_status == 'D' && $auRec[$i]->invoice_status == 'C') {
            $status = 'Cancelled Invoice';
            $payment_sts = "";
        }
        //Todo Start : sudhanshu 21 may 2024 : shiiping and billing address chnage in query also
        $shipping_address = $auRec[$i]->shipping_address . ' ' . $auRec[$i]->shipping_zip;
        $billing_address = $auRec[$i]->billing_address . ' ' . $auRec[$i]->billing_zip;
        //Todo End : sudhanshu 21 may 2024 : shiiping and billing address chnage in query also
        $delivery_date = $_objAdmin->_changeDate($auRec[$i]->delivery_date);
        $data .= $date_of_order;
        $data .= "\t";
        $data .= $date_of_invoice;
        $data .= "\t";
        $data .= $auRec[$i]->bill_no;
        $data .= "\t";


        $data .= $payment_sts;
        $data .= "\t";
        $data .= $auRec[$i]->stockist_code;
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->stockist_name);
        $data .= "\t";
        $data .= $auRec[$i]->ref_order_id;
        $data .= "\t";
        $data .= $order_for;
        $data .= "\t";

        $data .= $billTYPE;
        $data .= "\t";
        $data .= $bill_desc;
        $data .= "\t";
//        $data .= $auRec[$i]->region_name;
//        $data .= "\t";
        $data .= $auRec[$i]->state_name;
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->city_name);
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->stockist_location);
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->stockist_address);
        $data .= "\t";
        $data .= $status;
        $data .= "\t";

        $data .= $delivery_date;
        $data .= "\t";
        //Todo Start : sudhanshu 14 may 2024 : add shipping and billing address
        $data .= str_replace($remove, ' ', $shipping_address);
        $data .= "\t";
        $data .= str_replace($remove, ' ', $billing_address);
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->remark);
        $data .= "\t";
        //Todo End : sudhanshu 14 may 2024 : add shipping and billing address
        $data .= str_replace($remove, ' ', $auRec[$i]->category_name);
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->item_name);
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->item_code);
        $data .= "\t";
        $data .= $auRec[$i]->qty;
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->price);
        $data .= "\t";
        $data .= $auRec[$i]->gst_rate;
        $data .= "\t";
        $data .= $auRec[$i]->gst_amount;
        $data .= "\t";
        $data .= $auRec[$i]->total;
        $data .= "\n";

    }

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Stockist Invoice Detail List.xls\"");
    echo $data;
    exit;
}

//Todo Start : Sudhanshu : 11 Jan 2024 : Export Distribuotor Invoice Detail  List
if (isset($_GET['export_distributor_claim_report'])) {

    $data = "Distributor Code\tDistributor Name\tStockist Name\tInvoice Date\tInvoice Number\tRetailer Code\tRetailer Name\tSalesman Code\tSalesman Name\tItem Code\tItem Name\tOrdered Qty\tMRP\tPTR\tFree Issues\tDiscount %\tDiscount Amount(Per Unit)\tTotal Discount Amount\tPTR After Discount(Per Unit)\tDLP(Including Tax)\tDistributor Margin\tClaim Amount\tTotal Claim Amount\n";
    $sort = " ORDER BY o.bill_date,o.invoice_id,od.item_id";
    if ($_SESSION['retailer'] != '') {
        $retailer = " and o.retailer_id='" . $_SESSION['retailer'] . "'";
    }
    if ($_SESSION['FromDisList'] != '') {
        $fromdate = " and o.bill_date >= '" . date('Y-m-d', strtotime($_SESSION['FromDisList'])) . "'";
        $frombilldate = " and di.last_update_date >= '" . date('Y-m-d', strtotime($_SESSION['FromDisList'])) . "'";
    } else {
        $fromdate = " and o.bill_date >= '" . date('Y-m-d') . "'";
        $frombilldate = " and di.last_update_date >= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['ToDisList'] != '') {
        $todate = " and o.bill_date <= '" . date('Y-m-d', strtotime($_SESSION['ToDisList'])) . "'";
        $tobilldate = " and di.last_update_date <= '" . date('Y-m-d', strtotime($_SESSION['ToDisList'])) . "'";
    } else {
        $todate = " and o.bill_date <= '" . date('Y-m-d') . "'";
        $tobilldate = " and di.last_update_date <= '" . date('Y-m-d') . "'";
    }

    if ($_SESSION['distributorId'] > 0) {
        $distributorCond = " AND o.distributor_id ='" . $_SESSION['distributorId'] . "' ";
    }

    $where = " o.account_id=" . $_SESSION['accountId'] . " AND o.invoice_status='A' and o.order_type IN('Yes','Adhoc') and o.distributor_id!='' 
		 $fromdate $todate $frombilldate $tobilldate $distributorCond $retailer";

    $auRec = $_objAdmin->_getSelectList2('view_discounted_invoice as di
			inner join table_invoice as o on o.order_id=di.invoice_id
			inner join table_invoice_detail as od on od.invoice_id=o.order_id
			left join table_item as i on i.item_id=od.item_id
			LEFT JOIN table_item_gst AS ig ON ig.item_id = i.item_id
			left join table_price as p on p.item_id=i.item_id
			left join table_retailer as r on r.retailer_id=o.retailer_id
			left join table_salesman as s on s.salesman_id = o.salesman_id
			left join table_distributors as d on d.distributor_id=o.distributor_id
			left join table_stockist as stk on stk.stockist_id = d.stockist_id',
        "o.invoice_id,o.bill_no,o.bill_date,o.order_type,o.invoice_status,o.distributor_id,o.retailer_id,s.salesman_name , s.employee_code,
			od.item_id,od.price as ordered_price,od.quantity,od.discount_desc,od.discount_type,od.custom_discount_amount,stk.stockist_code,stk.stockist_name,
			od.custom_discount_percentage,
			i.item_name,i.item_code,ifnull(ig.tax,0) as dis_tax,r.retailer_name,r.retailer_code,d.distributor_name,d.distributor_code,
			p.item_dp as item_mrp,p.item_mrp as item_ptr,ROUND(ifnull((p.dist_price+((p.dist_price*ifnull(ig.tax,0))/100)),0),2) as dist_price,if((od.discount_type = 3 AND od.free_item_id >0),'FOC','') as free_issues",
        '', $where . $sort, '');
    //Todo Start: sudhanshu 02 May 2024 : get multiple mapped stockist
    $mappedStk = $_objAdmin->_getSelectList('table_stockist_distributor_mapping  as sm
            
            left join table_stockist AS s ON s.stockist_id = sm.stockist_id
            ',
        'GROUP_CONCAT(s.stockist_name," (",s.stockist_code,") " SEPARATOR "|") as stocksit_name,distributor_id', '', ' GROUP BY sm.distributor_id');

    $distributorMappedStokckist = [];
    if (is_array($mappedStk) && count($mappedStk) > 0) {
        foreach ($mappedStk as $disStokist) {
            $distributorMappedStokckist[$disStokist->distributor_id] = $disStokist->stocksit_name;
        }
    }

    //Todo End: sudhanshu 02 May 2024 : get multiple mapped stockist
    $remove = array("\n", "\r", "\n \r", "\t", ",");
    $gTotalAmount = 0;
    for ($i = 0; $i < count($auRec); $i++) {
        $PTR_After_Discount = $DistributorMargin = $ClaimAmount = $TotalClaimAmount = 0;
        $date_of_invoice = $_objAdmin->_changeDate($auRec[$i]->bill_date);
        if ($auRec[$i]->custom_discount_percentage > 0) {
            $PTR_After_Discount = ROUND(($auRec[$i]->item_ptr - ($auRec[$i]->custom_discount_amount / $auRec[$i]->quantity)), 2);
            $DistributorMargin = ROUND((($PTR_After_Discount / 110) * 10), 2); //"((Price After Discount/(110))*10)";
            $ClaimAmount = ROUND((($auRec[$i]->dist_price - $PTR_After_Discount) + $DistributorMargin), 2); // DLP-PTR After Discount+Distributor Margin of per unit;
            $TotalClaimAmount = ROUND(($ClaimAmount * $auRec[$i]->quantity), 2);
        } else if ($auRec[$i]->free_issues == 'FOC') {
            $PTR_After_Discount = ROUND($auRec[$i]->item_ptr, 2);
            $DistributorMargin = 0;
            $ClaimAmount = 0; //ROUND($auRec[$i]->dist_price,2);
            $TotalClaimAmount = 0; //ROUND(($ClaimAmount*$auRec[$i]->quantity),2);

        } else if ($auRec[$i]->free_issues != 'FOC' && $auRec[$i]->custom_discount_percentage == 0) {
            $PTR_After_Discount = ROUND(($auRec[$i]->item_ptr), 2);
            $DistributorMargin = $ClaimAmount = $TotalClaimAmount = 0;

        }
        $data .= $auRec[$i]->distributor_code;
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->distributor_name);
        $data .= "\t";

        $data .= str_replace($remove, ' ', $distributorMappedStokckist[$auRec[$i]->distributor_id]);
        $data .= "\t";
        $data .= $date_of_invoice;
        $data .= "\t";
        $data .= $auRec[$i]->bill_no;
        $data .= "\t";
        $data .= $auRec[$i]->retailer_code;
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->retailer_name);
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->employee_code);
        $data .= "\t";
        $data .= str_replace($remove, ' ', $auRec[$i]->salesman_name);
        $data .= "\t";
        $data .= $auRec[$i]->item_code;
        $data .= "\t";
        $data .= $auRec[$i]->item_name;
        $data .= "\t";
        $data .= $auRec[$i]->quantity;
        $data .= "\t";
        $data .= $auRec[$i]->item_mrp;
        $data .= "\t";
        $data .= $auRec[$i]->item_ptr;
        $data .= "\t";
        $data .= $auRec[$i]->free_issues;
        $data .= "\t";
        $data .= $auRec[$i]->custom_discount_percentage;
        $data .= "\t";
        $data .= ROUND(($auRec[$i]->custom_discount_amount / $auRec[$i]->quantity), 2);
        $data .= "\t";
        $data .= $auRec[$i]->custom_discount_amount;
        $data .= "\t";
        $data .= $PTR_After_Discount;
        $data .= "\t";
        $data .= $auRec[$i]->dist_price;
        $data .= "\t";
        $data .= $DistributorMargin;
        $data .= "\t";
        $data .= $ClaimAmount;
        $data .= "\t";
        $data .= $TotalClaimAmount;
        $data .= "\n";
    }

    $data .= "\n";
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Distributor_Claim_Report.xls\"");
    echo $data;
    exit;
}

//Todo Start : sudhanshu : 28 Jan 2024 Salesman distributor month wise productivity report day wise

if (isset($_GET['export_salesman_dis_month_wise_productivity_report'])) {
    $data = " Month \tYear\t Salesman Name \t Distributor Name\t Planned Customers\t Visited Customers\tProductive Calls\t Success\t No. of Sold Items\t Target\tAchieved\tAchieve %\n";

    $salCond = "";
    if ($_SESSION['salRepID'] != "") {
        $salCond = " AND s.salesman_id = '" . $_SESSION['salRepID'] . "' ";
    } else {
        $salCond = $salesman;
        $_SESSION['salsInCondi'] = $salesman;
    }


    $salesmanIdList = array();
    $salArr = $_objAdmin->_getSelectList('table_salesman AS s 
        LEFT join state as st on st.state_id = s.state
        left join city as ci on ci.city_id = s.city
        LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
        LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
        LEFT JOIN table_salesman_hierarchy AS H2 ON H2.hierarchy_id = SH.rpt_hierarchy_id
        LEFT JOIN table_salesman AS S2 ON S2.salesman_id = SH.rpt_user_id
        ', ' s.salesman_id, s.salesman_name ,s.employee_code, H.description AS des1, H2.description AS des2, S2.salesman_name AS rptPerson, st.state_name, ci.city_name', '', " s.status='A' AND s.salesman_id>0 AND s.salesman_name !='' $salCond ORDER BY s.salesman_name");
    if (is_array($salArr)) {
        foreach ($salArr as $value) {
            $salesmanIdList[] = $value->salesman_id;
            $salesmanList[$value->salesman_id] = array('salesman_id' => $value->salesman_id, 'employee_code' => $value->employee_code, 'salesman_name' => $value->salesman_name, 'des1' => $value->des1, 'des2' => $value->des2, 'rptPerson' => $value->rptPerson, 'state_name' => $value->state_name, 'city_name' => $value->city_name);
            if ($_SESSION['salRepID'] != "") {
                $sal_name = $value->salesman_name;
            } else {
                $sal_name = 'All';
            }
        }
    } else {
        $salArr = "";
    }


    $disIdsList = array();
    if ((is_array($salesmanList)) && (count($salesmanList) > 0)) {
        foreach ($salesmanList as $salVal) {

            $disIdArr = $_objAdmin->getRouteWiseDistributors($salVal['salesman_id'], $_SESSION['accountId']);

            if (is_array($disIdArr) && (count($disIdArr) > 0)) {

                foreach ($disIdArr as $diKey => $disVal) {
                    $disIdsList[$salVal['salesman_id']][] = $disVal;
                }
            }

            $retIdArr = $_objAdmin->getRouteWiseRetailers($salVal['salesman_id'], $_SESSION['accountId']);

            if (is_array($retIdArr) && (count($retIdArr) > 0)) {

                foreach ($retIdArr as $retKey => $retVal) {
                    $retIdsList[$salVal['salesman_id']][] = $retVal;
                }

            }

        }


//distributor id list && retailer id list
//echo "<pre>".count($disIdsList); print_r($disIdsList);die;
        $distributorIdList = array();
        $distributorList = array();
        if (is_array($disIdsList) && count($disIdsList) > 0) {
            foreach ($disIdsList as $key => $disId) {

                foreach ($disId as $distVal) {
                    $distributorIdList[] = $distVal;
                    $distArrr = $_objAdmin->_getSelectList('table_distributors AS r              
            ', ' r.distributor_id,r.distributor_name', '', " distributor_id = '" . $distVal . "' ");

                    foreach ($distArrr as $dis) {
                        $distributorList[$key] = $dis;
                    }
                }
            }
        }

        $retailerIdList = array();
        foreach ($retIdsList as $key => $retaId) {

            foreach ($retaId as $retVal) {
                $retailerIdList[] = $retVal;


            }
        }
        $disIds = implode(',', $distributorIdList);
        $diswhere = " AND r.distributor_id IN($disIds) ";

        $retIds = implode(',', $retailerIdList);
        $retwhere = " AND r.retailer_id IN($retIds) ";


//end distributor id list && retailer id list


    }


    if (is_array($disIdsList) && count($disIdsList) > 0) {

        $distArrr = $_objAdmin->_getSelectList('table_distributors AS r              
    ', ' r.distributor_id,r.distributor_name', '', " $diswhere ");

    }

    $distNameArr = array();
    foreach ($distArrr as $disname) {
        $distNameArr[$disname->distributor_id] = $disname->distributor_name;
    }

    $retArr = $_objAdmin->_getSelectList('table_retailer AS r              
        ', ' r.distributor_id,r.retailer_id,r.retailer_name', '', " $retwhere ");

    $mapDis = array();
    if (!empty($retArr) && count($retArr) > 0) {

        foreach ($retArr as $retData) {
            $mapDis[$retData->distributor_id][] = $retData;
        }

    }

    $startDate = date('Y-m-d', strtotime($_SESSION['disCyear'] . '-' . $_SESSION['dismonth']));

    $endDate = date('Y-m-t', strtotime($_SESSION['disCyear'] . '-' . $_SESSION['dismonth']));


    if (is_array($disIdsList) && count($disIdsList) > 0) {
        $OrderRes = $_objAdmin->_getSelectList("table_order as o",
            'o.salesman_id, o.distributor_id,o.date_of_order,COUNT(DISTINCT(o.order_id)) as ttl_retailer_placed_order',
            '', " o.date_of_order >= '" . $startDate . "'
        AND o.date_of_order <= '" . $endDate . "' AND o.salesman_id IN(" . implode(',', $salesmanIdList) . ")
      AND  o.distributor_id IN(" . implode(',', array_unique($distributorIdList)) . ")
                            AND o.retailer_id >0 AND o.order_type !='No' AND o.order_status IN('A','I')
                             group by o.salesman_id, o.distributor_id");

    }
    $RetPlacedOdr = array();
    if (count($OrderRes) > 0) {
        foreach ($OrderRes as $ky => $Value) {
            $RetPlacedOdr[$Value->salesman_id][$Value->distributor_id] = $Value->ttl_retailer_placed_order;

        }
    }

    // echo "<pre>";print_r($RetPlacedOdr);
    if (is_array($disIdsList) && count($disIdsList) > 0) {
        $OrderDetailRes = $_objAdmin->_getSelectList("table_order as o
                left join table_order_detail as od ON o.order_id=od.order_id",
            'o.salesman_id, o.distributor_id,o.date_of_order,COUNT(DISTINCT(od.item_id)) as ttl_order_item',
            '', " o.date_of_order >= '" . $startDate . "'
                AND o.date_of_order <= '" . $endDate . "' AND o.salesman_id IN(" . implode(',', $salesmanIdList) . ")
              AND  o.distributor_id IN(" . implode(',', array_unique($distributorIdList)) . ")
                                    AND o.retailer_id >0 AND od.quantity >0 and o.order_type !='No' AND o.order_status IN('A','I')
                                     group by o.salesman_id, o.distributor_id,o.date_of_order");

    }
    $RetPlacedOdrItem = array();
    if (count($OrderDetailRes) > 0) {
        foreach ($OrderDetailRes as $dky => $Dvalue) {
            $RetPlacedOdrItem[$Dvalue->salesman_id][$Dvalue->distributor_id] = $Dvalue->ttl_order_item;
        }
    }


    //   echo implode(',',array_unique($distributorIdList));
    // echo "<pre>";print_r($RetPlacedOdrItem);die;
    $ActivtiyRes = $_objAdmin->_getSelectList2("					
                (select o.salesman_id,o.date_of_order,o.distributor_id,o.retailer_id from table_order as o where o.date_of_order >= '" . $startDate . "'
                    AND o.date_of_order <= '" . $endDate . "' AND o.salesman_id IN(" . implode(',', $salesmanIdList) . ")
                    AND o.retailer_id >0 AND o.order_type !='Adhoc' AND o.order_status IN('A','I') AND o.account_id=" . $_SESSION['accountId'] . "
                UNION ALL
                select cc.salesman_id,cc.checkin_date as date_of_order,cc.retailer_id,'distributor_id' from table_capture_checkin_out as cc
                where cc.account_id=" . $_SESSION['accountId'] . " AND cc.checkin_date >= '" . $startDate . "' AND cc.checkin_date <= '" . $endDate . "' AND cc.salesman_id IN(" . implode(',', $salesmanIdList) . ")) as tmp",
        'tmp.salesman_id, tmp.date_of_order,tmp.retailer_id,COUNT(DISTINCT(tmp.retailer_id)) as ttlVisitedRetailer', '', "  group by tmp.salesman_id, tmp.distributor_id");

    // echo "<pre>"; print_r($ActivtiyRes);
    //checkin/order/no order
    $TotalVisits = array();
    if (count($ActivtiyRes) > 0) {
        foreach ($ActivtiyRes as $ky => $Value) {
            $TotalVisits[$Value->salesman_id][$Value->retailer_id] = $Value->ttlVisitedRetailer;

        }
    }

    if (is_array($disIdsList) && count($disIdsList) > 0) {
        $targetRes = $_objAdmin->_getSelectList("table_target_incentive as i
                    left join table_target_incentive_duration as d ON i.target_incentive_id=d.target_incentive_id 
                    left join table_target_incentive_salesman as s ON d.duration_id=s.duration_id ",
            's.salesman_id, i.primary_values as target_amount',
            '', " i.start_date >= '" . $startDate . "'
                        AND i.end_date <= '" . $endDate . "' AND s.salesman_id IN(" . implode(',', $salesmanIdList) . ")
                      AND i.dur_id=4 and i.type_id=12 ");

    }
    $targetAmount = array();
    if (count($targetRes) > 0) {
        foreach ($targetRes as $ky => $tValue) {
            $targetAmount[$tValue->salesman_id] = $tValue->target_amount;

        }
    }

    if (is_array($disIdsList) && count($disIdsList) > 0) {
        $achRes = $_objAdmin->_getSelectList("table_order as o",
            'o.salesman_id, o.distributor_id,o.date_of_order,SUM(o.acc_total_invoice_amount) as achieve_amount',
            '', " o.date_of_order >= '" . $startDate . "'
                    AND o.date_of_order <= '" . $endDate . "' AND o.salesman_id IN(" . implode(',', $salesmanIdList) . ")
                  AND  o.distributor_id IN(" . implode(',', array_unique($distributorIdList)) . ")
                                        AND o.retailer_id >0 AND o.order_type !='No' AND o.order_status IN('A','I')
                                         group by o.salesman_id,  o.distributor_id ,o.date_of_order");

    }
    $achveAmt = array();
    if (count($achRes) > 0) {
        foreach ($achRes as $ky => $Value) {
            $achveAmt[$Value->salesman_id][$Value->distributor_id] = $Value->achieve_amount;

        }
    }

    $account_id = $_SESSION['accountId'];

    if (is_array($disIdsList) && count($disIdsList) > 0) {
        $retVisitArr = array();
        foreach ($salesmanList as $salKey => $SalValue) {
            foreach ($disIdsList[$salKey] as $salDis) {
                $salesman_name = $SalValue['salesman_name'];
                $salesman_id = $SalValue['salesman_id'];
                $des1 = $SalValue['des1'];
                $des2 = $SalValue['des2'];
                $rptPerson = $SalValue['rptPerson'];
                $state_name = $SalValue['state_name'];
                $city_name = $SalValue['city_name'];


                $ttlVisitedRetailer = 0;
                //$totalVisits = 0;


                if ($distNameArr[$salDis] != '') {
                    $dis_name = $distNameArr[$salDis];
                }

                if (!empty($mapDis[$salDis])) {
                    $assign_no_cutomer = count($mapDis[$salDis]);
                }


                if (isset($mapDis[$salDis])) {

                    foreach ($mapDis[$salDis] as $disRet) {
                        //$prevPd = 0;
                        //  echo $salKey.'-Dis:'. $salDis. 'ret:'. $disRet->retailer_id.'<br>';
                        if ($TotalVisits[$salKey][$disRet->retailer_id] > 0) {
                            $retVisitArr[$salKey][$salDis][] = $TotalVisits[$salKey][$disRet->retailer_id];
                        } else {
                            $ttlVisitedRetailer = '-';
                        }
                    }
                }


                $ttlVisitedRetailer = (array_sum($retVisitArr[$salKey][$salDis])) ? array_sum($retVisitArr[$salKey][$salDis]) : '-';

                if (isset($achveAmt[$salKey][$salDis])) {
                    $achive_amount = $achveAmt[$salKey][$salDis];
                } else {
                    $achive_amount = '-';

                }

                if (isset($targetAmount[$salKey])) {
                    $target_amount = $targetAmount[$salKey];
                } else {
                    $target_amount = '-';
                    $achive_amount = '-';
                }

                $achPer = '';
                if ($achive_amount != '-' && $target_amount != '-') {
                    $achPer = round($achive_amount / $target_amount * 100) . '%';
                }

                if (isset($RetPlacedOdr[$salKey][$salDis])) {
                    $total_retailer_placed_order = $RetPlacedOdr[$salKey][$salDis][$dateKey];
                } else {
                    $total_retailer_placed_order = '-';
                }

                if (isset($RetPlacedOdrItem[$salKey][$salDis])) {
                    $ttl_order_item = $RetPlacedOdrItem[$salKey][$salDis][$dateKey];
                } else {
                    $ttl_order_item = '-';
                }


                $sus = ($total_retailer_placed_order / $ttlVisitedRetailer * 100);
                if ($sus) {
                    $suss = round($sus) . '%';
                } else {
                    $suss = '';
                }


                $data .= '"' . date('F', strtotime($_SESSION['disCyear'] . '-' . $_SESSION['dismonth'])) . '"';
                $data .= "\t";
                $data .= '"' . $_SESSION['disCyear'] . '"';
                $data .= "\t";

                $data .= '"' . $salesman_name . '"';
                $data .= "\t";
                $data .= '"' . $dis_name . '"';
                $data .= "\t";
                $data .= '"' . $assign_no_cutomer . '"';
                $data .= "\t";
                $data .= '"' . $ttlVisitedRetailer . '"';
                $data .= "\t";
                $data .= '"' . $total_retailer_placed_order . '"';
                $data .= "\t";
                $data .= '"' . $suss . '"';
                $data .= "\t";
                $data .= '"' . $ttl_order_item . '"';
                $data .= "\t";
                $data .= '"' . $target_amount . '"';
                $data .= "\t";
                $data .= '"' . $achive_amount . '"';
                $data .= "\t";
                $data .= '"' . $achPer . '"';
                $data .= "\n";
            }
        }

    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"salesman_distributor_month_wise_productivity_report.xls\"");
    echo $data;
    exit;
}
//Todo End: sudhanshu : 29 Jan 2024 Salesman distributor wise productivity report day wise

// Todo Start : Jatin : 2 feb 2024 : Export parent master
if (isset($_GET['export_parent_master'])) {
    $data = "Parent Code\tParent Name\tAddress\tPhone Number\tState\tDistrict\tCity\tCustomer Type\tContact name1\tContact Number1\tContact Designation1\tContact name2\tContact Number2\tContact Designation2\tAdded By\tStatus\tCreated Date\tUpdated Date \n";


    if ($_SESSION['frmdDate'] != '') {
        $fromdate = " and p.created_on >= '" . date('Y-m-d', strtotime($_SESSION['frmdDate'])) . "'";
    }
//        else {
//            $fromdate = " and p.created_on >= '" . date('Y-m-d') . "'";
//        }
    if ($_SESSION['todDate'] != '') {
        $todate = " and p.created_on <= '" . date('Y-m-d', strtotime($_SESSION['todDate'])) . "'";
    }
//        else {
//            $todate = " and p.created_on <= '" . date('Y-m-d') . "'";
//        }

    $where = "  $fromdate $todate ";

    $auRec = $_objAdmin->_getSelectList('table_parent_master as p 
        left join table_salesman as s on s.salesman_id = p.added_by
        left join state as st on st.state_id = p.state
        left join city as c on c.city_id = p.district
        left join table_location as loc on loc.location_id = p.city
        left join table_parent_customer_type_master as ctype on ctype.id = p.cust_type_id
        left join table_project_designation as cdm on cdm.id = p.designation
        left join table_project_designation as cdm1 on cdm1.id = p.designation1',
        "p.*,st.state_name,loc.location_name,c.city_name,ctype.customer_type,cdm.designation as desg,	
            cdm1.designation as desg1,s.salesman_name",
        $rp, $where . $sort, '');

    $remove = array("\n", "\r\n", "\r", ",");
    for ($i = 0; $i < count($auRec); $i++) {
        $status = ($auRec[$i]->status == 'A') ? 'Active' : 'Inactive';

        $data .= $auRec[$i]->parent_code;
        $data .= "\t";
        $data .= $auRec[$i]->parent_name;
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->address);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->phoneno);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->state_name);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->city_name);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->location_name);
        $data .= "\t";
        $data .= $auRec[$i]->customer_type;
        $data .= "\t";
        $data .= $auRec[$i]->contact_name;
        $data .= "\t";
        $data .= $auRec[$i]->contact_number;
        $data .= "\t";
        $data .= $auRec[$i]->desg;
        $data .= "\t";
        $data .= $auRec[$i]->contact_name1;
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->contact_number1);
        $data .= "\t";
        $data .= $auRec[$i]->desg1;
        $data .= "\t";
        $data .= $auRec[$i]->salesman_name;
        $data .= "\t";
        $data .= $status;
        $data .= "\t";
        $data .= $_objAdmin->_changeDate($auRec[$i]->created_on);
        $data .= "\t";
        $data .= $_objAdmin->_changeDate($auRec[$i]->updated_on);
        $data .= "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=parent_master.xls");
    echo $data;
    exit;
}
// Todo End : Jatin : 2 feb 2024 : Export parent master


//Todo Start: Sudhanshu: 24 Jan 2024 :  export parent customer type

if (isset($_GET['export_parent_customer_type'])) {
    $data = "Customer Type\n";
    //Todo Start : sudhanshu 13 june 2024 : add status filter
    $statusCondi = '';
    if (isset($_SESSION['MasCustTypeMas']) && $_SESSION['MasCustTypeMas'] != 'all' && $_SESSION['MasCustTypeMas'] != '') {
        $statusCondi = " status ='" . $_SESSION['MasCustTypeMas'] . "'";
    }
    //Todo End : sudhanshu 13 june 2024 : add status filter
    $auRec = $_objAdmin->_getSelectList('table_parent_customer_type_master', "customer_type", '', $statusCondi);
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . $auRec[$i]->customer_type . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"parent_customer_type.xls\"");
    echo $data;
    exit;
}

//Todo Start: Sudhanshu: 24 Jan 2024 :  export parent customer type

if (isset($_GET['export_parent_contact_designation'])) {
    $data = "Contact Designation\n";
    //Todo Start : sudhanshu 13 june 2024 : add status filter
    $statusCondi = '';
    if (isset($_SESSION['MasContDesigM']) && $_SESSION['MasContDesigM'] != 'all' && $_SESSION['MasContDesigM'] != '') {
        $statusCondi = " status ='" . $_SESSION['MasContDesigM'] . "'";
    }
    //Todo End : sudhanshu 13 june 2024 : add status filter
    $auRec = $_objAdmin->_getSelectList('table_parent_contact_designation_master', "designation", '', $statusCondi);
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . $auRec[$i]->designation . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"project_contact_designation.xls\"");
    echo $data;
    exit;
}


// Todo Start : sudhanshu : 06 feb 2024 : sales return batch wise  report
if (isset($_GET['export_dynamic_sales_return_batch_wise'])) {
    $data = " Salesman Name\t Salesman Code\t Distributor Name\t Distributor Code\t Distributor Zone\t Distributor State\t" . $AliaseUsers['distributor'] . " District\t" . $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['retailer'] . " Code\t " . $AliaseUsers['retailer'] . " Zone\t  " . $AliaseUsers['retailer'] . " State\t  " . $AliaseUsers['retailer'] . " District\t No. of Items\tDate\t Time\t Photo Count\n";

    $sort = " ORDER BY date_of_order desc,time_of_order desc";
    $queryConditions = '';
    if (isset($_SESSION['fil_from']) && !empty($_SESSION['fil_from'])) {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['fil_from'])) . "'";
    } else {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d') . "'";
    }
    if (isset($_SESSION['fil_to']) && !empty($_SESSION['fil_to'])) {
        $todate = " and o.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['fil_to'])) . "'";
    } else {
        $todate = " and o.date_of_order <= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['userLoginType'] == 3 && $_SESSION['distributorId'] != "" && $_SESSION['distributorId'] > 0) {
        $queryConditions .= " AND o.distributor_id=" . $_SESSION['distributorId'];
    } else if (isset($_SESSION['fil_distributor']) && !empty($_SESSION['fil_distributor']) && $_SESSION['fil_distributor'] > 0) {
        $queryConditions .= " AND o.distributor_id=" . $_SESSION['fil_distributor'];
    }

    if ($_SESSION['userLoginType'] == 7 && $_SESSION['stockistId'] != "" && $_SESSION['stockistId'] > 0) {
        $queryConditions .= " AND d.stockist_id=" . $_SESSION['stockistId'];

    } else if (isset($_SESSION['fil_stockist']) && !empty($_SESSION['fil_stockist']) && $_SESSION['fil_stockist'] > 0) {
        $queryConditions .= " AND d.stockist_id=" . $_SESSION['fil_stockist'];
    }
    $salesmanCnd = "";
    if ($_SESSION['userLoginType'] == 5) {
        $salesmanCnd = str_replace("s.", "o.", $salesman);
    }

    if (isset($_SESSION['fil_salesman']) && !empty($_SESSION['fil_salesman']) && $_SESSION['fil_salesman'] > 0) {
        $salesmanCnd = " AND o.salesman_id=" . $_SESSION['fil_salesman'];
    } else if (isset($_SESSION['fil_salesman_manager']) && ($_SESSION['fil_salesman_manager'] > 0)) {
        $salesmanManagerId = $_SESSION['fil_salesman_manager'];
        $account_id = $_SESSION['accountId'];
        $res = $_objAdmin->_getSelectList2('table_salesman_hierarchy_relationship AS SHR 
				LEFT JOIN table_salesman_hierarchy AS SH ON SH.hierarchy_id = SHR.hierarchy_id
				LEFT JOIN table_salesman AS s ON s.salesman_id = SHR.salesman_id', 's.salesman_id,SH.hierarchy_id,SH.sort_order', '', " SH.account_id=" . $account_id . " AND SHR.salesman_id = $salesmanManagerId ORDER BY SH.sort_order ASC ");

        if (is_array($res) && (count($res) > 0)) {
            $sortOrder = $res[0]->sort_order;
            $_objArrayList = new ArrayList();
            $getBottomUsersIdArr = $_objArrayList->getSalesmansBottomUsers(array($salesmanManagerId), $sortOrder, $account_id);

            if (is_array($getBottomUsersIdArr) && (count($getBottomUsersIdArr) > 0)) {
                $bottomUsersIds = implode(',', $getBottomUsersIdArr);
            }

            $salesmanCnd = " AND o.salesman_id IN($bottomUsersIds) ";
        }
    } else if (isset($_SESSION['fil_salesman_designation']) && ($_SESSION['fil_salesman_designation'] > 0)) {
        $_objArrayList = new ArrayList();
        $account_id = $_SESSION['accountId'];
        $getDesignationWiseBottomUsersIdArr = $_objArrayList->getDesignationWiseBottomUsers($_SESSION['fil_salesman_designation'], $account_id);

        if (is_array($getDesignationWiseBottomUsersIdArr) && (count($getDesignationWiseBottomUsersIdArr) > 0)) {
            $bottomUsersIds = implode(',', $getDesignationWiseBottomUsersIdArr);
            $salesmanCnd .= " AND o.salesman_id IN($bottomUsersIds) ";
        }
    } else {
        $salesmanCnd .= '';
    }
    //echo $bottomUsersIds; die;
    if (isset($_SESSION['fil_retailer']) && !empty($_SESSION['fil_retailer']) && $_SESSION['fil_retailer'] > 0) {
        $queryConditions .= " AND o.retailer_id=" . $_SESSION['fil_retailer'];
    }
    if (isset($_SESSION['fil_salesman_state']) && !empty($_SESSION['fil_salesman_state']) && $_SESSION['fil_salesman_state'] > 0) {
        $queryConditions .= " AND s.state=" . $_SESSION['fil_salesman_state'];
    }
    if (isset($_SESSION['fil_retailer_state']) && !empty($_SESSION['fil_retailer_state']) && $_SESSION['fil_retailer_state'] > 0) {
        $queryConditions .= " AND r.state=" . $_SESSION['fil_retailer_state'];
    }
    if (isset($_SESSION['fil_distributor_state']) && !empty($_SESSION['fil_distributor_state']) && $_SESSION['fil_distributor_state'] > 0) {
        $queryConditions .= " AND d.state=" . $_SESSION['fil_distributor_state'];
    }

    if (isset($_SESSION['fil_salesman_zone']) && !empty($_SESSION['fil_salesman_zone']) && $_SESSION['fil_salesman_zone'] > 0) {
        $queryConditions .= " AND zms.zone_id=" . $_SESSION['fil_salesman_zone'];
    }
    if (isset($_SESSION['fil_retailer_zone']) && !empty($_SESSION['fil_retailer_zone']) && $_SESSION['fil_retailer_zone'] > 0) {
        $queryConditions .= " AND zmr.zone_id=" . $_SESSION['fil_retailer_zone'];
    }
    if (isset($_SESSION['fil_distributor_zone']) && !empty($_SESSION['fil_distributor_zone']) && $_SESSION['fil_distributor_zone'] > 0) {
        $queryConditions .= " AND zmd.zone_id=" . $_SESSION['fil_distributor_zone'];
    }
    if (isset($_SESSION['fil_month']) && !empty($_SESSION['fil_month']) && isset($_SESSION['fil_year']) && !empty($_SESSION['fil_year'])) {
        $firstDate = date('Y-m-d', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
        $lastdate = date('Y-m-t', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
        $fromdate = " and o.date_of_order >= '" . $firstDate . "'";
        $todate = " and o.date_of_order <= '" . $lastdate . "'";
    }

    if (isset($_SESSION['fil_order_status']) && !empty($_SESSION['fil_order_status'])) {
        $queryConditions .= " AND o.order_status='" . $_SESSION['fil_order_status'] . "'";
    } else {
        //$queryConditions .=" and order_status IN('A','I') ";
    }
    if (isset($_SESSION['fil_order_type']) && !empty($_SESSION['fil_order_type'])) {
        $queryConditions .= " AND o.order_type='" . $_SESSION['fil_order_type'] . "'";
    } else {
        //$queryConditions .=" AND o.order_type !='Return'";
    }

    $queryConditions = $queryConditions . $salesmanCnd . $fromdate . $todate;


    $where = $queryConditions;
    //$whereret = " $disLogCond  $fromdate $todate and r.new='' and o.type='R' $orderby ";
    /*	$auRec=$_objAdmin->_getSelectList('table_order as o left join table_retailer as r on o.retailer_id=r.retailer_id left join table_salesman as s on o.salesman_id=s.salesman_id left join table_distributors as d on o.distributor_id=d.distributor_id left join table_retailer_channel_master as cm on cm.channel_id=r.channel_id left join state as st on st.state_id=d.state left join city as c on c.city_id=d.city left join table_region as re on re.region_id=d.region_id',"o.*,r.retailer_name,r.retailer_address,r.retailer_location,cm.channel_name,r.display_outlet,r.lat as retlat,r.lng as retlng,s.salesman_name,d.distributor_name,st.state_name,c.city_name,re.region_name ",'',$where.$sort,'');*/

    $auRec = $_objAdmin->_getSelectList("table_sales_return as o    
    left join table_sales_return_detail as ord on ord.sales_order_id = o.sales_order_id
    left join table_item as i on i.item_id = ord.item_id
    left join table_retailer as r on o.retailer_id=r.retailer_id 
    left join table_salesman as s on o.salesman_id=s.salesman_id
    left join table_salesman_hierarchy_relationship as shr on shr.salesman_id = s.salesman_id
    left join table_salesman as s2 on s2.salesman_id=shr.rpt_user_id
    left join table_distributors as d on r.distributor_id=d.distributor_id             
    left join state as str on str.state_id=r.state 
    left join state as sts on sts.state_id=s.state 
    left join state as std on std.state_id=d.state 
    left join city as c on c.city_id=r.city
    left join city as dc on dc.city_id=d.city 
    left join table_zone_state_mapping as zms on zms.state_id=s.state and zms.account_id = s.account_id
    left join table_zone as sz on sz.zone_id=zms.zone_id 
    left join table_zone_state_mapping as zmr on zmr.state_id=r.state and zmr.account_id = r.account_id
    left join table_zone as rz on rz.zone_id=zmr.zone_id
    left join table_zone_state_mapping as zmd on zmd.state_id=d.state and zmd.account_id = d.account_id
    left join table_zone as dz on dz.zone_id=zmd.zone_id",
        "o.sales_order_id,count(ord.item_id) as total_item,SUM(ord.acc_quantity) as total_ordered_qty,o.retailer_id,o.order_type,o.order_status,o.lat,
    o.date_of_order,o.time_of_order,
r.retailer_name,r.retailer_code,
r.lng as retlng,s.salesman_name,s.employee_code,
d.distributor_name,d.distributor_code,rz.zone_name as ret_zone,dz.zone_name as dist_zone,str.state_name as ret_state,std.state_name as dist_state,c.city_name,dc.city_name as dis_city,o.photo_count", $rp, $where . " group by o.sales_order_id " . $sort, '');

    $remove = array("\n", "\r", ",", "\t");
    for ($i = 0; $i < count($auRec); $i++) {

        $ttlItems = $auRec[$i]->total_item;

        //$auRec2 = $_objAdmin->_getSelectList2('table_order_detail', "count( distinct(item_id)) as total_item", '', " order_id = " . $auRec[$i]->order_id . " and type = 1");

        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);

        $data .= "" . $auRec[$i]->salesman_name . "\t" .
            $auRec[$i]->employee_code . "\t" .
            $auRec[$i]->distributor_name . "\t" .
            $auRec[$i]->distributor_code . "\t" .
            $auRec[$i]->dist_zone . "\t" .
            $auRec[$i]->dist_state . "\t" .
            $auRec[$i]->dis_city . "\t" .
            $auRec[$i]->retailer_name . "\t" .
            $auRec[$i]->retailer_code . "\t" .
            $auRec[$i]->ret_zone . "\t" .
            $auRec[$i]->ret_state . "\t" .
            $auRec[$i]->city_name . "\t" .
            $ttlItems . "\t" .
            $date_of_order . "\t" .
            $auRec[$i]->time_of_order . "\t" .
            $auRec[$i]->photo_count . "\n";


    }

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"dynamic_sales_return_batch_wise.xls\"");
    echo $data;
    exit;
}
// Todo End : sudhanshu : 06 feb 2024 : sales report batch wise  report export summary


// Todo Start : sudhanshu : 06 feb 2024 : sales return batch wise  report export details
if (isset($_GET['export_detail_dynamic_sales_return_batch_wise'])) {
    $data = " Salesman Name\t Salesman Code\t Distributor Name\t Distributor Code\t Distributor Zone\t Distributor State\t" . $AliaseUsers['distributor'] . " District\t" . $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['retailer'] . " Code\t " . $AliaseUsers['retailer'] . " Zone\t  " . $AliaseUsers['retailer'] . " State\t  " . $AliaseUsers['retailer'] . " District\t Date\t Time\t Photo Count\tBatch Code\t Batch Number\t Batch MFG Date\t Batch Exp. Date\t Item Name\tItem Code\tQuantity\t Comment\t Reason\tStatus\n";

    $sort = " ORDER BY date_of_order desc,time_of_order desc";
    $queryConditions = '';
    if (isset($_SESSION['fil_from']) && !empty($_SESSION['fil_from'])) {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['fil_from'])) . "'";
    } else {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d') . "'";
    }
    if (isset($_SESSION['fil_to']) && !empty($_SESSION['fil_to'])) {
        $todate = " and o.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['fil_to'])) . "'";
    } else {
        $todate = " and o.date_of_order <= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['userLoginType'] == 3 && $_SESSION['distributorId'] != "" && $_SESSION['distributorId'] > 0) {
        $queryConditions .= " AND o.distributor_id=" . $_SESSION['distributorId'];
    } else if (isset($_SESSION['fil_distributor']) && !empty($_SESSION['fil_distributor']) && $_SESSION['fil_distributor'] > 0) {
        $queryConditions .= " AND o.distributor_id=" . $_SESSION['fil_distributor'];
    }

    if ($_SESSION['userLoginType'] == 7 && $_SESSION['stockistId'] != "" && $_SESSION['stockistId'] > 0) {
        $queryConditions .= " AND d.stockist_id=" . $_SESSION['stockistId'];

    } else if (isset($_SESSION['fil_stockist']) && !empty($_SESSION['fil_stockist']) && $_SESSION['fil_stockist'] > 0) {
        $queryConditions .= " AND d.stockist_id=" . $_SESSION['fil_stockist'];
    }
    $salesmanCnd = "";
    if ($_SESSION['userLoginType'] == 5) {
        $salesmanCnd = str_replace("s.", "o.", $salesman);
    }

    if (isset($_SESSION['fil_salesman']) && !empty($_SESSION['fil_salesman']) && $_SESSION['fil_salesman'] > 0) {
        $salesmanCnd = " AND o.salesman_id=" . $_SESSION['fil_salesman'];
    } else if (isset($_SESSION['fil_salesman_manager']) && ($_SESSION['fil_salesman_manager'] > 0)) {
        $salesmanManagerId = $_SESSION['fil_salesman_manager'];
        $account_id = $_SESSION['accountId'];
        $res = $_objAdmin->_getSelectList2('table_salesman_hierarchy_relationship AS SHR 
				LEFT JOIN table_salesman_hierarchy AS SH ON SH.hierarchy_id = SHR.hierarchy_id
				LEFT JOIN table_salesman AS s ON s.salesman_id = SHR.salesman_id', 's.salesman_id,SH.hierarchy_id,SH.sort_order', '', " SH.account_id=" . $account_id . " AND SHR.salesman_id = $salesmanManagerId ORDER BY SH.sort_order ASC ");

        if (is_array($res) && (count($res) > 0)) {
            $sortOrder = $res[0]->sort_order;
            $_objArrayList = new ArrayList();
            $getBottomUsersIdArr = $_objArrayList->getSalesmansBottomUsers(array($salesmanManagerId), $sortOrder, $account_id);

            if (is_array($getBottomUsersIdArr) && (count($getBottomUsersIdArr) > 0)) {
                $bottomUsersIds = implode(',', $getBottomUsersIdArr);
            }

            $salesmanCnd = " AND o.salesman_id IN($bottomUsersIds) ";
        }
    } else if (isset($_SESSION['fil_salesman_designation']) && ($_SESSION['fil_salesman_designation'] > 0)) {
        $_objArrayList = new ArrayList();
        $account_id = $_SESSION['accountId'];
        $getDesignationWiseBottomUsersIdArr = $_objArrayList->getDesignationWiseBottomUsers($_SESSION['fil_salesman_designation'], $account_id);

        if (is_array($getDesignationWiseBottomUsersIdArr) && (count($getDesignationWiseBottomUsersIdArr) > 0)) {
            $bottomUsersIds = implode(',', $getDesignationWiseBottomUsersIdArr);
            $salesmanCnd .= " AND o.salesman_id IN($bottomUsersIds) ";
        }
    } else {
        $salesmanCnd .= '';
    }
    //echo $bottomUsersIds; die;
    if (isset($_SESSION['fil_retailer']) && !empty($_SESSION['fil_retailer']) && $_SESSION['fil_retailer'] > 0) {
        $queryConditions .= " AND o.retailer_id=" . $_SESSION['fil_retailer'];
    }
    if (isset($_SESSION['fil_salesman_state']) && !empty($_SESSION['fil_salesman_state']) && $_SESSION['fil_salesman_state'] > 0) {
        $queryConditions .= " AND s.state=" . $_SESSION['fil_salesman_state'];
    }
    if (isset($_SESSION['fil_retailer_state']) && !empty($_SESSION['fil_retailer_state']) && $_SESSION['fil_retailer_state'] > 0) {
        $queryConditions .= " AND r.state=" . $_SESSION['fil_retailer_state'];
    }
    if (isset($_SESSION['fil_distributor_state']) && !empty($_SESSION['fil_distributor_state']) && $_SESSION['fil_distributor_state'] > 0) {
        $queryConditions .= " AND d.state=" . $_SESSION['fil_distributor_state'];
    }

    if (isset($_SESSION['fil_salesman_zone']) && !empty($_SESSION['fil_salesman_zone']) && $_SESSION['fil_salesman_zone'] > 0) {
        $queryConditions .= " AND zms.zone_id=" . $_SESSION['fil_salesman_zone'];
    }
    if (isset($_SESSION['fil_retailer_zone']) && !empty($_SESSION['fil_retailer_zone']) && $_SESSION['fil_retailer_zone'] > 0) {
        $queryConditions .= " AND zmr.zone_id=" . $_SESSION['fil_retailer_zone'];
    }
    if (isset($_SESSION['fil_distributor_zone']) && !empty($_SESSION['fil_distributor_zone']) && $_SESSION['fil_distributor_zone'] > 0) {
        $queryConditions .= " AND zmd.zone_id=" . $_SESSION['fil_distributor_zone'];
    }
    if (isset($_SESSION['fil_month']) && !empty($_SESSION['fil_month']) && isset($_SESSION['fil_year']) && !empty($_SESSION['fil_year'])) {
        $firstDate = date('Y-m-d', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
        $lastdate = date('Y-m-t', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
        $fromdate = " and o.date_of_order >= '" . $firstDate . "'";
        $todate = " and o.date_of_order <= '" . $lastdate . "'";
    }

    if (isset($_SESSION['fil_order_status']) && !empty($_SESSION['fil_order_status'])) {
        $queryConditions .= " AND o.order_status='" . $_SESSION['fil_order_status'] . "'";
    } else {
        //$queryConditions .=" and order_status IN('A','I') ";
    }
    if (isset($_SESSION['fil_order_type']) && !empty($_SESSION['fil_order_type'])) {
        $queryConditions .= " AND o.order_type='" . $_SESSION['fil_order_type'] . "'";
    } else {
        //$queryConditions .=" AND o.order_type !='Return'";
    }

    $queryConditions = $queryConditions . $salesmanCnd . $fromdate . $todate;


    $where = $queryConditions;
    //$whereret = " $disLogCond  $fromdate $todate and r.new='' and o.type='R' $orderby ";
    /*	$auRec=$_objAdmin->_getSelectList('table_order as o left join table_retailer as r on o.retailer_id=r.retailer_id left join table_salesman as s on o.salesman_id=s.salesman_id left join table_distributors as d on o.distributor_id=d.distributor_id left join table_retailer_channel_master as cm on cm.channel_id=r.channel_id left join state as st on st.state_id=d.state left join city as c on c.city_id=d.city left join table_region as re on re.region_id=d.region_id',"o.*,r.retailer_name,r.retailer_address,r.retailer_location,cm.channel_name,r.display_outlet,r.lat as retlat,r.lng as retlng,s.salesman_name,d.distributor_name,st.state_name,c.city_name,re.region_name ",'',$where.$sort,'');*/

    $auRec = $_objAdmin->_getSelectList("table_sales_return as o    
    left join table_sales_return_detail as ord on ord.sales_order_id = o.sales_order_id
    left join table_sales_return_details_batch_wise as tb on tb.sales_order_detail_id=ord.sales_order_detail_id
    left join table_color as clr on clr.color_id = tb.batch_id
    LEFT JOIN table_qa_odrdetail_attrs AS qad ON ord.sales_order_detail_id = qad.sales_order_detail_id 
    LEFT JOIN table_sales_return_master AS srm ON srm.sales_return_id = qad.reasons
    left join table_item as i on i.item_id = ord.item_id
    left join table_retailer as r on o.retailer_id=r.retailer_id 
    left join table_salesman as s on o.salesman_id=s.salesman_id
    left join table_salesman_hierarchy_relationship as shr on shr.salesman_id = s.salesman_id
    left join table_salesman as s2 on s2.salesman_id=shr.rpt_user_id
    left join table_distributors as d on r.distributor_id=d.distributor_id             
    left join state as str on str.state_id=r.state 
    left join state as sts on sts.state_id=s.state 
    left join state as std on std.state_id=d.state 
    left join city as c on c.city_id=r.city
    left join city as dc on dc.city_id=d.city 
    left join table_zone_state_mapping as zms on zms.state_id=s.state and zms.account_id = s.account_id
    left join table_zone as sz on sz.zone_id=zms.zone_id 
    left join table_zone_state_mapping as zmr on zmr.state_id=r.state and zmr.account_id = r.account_id
    left join table_zone as rz on rz.zone_id=zmr.zone_id
    left join table_zone_state_mapping as zmd on zmd.state_id=d.state and zmd.account_id = d.account_id
    left join table_zone as dz on dz.zone_id=zmd.zone_id",
        "o.sales_order_id,o.retailer_id,o.order_type,o.order_status,o.lat,
    o.date_of_order,o.time_of_order,ord.order_detail_status,
r.retailer_name,r.retailer_code,
r.lng as retlng,s.salesman_name,s.employee_code,i.item_name,i.item_code,qad.comment, srm.sales_return as reasons,
d.distributor_name,d.distributor_code,rz.zone_name as ret_zone,dz.zone_name as dist_zone,str.state_name as ret_state,std.state_name as dist_state,c.city_name,dc.city_name as dis_city,o.photo_count,clr.color_code,clr.color_desc,clr.mfg_date,clr.expiry_date,tb.qty", $rp, $where . "  " . $sort, '');
//echo "<pre>";print_r($auRec);die;
    $remove = array("\n", "\r", ",", "\t");
    for ($i = 0; $i < count($auRec); $i++) {


        //$auRec2 = $_objAdmin->_getSelectList2('table_order_detail', "count( distinct(item_id)) as total_item", '', " order_id = " . $auRec[$i]->order_id . " and type = 1");

        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);
        $mfg_date = $_objAdmin->_changeDate($auRec[$i]->mfg_date);
        $batch_exp_date = $_objAdmin->_changeDate($auRec[$i]->expiry_date);

        if ($auRec[$i]->order_detail_status == 1) {
            $status = "New";
        } elseif ($auRec['order_detail_status'] == 2) {
            $status = "Accepted";
        } else {
            $status = "Rejected";
        }

        $data .= "" . $auRec[$i]->salesman_name . "\t" .
            $auRec[$i]->employee_code . "\t" .
            $auRec[$i]->distributor_name . "\t" .
            $auRec[$i]->distributor_code . "\t" .
            $auRec[$i]->dist_zone . "\t" .
            $auRec[$i]->dist_state . "\t" .
            $auRec[$i]->dis_city . "\t" .
            $auRec[$i]->retailer_name . "\t" .
            $auRec[$i]->retailer_code . "\t" .
            $auRec[$i]->ret_zone . "\t" .
            $auRec[$i]->ret_state . "\t" .
            $auRec[$i]->city_name . "\t" .

            $date_of_order . "\t" .
            $auRec[$i]->time_of_order . "\t" .
            $auRec[$i]->photo_count . "\t" .
            $auRec[$i]->color_code . "\t" .
            $auRec[$i]->color_desc . "\t" .
            $mfg_date . "\t" .
            $batch_exp_date . "\t" .
            $auRec[$i]->item_name . "\t" .
            $auRec[$i]->item_code . "\t" .
            $auRec[$i]->qty . "\t" .
            $auRec[$i]->comment . "\t" .
            $auRec[$i]->reasons . "\t" .
            $status . "\n";


    }

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"dynamic_sales_return_batch_wise_details.xls\"");
    echo $data;
    exit;
}
// Todo End : sudhanshu : 06 feb 2024 : sales report batch wise  report export details


//Todo Start: Sudhanshu: 24 Jan 2024 :  export parent customer type

if (isset($_GET['export_project_contact_designation'])) {
    $data = "Contact Designation\n";
    //Todo Start : sudhanshu 13 june 2024 : add status filter
    $statusCondi = '';
    if (isset($_SESSION['MasContDesi']) && $_SESSION['MasContDesi'] != 'all' && $_SESSION['MasContDesi'] != '') {
        $statusCondi = " status ='" . $_SESSION['MasContDesi'] . "'";
    }
    //Todo End : sudhanshu 13 june 2024 : add status filter
    $auRec = $_objAdmin->_getSelectList('table_project_designation', "designation", '', $statusCondi);
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . $auRec[$i]->designation . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"parent_contact_designation.xls\"");
    echo $data;
    exit;
}

// Todo Start : Jatin : 12 feb 2024 : Export Project master

if (isset($_GET['export_project_master'])) {
    $data = "Parent Type\tProject Source\tProject Code\tProject Name\tPhone Number\tAddress\tState\tDistrict\tCity\tParent Customer Type\tParent\tContact name\tContact Number\tContact Designation\tDistributor Code\tRemarks\tAssigned To\tOrder\tReminder Date\tCreated Date\tUpdated Date  \n";

    $dateApplyon = 'created_on';
    if (isset($_SESSION['datetype']) && $_SESSION['datetype'] == 'updatedon') {
        $dateApplyon = 'updated_on';
    }
    if ($_SESSION['frmDate'] != '') {
        $fromdate = " and p.$dateApplyon >= '" . date('Y-m-d', strtotime($_SESSION['frmDate'])) . "'";
    }
//    else {
//        $fromdate = " and p.$dateApplyon >= '" . date('Y-m-d') . "'";
//    }
    if ($_SESSION['toDate'] != '') {
        $todate = " and p.$dateApplyon <= '" . date('Y-m-d', strtotime($_SESSION['toDate'])) . "'";
    }
//    else {
//        $todate = " and p.$dateApplyon <= '" . date('Y-m-d') . "'";
//    }

    $where = "  $fromdate $todate ";

    $auRec = $_objAdmin->_getSelectList('table_project_master as p 
        left join table_parent_master par on par.id = p.parent_id
        left join table_project_contact_mapping as pcm on pcm.id = p.contact_id
        left join table_salesman as s on s.salesman_id = p.assign_to
        left join state as st on st.state_id = p.state
        left join city as c on c.city_id = p.district
        left join table_location as loc on loc.location_id = p.city
        left join table_project_distributor_mapping as dism on dism.project_id = p.id
        left join table_parent_contact_designation_master as pcdm on pcdm.id = pcm.contact_designation
        left join table_parent_customer_type_master as custId on custId.id = p.cust_type_id
        left join table_distributors as d on d.distributor_id = dism.distributor_id',
        "p.id as project_ids,p.*,st.state_name,loc.location_name,c.city_name,s.salesman_name,pcm.*,d.distributor_code,par.parent_name,pcdm.designation as desg,p.created_on as created,custId.customer_type",
        $rp, $where . $sort, '');

    $remove = array("\n", "\r\n", "\r", ",");
    for ($i = 0; $i < count($auRec); $i++) {

        $maxId = $_objAdmin->_getSelectList2('table_project_details', "max(id) as delId",
            '', " project_id=" . $auRec[$i]->project_ids . " order by id desc");


        $det_data = $_objAdmin->_getSelectList2('table_project_details as det', "det.remarks,det.reminder_date,det.reminder_time,det.reminder_comment,det.order_amount,det.assign_to,det.date,det.time",
            '', " id=" . $maxId[0]->delId);

        if ($auRec[$i]->parent_type == '1') {
            $type = 'Existing';
        } else if ($auRec[$i]->parent_type == '3') {
            $type = 'No Parent';
        } else {
            $type = 'New';
        }

        $data .= $type;
        $data .= "\t";
        $data .= $auRec[$i]->project_source;
        $data .= "\t";
        $data .= $auRec[$i]->project_code;
        $data .= "\t";
        $data .= $auRec[$i]->project_name;
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->phoneno);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->Address);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->state_name);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->city_name);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->location_name);
        $data .= "\t";
        $data .= $auRec[$i]->customer_type;
        $data .= "\t";
        $data .= $auRec[$i]->parent_name;
        $data .= "\t";
        $data .= $auRec[$i]->contact_name;
        $data .= "\t";
        $data .= $auRec[$i]->contact_no;
        $data .= "\t";
        $data .= $auRec[$i]->desg;
        $data .= "\t";
        $data .= $auRec[$i]->distributor_code;
        $data .= "\t";
        $data .= str_replace($remove, '', $det_data[0]->remarks);
        $data .= "\t";
        $data .= $auRec[$i]->salesman_name;
        $data .= "\t";
        $data .= $auRec[$i]->total_order_amount;
        $data .= "\t";
        $data .= $_objAdmin->_changeDate($det_data[0]->reminder_date);
        $data .= "\t";
        $data .= $_objAdmin->_changeDate($auRec[$i]->created);
        $data .= "\t";
        $data .= $_objAdmin->_changeDate($auRec[$i]->updated_on);
        $data .= "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=project_master.xls");
    echo $data;
    exit;
}

// Todo End : Jatin : 12 feb 2024 : Export Project master


//Todo Start : sudhanshu : 12 feb 2024 : Survey Feedback Activity Report details

if (isset($_GET['export_survey_feedback_transaction_activity_detail'])) {

    $data = "Activity Date\t" . $AliaseUsers['salesman'] . " Code\t" . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['salesman'] . " Designation\tReporting Person Name\tSurvey Code\t Survey Name\tSurvey Start Date\tSurvey End Date\t" . $AliaseUsers['retailer'] . " Code\t" . $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['retailer'] . " Type\t" . $AliaseUsers['retailer'] . " State\t Retailer District\t Retailer City\tQuestion\tAnswer Type\t Label\t Answer\tMultiple Option Description Answer\n";

    $sort = " ORDER BY sr.activity_date, sr.activity_time DESC";

    if (isset($_SESSION['from']) && !empty($_SESSION['from'])) {
        $from = date('Y-m-d', strtotime($_SESSION['from']));
    } else {
        $from = date('Y-m-d');
    }

    if (isset($_SESSION['to']) && !empty($_SESSION['to'])) {
        $to = date('Y-m-d', strtotime($_SESSION['to']));
    } else {
        $to = date('Y-m-d');
    }

    $salesmanCondi = '';
    if (($_SESSION['salQuest'] != 'All') && !empty($_SESSION['salQuest']) && (intval($_SESSION['salQuest']) > 0)) {
        $salesmanCondi = " and s.salesman_id = " . $_SESSION['salQuest'];
    }

    //sr.activity_id ='194' and
    $where = " sr.activity_date between '" . $from . "' AND '" . $to . "' $salesmanCondi  ";

    $auRec = $_objAdmin->_getSelectList('table_feedback_survey_activity as sr
    LEFT join table_feedback_survey_activity_question as srd on sr.activity_id=srd.activity_id
    LEFT JOIN
      table_feedback_survey_master AS sq ON sq.survey_id = sr.survey_id
    LEFT JOIN
      table_feedback_survey_questions_master AS sqm ON srd.question_id = sqm.question_id
    LEFT JOIN
      table_feedback_survey_ans_type_group AS satg ON satg.group_id = srd.ans_type_group_id
    LEFT JOIN
      table_ans_type_master AS atm ON srd.ans_type_id = atm.ans_type_id
    LEFT JOIN
      table_question_ans_type_options AS atp ON srd.ans_type_group_option_id = atp.option_id
    LEFT JOIN
      table_salesman AS s ON s.salesman_id = sr.salesman_id
    LEFT JOIN
      table_retailer AS r ON r.retailer_id = sr.retailer_id
    LEFT JOIN
      state AS st ON st.state_id = r.state
    LEFT JOIN
      city AS ct ON ct.city_id = r.city
    LEFT JOIN
      table_location AS loc ON loc.location_id = r.location_id
    LEFT JOIN
      table_distributors AS d ON d.distributor_id = sr.distributor_id
    LEFT JOIN
      table_distributor_type_master AS dtm ON dtm.dis_type_id = d.distributor_type_id
    LEFT JOIN
      table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
    LEFT JOIN
      table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
    LEFT JOIN
      table_salesman AS S2 ON S2.salesman_id = SH.rpt_user_id
    LEFT JOIN
      table_retailer_type_master AS rtm ON rtm.type_id = r.type_id
    LEFT JOIN
      table_lead AS l ON l.lead_id = sr.lead_id
    LEft join table_survey_ans_images as img on img.activity_id = sr.activity_id and img.ans_type_group_id = satg.group_id',
        "sr.*,img.img_name,sq.survey_name,s.salesman_name,s.employee_code,r.retailer_name,r.retailer_code,d.distributor_name,d.distributor_code,l.title as lead_title,l.lead_code,sq.survey_code,rtm.type_name,dtm.dis_type_name,sq.from_date,sq.to_date,H.description AS des1, S2.salesman_name AS rptPerson,st.state_name,ct.city_name,loc.location_name,sqm.question_desc,satg.label,satg.group_id,atm.ans_type_desc,GROUP_CONCAT(atp.option_description separator ' | ') as ans,srd.ans_text,atm.ans_type_id,srd.multi_option_desc", '', $where . ' GROUP BY sq.survey_id,sqm.question_id,satg.group_id,sr.activity_id,atp.option_id,img.img_id ' . $sort . '   ,s.salesman_id ASC', '');

    //echo "<pre>";print_r($auRec);die;
    if (is_array($auRec)) {

        for ($i = 0; $i < count($auRec); $i++) {

            if (strtolower($auRec[$i]->ans_type_id) == 1) {
                $ans = getImagePath('survey_image', $auRec[$i]->img_name);
            } elseif (strtolower($auRec[$i]->ans_type_id) == 2) {
                $ans = $auRec[$i]->ans_text;
            } elseif (strtolower($auRec[$i]->ans_type_id) == 3) {
                $ans = $auRec[$i]->ans;

            } elseif (strtolower($auRec[$i]->ans_type_id) == 4) {
                $ans = $auRec[$i]->ans;
            } elseif (strtolower($auRec[$i]->ans_type_id) == 5) {
                $ans = $auRec[$i]->ans;
            } else {
                $ans = '';
            }
            $multiAns= $auRec[$i]->multi_option_desc;

            $data .= '"' . date('dM Y', strtotime($auRec[$i]->activity_date)) . '"';
            $data .= "\t";
         
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->des1 . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->rptPerson . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->survey_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->survey_name . '"';
            $data .= "\t";
            $data .= '"' . date('d M Y', strtotime($auRec[$i]->from_date)) . '"';
            $data .= "\t";
            $data .= '"' . date('d M Y', strtotime($auRec[$i]->to_date)) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->type_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->question_desc . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->ans_type_desc . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->label . '"';
            $data .= "\t";
            $data .= '"' . $ans . '"';
            $data .= "\t";
            $data .= '"' . $multiAns . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"feedback_activity_detail_report.xls\"");
    echo $data;
    exit;
}

if (isset($_GET['export_project_status_report'])) {

    $data = "Salesman Name\tProject Name\tProject Code\tParent Type\tProject Parent Name\tState\tDistrict\tCity\tAddress\tStatus\tCreated Date\tUpdated Date\tAdded By\tFollowUps\tNo. of attempts for Follow Ups\tEnquiry\tQuotation\tNegotiation\tWin\tLost\tProject Completed\tTotal Order Amount\tFinal Status\n";

    $salInCondi = '';
    //echo "<pre>"; print_r($_SESSION);
    if (isset($_SESSION['SelCondi']) && !empty($_SESSION['SelCondi'])) {
        $salInCondi = $_SESSION['SelCondi'];
    }
    $dateApplyon = 'created_on';
    if (isset($_SESSION['datetype']) && $_SESSION['datetype'] == 'updatedon') {
        $dateApplyon = 'updated_on';
    }
    if ($_SESSION['frmDate'] != '') {
        $fromdate = " and p." . $dateApplyon . " >= '" . date('Y-m-d', strtotime($_SESSION['frmDate'])) . "'";
    } else {
        $fromdate = " and p." . $dateApplyon . " >= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['toDate'] != '') {
        $todate = " and p." . $dateApplyon . " <= '" . date('Y-m-d', strtotime($_SESSION['toDate'])) . "'";
    } else {
        $todate = " and p." . $dateApplyon . " <= '" . date('Y-m-d') . "'";
    }
    $salesman = $_SESSION['SalIds'];
    $where = "  $fromdate $todate $salInCondi $salesman";

    $auRec = $_objAdmin->_getSelectList('table_project_master as p 
		left join table_parent_project_status_master as ps on ps.id=p.project_status
        left join table_parent_master par on par.id = p.parent_id        
        left join table_salesman as s on s.salesman_id = p.assign_to
		left join table_salesman as s1 on s1.salesman_id = p.created_by		
        left join state as st on st.state_id = p.state
        left join city as c on c.city_id = p.district
        left join table_location as loc on loc.location_id = p.city',
        "p.id as project_id,p.*,ps.project_status as project_status_name,st.state_name,loc.location_name,c.city_name,s.salesman_name as assign_to_salesman
		,s1.salesman_name as added_by_salesman,par.parent_name", "", $where, '');

    $projectStatusDetails = array();
    $projectOdrAmt = array();
    if (count($auRec) > 0) {
        $projectIdsArr = array();
        foreach ($auRec as $key => $value) {
            $projectIdsArr[] = $value->project_id;
        }
        $whereCnd = " project_id IN(" . implode(',', $projectIdsArr) . ") group by project_id,project_status";
        $DetailauRec = $_objAdmin->_getSelectList('table_project_details',
            "project_id,project_status,MAX(date) as max_activity_date,
		MIN(date) as min_activity_date,count(id) as no_of_attempts,
		SUM(order_amount) as order_amount", '', $whereCnd, '');
        if (count($DetailauRec) > 0) {
            foreach ($DetailauRec as $key => $value) {
                $projectStatusDetails[$value->project_id][$value->project_status] = $value;
                $projectOdrAmt[$value->project_id] = $projectOdrAmt[$value->project_id] + $value->order_amount;
            }

        }
    }
    $remove = array("\n", "\r\n", "\r", ",");
    for ($i = 0; $i < count($auRec); $i++) {

        $FollowUps = $projectStatusDetails[$auRec[$i]->project_id][2]->min_activity_date;
        $NoofattemptsforFollowUps = $projectStatusDetails[$auRec[$i]->project_id][2]->no_of_attempts;
        $Enquiry = $projectStatusDetails[$auRec[$i]->project_id][3]->max_activity_date;
        $Quotation = $projectStatusDetails[$auRec[$i]->project_id][4]->max_activity_date;
        $Negotiation = $projectStatusDetails[$auRec[$i]->project_id][5]->max_activity_date;
        $Win = $projectStatusDetails[$auRec[$i]->project_id][6]->max_activity_date;
        $Lost = $projectStatusDetails[$auRec[$i]->project_id][7]->max_activity_date;
        $ProjectCompleted = $projectStatusDetails[$auRec[$i]->project_id][8]->max_activity_date;
        $TotalOrderAmount = $projectOdrAmt[$auRec[$i]->project_id];

        $status = ($auRec[$i]->status == 'A') ? "Active" : "Inactive";

        //Todo Start : sudhanshu 25 june 2024 cahnge parent type logic
        if ($auRec[$i]->parent_type == '1') {
            $type = 'Existing';
        } else if ($auRec[$i]->parent_type == '2') {
            $type = 'New';
        } else if ($auRec[$i]->parent_type == '3') {
            $type = 'No Parent';
        } else {
            $type = '';
        }
        //Todo End : sudhanshu 25 june 2024 cahnge parent type logic

        $data .= str_replace($remove, '', ucwords(addslashes($auRec[$i]->assign_to_salesman)));
        $data .= "\t";
        $data .= str_replace($remove, '', ucwords(addslashes($auRec[$i]->project_name)));
        $data .= "\t";
        $data .= str_replace($remove, '', ucwords(addslashes($auRec[$i]->project_code)));
        $data .= "\t";
        $data .= $type;
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->parent_name);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->state_name);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->city_name);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->location_name);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->Address);
        $data .= "\t";
        $data .= $status;
        $data .= "\t";
        $data .= $_objAdmin->_changeDate($auRec[$i]->created_on);
        $data .= "\t";
        $data .= $_objAdmin->_changeDate($auRec[$i]->updated_on);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->added_by_salesman);
        $data .= "\t";
        $data .= ucwords(addslashes($_objAdmin->_changeDate($FollowUps)));
        $data .= "\t";
        $data .= ucwords(addslashes($NoofattemptsforFollowUps));
        $data .= "\t";
        $data .= ucwords(addslashes($_objAdmin->_changeDate($Enquiry)));
        $data .= "\t";
        $data .= ucwords(addslashes($_objAdmin->_changeDate($Quotation)));
        $data .= "\t";
        $data .= ucwords(addslashes($_objAdmin->_changeDate($Negotiation)));
        $data .= "\t";
        $data .= ucwords(addslashes($_objAdmin->_changeDate($Win)));
        $data .= "\t";
        $data .= ucwords(addslashes($_objAdmin->_changeDate($Lost)));
        $data .= "\t";
        $data .= ucwords(addslashes($_objAdmin->_changeDate($ProjectCompleted)));
        $data .= "\t";
        $data .= ucwords(addslashes($TotalOrderAmount));
        $data .= "\t";
        $data .= ucwords(addslashes($auRec[$i]->project_status_name));
        $data .= "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=project_status_report.xls");
    echo $data;
    exit;
}

//Todo Start : sudhanshu : 14 feb 2024 : Survey Feedback master details

if (isset($_GET['export_survey_feedback_master_details'])) {
    $data = " Serial Number \t Survey Code \t Survey Name\t Survey Start Date\tSurvey End Date\tRetailer Type\tDistributor Type\t State\t Created Date\tCompletion Status\t Status\tSurvey Question\tQuestion Mandatory\tAns Type\tLabel\tOptions\tAns Type Mandatory\tAns Type Status\n";

    //Todo Start : sudhanshu 12 june 2024 : add status filter
    $statusCondi = '';
    if (isset($_SESSION['MasSurFeed']) && $_SESSION['MasSurFeed'] != 'all' && $_SESSION['MasSurFeed'] != '') {
        $statusCondi = " AND sq.status ='" . $_SESSION['MasSurFeed'] . "'";
    }
    //Todo End : sudhanshu 12 june 2024 : add status filter
    $where = " sq.survey_id > 0 $statusCondi ";
    $auRec = $_objAdmin->_getSelectList('table_feedback_survey_master as sq 
    LEFT JOIN table_feedback_survey_questions_master AS sqm ON sqm.survey_id = sq.survey_id
    LEFT JOIN  table_feedback_survey_ans_type_group AS satg ON satg.question_id = sqm.question_id
    LEFT JOIN table_ans_type_master AS atm ON satg.ans_type_id = atm.ans_type_id
    LEFT JOIN table_question_ans_type_options as atp ON atp.group_id=satg.group_id
    LEFT JOIN table_survey_ret_type_mapping as rtm ON rtm.survey_id = sq.survey_id and rtm.status="A"
    LEFT JOIN table_retailer_type_master as rt on rt.type_id = rtm.retailer_type_id
    LEFT JOIN table_survey_dist_type_mapping as dtm ON dtm.survey_id = sq.survey_id and dtm.status="A"
    LEFT JOIN table_distributor_type_master as dt ON dt.dis_type_id = dtm.distributor_type_id
    LEFT JOIN table_survey_state_mapping as st ON st.survey_id = sq.survey_id and st.status="A"
    LEFT JOIN state as s ON s.state_id = st.state_id', "sq.*,GROUP_CONCAT(DISTINCT rt.type_name SEPARATOR '| ') as ret_type, GROUP_CONCAT(DISTINCT dt.dis_type_name SEPARATOR '| ') as dist_type,GROUP_CONCAT(DISTINCT s.state_name SEPARATOR '| ') as states,sqm.question_desc,sqm.is_mandatory as que_mendatory,atm.ans_type_desc,satg.label,satg.is_mandatory as ans_mandatory,satg.status as ans_type_status,atp.option_description", $rp, $where . ' GROUP BY sq.survey_id,rtm.survey_id,dtm.survey_id,satg.group_id,sqm.question_id,atp.option_id ' . $sort);


    if (is_array($auRec)) {

        for ($i = 0; $i < count($auRec); $i++) {
            $status = ($auRec[$i]->status == 'A') ? "Active" : "Inactive";
            $created_date = $_objAdmin->_changeDate($auRec[$i]->created_on);
            $updated_date = $_objAdmin->_changeDate($auRec[$i]->updated_on);

            $sts = $status;

            $cmpltedSts = (intval($auRec[$i]->is_verified) > 0) ? "Completed" : "Not Completed";

            $que_mendatory = (intval($auRec[$i]->que_mendatory) == 1) ? "Yes" : "No";
            $ans_type_mandatory = (intval($auRec[$i]->ans_mandatory) == 1) ? "Yes" : "No";
            $ans_type_status = ($auRec[$i]->ans_type_status == 'A') ? "Active" : "Inactive";

            //todo start : When Retailer Type, Distributor Type and State is defined as 'All'. In export details it is showing blank. : sudhanshu : 01 march 2024
            $retType = (isset($auRec[$i]->ret_type) && !empty($auRec[$i]->ret_type)) ? $auRec[$i]->ret_type : ((isset
                ($auRec[$i]->is_all_retailer_type)
                && $auRec[$i]->is_all_retailer_type > 0) ? 'All' : '');

            $disType = (isset($auRec[$i]->dist_type) && !empty($auRec[$i]->dist_type)) ? $auRec[$i]->dist_type : ((isset
                ($auRec[$i]->is_all_distributor_type)
                && $auRec[$i]->is_all_distributor_type > 0) ? 'All' : '');

            $retdisState = (isset($auRec[$i]->states) && !empty($auRec[$i]->states)) ? $auRec[$i]->states : ((isset
                ($auRec[$i]->is_all_state)
                && $auRec[$i]->is_all_state > 0) ? 'All' : '');

            //todo end :When Retailer Type, Distributor Type and State is defined as 'All'. In export details it is showing blank. : sudhanshu : 01 march 2024

            $sortOrder = (($auRec[$i]->sort_order > 0) ? addslashes($auRec[$i]->sort_order) : '');
            $sortOrder = $i + 1;
            $data .= '"' . $sortOrder . '"';
            $data .= "\t";

            $data .= '"' . $auRec[$i]->survey_code . '"';
            $data .= "\t";
            $data .= '"' . substr($auRec[$i]->survey_name, 0, 100) . '"';
            $data .= "\t";
            $data .= '"' . date('d M Y', strtotime($auRec[$i]->from_date)) . '"';
            $data .= "\t";
            $data .= '"' . date('d M Y', strtotime($auRec[$i]->to_date)) . '"';
            $data .= "\t";
            $data .= '"' . $retType . '"';
            $data .= "\t";
            $data .= '"' . $disType . '"';
            $data .= "\t";
            $data .= '"' . $retdisState . '"';
            $data .= "\t";
            $data .= '"' . $created_date . '"';
            $data .= "\t";
            $data .= '"' . $cmpltedSts . '"';
            $data .= "\t";
            $data .= '"' . $sts . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->question_desc . '"';
            $data .= "\t";
            $data .= '"' . $que_mendatory . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->ans_type_desc . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->label . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->option_description . '"';
            $data .= "\t";
            $data .= '"' . $ans_type_mandatory . '"';
            $data .= "\t";
            $data .= '"' . $ans_type_status . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"survey_feedback_detail_listing.xls\"");
    echo $data;
    exit;
}
//Todo End: sudhanshu : 14 feb 2024 survey feedback question master detail

//Todo Start: sudhanshu : 16 feb 2024 Fully/Partial Pending Order List

if (isset($_GET['export_retailer_full_Partial_pending_order_list'])) {
    // echo "hello";exit;
    $data = "Order For\tDate\tTime\tOrder Number\tOrder Amount\tBill Type\tBill Description\t" .
        $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\t" . $AliaseUsers['salesman']
        . " Name\t" . $AliaseUsers['salesman'] . " Code\t" . $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['retailer'] . " Code\tBranch Name\tBranch Code\tState\tDistrict\tCity\tMarket\tAddress\tOrder Type\tOrder By\tOrder Status\n";
    $sort = " ORDER BY date_of_order desc,time_of_order desc";
    if ($_SESSION['SalDisList'] != '') {
        $salesman = " and s.salesman_id='" . $_SESSION['SalDisList'] . "'";
    }

    if ($_SESSION['FromDisList'] != '') {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['FromDisList'])) . "'";
    } else {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['ToDisList'] != '') {
        $todate = " and o.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToDisList'])) . "'";
    } else {
        $todate = " and o.date_of_order <= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['distributorId'] != "A") {
        $disList = " AND o.distributor_id=" . $_SESSION['distributorId'] . " ";
    } else {
        $disList = "";
    }
    if ($_SESSION['OrderBy'] != '') {
        if ($_SESSION['OrderBy'] == 1) {
            $orderby = "";
        }
        if ($_SESSION['OrderBy'] == 2) {
            $orderby = " and o.order_status='A' ";
        }
        if ($_SESSION['OrderBy'] == 3) {
            $orderby = " and o.order_status='I' ";
        }
        if ($_SESSION['OrderBy'] == 4) {
            $orderby = " and o.order_status='D' ";
        }
    } else {
        $orderby = "";
    }
    if ($_SESSION['userLoginType'] == 3 && $_SESSION['distributorId'] > 0) {
        $distributorCond = " AND o.distributor_id ='" . $_SESSION['distributorId'] . "' ";
    }
    $where = " AND r.new='' AND o.order_for='R' AND o.order_status !='D' AND o.order_status IN('A', 'I') AND 
	order_type IN('Yes', 'Return', 'Adhoc') AND o.distributor_id!='' $disList $disLogCond $salesman $fromdate $todate $regionCondition $stateCondition $salesOrgCond $distributorCond $orderby AND o.account_id =" . $_SESSION['accountId'];
    $auRec = $_objAdmin->_getSelectList('table_order as o
      left join table_retailer as r on o.retailer_id=r.retailer_id
      left join table_salesman as s on o.salesman_id=s.salesman_id
      left join table_distributors as d on d.distributor_id=o.distributor_id      
      left join state as st on st.state_id=r.state
      left join city as c on c.city_id=r.city
      left join table_location as tl on tl.location_id = r.location_id
      left join table_branch as br on br.branch_id = r.branch_id',
        "o.*,r.retailer_name, r.retailer_code,r.retailer_address,r.retailer_location,r.display_outlet,s.salesman_name,s.employee_code,d.distributor_name,d.distributor_code,tl.location_name,st.state_name,c.city_name, br.branch_name, br.branch_code", '', $where . $sort, '');
    $remove = array("\n", "\r", "\n \r", "\t", ",");
    for ($i = 0; $i < count($auRec); $i++) {
        if ($auRec[$i]->order_status == 'A') {
            $status = "New Order";
            $color = "N";
        }
        if ($auRec[$i]->order_status == 'I') {
            $status = "Processed";
            $color = "I";
        }
        if ($auRec[$i]->order_status == 'D') {
            $status = "Dispatched";
            $color = "A";
        }

        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);
        /* Bill Type */
        $billTYPE = '';
        $billTYPE = '';
        switch (strtolower($auRec[$i]->bill_type)) {
            case 'apc':
                $billTYPE = "Advance Payment Collection";
                $bill_desc = $auRec[$i]->bill_desc;
                break;
            case 'ac':
                $billTYPE = "Advance Cheque";
                $bill_desc = $auRec[$i]->bill_desc;
                break;
            case 'fp':
                $billTYPE = "Flexible Plan";
                $bill_desc = $auRec[$i]->bill_desc;
                break;
        }

        switch ($auRec[$i]->order_by) {
            case 'S':
                $order_by = $AliaseUsers['salesman'];
                break;
            case "D":
                $order_by = $AliaseUsers['distributor'];
                break;
            case "R":
                $order_by = $AliaseUsers['retailer'];
                break;
            default :
                $order_by = '';
        }

        switch (strtolower($auRec[$i]->order_for)) {
            case 'r':
                $order_for = 'Retailer';
                break;
            case 'd':
                $order_for = 'Distributor';
                break;
        }
        if ($auRec[$i]->order_type == 'Yes') {
            if ($auRec[$i]->order_status == 'A') {
                $orderType = "Sales Order";
            }
            //$color = 'A';
        }
        if ($auRec[$i]->order_type == 'Return') {
            if ($auRec[$i]->order_status == 'A') {
                $orderType = "Return Order";
            }
            //$color = 'O';
        }
        if ($auRec[$i]->order_status != 'A') {
            $CheckOrderSts = $_objAdmin->_getSelectList2('table_order as o inner join table_order_detail as od on o.order_id = od.order_id', "od.quantity, od.acc_quantity, od.is_processed ", '', " o.order_id='" . $auRec[$i]->order_id . "' AND ((od.quantity = od.acc_quantity AND od.is_processed=0) OR (od.quantity >od.acc_quantity AND od.is_processed=1)) ");
            if (is_array($CheckOrderSts) && count($CheckOrderSts) > 0) {
                $orderStatus = 'Partially Pending';
            } else {
                $orderStatus = 'Fully Invoiced';
            }

        } else {
            $orderStatus = 'Fully Pending';
        }
        if ($orderStatus != "Fully Invoiced") {
            $data .= $order_for . "\t" . $date_of_order . "\t" . $auRec[$i]->time_of_order . "\t" .
                $auRec[$i]->order_id . "\t" . ROUND($auRec[$i]->acc_total_invoice_amount, 2) . "\t" . $billTYPE . "\t" . $bill_desc . "\t" . $auRec[$i]->distributor_name . "\t" . $auRec[$i]->distributor_code . "\t" . $auRec[$i]->salesman_name . "\t" . $auRec[$i]->employee_code . "\t" . $auRec[$i]->retailer_name . "\t" . $auRec[$i]->retailer_code . "\t" . $auRec[$i]->branch_name . "\t" . $auRec[$i]->branch_code . "\t" . $auRec[$i]->state_name . "\t" . str_replace($remove, ' ', $auRec[$i]->city_name) . "\t" . str_replace($remove, ' ', $auRec[$i]->location_name) . "\t" . str_replace($remove, ' ', $auRec[$i]->retailer_location) . "\t" . str_replace($remove, ' ', $auRec[$i]->retailer_address) . "\t" . $orderType . "\t" . $order_by . "\t" . $orderStatus . "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['retailer'] . "_Fully_Partial_Pending_Order_List.xls\"");
    echo $data;
    exit;
}

//Todo END : sudhanshu : 16 feb 2024 Fully/Partial Pending Order List

//Todo Start : Jatin :20 feb 2024 : Export project summary details

if (isset($_GET['export_project_summary_report'])) {

    $data = "Salesman Name\tSalesman Code\tProject Parent Type\tProject Source\tProject Code\tProject Name\tParent Name\tState\tDistrict\tCity\tPhone Number\tAddress\tAssign To\tStatus\tTotal Order Amount\tCreated Date\tUpdated Date\n";

    $salInCondi = '';
    //echo "<pre>"; print_r($_SESSION);
    if (isset($_SESSION['SelCondi']) && !empty($_SESSION['SelCondi'])) {
        $salInCondi = $_SESSION['SelCondi'];
    }
    $dateApplyon = 'created_on';
    if (isset($_SESSION['datetype']) && $_SESSION['datetype'] == 'updatedon') {
        $dateApplyon = 'updated_on';
    }
    if ($_SESSION['frmDate'] != '') {
        $fromdate = " and p." . $dateApplyon . " >= '" . date('Y-m-d', strtotime($_SESSION['frmDate'])) . "'";
    } else {
        $fromdate = " and p." . $dateApplyon . " >= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['toDate'] != '') {
        $todate = " and p." . $dateApplyon . " <= '" . date('Y-m-d', strtotime($_SESSION['toDate'])) . "'";
    } else {
        $todate = " and p." . $dateApplyon . " <= '" . date('Y-m-d') . "'";
    }
    $salesman = $_SESSION['SalIds'];
    $where = "  $fromdate $todate $salInCondi $salesman";

    $auRec = $_objAdmin->_getSelectList('table_project_master as p 
        left join table_parent_master par on par.id = p.parent_id
        left join table_project_contact_mapping as pcm on pcm.id = p.contact_id
        left join table_salesman as sa on sa.salesman_id = p.created_by
        left join table_salesman as s on s.salesman_id = p.assign_to
        left join state as st on st.state_id = p.state
        left join city as c on c.city_id = p.district
        left join table_location as loc on loc.location_id = p.city
        left join table_project_distributor_mapping as dism on dism.project_id = p.id
        left join table_parent_project_status_master as pms on p.project_status = pms.id
        left join table_distributors as d on d.distributor_id = dism.distributor_id',
        "p.id as project_id,p.*,st.state_name,loc.location_name,c.city_name,sa.salesman_name,sa.employee_code,pcm.*,d.distributor_code,par.parent_name,pms.project_status as status_name,s.salesman_name as assign_to,p.created_on as crt ,p.updated_on as upd", "", $where, '');


    $remove = array("\n", "\r\n", "\r", ",");
    for ($i = 0; $i < count($auRec); $i++) {

        //Todo Start : sudhanshu 25 june 2024 cahnge parent type logic
        if ($auRec[$i]->parent_type == '1') {
            $type = 'Existing';
        } else if ($auRec[$i]->parent_type == '2') {
            $type = 'New';
        } else if ($auRec[$i]->parent_type == '3') {
            $type = 'No Parent';
        } else {
            $type = '';
        }
        //Todo End : sudhanshu 25 june 2024 cahnge parent type logic

        $data .= str_replace($remove, '', ucwords(addslashes($auRec[$i]->salesman_name)));
        $data .= "\t";
        $data .= str_replace($remove, '', ucwords(addslashes($auRec[$i]->employee_code)));
        $data .= "\t";
        $data .= str_replace($remove, '', ucwords($type));
        $data .= "\t";
        $data .= str_replace($remove, '', ucwords(addslashes($auRec[$i]->project_source)));
        $data .= "\t";
        $data .= str_replace($remove, '', ucwords(addslashes($auRec[$i]->project_code)));
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->project_name);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->parent_name);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->state_name);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->city_name);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->location_name);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->phoneno);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->Address);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->assign_to);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->status_name);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->total_order_amount);
        $data .= "\t";
        $data .= $_objAdmin->_changeDate($auRec[$i]->crt);
        $data .= "\t";
        $data .= $_objAdmin->_changeDate($auRec[$i]->upd);


        $data .= "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=project_summary_report.xls");
    echo $data;
    exit;
}


// if (isset($_GET['export_project_status_report_details'])) {

//     $data = "Activity Date\tSalesman Name\tSalesman Code\tProject Parent Type\tProject Source\tProject Code\tProject Name\tParent Name\tState\tDistrict\tCity\tPhone Number\tAddress\tAssign To\tContact Name\tContact Number\tContact Designation\tStatus\tRemarks\tReminder Comment\tReminder Date\tReminder Time\tOrder Amount\tCreated Date\n";

//     $salInCondi = '';


    
//     if (isset($_SESSION['SelCondi']) && !empty($_SESSION['SelCondi'])) {
//         $salInCondi = ' and ' . $_SESSION['SelCondi'];
//     }
//     $dateApplyon = 'created_on';
//     if (isset($_SESSION['datetype']) && $_SESSION['datetype'] == 'updatedon') {
//         $dateApplyon = 'updated_on';
//     }
//     if ($_SESSION['frmDate'] != '') {
//         $fromdate = "p." . $dateApplyon . " >= '" . date('Y-m-d', strtotime($_SESSION['frmDate'])) . "'";
       
//     } else {
//         $fromdate = "p." . $dateApplyon . " >= '" . date('Y-m-d') . "'";
        
//     }
//     if ($_SESSION['toDate'] != '') {
//         $todate = " and p." . $dateApplyon . " <= '" . date('Y-m-d', strtotime($_SESSION['toDate'])) . "'";
//     } else {
//         $todate = " and p." . $dateApplyon . " <= '" . date('Y-m-d') . "'";
//     }
//     $salesman = $_SESSION['SalIds'];
//     $where = "  $fromdate $todate $salInCondi $salesman";
//     // echo "<pre>"; print_r($where); die();
//     $auRec = $_objAdmin->_getSelectList(
//         'table_project_master as p 
//             LEFT JOIN table_project_details as delId ON delId.project_id = p.id 
//             LEFT JOIN table_parent_master par ON par.id = p.parent_id
//             LEFT JOIN table_project_contact_mapping as pcm ON pcm.id = delId.contact_id
//             LEFT JOIN table_salesman as sa ON sa.salesman_id = p.created_by
//             LEFT JOIN table_salesman as s ON s.salesman_id = p.assign_to
//             LEFT JOIN state as st ON st.state_id = p.state
//             LEFT JOIN city as c ON c.city_id = p.district
//             LEFT JOIN table_location as loc ON loc.location_id = p.city
//             LEFT JOIN table_project_distributor_mapping as dism ON dism.project_id = p.id
//             LEFT JOIN table_parent_project_status_master as pms ON delId.project_status = pms.id
//             LEFT JOIN table_parent_contact_designation_master as pcd ON pcd.id = pcm.contact_designation
//             LEFT JOIN table_distributors as d ON d.distributor_id = dism.distributor_id',
//         "p.id as project_id, p.*, st.state_name, loc.location_name, c.city_name, sa.salesman_name, sa.employee_code, pcm.*, d.distributor_code, par.parent_name, pms.project_status as status_name, s.salesman_name as assign_too, p.created_on as crt, p.updated_on as upd, delId.*, pcd.designation", 
//         "", 
//         $where, 
//         ''
//     );

//     //  echo "<pre>"; print_r($where); die();
//     $remove = array("\n", "\r\n", "\r", ",");
//     for ($i = 0; $i < count($auRec); $i++) {

//         //Todo Start : sudhanshu 25 june 2024 cahnge parent type logic
//         if ($auRec[$i]->parent_type == '1') {
//             $type = 'Existing';
//         } else if ($auRec[$i]->parent_type == '2') {
//             $type = 'New';
//         } else if ($auRec[$i]->parent_type == '3') {
//             $type = 'No Parent';
//         } else {
//             $type = '';
//         }
//         //Todo End : sudhanshu 25 june 2024 cahnge parent type logic
//         $data .= $_objAdmin->_changeDate($auRec[$i]->upd);
//         $data .= "\t";
//         $data .= str_replace($remove, '', ucwords(addslashes($auRec[$i]->salesman_name)));
//         $data .= "\t";
//         $data .= str_replace($remove, '', ucwords(addslashes($auRec[$i]->employee_code)));
//         $data .= "\t";
//         $data .= str_replace($remove, '', ucwords($type));
//         $data .= "\t";
//         $data .= str_replace($remove, '', ucwords(addslashes($auRec[$i]->project_source)));
//         $data .= "\t";
//         $data .= str_replace($remove, '', ucwords(addslashes($auRec[$i]->project_code)));
//         $data .= "\t";
//         $data .= str_replace($remove, '', $auRec[$i]->project_name);
//         $data .= "\t";
//         $data .= str_replace($remove, '', $auRec[$i]->parent_name);
//         $data .= "\t";
//         $data .= str_replace($remove, '', $auRec[$i]->state_name);
//         $data .= "\t";
//         $data .= str_replace($remove, '', $auRec[$i]->city_name);
//         $data .= "\t";
//         $data .= str_replace($remove, '', $auRec[$i]->location_name);
//         $data .= "\t";
//         $data .= str_replace($remove, '', $auRec[$i]->phoneno);
//         $data .= "\t";
//         $data .= str_replace($remove, '', $auRec[$i]->Address);
//         $data .= "\t";
//         $data .= str_replace($remove, '', $auRec[$i]->assign_too);
//         $data .= "\t";
//         $data .= str_replace($remove, '', $auRec[$i]->contact_name);
//         $data .= "\t";
//         $data .= str_replace($remove, '', $auRec[$i]->contact_no);
//         $data .= "\t";
//         $data .= str_replace($remove, '', $auRec[$i]->designation);
//         $data .= "\t";
//         $data .= str_replace($remove, '', $auRec[$i]->status_name);
//         $data .= "\t";
//         $data .= str_replace($remove, '', $auRec[$i]->remarks);
//         $data .= "\t";
//         $data .= str_replace($remove, '', $auRec[$i]->reminder_comment);
//         $data .= "\t";
//         $data .= $_objAdmin->_changeDate($auRec[$i]->reminder_date);
//         $data .= "\t";
//         $data .= str_replace($remove, '', ($auRec[$i]->reminder_time != '00:00:00') ? $auRec[$i]->reminder_time : '');
//         $data .= "\t";
//         $data .= str_replace($remove, '', $auRec[$i]->order_amount);
//         $data .= "\t";
//         $data .= $_objAdmin->_changeDate($auRec[$i]->crt);

//         $data .= "\n";
//     }
//     header("Content-type: application/octet-stream");
//     header("Content-Disposition: attachment; filename=project_summary_detail_report.xls");
//     echo $data;
//     exit;
// }
// //Todo End : Jatin :20 feb 2024 : Export project summary details




//Rohit 

if (isset($_GET['export_project_status_report_details'])) {

    $data = "Activity Date\tActivity Time\tSalesman Name\tSalesman Code\tProject Parent Type\tProject Source\tProject Code\tProject Name\tParent Name\tState\tDistrict\tCity\tPhone Number\tAddress\tAssign To\tContact Name\tContact Number\tContact Designation\tStatus\tRemarks\tReminder Comment\tReminder Date\tReminder Time\tOrder Amount\tCreated Date\n";

    $salInCondi = '';
    //echo "<pre>"; print_r($_SESSION);
    if (isset($_SESSION['SelCondi']) && !empty($_SESSION['SelCondi'])) {
        $salInCondi = ' and ' . $_SESSION['SelCondi'];
    }
    $dateApplyon = 'created_on';
    if (isset($_SESSION['datetype']) && $_SESSION['datetype'] == 'updatedon') {
       
    
        if ($_SESSION['frmDate'] != '') {
            $fromdate = " and DATE(delId." . $dateApplyon . ") >= '" . date('Y-m-d', strtotime($_SESSION['frmDate'])) . "'";
        } else {
            $fromdate = " and DATE(delId." . $dateApplyon . ") >= '" . date('Y-m-d') . "'";
        }
        if ($_SESSION['toDate'] != '') {
            $todate = " and DATE(delId." . $dateApplyon . ") <= '" . date('Y-m-d', strtotime($_SESSION['toDate'])) . "'";
        } else {
            $todate = " and DATE(delId." . $dateApplyon . ") <= '" . date('Y-m-d') . "'";
        }

    }
    else
    {
        if ($_SESSION['frmDate'] != '') {
            $fromdate = " and DATE(p." . $dateApplyon . ") >= '" . date('Y-m-d', strtotime($_SESSION['frmDate'])) . "'";
        } else {
            $fromdate = " and DATE(p." . $dateApplyon . ") >= '" . date('Y-m-d') . "'";
        }
        if ($_SESSION['toDate'] != '') {
            $todate = " and DATE(p." . $dateApplyon . ") <= '" . date('Y-m-d', strtotime($_SESSION['toDate'])) . "'";
        } else {
            $todate = " and DATE(p." . $dateApplyon . ") <= '" . date('Y-m-d') . "'";
        }
    }

    $salesman = $_SESSION['SalIds'];
    $where = "  $fromdate $todate $salInCondi $salesman";

    //echo"<pre>" ; print_r($where);die;

    $auRec = $_objAdmin->_getSelectList('table_project_master as p 
     
        left join table_project_details as delId on delId.project_id = p.id 
        left join table_parent_master par on par.id = p.parent_id
        left join table_project_contact_mapping as pcm on pcm.id = delId.contact_id
        left join table_salesman as sa on sa.salesman_id = p.created_by
        left join table_salesman as s on s.salesman_id = p.assign_to
        left join state as st on st.state_id = p.state
        left join city as c on c.city_id = p.district
        left join table_location as loc on loc.location_id = p.city
        left join table_project_distributor_mapping as dism on dism.project_id = p.id
        left join table_parent_project_status_master as pms on delId.project_status = pms.id
        left join table_parent_contact_designation_master as pcd on pcd.id = pcm.contact_designation
        left join table_distributors as d on d.distributor_id = dism.distributor_id',
        "p.id as project_id,p.*,st.state_name,loc.location_name,c.city_name,sa.salesman_name,sa.employee_code,pcm.*,d.distributor_code,par.parent_name,pms.project_status as status_name,delId.created_on as project_update_date,s.salesman_name as assign_too,p.created_on as crt ,p.updated_on as upd,delId.*,pcd.designation", "", $where, '');

// echo "<pre>";
// print_r($auRec);die;

    $remove = array("\n", "\r\n", "\r", ",");
    for ($i = 0; $i < count($auRec); $i++) {

        //Todo Start : sudhanshu 25 june 2024 cahnge parent type logic
        if ($auRec[$i]->parent_type == '1') {
            $type = 'Existing';
        } else if ($auRec[$i]->parent_type == '2') {
            $type = 'New';
        } else if ($auRec[$i]->parent_type == '3') {
            $type = 'No Parent';
        } else {
            $type = '';
        }

        $activity_time='00:00:00';
        if(!empty($auRec[$i]->time))
        {
           $activity_time = $auRec[$i]->time;
        }
        
        //Todo End : sudhanshu 25 june 2024 cahnge parent type logic
        $data .= $_objAdmin->_changeDate($auRec[$i]->project_update_date);
        $data .= "\t";
        $data .= $activity_time;
        $data .= "\t";
        $data .= str_replace($remove, '', ucwords(addslashes($auRec[$i]->salesman_name)));
        $data .= "\t";
        $data .= str_replace($remove, '', ucwords(addslashes($auRec[$i]->employee_code)));
        $data .= "\t";
        $data .= str_replace($remove, '', ucwords($type));
        $data .= "\t";
        $data .= str_replace($remove, '', ucwords(addslashes($auRec[$i]->project_source)));
        $data .= "\t";
        $data .= str_replace($remove, '', ucwords(addslashes($auRec[$i]->project_code)));
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->project_name);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->parent_name);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->state_name);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->city_name);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->location_name);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->phoneno);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->Address);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->assign_too);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->contact_name);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->contact_no);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->designation);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->status_name);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->remarks);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->reminder_comment);
        $data .= "\t";
        $data .= $_objAdmin->_changeDate($auRec[$i]->reminder_date);
        $data .= "\t";
        $data .= str_replace($remove, '', ($auRec[$i]->reminder_time != '00:00:00') ? $auRec[$i]->reminder_time : '');
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->order_amount);
        $data .= "\t";
        $data .= $_objAdmin->_changeDate($auRec[$i]->crt);

        $data .= "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=project_summary_detail_report.xls");
    echo $data;
    exit;
}



//rohit








// Todo Start : Jatin : 22 Feb 2024 : export feature listing
if (isset($_GET['export_feature_list'])) {
    $data = "Feature Id\t Feature Name\n";
    $condi = ' order by feature_id asc';
    $auRec = $_objAdmin->_getSelectList2('table_feature',
        "*", '', $condi);
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . $auRec[$i]->feature_id . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->feature_name . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"feature_listing.xls\"");
    echo $data;
    exit;
}
// Todo End : Jatin : 22 Feb 2024 : export feature listing

//Todo Start: Sudhanshu: 06 sep 2023:  Start Export Grade List
if (isset($_GET['export_cn_dn_reason'])) {
    $data = "Reason\tLast Updated\n";
    $auRec = $_objAdmin->_getSelectList('table_cn_dn_reason_master', "reason,updated", '', '');
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $updated = $_objAdmin->_changeDate($auRec[$i]->updated);
            $data .= '"' . $auRec[$i]->reason . '"';
            $data .= "\t";
            $data .= '"' . $updated . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"cn_dn_reason.xls\"");
    echo $data;
    exit;
}

// Todo Start : Jatin : 26 Feb 2024 : stockist cancel order report

if (isset($_GET['export_stockist_pending_cancel_order_list'])) {

    $data = $AliaseUsers['stockist'] . " Code \t" . $AliaseUsers['stockist'] . " Name\tOrder Number\tOrder Status \tDate\tTime\tTotal Order Amount\tState\tCity\tMarket\tAddress\tCancellation Date\tCancellation Remark\tCancel By User Type\tCancel By\tOrder Type\n";

    $sort = " ORDER BY o.date_of_order desc,o.time_of_order desc";

    $validated_default_date = date("Y-m-d", strtotime("-7 days"));
    // Todo sudhanshu 01 may 2024 : change from session nanme FromOrderList to FromDisList
    if ($_SESSION['FromDisList'] != '') {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['FromDisList'])) . "'";
    } else {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d') . "'";
    }
    //Todo sudhanshu 01 may 2024 : change time session name ToOrderList to ToDisList
    if ($_SESSION['ToDisList'] != '') {
        $todate = " and o.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToDisList'])) . "'";
    } else {
        $todate = " and o.date_of_order <= '" . date('Y-m-d') . "'";
    }

    if (isset($_SESSION['stockistId']) && $_SESSION['stockistId'] > 0) {
        $disLogCond = " AND o.stockist_id='" . $_SESSION['stockistId'] . "' ";
    } else {
        $disLogCond = "";
    }


    $where = "  AND o.order_status !='D' AND o.order_status IN('A', 'C') AND 
	order_type IN('Yes', 'Return', 'Adhoc') AND o.stockist_id!='' $disLogCond $salesman $fromdate $todate  AND o.account_id =" . $_SESSION['accountId'];
    $auRec = $_objAdmin->_getSelectList('table_stockist_order as o
  	left join table_stockist as d on d.stockist_id=o.stockist_id
  	left join state as st on st.state_id=d.state
  	left join city as c on c.city_id=d.city',
        "o.*,d.*, st.state_name, c.city_name", '', $where . $sort, '');

    $remove = array("\n", "\r", "\n \r", "\t", ",");
    for ($i = 0; $i < count($auRec); $i++) {

        if ($auRec[$i]->order_type == 'Yes') {

            $orderid = $auRec[$i]->order_id;

            if ($auRec[$i]->order_status == 'A') {
                $status = "New Order";
            }

            if ($auRec[$i]->order_status == 'C') {
                $status = "Cancelled";
            }

        }
        if ($auRec[$i]->order_type == 'No') {
            $status = ($auRec[$i]->order_status == 'A') ? "No Order" : "Processed";
            $color = ($auRec[$i]->order_status == 'A') ? "I" : "P";
        }
        if ($auRec[$i]->order_type == 'Adhoc') {
            if ($auRec[$i]->order_status == 'A') {
                $status = "New Adhoc Order";
            }
            if ($auRec[$i]->order_status == 'C') {
                $status = "Cancelled";
            }

            $color = ($auRec[$i]->order_status == 'A') ? "O" : "P";
        }
        if ($auRec[$i]->order_type == 'Return') {
            if ($auRec[$i]->order_status == 'A') {
                $status = "Return Order";
            }
            if ($auRec[$i]->order_status == 'C') {
                $status = "Cancelled";
            }


        }

        if ($auRec[$i]->cancellation_date != '0000-00-00 00:00:00') {
            $cancel_date = $_objAdmin->_changeDate($auRec[$i]->cancellation_date);
        } else {
            $cancel_date = '';
        }

        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);

        if ($auRec[$i]->order_status == 'C') {
            $orderStatus = 'Cancelled';
        } else if ($auRec[$i]->order_status != 'A') {
            $CheckOrderSts = $_objAdmin->_getSelectList('table_stockist_order as o 
	  inner join table_stockist_order_detail as od on o.order_id = od.order_id',
                "od.quantity, od.acc_quantity,od.is_processed ", '', " o.order_id='" . $auRec[$i]->order_id . "' 
		AND ((od.quantity = od.acc_quantity AND od.is_processed=0) OR (od.quantity > od.acc_quantity AND od.is_processed=1)) 
		and od.free_item_id = 0");

            if (is_array($CheckOrderSts) && count($CheckOrderSts) > 0) {
                $orderStatus = 'Partially Pending';
            } else {
                $orderStatus = 'Fully Invoiced';
            }
        } else {
            $orderStatus = 'Fully Pending';
        }

        if ($auRec[$i]->order_type == 'Yes') {
            $orderType = "Sales Order";
        }
        if ($auRec[$i]->order_type == 'Return') {
            $orderType = "Return Order";
            //$color = 'O';
        }

        //Todo Start : Sudhanshu 01 May 2024 : add cancel by column
        $cancelByUserType = '';
        $cancel_by = '';
        if (strtolower($auRec[$i]->cancel_by_user_type) == 'admin') {
            $cancelByUserType = 'Admin';
            $cancel_by = 'Admin';
        } elseif (strtolower($auRec[$i]->cancel_by_user_type) == 'stockist') {
            $cancelByUserType = 'Stockist';
            $cancel_by = $auRec[$i]->stockist_name;
        }
        //Todo End : Sudhanshu 01 May 2024 : add cancel by column
        //if ($orderStatus != "Fully Invoiced") {
        $data .= '"' . $auRec[$i]->stockist_code . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->stockist_name . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->order_id . '"';
        $data .= "\t";
        $data .= '"' . $orderStatus . '"';
        $data .= "\t";
        $data .= '"' . $date_of_order . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->time_of_order . '"';
        $data .= "\t";
        $data .= '"' . ROUND($auRec[$i]->acc_total_invoice_amount, 2) . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->state_name . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->city_name . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->stockist_location . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->stockist_address . '"';
        $data .= "\t";
        $data .= '"' . $cancel_date . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->remark . '"';
        $data .= "\t";
        $data .= '"' . $cancelByUserType . '"';
        $data .= "\t";
        $data .= '"' . $cancel_by . '"';
        $data .= "\t";
        $data .= '"' . $orderType . '"';
        $data .= "\n";
        //}
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['stockist'] . " Cancel Order List.xls\"");
    echo $data;
    exit;
}

// Todo End : Jatin : 26 Feb 2024 : stockist cancel order report
// Todo End : Jatin : 26 Feb 2024 : stockist cancel order report
if (isset($_GET['export_survey_feedback_scorecard'])) {
    $data = "<table>";
    $data .= "<tr><td colspan='7' style='border:1px solid;'></td>";
    $fromdate = date('Y-m-d', strtotime($_SESSION['Fromdate']));
    $todate = date('Y-m-d', strtotime($_SESSION['Todate']));

    $retTypeCond = " OR rtm.retailer_type_id=" . $_SESSION['ret_type'];
    $dateCond = " AND ((sm.from_date <='" . $fromdate . "' AND sm.to_date >='" . $todate . "') 
									OR (sm.from_date >='" . $fromdate . "' AND sm.to_date <='" . $todate . "') 
									OR (sm.from_date >='" . $fromdate . "' AND sm.from_date <='" . $todate . "' AND sm.to_date >='" . $todate . "') 
									OR (sm.from_date <='" . $fromdate . "' AND sm.to_date >='" . $fromdate . "' AND sm.to_date <='" . $todate . "'))";


    $account_id = $_SESSION['accountId'];
    $SurArr1 = $_objAdmin->_getSelectList2("table_feedback_survey_master as sm 
					left join table_survey_ret_type_mapping as rtm on rtm.survey_id=sm.survey_id AND rtm.status='A' ",
        "sm.survey_id,sm.survey_name,sm.survey_code", "",
        "sm.account_id=" . $account_id . " and sm.status = 'A' AND sm.is_verified = 1 
					AND (sm.is_all_retailer_type = 1 $retTypeCond) $dateCond
					group by sm.survey_id,sm.survey_name,sm.survey_code order by sm.survey_name ASC");
    $innerSurdata = '';
    foreach ($SurArr1 as $key => $survey) {
        $innerSurdata .= "<td colspan='3' style='border:1px solid;'>" . $survey->survey_name . "</td>";
    }
    $data .= $innerSurdata . "</tr>";
    $data .= "<td style='border:1px solid;'>Visit Date</td><td style='border:1px solid;'>" . $AliaseUsers['retailer'] . " Type</td><td style='border:1px solid;'>" .
        $AliaseUsers['retailer'] . " Code</td><td style='border:1px solid;'>" . $AliaseUsers['retailer'] . " Name</td><td style='border:1px solid;'>" .
        " Total Points Defined</td><td style='border:1px solid;'>" . " Total Points Achieved</td><td style='border:1px solid;'> " . " Achieved Percentage</td>";
    foreach ($SurArr1 as $key => $survey) {
        $data .= "<td style='border:1px solid;'>Defined Points</td><td style='border:1px solid;'>Achieved Points</td><td style='border:1px solid;'>Achieved Percentage</td>";

    }
    $data .= "</tr>";


    //Get survey defined points
    $surveyDefinedPoints = array();
    $SurPointArr1 = $_objAdmin->_getSelectList2("table_feedback_survey_master as sm 
					left join `table_feedback_survey_ans_type_group` as tg on tg.survey_id=sm.survey_id
					left join table_question_ans_type_options as ato on ato.survey_id=tg.survey_id and tg.group_id=ato.group_id",
        "sm.survey_id,SUM(if(ato.option_description ='Not Available',0,1)) as achieved_points", "",
        "sm.account_id=" . $account_id . " and sm.status = 'A' AND sm.is_verified = 1 and tg.status='A' AND tg.ans_type_id IN(3,4) $dateCond
					group by sm.survey_id order by sm.survey_id ASC");
    if (count($SurPointArr1) > 0) {
        foreach ($SurPointArr1 as $key => $surveyPoints) {
            $surveyDefinedPoints[$surveyPoints->survey_id] = $surveyPoints->achieved_points;
        }
    }


    $retTypeCond = " AND tm.type_id=" . $_SESSION['ret_type'];
    //Get Survey transaction
    $surActivityArr1 = $_objAdmin->_getSelectList("table_feedback_survey_activity as sa 
					left join table_retailer as r on r.retailer_id=sa.retailer_id
					left join table_retailer_type_master as tm on tm.type_id=r.type_id
					inner join table_feedback_survey_activity_question as aq on aq.activity_id=sa.activity_id  
					left join table_question_ans_type_options as mto on mto.option_id=aq.ans_type_group_option_id",
        "sa.retailer_id,sa.survey_id,sa.activity_date,r.retailer_name,
					r.retailer_code,tm.type_name,SUM(if(mto.option_description ='Not Available',0,1)) as achieved_points", "", "sa.activity_date BETWEEN '" . $fromdate . "' AND '" . $todate . "' and aq.ans_type_id IN(3,4)  
					$retTypeCond group by  sa.retailer_id,sa.survey_id,sa.activity_date ORDER BY sa.activity_date,r.retailer_name ASC");

    //get achieved points
    $surveyAchvedPoints = array();
    if (count($surActivityArr1) > 0) {
        foreach ($surActivityArr1 as $key => $surveyAPoints) {
            $surveyAchvedPoints[$surveyAPoints->retailer_id][$surveyAPoints->activity_date][$surveyAPoints->survey_id] = $surveyAPoints->achieved_points;
        }
    }
    $surveyRowArr = array();
    if (count($surActivityArr1) > 0) {
        foreach ($surActivityArr1 as $key => $surveyAPoints) {
            $surveyRowArr[$surveyAPoints->retailer_id][$surveyAPoints->activity_date] = $surveyAPoints;
        }
    }


    /***************Get row wise total******************/
    $rowwisetotal = array();
    foreach ($surveyRowArr as $retid => $retArr) {
        foreach ($retArr as $activityDate => $valueS) {
            $total_defined = $total_achv = 0;
            foreach ($SurArr1 as $key => $survey) {
                $defindPoints = $achvPoints = 0;
                $defindPoints = ((isset($surveyDefinedPoints[$survey->survey_id])) ? $surveyDefinedPoints[$survey->survey_id] : 0);
                $achvPoints = ((isset($surveyAchvedPoints[$retid][$activityDate][$survey->survey_id])) ? $surveyAchvedPoints[$retid][$activityDate][$survey->survey_id] : 0);
                //$achvPercent  = ROUND((($achvPoints/$defindPoints)*100),2);
                //echo $total_defined." = (".$total_defined."+".$defindPoints.")"; echo "<br>";
                $total_defined = ($total_defined + $defindPoints);
                $total_achv = ($total_achv + $achvPoints);
            }

            $rowwisetotal[$retid][$activityDate] = array('defined' => $total_defined, 'achve' => $total_achv, 'achvper' => ROUND((($total_achv / $total_defined) * 100), 2));
        }
    }
    foreach ($surveyRowArr as $retid => $retArr) {
        foreach ($retArr as $activityDate => $valueS) {
            $data .= "<tr>" .
                $innerdata = "";
            $data .= "<td style='border:1px solid;'>" . $_objAdmin->_changeDate($activityDate) . "</td>" .
                "<td style='border:1px solid;'>" . $valueS->type_name . "</td>" .
                "<td style='border:1px solid;'>" . $valueS->retailer_code . "</td>" .
                "<td style='border:1px solid;'>" . $valueS->retailer_name . "</td>" .
                "<td style='border:1px solid;'>" . $rowwisetotal[$retid][$activityDate]['defined'] . "</td>" .
                "<td style='border:1px solid;'>" . $rowwisetotal[$retid][$activityDate]['achve'] . "</td>" .
                "<td style='border:1px solid;'>" . $rowwisetotal[$retid][$activityDate]['achvper'] . "</td>";

            foreach ($SurArr1 as $key => $survey) {
                $defindPoints = $achvPoints = $achvPercent = 0;

                $defindPoints = ((isset($surveyDefinedPoints[$survey->survey_id])) ? $surveyDefinedPoints[$survey->survey_id] : 0);
                $achvPoints = ((isset($surveyAchvedPoints[$retid][$activityDate][$survey->survey_id])) ? $surveyAchvedPoints[$retid][$activityDate][$survey->survey_id] : 'NA');
                if ($achvPoints != 'NA') {
                    $achvPercent = ROUND((($achvPoints / $defindPoints) * 100), 2);
                }

                $innerdata .= "<td style='border:1px solid;'>" . $defindPoints . "</td><td style='border:1px solid;'>" . $achvPoints . "</td><td style='border:1px solid;'>" . $achvPercent . "</td>";
            }
            $data .= $innerdata . "</tr>";
        }
    }
    $data .= "</table>";
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Survey Scorecard Report.xls\"");
    echo $data;
    exit;
}

//Todo Start: Sudhanshu: 28 Feb 2024:  Category Wise order report
if (isset($_GET['export_dynamic_category_wise_order'])) {
    $data = "Category Name\tCategory Code\tOrdered Quantity\tOrder Amount\n";
    $sort = " ORDER BY date_of_order desc, time_of_order desc ";
    $queryConditions = '';
    if (isset($_SESSION['fil_from']) && !empty($_SESSION['fil_from'])) {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['fil_from'])) . "'";
    } else {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d') . "'";
    }
    if (isset($_SESSION['fil_to']) && !empty($_SESSION['fil_to'])) {
        $todate = " and o.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['fil_to'])) . "'";
    } else {
        $todate = " and o.date_of_order <= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['userLoginType'] == 3 && $_SESSION['distributorId'] != "" && $_SESSION['distributorId'] > 0) {
        $queryConditions .= " AND o.distributor_id=" . $_SESSION['distributorId'];
    }

    if ($_SESSION['userLoginType'] == 7 && $_SESSION['stockistId'] != "" && $_SESSION['stockistId'] > 0) {
        $queryConditions .= " AND d.stockist_id=" . $_SESSION['stockistId'];

    }

    $salesmanCnd = "";
    if ($_SESSION['userLoginType'] == 5) {
        $salesmanCnd = str_replace("s.", "o.", $salesman);
    }

    if (isset($_SESSION['fil_category']) && !empty($_SESSION['fil_category']) && $_SESSION['fil_category'] > 0) {
        $queryConditions .= " AND c.category_id = '" . $_SESSION['fil_category'] . "' ";
    }


    if (isset($_SESSION['fil_month']) && !empty($_SESSION['fil_month']) && isset($_SESSION['fil_year']) && !empty($_SESSION['fil_year'])) {
        $firstDate = date('Y-m-d', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
        $lastdate = date('Y-m-t', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
        $fromdate = " and o.date_of_order >= '" . $firstDate . "'";
        $todate = " and o.date_of_order <= '" . $lastdate . "'";
    }


    $queryConditions = $queryConditions . $salesmanCnd . $fromdate . $todate;


    $where = $queryConditions;

    $auRec = $_objAdmin->_getSelectList("table_order as o    
left join table_order_detail as ord on o.order_type != 'No' and ord.order_id = o.order_id and ord.type = 1
left join table_item as i on i.item_id = ord.item_id
left join table_category as c on i.category_id = c.category_id       
",
        "o.order_id,o.order_by,SUM(ord.acc_quantity) as total_ordered_qty,SUM(o.acc_total_invoice_amount) as order_amount,
 c.category_name,c.category_code", '', $where . " group by c.category_id " . $sort, '');


    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {

            $data .= '"' . $auRec[$i]->category_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->category_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->total_ordered_qty . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->order_amount . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"dynamic category wise order report.xls\"");
    echo $data;
    exit;
}
//Todo end: Sudhanshu: 28 Feb 2024:  Category Wise order report


//Todo Start: Sudhanshu: 28 Feb 2024:  export dymanic retailer available stock.

if (isset($_GET['export_dynamic_retailer_pcs_cases_available_stock'])) {
    $data = "Distributor Name\tDistributor Code\tDistributor Zone\tDistributor State\t Distributor District\tRetailer Name\t Retailer Code\t Retailer Channel \t Retailer Type\tRoute Name\t Retailer Zone\t Retailer State \t Retailer District\t Salesman Name\t Salesman Code\t Salseman Zone\t Salesman State\t Salesman District \t Category Name\t Item Name\t Item Code\t Brand Name\t Qty In Pcs \t Qty In Kg\t Qty In Cases\t Grams\tDate of Orde\t Time of Order\n";
    $sort = " ORDER BY date_of_order desc, time_of_order desc ";

    $queryConditions = '';
    if (isset($_SESSION['fil_from']) && !empty($_SESSION['fil_from'])) {
        $fromdate = " and O.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['fil_from'])) . "'";
    } else {
        $fromdate = " and O.date_of_order >= '" . date('Y-m-d') . "'";
    }
    if (isset($_SESSION['fil_to']) && !empty($_SESSION['fil_to'])) {
        $todate = " and O.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['fil_to'])) . "'";
    } else {
        $todate = " and O.date_of_order <= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['userLoginType'] == 3 && $_SESSION['distributorId'] != "" && $_SESSION['distributorId'] > 0) {
        $queryConditions .= " AND O.distributor_id=" . $_SESSION['distributorId'];
    } else if (isset($_SESSION['fil_distributor']) && !empty($_SESSION['fil_distributor']) && $_SESSION['fil_distributor'] > 0) {
        $queryConditions .= " AND O.distributor_id=" . $_SESSION['fil_distributor'];
    }


    if ($_SESSION['userLoginType'] == 7 && $_SESSION['stockistId'] != "" && $_SESSION['stockistId'] > 0) {
        $queryConditions .= " AND Dis.stockist_id=" . $_SESSION['stockistId'];

    } else if (isset($_SESSION['fil_stockist']) && !empty($_SESSION['fil_stockist']) && $_SESSION['fil_stockist'] > 0) {
        $queryConditions .= " AND Dis.stockist_id=" . $_SESSION['fil_stockist'];
    }

    $salesmanCnd = "";
    $salesman = $_SESSION['har_salesIds'];
    if ($_SESSION['userLoginType'] == 5) {
        $salesmanCnd = str_replace("s.", "O.", $salesman);
    }


    if (isset($_SESSION['fil_salesman']) && !empty($_SESSION['fil_salesman']) && $_SESSION['fil_salesman'] > 0) {
        $salesmanCnd = " AND O.salesman_id=" . $_SESSION['fil_salesman'];
    } else if (isset($_SESSION['fil_salesman_manager']) && ($_SESSION['fil_salesman_manager'] > 0)) {
        $salesmanManagerId = $_SESSION['fil_salesman_manager'];
        $account_id = $_SESSION['accountId'];
        $res = $this->_getSelectList2('table_salesman_hierarchy_relationship AS SHR 
            LEFT JOIN table_salesman_hierarchy AS SH ON SH.hierarchy_id = SHR.hierarchy_id
            LEFT JOIN table_salesman AS s ON s.salesman_id = SHR.salesman_id', 's.salesman_id,SH.hierarchy_id,SH.sort_order', '', " SH.account_id=" . $account_id . " AND SHR.salesman_id = $salesmanManagerId ORDER BY SH.sort_order ASC ");

        if (is_array($res) && (count($res) > 0)) {
            $sortOrder = $res[0]->sort_order;
            $_objArrayList = new ArrayList();
            $getBottomUsersIdArr = $_objArrayList->getSalesmansBottomUsers(array($salesmanManagerId), $sortOrder, $account_id);

            if (is_array($getBottomUsersIdArr) && (count($getBottomUsersIdArr) > 0)) {
                $bottomUsersIds = implode(',', $getBottomUsersIdArr);
            }

            $salesmanCnd = " AND O.salesman_id IN($bottomUsersIds) ";
        }
    } else if (isset($_SESSION['fil_salesman_designation']) && ($_SESSION['fil_salesman_designation'] > 0)) {
        $_objArrayList = new ArrayList();
        $account_id = $_SESSION['accountId'];
        $getDesignationWiseBottomUsersIdArr = $_objArrayList->getDesignationWiseBottomUsers($_SESSION['fil_salesman_designation'], $account_id);

        if (is_array($getDesignationWiseBottomUsersIdArr) && (count($getDesignationWiseBottomUsersIdArr) > 0)) {
            $bottomUsersIds = implode(',', $getDesignationWiseBottomUsersIdArr);
            $salesmanCnd .= " AND O.salesman_id IN($bottomUsersIds) ";
        }
    } else {
        $salesmanCnd .= '';
    }

    if (isset($_SESSION['fil_category']) && !empty($_SESSION['fil_category']) && $_SESSION['fil_category'] > 0) {
        $queryConditions .= " AND c.category_id = '" . $_SESSION['fil_category'] . "' ";
    }


    if (isset($_SESSION['fil_retailer']) && !empty($_SESSION['fil_retailer']) && $_SESSION['fil_retailer'] > 0) {
        $queryConditions .= " AND O.retailer_id=" . $_SESSION['fil_retailer'];
    }
    if (isset($_SESSION['fil_salesman_state']) && !empty($_SESSION['fil_salesman_state']) && $_SESSION['fil_salesman_state'] > 0) {
        $queryConditions .= " AND sts.state=" . $_SESSION['fil_salesman_state'];
    }
    if (isset($_SESSION['fil_retailer_state']) && !empty($_SESSION['fil_retailer_state']) && $_SESSION['fil_retailer_state'] > 0) {
        $queryConditions .= " AND str.state=" . $_SESSION['fil_retailer_state'];
    }
    if (isset($_SESSION['fil_distributor_state']) && !empty($_SESSION['fil_distributor_state']) && $_SESSION['fil_distributor_state'] > 0) {
        $queryConditions .= " AND std.state=" . $_SESSION['fil_distributor_state'];
    }

    if (isset($_SESSION['fil_salesman_zone']) && !empty($_SESSION['fil_salesman_zone']) && $_SESSION['fil_salesman_zone'] > 0) {
        $queryConditions .= " AND sz.zone_id=" . $_SESSION['fil_salesman_zone'];
    }
    if (isset($_SESSION['fil_retailer_zone']) && !empty($_SESSION['fil_retailer_zone']) && $_SESSION['fil_retailer_zone'] > 0) {
        $queryConditions .= " AND rz.zone_id=" . $_SESSION['fil_retailer_zone'];
    }
    if (isset($_SESSION['fil_distributor_zone']) && !empty($_SESSION['fil_distributor_zone']) && $_SESSION['fil_distributor_zone'] > 0) {
        $queryConditions .= " AND dz.zone_id=" . $_SESSION['fil_distributor_zone'];
    }

    if (isset($_SESSION['fil_month']) && !empty($_SESSION['fil_month']) && isset($_SESSION['fil_year']) && !empty($_SESSION['fil_year'])) {
        $firstDate = date('Y-m-d', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
        $lastdate = date('Y-m-t', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
        $fromdate = " and O.date_of_order >= '" . $firstDate . "'";
        $todate = " and O.date_of_order <= '" . $lastdate . "'";
    }


    $queryConditions = $queryConditions . $salesmanCnd . $fromdate . $todate;

    $where = $queryConditions;

    $auRec = $_objAdmin->_getSelectList('table_order_os AS O 
		LEFT JOIN table_order_detail_os AS D ON D.os_id = O.os_id
		LEFT JOIN table_item AS I ON D.item_id = I.item_id
		LEFT JOIN table_brands as b ON b.brand_id=I.brand_id
		LEFT JOIN table_category AS c ON c.category_id = I.category_id 
		LEFT JOIN table_price AS P ON D.item_id = P.item_id
		LEFT JOIN table_salesman AS s ON O.salesman_id = s.salesman_id
        left join table_salesman_hierarchy_relationship as shr on shr.salesman_id = s.salesman_id
        left join table_salesman as s2 on s2.salesman_id=shr.rpt_user_id
		LEFT JOIN table_retailer AS R ON O.retailer_id = R.retailer_id
		LEFT JOIN table_retailer_channel_master as cm ON cm.channel_id=R.channel_id
        left join table_retailer_type_master as tm on tm.type_id=R.type_id
		LEFT JOIN table_distributors AS Dis ON O.distributor_id = Dis.distributor_id
		left join state as str on str.state_id=R.state 
            left join state as sts on sts.state_id=s.state 
            left join state as std on std.state_id=Dis.state 
        
            LEFT JOIN city as ct on ct.city_id=R.city
            LEFT JOIN city as ctd on ctd.city_id=Dis.city
            LEFT JOIN city as cts on cts.city_id=s.city
            left join table_zone_state_mapping as zms on zms.state_id=s.state and zms.account_id = s.account_id
			left join table_zone as sz on sz.zone_id=zms.zone_id 
			left join table_zone_state_mapping as zmr on zmr.state_id=R.state and zmr.account_id = R.account_id
			left join table_zone as rz on rz.zone_id=zmr.zone_id
			left join table_zone_state_mapping as zmd on zmd.state_id=Dis.state and zmd.account_id = Dis.account_id
			left join table_zone as dz on dz.zone_id=zmd.zone_id

		left join table_item_case_relationship as cr on cr.item_id=D.item_id
		left join table_cases as ca on ca.case_id=cr.case_id',
        ' D.quantity,R.new, I.item_name,I.item_code,I.item_size,ca.case_size,b.brand_name,cm.channel_name,sz.zone_name as sal_zone,rz.zone_name as ret_zone,dz.zone_name as dis_zone,
			I.item_erp_code, s.salesman_name, s.employee_code, str.state_name as ret_state,sts.state_name as sal_state,std.state_name as dis_state,
            ct.city_name as ret_city,ctd.city_name as dis_city,cts.city_name as sal_city,P.item_dp as item_mrp,P.item_mrp as itme_ptr,
			Dis.distributor_name,Dis.distributor_code,O.retailer_id,R.retailer_name,R.retailer_code,c.category_name,O.date_of_order,O.time_of_order,tm.type_name', $rp, $where . $sort, '');


    $retIdArr = [];
    if (is_array($auRec) && (count($auRec) > 0)) {
        foreach ($auRec as $key => $auRecData) {
            if (isset($auRecData->retailer_id) && !empty($auRecData->retailer_id) && (intval($auRecData->retailer_id) > 0)) {
                $retIdArr[] = $auRecData->retailer_id;
            }
        }
        $retIds = implode(',', array_unique($retIdArr));
        $getRetailerRoutes = $_objAdmin->_getSelectList("table_route_retailer as rr 
    LEFT JOIN table_route as r ON r.route_id = rr.route_id", "rr.retailer_id, GROUP_CONCAT(DISTINCT r.route_name SEPARATOR ' | ') as route_names", "", " rr.retailer_id IN($retIds) GROUP BY rr.retailer_id ORDER BY rr.retailer_id ASC ");
        $retailerWiseRoutesArr = [];
        if (is_array($getRetailerRoutes) && (count($getRetailerRoutes) > 0)) {
            foreach ($getRetailerRoutes as $key => $retRoutes) {
                if (isset($retRoutes->route_names) && !empty($retRoutes->route_names)) {
                    $retailerWiseRoutesArr[$retRoutes->retailer_id] = $retRoutes->route_names;
                }
            }
        }
    }


    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {

            $routeName = (isset($retailerWiseRoutesArr[$auRec[$i]->retailer_id]) && !empty($retailerWiseRoutesArr[$auRec[$i]->retailer_id])) ? $retailerWiseRoutesArr[$auRec[$i]->retailer_id] : '';
            $pcs = '';
            $kg = '';
            $cases = '';
            // start pcs to kg cases conversion
            $pcs = $auRec[$i]->quantity;
            $kg = (($auRec[$i]->item_size != 0) ? ROUND((($auRec[$i]->item_size * $auRec[$i]->quantity) / 1000), 2) : '');
            $cases = (($auRec[$i]->case_size != 0) ? ROUND(($auRec[$i]->quantity / $auRec[$i]->case_size), 2) : '');


            // end pcs to kg cases conversion
            $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);


            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->dis_zone . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->dis_state . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->dis_city . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->channel_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->type_name . '"';
            $data .= "\t";
            $data .= '"' . $routeName . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->ret_zone . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->ret_state . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->ret_city . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->sal_zone . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->sal_state . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->sal_city . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->category_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->brand_name . '"';
            $data .= "\t";

            $data .= '"' . $pcs . '"';
            $data .= "\t";
            $data .= '"' . $kg . '"';
            $data .= "\t";
            $data .= '"' . $cases . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_size . '"';
            $data .= "\t";
            $data .= '"' . $date_of_order . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->time_of_order . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"dynamic retailer available stcok report.xls\"");
    echo $data;
    exit;
}

if (isset($_GET['export_dynamic_distributor_pcs_cases_available_stock'])) {
    $data = "Distributor Name\tDistributor Code\tDistributor Zone\tDistributor State\t Distributor District\t Salesman Name\t Salesman Code\t Salseman Zone\t Salesman State\t Salesman District \t Category Name\t Item Name\t Item Code\t Brand Name\t Qty In Pcs \t Qty In Kg\t Qty In Cases\t Grams\tDate of Orde\t Time of Order\n";
    $sort = " ORDER BY date_of_order desc, time_of_order desc ";

    $queryConditions = '';
    if (isset($_SESSION['fil_from']) && !empty($_SESSION['fil_from'])) {
        $fromdate = " and O.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['fil_from'])) . "'";
    } else {
        $fromdate = " and O.date_of_order >= '" . date('Y-m-d') . "'";
    }
    if (isset($_SESSION['fil_to']) && !empty($_SESSION['fil_to'])) {
        $todate = " and O.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['fil_to'])) . "'";
    } else {
        $todate = " and O.date_of_order <= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['userLoginType'] == 3 && $_SESSION['distributorId'] != "" && $_SESSION['distributorId'] > 0) {
        $queryConditions .= " AND O.distributor_id=" . $_SESSION['distributorId'];
    } else if (isset($_SESSION['fil_distributor']) && !empty($_SESSION['fil_distributor']) && $_SESSION['fil_distributor'] > 0) {
        $queryConditions .= " AND O.distributor_id=" . $_SESSION['fil_distributor'];
    }


    if ($_SESSION['userLoginType'] == 7 && $_SESSION['stockistId'] != "" && $_SESSION['stockistId'] > 0) {
        $queryConditions .= " AND Dis.stockist_id=" . $_SESSION['stockistId'];

    } else if (isset($_SESSION['fil_stockist']) && !empty($_SESSION['fil_stockist']) && $_SESSION['fil_stockist'] > 0) {
        $queryConditions .= " AND Dis.stockist_id=" . $_SESSION['fil_stockist'];
    }

    $salesmanCnd = "";
    $salesman = $_SESSION['har_salesIds'];
    if ($_SESSION['userLoginType'] == 5) {
        $salesmanCnd = str_replace("s.", "O.", $salesman);
    }


    if (isset($_SESSION['fil_salesman']) && !empty($_SESSION['fil_salesman']) && $_SESSION['fil_salesman'] > 0) {
        $salesmanCnd = " AND O.salesman_id=" . $_SESSION['fil_salesman'];
    } else if (isset($_SESSION['fil_salesman_manager']) && ($_SESSION['fil_salesman_manager'] > 0)) {
        $salesmanManagerId = $_SESSION['fil_salesman_manager'];
        $account_id = $_SESSION['accountId'];
        $res = $this->_getSelectList2('table_salesman_hierarchy_relationship AS SHR 
            LEFT JOIN table_salesman_hierarchy AS SH ON SH.hierarchy_id = SHR.hierarchy_id
            LEFT JOIN table_salesman AS s ON s.salesman_id = SHR.salesman_id', 's.salesman_id,SH.hierarchy_id,SH.sort_order', '', " SH.account_id=" . $account_id . " AND SHR.salesman_id = $salesmanManagerId ORDER BY SH.sort_order ASC ");

        if (is_array($res) && (count($res) > 0)) {
            $sortOrder = $res[0]->sort_order;
            $_objArrayList = new ArrayList();
            $getBottomUsersIdArr = $_objArrayList->getSalesmansBottomUsers(array($salesmanManagerId), $sortOrder, $account_id);

            if (is_array($getBottomUsersIdArr) && (count($getBottomUsersIdArr) > 0)) {
                $bottomUsersIds = implode(',', $getBottomUsersIdArr);
            }

            $salesmanCnd = " AND O.salesman_id IN($bottomUsersIds) ";
        }
    } else if (isset($_SESSION['fil_salesman_designation']) && ($_SESSION['fil_salesman_designation'] > 0)) {
        $_objArrayList = new ArrayList();
        $account_id = $_SESSION['accountId'];
        $getDesignationWiseBottomUsersIdArr = $_objArrayList->getDesignationWiseBottomUsers($_SESSION['fil_salesman_designation'], $account_id);

        if (is_array($getDesignationWiseBottomUsersIdArr) && (count($getDesignationWiseBottomUsersIdArr) > 0)) {
            $bottomUsersIds = implode(',', $getDesignationWiseBottomUsersIdArr);
            $salesmanCnd .= " AND O.salesman_id IN($bottomUsersIds) ";
        }
    } else {
        $salesmanCnd .= '';
    }

    if (isset($_SESSION['fil_category']) && !empty($_SESSION['fil_category']) && $_SESSION['fil_category'] > 0) {
        $queryConditions .= " AND c.category_id = '" . $_SESSION['fil_category'] . "' ";
    }


    if (isset($_SESSION['fil_retailer']) && !empty($_SESSION['fil_retailer']) && $_SESSION['fil_retailer'] > 0) {
        $queryConditions .= " AND O.retailer_id=" . $_SESSION['fil_retailer'];
    }
    if (isset($_SESSION['fil_salesman_state']) && !empty($_SESSION['fil_salesman_state']) && $_SESSION['fil_salesman_state'] > 0) {
        $queryConditions .= " AND sts.state=" . $_SESSION['fil_salesman_state'];
    }
    if (isset($_SESSION['fil_retailer_state']) && !empty($_SESSION['fil_retailer_state']) && $_SESSION['fil_retailer_state'] > 0) {
        $queryConditions .= " AND str.state=" . $_SESSION['fil_retailer_state'];
    }
    if (isset($_SESSION['fil_distributor_state']) && !empty($_SESSION['fil_distributor_state']) && $_SESSION['fil_distributor_state'] > 0) {
        $queryConditions .= " AND std.state=" . $_SESSION['fil_distributor_state'];
    }

    if (isset($_SESSION['fil_salesman_zone']) && !empty($_SESSION['fil_salesman_zone']) && $_SESSION['fil_salesman_zone'] > 0) {
        $queryConditions .= " AND sz.zone_id=" . $_SESSION['fil_salesman_zone'];
    }
    if (isset($_SESSION['fil_retailer_zone']) && !empty($_SESSION['fil_retailer_zone']) && $_SESSION['fil_retailer_zone'] > 0) {
        $queryConditions .= " AND rz.zone_id=" . $_SESSION['fil_retailer_zone'];
    }
    if (isset($_SESSION['fil_distributor_zone']) && !empty($_SESSION['fil_distributor_zone']) && $_SESSION['fil_distributor_zone'] > 0) {
        $queryConditions .= " AND dz.zone_id=" . $_SESSION['fil_distributor_zone'];
    }

    if (isset($_SESSION['fil_month']) && !empty($_SESSION['fil_month']) && isset($_SESSION['fil_year']) && !empty($_SESSION['fil_year'])) {
        $firstDate = date('Y-m-d', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
        $lastdate = date('Y-m-t', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
        $fromdate = " and O.date_of_order >= '" . $firstDate . "'";
        $todate = " and O.date_of_order <= '" . $lastdate . "'";
    }


    $queryConditions = $queryConditions . $salesmanCnd . $fromdate . $todate;

    $where = $queryConditions;

    $auRec = $_objAdmin->_getSelectList('table_order_distributor_stock AS O 
		LEFT JOIN table_order_detail_distributor_stock AS D ON D.stock_id = O.stock_id
		LEFT JOIN table_item AS I ON D.item_id = I.item_id
		LEFT JOIN table_brands as b ON b.brand_id=I.brand_id
		LEFT JOIN table_category AS c ON c.category_id = I.category_id 
		LEFT JOIN table_price AS P ON D.item_id = P.item_id
		LEFT JOIN table_salesman AS s ON O.salesman_id = s.salesman_id
        left join table_salesman_hierarchy_relationship as shr on shr.salesman_id = s.salesman_id
        left join table_salesman as s2 on s2.salesman_id=shr.rpt_user_id
		
		LEFT JOIN table_distributors AS Dis ON O.distributor_id = Dis.distributor_id
		
            left join state as sts on sts.state_id=s.state 
            left join state as std on std.state_id=Dis.state 
        
           
            LEFT JOIN city as ctd on ctd.city_id=Dis.city
            LEFT JOIN city as cts on cts.city_id=s.city
            left join table_zone_state_mapping as zms on zms.state_id=s.state and zms.account_id = s.account_id
			left join table_zone as sz on sz.zone_id=zms.zone_id 
			
			left join table_zone_state_mapping as zmd on zmd.state_id=Dis.state and zmd.account_id = Dis.account_id
			left join table_zone as dz on dz.zone_id=zmd.zone_id

		left join table_item_case_relationship as cr on cr.item_id=D.item_id
		left join table_cases as ca on ca.case_id=cr.case_id',
        ' D.openning_stock_volume, I.item_name,I.item_code,I.item_size,ca.case_size,b.brand_name,sz.zone_name as sal_zone,dz.zone_name as dis_zone,
			I.item_erp_code, s.salesman_name, s.employee_code, sts.state_name as sal_state,std.state_name as dis_state,
           ctd.city_name as dis_city,cts.city_name as sal_city,P.item_dp as item_mrp,P.item_mrp as itme_ptr,
			Dis.distributor_name,Dis.distributor_code,c.category_name,O.date_of_order,O.time_of_order', $rp, $where . $sort, '');


    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {


            $pcs = '';
            $kg = '';
            $cases = '';
            // start pcs to kg cases conversion
            $pcs = $auRec[$i]->openning_stock_volume;
            $kg = (($auRec[$i]->item_size != 0) ? ROUND((($auRec[$i]->item_size * $auRec[$i]->openning_stock_volume) / 1000), 2) : '');
            $cases = (($auRec[$i]->case_size != 0) ? ROUND(($auRec[$i]->openning_stock_volume / $auRec[$i]->case_size), 2) : '');


            // end pcs to kg cases conversion
            $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);


            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->dis_zone . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->dis_state . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->dis_city . '"';
            $data .= "\t";

            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->sal_zone . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->sal_state . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->sal_city . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->category_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->brand_name . '"';
            $data .= "\t";

            $data .= '"' . $pcs . '"';
            $data .= "\t";
            $data .= '"' . $kg . '"';
            $data .= "\t";
            $data .= '"' . $cases . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_size . '"';
            $data .= "\t";
            $data .= '"' . $date_of_order . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->time_of_order . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"dynamic distributor openning available stcok report.xls\"");
    echo $data;
    exit;
}

//Todo End: Sudhanshu: 28 Feb 2024:  export dymanic retailer available stock.

// Todo Start : 5 March 2024 : export item Size master

if (isset($_REQUEST['export_item_size_bar'])) {
    $data = "Item Size Code\tItem Size Name\tStatus\n";

    $condi = "  ORDER BY id asc";
    $auRec = $_objAdmin->_getSelectList('table_item_size_master', "*", '', $condi);
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $status = ($auRec[$i]->status == 'A') ? "Active" : " Inactive";

            $data .= '"' . $auRec[$i]->item_size_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_size_name . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Item_size_master.xls\"");
    echo $data;
    exit;
}

// Todo End : 5 March 2024 : export item Size master


// Todo Start : 6 March 2024 : sudhanshu : export salesman Distributor Day Wise Productivity Report

if (isset($_REQUEST['export_salesman_dis_wise_productivity_report'])) {
    $data = "Date\tSalesman Name\tDistributor Name\tNo of Customer to be Visited\tNo of Customer to Visited\tProductive Calls\t Success\tPL\n";

    // Get All the categories
// $categotyList = $_objAdmin->_getSelectList2('table_category ','category_id, category_name',''," status= 'A' ORDER BY category_name");
    $itemList = $_objAdmin->_getSelectList('table_item', 'item_id, item_name', '', " status= 'A' ORDER BY item_name");
    $salCond = "";
    if ($_SESSION['salRepID'] != "") {
        $salCond = " AND s.salesman_id = '" . $_SESSION['salRepID'] . "' ";
    } else {
        $salCond = $salesman;
        $_SESSION['salsInCondi'] = $salesman;
    }


    $salesmanIdList = array();
    $salArr = $_objAdmin->_getSelectList('table_salesman AS s 
	LEFT join state as st on st.state_id = s.state
	left join city as ci on ci.city_id = s.city
	LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
	LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
	LEFT JOIN table_salesman_hierarchy AS H2 ON H2.hierarchy_id = SH.rpt_hierarchy_id
	LEFT JOIN table_salesman AS S2 ON S2.salesman_id = SH.rpt_user_id
	', ' s.salesman_id, s.salesman_name ,s.employee_code, H.description AS des1, H2.description AS des2, S2.salesman_name AS rptPerson, st.state_name, ci.city_name', '', " s.status='A' AND s.salesman_id>0 AND s.salesman_name !='' $salCond ORDER BY s.salesman_name");
    if (is_array($salArr)) {
        foreach ($salArr as $value) {
            $salesmanIdList[] = $value->salesman_id;
            $salesmanList[$value->salesman_id] = array('salesman_id' => $value->salesman_id, 'employee_code' => $value->employee_code, 'salesman_name' => $value->salesman_name, 'des1' => $value->des1, 'des2' => $value->des2, 'rptPerson' => $value->rptPerson, 'state_name' => $value->state_name, 'city_name' => $value->city_name);
            if ($_SESSION['salRepID'] != "") {
                $sal_name = $value->salesman_name;
            } else {
                $sal_name = 'All';
            }
        }
    } else {
        $salArr = "";
    }


    $disIdsList = array();
    if ((is_array($salesmanList)) && (count($salesmanList) > 0)) {
        foreach ($salesmanList as $salVal) {

            $disIdArr = $_objAdmin->getRouteWiseDistributors($salVal['salesman_id'], $_SESSION['accountId']);

            if (is_array($disIdArr) && (count($disIdArr) > 0)) {

                foreach ($disIdArr as $diKey => $disVal) {
                    $disIdsList[$salVal['salesman_id']][] = $disVal;
                }
            }

            $retIdArr = $_objAdmin->getRouteWiseRetailers($salVal['salesman_id'], $_SESSION['accountId']);

            if (is_array($retIdArr) && (count($retIdArr) > 0)) {

                foreach ($retIdArr as $retKey => $retVal) {
                    $retIdsList[$salVal['salesman_id']][] = $retVal;
                }

            }

        }


//distributor id list && retailer id list
//echo "<pre>".count($disIdsList); print_r($disIdsList);die;
        $distributorIdList = array();
        $distributorList = array();
        if (is_array($disIdsList) && count($disIdsList) > 0) {
            foreach ($disIdsList as $key => $disId) {

                foreach ($disId as $distVal) {
                    $distributorIdList[] = $distVal;
                    $distArrr = $_objAdmin->_getSelectList('table_distributors AS r              
            ', ' r.distributor_id,r.distributor_name', '', " distributor_id = '" . $distVal . "' ");

                    foreach ($distArrr as $dis) {
                        $distributorList[$key] = $dis;
                    }
                }
            }
        }

        $retailerIdList = array();
        foreach ($retIdsList as $key => $retaId) {

            foreach ($retaId as $retVal) {
                $retailerIdList[] = $retVal;


            }
        }
        $disIds = implode(',', $distributorIdList);
        $diswhere = " AND r.distributor_id IN($disIds) ";

        $retIds = implode(',', $retailerIdList);
        $retwhere = " AND r.retailer_id IN($retIds) ";


//end distributor id list && retailer id list


    }


    if (is_array($disIdsList) && count($disIdsList) > 0) {

        $distArrr = $_objAdmin->_getSelectList('table_distributors AS r              
', ' r.distributor_id,r.distributor_name', '', " $diswhere ");

    }

    $distNameArr = array();
    foreach ($distArrr as $disname) {
        $distNameArr[$disname->distributor_id] = $disname->distributor_name;
    }

    if (is_array($retIdsList) && count($retIdsList) > 0) {
        $retArr = $_objAdmin->_getSelectList('table_retailer AS r              
    ', ' r.distributor_id,r.retailer_id,r.retailer_name', '', " $retwhere ");
    }


    $mapDis = array();
    if (!empty($retArr) && count($retArr) > 0) {

        foreach ($retArr as $retData) {
            $mapDis[$retData->distributor_id][] = $retData;
        }

    }


    $startTime = strtotime($_SESSION['FromAttList']);
    $endTime = strtotime($_SESSION['ToAttList']);

    $startDate = date('Y-m-d', strtotime($_SESSION['FromAttList']));
    $endDate = date('Y-m-d', strtotime($_SESSION['ToAttList']));


    if (is_array($disIdsList) && count($disIdsList) > 0) {
        $OrderRes = $_objAdmin->_getSelectList("table_order as o",
            'o.salesman_id, o.distributor_id,o.date_of_order,COUNT(o.order_id) as ttl_retailer_placed_order',
            '', " o.date_of_order >= '" . $startDate . "'
						AND o.date_of_order <= '" . $endDate . "' AND o.salesman_id IN(" . implode(',', $salesmanIdList) . ")
                      AND  o.distributor_id IN(" . implode(',', array_unique($distributorIdList)) . ")
											AND o.retailer_id >0 AND o.order_type !='No' AND o.order_status IN('A','I')
											 group by o.salesman_id, o.distributor_id,o.date_of_order");

    }

    $RetPlacedOdr = array();
    if (count($OrderRes) > 0) {
        foreach ($OrderRes as $ky => $Value) {
            $RetPlacedOdr[$Value->salesman_id][$Value->distributor_id][$Value->date_of_order] = $Value->ttl_retailer_placed_order;
        }
    }

    if (is_array($disIdsList) && count($disIdsList) > 0) {
        $OrderDetailRes = $_objAdmin->_getSelectList("table_order as o
                    left join table_order_detail as od ON o.order_id=od.order_id",
            'o.salesman_id, o.distributor_id,o.date_of_order,COUNT(DISTINCT(od.item_id)) as ttl_order_item',
            '', " o.date_of_order >= '" . $startDate . "'
                    AND o.date_of_order <= '" . $endDate . "' AND o.salesman_id IN(" . implode(',', $salesmanIdList) . ")
                  AND  o.distributor_id IN(" . implode(',', array_unique($distributorIdList)) . ")
                                        AND o.retailer_id >0 AND o.order_type !='No' and od.quantity>0 AND o.order_status IN('A','I')
                                         group by o.salesman_id, o.distributor_id,o.date_of_order");

    }

    $RetPlacedOdrItem = array();
    if (count($OrderDetailRes) > 0) {
        foreach ($OrderDetailRes as $dky => $Dvalue) {
            $RetPlacedOdrItem[$Dvalue->salesman_id][$Dvalue->distributor_id][$Dvalue->date_of_order] = $Dvalue->ttl_order_item;
        }
    }

    $ActivtiyRes = $_objAdmin->_getSelectList2("					
					(select o.salesman_id,o.date_of_order,o.retailer_id from table_order as o where o.date_of_order >= '" . $startDate . "'
						AND o.date_of_order <= '" . $endDate . "' AND o.salesman_id IN(" . implode(',', $salesmanIdList) . ")
						AND o.retailer_id >0 AND o.order_type !='Adhoc' AND o.order_status IN('A','I') AND o.account_id=" . $_SESSION['accountId'] . "
					UNION ALL
					select cc.salesman_id,cc.checkin_date as date_of_order,cc.retailer_id from table_capture_checkin_out as cc
					where cc.account_id=" . $_SESSION['accountId'] . " AND cc.checkin_date >= '" . $startDate . "' AND cc.checkin_date <= '" . $endDate . "' AND cc.salesman_id IN(" . implode(',', $salesmanIdList) . ")) as tmp",
        'tmp.salesman_id, tmp.date_of_order,tmp.retailer_id,COUNT(DISTINCT(tmp.retailer_id)) as ttlVisitedRetailer', '', "  group by tmp.salesman_id, tmp.retailer_id,tmp.date_of_order");

    //  echo "<pre>"; print_r($ActivtiyRes);
    //checkin/order/no order
    $TotalVisits = array();
    if (count($ActivtiyRes) > 0) {
        foreach ($ActivtiyRes as $ky => $Value) {
            $TotalVisits[$Value->salesman_id][$Value->retailer_id][$Value->date_of_order] = $Value->ttlVisitedRetailer;
        }
    }

    $dateArr = array();
    // Loop between timestamps, 24 hours at a time
    for ($i = $startTime; $i <= $endTime; $i = $i + 86400) {
        $dateArr[date('Y-m-d', $i)] = date('Y-m-d', $i);
    }
    $account_id = $_SESSION['accountId'];

    if (is_array($disIdsList) && count($disIdsList) > 0) {
        foreach ($dateArr as $dateKey => $DateValue) {
            foreach ($salesmanList as $salKey => $SalValue) {
                foreach ($disIdsList[$salKey] as $salDis) {
                    $salesman_name = $SalValue['salesman_name'];
                    $salesman_id = $SalValue['salesman_id'];
                    $des1 = $SalValue['des1'];
                    $des2 = $SalValue['des2'];
                    $rptPerson = $SalValue['rptPerson'];
                    $state_name = $SalValue['state_name'];
                    $city_name = $SalValue['city_name'];

                    $ttlVisitedRetailer = 0;
                    //$totalVisits = 0;


                    if ($distNameArr[$salDis] != '') {
                        $dis_name = $distNameArr[$salDis];
                    }

                    if (!empty($mapDis[$salDis])) {
                        $assign_no_cutomer = count($mapDis[$salDis]);
                    }

                    // echo "<pre>";  print_r($mapDis[$salDis][0]['retailer_id']);

                    if (isset($TotalVisits[$salKey][$dateKey])) {
                        $ttlVisitedRetailer = $TotalVisits[$salKey][$dateKey];
                    } else {
                        $ttlVisitedRetailer = '-';

                    }

                    $retVisitArr = array();
                    if (isset($mapDis[$salDis])) {
                        foreach ($mapDis[$salDis] as $disRet) {
                            //    echo "<pre>"; print_r($disRet);
                            //    echo $salKey.'-'.$dateKey.'-'.$TotalVisits[$salKey][$disRet->retailer_id][$dateKey];
                            $retVisitArr[$disRet->distributor_id][$dateKey][] = $TotalVisits[$salKey][$disRet->retailer_id][$dateKey];
                        }
                        $ttlVisitedRetailer = $TotalVisits[$salKey][$dateKey];
                    } else {
                        $ttlVisitedRetailer = '-';

                    }
                    //  echo "<pre>"; print_r($retVisitArr);

                    if (isset($RetPlacedOdr[$salKey][$salDis])) {
                        $total_retailer_placed_order = $RetPlacedOdr[$salKey][$salDis][$dateKey];
                    } else {
                        $total_retailer_placed_order = '-';
                    }

                    if (isset($RetPlacedOdrItem[$salKey][$salDis])) {
                        $ttl_order_item = $RetPlacedOdrItem[$salKey][$salDis][$dateKey];
                    } else {
                        $ttl_order_item = '-';
                    }

                    $status = ($auRec[$i]->status == 'A') ? "Active" : " Inactive";

                    $data .= '"' . $_objAdmin->_changeDate($dateKey) . '"';
                    $data .= "\t";
                    $data .= '"' . $salesman_name . '"';
                    $data .= "\t";
                    $data .= '"' . $dis_name . '"';
                    $data .= "\t";
                    $data .= '"' . $assign_no_cutomer . '"';
                    $data .= "\t";

                    $pd = '';
                    if (isset($mapDis[$salDis])) {
                        foreach ($mapDis[$salDis] as $disRet) {
                            if ($TotalVisits[$salKey][$disRet->retailer_id][$dateKey] != '') {
                                $pd = $TotalVisits[$salKey][$disRet->retailer_id][$dateKey];

                            }


                        }

                    } else {
                        $pd = '-';

                    }

                    $data .= '"' . $pd . '"';
                    $data .= "\t";
                    $data .= '"' . $total_retailer_placed_order . '"';
                    $data .= "\t";

                    $susPer = '';

                    $sus = ($total_retailer_placed_order / $pd * 100);

                    if ($sus) {
                        $susPer = round($sus) . '%';
                    }

                    $data .= '"' . $susPer . '"';
                    $data .= "\t";
                    $data .= '"' . $ttl_order_item . '"';
                    $data .= "\n";
                }
            }
        }
    }

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Salesman Distributor Day Wise Productivity.xls\"");
    echo $data;
    exit;
}

// Todo End : 6 March 2024 : export salesman Distributor Day Wise Productivity Report

// Todo Start : Jatin : 6 March 2024 : Export Item color master

if (isset($_REQUEST['export_item_color_size_bar'])) {
    $data = "Item Color Code\tItem Color Name\tRgb Code\tStatus\n";

    $condi = "  ORDER BY id asc";
    $auRec = $_objAdmin->_getSelectList('table_item_color_master', "*", '', $condi);
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $status = ($auRec[$i]->status == 'A') ? "Active" : " Inactive";

            $data .= '"' . $auRec[$i]->item_color_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_color_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->rgb_code . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Item_Color_master.xls\"");
    echo $data;
    exit;
}

// Todo End : Jatin : 6 March 2024 : Export Item color master

// Todo Start : Jatin : 6 March 2024 : Export Item color size Mapping

if (isset($_REQUEST['export_item_color_size_mapping_bar'])) {
    $data = "Item Code\tItem Name\tSize Code\tSize Name\tColor Code\tColor Name\tRgb Code\tPrice\tStatus\n";

    $condi = " and map.status='A' ORDER BY map.mapping_id asc";
    $auRec = $_objAdmin->_getSelectList('table_item_code_size_color_mapping as map
         left join table_item_color_master as c on c.id = map.color_id
         left join table_item_size_master as s on s.id = map.size_id
         left join table_item as i on i.item_id = map.item_id', "i.item_code,i.item_name,map.*,
         c.item_color_code,c.item_color_name,s.item_size_code,s.item_size_name,c.rgb_code", '', $condi);

    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $status = ($auRec[$i]->status == 'A') ? "Active" : " Inactive";

            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_size_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_size_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_color_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_color_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->rgb_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->price . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\n";
        }
    }

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Item_Color_Size_Mapping.xls\"");
    echo $data;
    exit;
}

// Todo End : Jatin : 6 March 2024 : Export Item color size Mapping

// Todo Start : Jatin : 7 March 2024 : Export item wise order list

if (isset($_GET['dynamic_export_item_color_wise_order_list'])) {
    $data = " Date of Order\t Time of Order\t Order Number\t Total Invoice Amount\t Total Number Of Item\t Ordered Quantity\t" . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\t" . $AliaseUsers['distributor'] . " Zone\t" . $AliaseUsers['distributor'] . " State\t " . $AliaseUsers['salesman'] . " Name\t  " . $AliaseUsers['salesman'] . " Code\t  " . $AliaseUsers['salesman'] . " Zone\t  " . $AliaseUsers['salesman'] . " State\tReporting To\t " . $AliaseUsers['retailer'] . "  Name\t " . $AliaseUsers['retailer'] . "  Code\t " . $AliaseUsers['retailer'] . "  Zone\t" . $AliaseUsers['retailer'] . "  State\t " . $AliaseUsers['retailer'] . "  District\t" . $AliaseUsers['retailer'] . " Group\t" . $AliaseUsers['retailer'] . " Channel\t " . $AliaseUsers['retailer'] . " Classifiaction\t " . $AliaseUsers['retailer'] . " Type\t Display Outlet\t" . $AliaseUsers['retailer'] . " Market\t " . $AliaseUsers['retailer'] . " Address\t Order Type\tOrder By\tOrder Status\tComments\t Reason\t Delivery Date\tPhoto Count\n";

    $sort = " ORDER BY date_of_order desc,time_of_order desc";
    $queryConditions = '';
    if (isset($_SESSION['fil_from']) && !empty($_SESSION['fil_from'])) {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['fil_from'])) . "'";
    } else {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d') . "'";
    }
    if (isset($_SESSION['fil_to']) && !empty($_SESSION['fil_to'])) {
        $todate = " and o.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['fil_to'])) . "'";
    } else {
        $todate = " and o.date_of_order <= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['userLoginType'] == 3 && $_SESSION['distributorId'] != "" && $_SESSION['distributorId'] > 0) {
        $queryConditions .= " AND o.distributor_id=" . $_SESSION['distributorId'];
    } else if (isset($_SESSION['fil_distributor']) && !empty($_SESSION['fil_distributor']) && $_SESSION['fil_distributor'] > 0) {
        $queryConditions .= " AND o.distributor_id=" . $_SESSION['fil_distributor'];
    }

    if ($_SESSION['userLoginType'] == 7 && $_SESSION['stockistId'] != "" && $_SESSION['stockistId'] > 0) {
        $queryConditions .= " AND d.stockist_id=" . $_SESSION['stockistId'];

    } else if (isset($_SESSION['fil_stockist']) && !empty($_SESSION['fil_stockist']) && $_SESSION['fil_stockist'] > 0) {
        $queryConditions .= " AND d.stockist_id=" . $_SESSION['fil_stockist'];
    }
    $salesmanCnd = "";
    if ($_SESSION['userLoginType'] == 5) {
        $salesmanCnd = str_replace("s.", "o.", $salesman);
    }

    if (isset($_SESSION['fil_salesman']) && !empty($_SESSION['fil_salesman']) && $_SESSION['fil_salesman'] > 0) {
        $salesmanCnd = " AND o.salesman_id=" . $_SESSION['fil_salesman'];
    } else if (isset($_SESSION['fil_salesman_manager']) && ($_SESSION['fil_salesman_manager'] > 0)) {
        $salesmanManagerId = $_SESSION['fil_salesman_manager'];
        $account_id = $_SESSION['accountId'];
        $res = $_objAdmin->_getSelectList2('table_salesman_hierarchy_relationship AS SHR 
				LEFT JOIN table_salesman_hierarchy AS SH ON SH.hierarchy_id = SHR.hierarchy_id
				LEFT JOIN table_salesman AS s ON s.salesman_id = SHR.salesman_id', 's.salesman_id,SH.hierarchy_id,SH.sort_order', '', " SH.account_id=" . $account_id . " AND SHR.salesman_id = $salesmanManagerId ORDER BY SH.sort_order ASC ");

        if (is_array($res) && (count($res) > 0)) {
            $sortOrder = $res[0]->sort_order;
            $_objArrayList = new ArrayList();
            $getBottomUsersIdArr = $_objArrayList->getSalesmansBottomUsers(array($salesmanManagerId), $sortOrder, $account_id);

            if (is_array($getBottomUsersIdArr) && (count($getBottomUsersIdArr) > 0)) {
                $bottomUsersIds = implode(',', $getBottomUsersIdArr);
            }

            $salesmanCnd = " AND o.salesman_id IN($bottomUsersIds) ";
        }
    } else if (isset($_SESSION['fil_salesman_designation']) && ($_SESSION['fil_salesman_designation'] > 0)) {
        $_objArrayList = new ArrayList();
        $account_id = $_SESSION['accountId'];
        $getDesignationWiseBottomUsersIdArr = $_objArrayList->getDesignationWiseBottomUsers($_SESSION['fil_salesman_designation'], $account_id);

        if (is_array($getDesignationWiseBottomUsersIdArr) && (count($getDesignationWiseBottomUsersIdArr) > 0)) {
            $bottomUsersIds = implode(',', $getDesignationWiseBottomUsersIdArr);
            $salesmanCnd .= " AND o.salesman_id IN($bottomUsersIds) ";
        }
    } else {
        $salesmanCnd .= '';
    }
    //echo $bottomUsersIds; die;
    if (isset($_SESSION['fil_retailer']) && !empty($_SESSION['fil_retailer']) && $_SESSION['fil_retailer'] > 0) {
        $queryConditions .= " AND o.retailer_id=" . $_SESSION['fil_retailer'];
    }
    if (isset($_SESSION['fil_salesman_state']) && !empty($_SESSION['fil_salesman_state']) && $_SESSION['fil_salesman_state'] > 0) {
        $queryConditions .= " AND s.state=" . $_SESSION['fil_salesman_state'];
    }
    if (isset($_SESSION['fil_retailer_state']) && !empty($_SESSION['fil_retailer_state']) && $_SESSION['fil_retailer_state'] > 0) {
        $queryConditions .= " AND r.state=" . $_SESSION['fil_retailer_state'];
    }
    if (isset($_SESSION['fil_distributor_state']) && !empty($_SESSION['fil_distributor_state']) && $_SESSION['fil_distributor_state'] > 0) {
        $queryConditions .= " AND d.state=" . $_SESSION['fil_distributor_state'];
    }

    if (isset($_SESSION['fil_salesman_zone']) && !empty($_SESSION['fil_salesman_zone']) && $_SESSION['fil_salesman_zone'] > 0) {
        $queryConditions .= " AND zms.zone_id=" . $_SESSION['fil_salesman_zone'];
    }
    if (isset($_SESSION['fil_retailer_zone']) && !empty($_SESSION['fil_retailer_zone']) && $_SESSION['fil_retailer_zone'] > 0) {
        $queryConditions .= " AND zmr.zone_id=" . $_SESSION['fil_retailer_zone'];
    }
    if (isset($_SESSION['fil_distributor_zone']) && !empty($_SESSION['fil_distributor_zone']) && $_SESSION['fil_distributor_zone'] > 0) {
        $queryConditions .= " AND zmd.zone_id=" . $_SESSION['fil_distributor_zone'];
    }
    if (isset($_SESSION['fil_month']) && !empty($_SESSION['fil_month']) && isset($_SESSION['fil_year']) && !empty($_SESSION['fil_year'])) {
        $firstDate = date('Y-m-d', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
        $lastdate = date('Y-m-t', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
        $fromdate = " and o.date_of_order >= '" . $firstDate . "'";
        $todate = " and o.date_of_order <= '" . $lastdate . "'";
    }

    if (isset($_SESSION['fil_order_status']) && !empty($_SESSION['fil_order_status'])) {
        $queryConditions .= " AND o.order_status='" . $_SESSION['fil_order_status'] . "'";
    } else {
        //$queryConditions .=" and order_status IN('A','I') ";
    }
    if (isset($_SESSION['fil_order_type']) && !empty($_SESSION['fil_order_type'])) {
        $queryConditions .= " AND o.order_type='" . $_SESSION['fil_order_type'] . "'";
    } else {
        //$queryConditions .=" AND o.order_type !='Return'";
    }

    $queryConditions = $queryConditions . $salesmanCnd . $fromdate . $todate;


    $where = $queryConditions;
    //$whereret = " $disLogCond  $fromdate $todate and r.new='' and o.type='R' $orderby ";
    /*	$auRec=$_objAdmin->_getSelectList('table_order as o left join table_retailer as r on o.retailer_id=r.retailer_id left join table_salesman as s on o.salesman_id=s.salesman_id left join table_distributors as d on o.distributor_id=d.distributor_id left join table_retailer_channel_master as cm on cm.channel_id=r.channel_id left join state as st on st.state_id=d.state left join city as c on c.city_id=d.city left join table_region as re on re.region_id=d.region_id',"o.*,r.retailer_name,r.retailer_address,r.retailer_location,cm.channel_name,r.display_outlet,r.lat as retlat,r.lng as retlng,s.salesman_name,d.distributor_name,st.state_name,c.city_name,re.region_name ",'',$where.$sort,'');*/

    $auRec = $_objAdmin->_getSelectList("table_order as o 
            left join table_order_detail as ord on o.order_type != 'No' and ord.order_id = o.order_id and ord.type = 1 
            left join table_item as i on i.item_id = ord.item_id 
            left join table_retailer as r on o.retailer_id=r.retailer_id 
            left join table_salesman as s on o.salesman_id=s.salesman_id 
            left join table_salesman_hierarchy_relationship as shr on shr.salesman_id = s.salesman_id
            left join table_salesman as s2 on s2.salesman_id=shr.rpt_user_id
            left join table_distributors as d on o.distributor_id=d.distributor_id 
            left join table_retailer_channel_master as cm on r.channel_id=cm.channel_id
            LEFT JOIN table_retailer_group as rg ON rg.group_id = r.group_id
            left join table_retailer_type_master as rtm ON rtm.type_id=r.type_id
            left join table_relationship as rel ON rel.relationship_id=r.relationship_id 
            left join state as str on str.state_id=r.state 
            left join state as sts on sts.state_id=s.state 
            left join state as std on std.state_id=d.state 
            left join city as c on c.city_id=r.city 
            left join table_zone_state_mapping as zms on zms.state_id=s.state and zms.account_id = s.account_id
			left join table_zone as sz on sz.zone_id=zms.zone_id 
			left join table_zone_state_mapping as zmr on zmr.state_id=r.state and zmr.account_id = r.account_id
			left join table_zone as rz on rz.zone_id=zmr.zone_id
			left join table_zone_state_mapping as zmd on zmd.state_id=d.state and zmd.account_id = d.account_id
			left join table_zone as dz on dz.zone_id=zmd.zone_id",
        "o.order_id,count(ord.item_id) as total_item,SUM(ord.acc_quantity) as total_ordered_qty,o.retailer_id,o.order_type,o.order_status,
			o.date_of_order,o.time_of_order,o.acc_total_invoice_amount,o.order_by,
	r.retailer_name,r.retailer_code,o.photo_count,
	r.retailer_address,r.retailer_location,cm.channel_name,r.display_outlet,
	s.salesman_name,s.employee_code,s2.salesman_name as rpt_to,d.distributor_name,d.distributor_code,
	sz.zone_name as sal_zone,rz.zone_name as ret_zone,dz.zone_name as dist_zone,str.state_name as ret_state,sts.state_name as sal_state,std.state_name as dist_state,c.city_name,rg.group_name,rtm.type_name,rel.relationship_code as relation,o.delivery_date,o.comments,o.tag_description", '', $where . " GROUP BY o.order_id " . $sort, '');


    $remove = array("\n", "\r", ",", "\t");
    for ($i = 0; $i < count($auRec); $i++) {
        $orderType = '';


        if ($auRec[$i]->order_type == 'Yes') {
            $orderType = 'Sales Order';

            if ($auRec[$i]->order_status == 'A') {
                $status = "New Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }
            if ($auRec[$i]->order_status == 'C') {
                $status = "Cancelled";
            }
            $color = ($auRec[$i]->order_status == 'A') ? "A" : "P";
        }
        if ($auRec[$i]->order_type == 'No') {
            $orderType = 'No Order';

            $status = ($auRec[$i]->order_status == 'A') ? "No Order" : "Processed";
            $color = ($auRec[$i]->order_status == 'A') ? "I" : "P";
        }
        if ($auRec[$i]->order_type == 'Adhoc') {
            $orderType = 'Adhoc Order';

            if ($auRec[$i]->order_status == 'A') {
                $status = "New Adhoc Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }
            if ($auRec[$i]->order_status == 'C') {
                $status = "Cancelled";
            }
            //$status=($auRec[$i]->order_status=='A')?"New Adhoc Order":"Processed";
            $color = ($auRec[$i]->order_status == 'A') ? "O" : "P";
        }

        if (strtolower($auRec[$i]->order_type) == 'return') {
            $orderType = 'Return Order';
        }

        // display oulet
        if ($auRec[$i]->display_outlet == 'Y') {
            $outlet = 'Yes';
        } elseif ($auRec[$i]->display_outlet == 'N') {
            $outlet = 'No';
        }
        switch ($auRec[$i]->order_by) {
            case 'S':
                $order_by = $AliaseUsers['salesman'];
                break;
            case "D":
                $order_by = $AliaseUsers['distributor'];
                break;
            case "R":
                $order_by = $AliaseUsers['retailer'];
                break;
            default :
                $order_by = '';
        }

        //$auRec2 = $_objAdmin->_getSelectList2('table_order_detail', "count( distinct(item_id)) as total_item", '', " order_id = " . $auRec[$i]->order_id . " and type = 1");

        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);
        $date_of_delivery = $_objAdmin->_changeDate($auRec[$i]->delivery_date);
        $data .= "" . $date_of_order . "\t" .
            $auRec[$i]->time_of_order . "\t" .
            $auRec[$i]->order_id . "\t" .
            $auRec[$i]->acc_total_invoice_amount . "\t" .
            $auRec[$i]->total_item . "\t" .
            $auRec[$i]->total_ordered_qty . "\t" .
            $auRec[$i]->distributor_name . "\t" .
            $auRec[$i]->distributor_code . "\t" .
            $auRec[$i]->dist_zone . "\t" .
            $auRec[$i]->dist_state . "\t" .
            $auRec[$i]->salesman_name . "\t" .
            $auRec[$i]->employee_code . "\t" .
            $auRec[$i]->sal_zone . "\t" .
            $auRec[$i]->sal_state . "\t" .
            $auRec[$i]->rpt_to . "\t" .
            $auRec[$i]->retailer_name . "\t" .
            $auRec[$i]->retailer_code . "\t" .
            $auRec[$i]->ret_zone . "\t" .
            $auRec[$i]->ret_state . "\t" .
            $auRec[$i]->city_name . "\t" .
            $auRec[$i]->group_name . "\t" .
            $auRec[$i]->channel_name . "\t" .
            $auRec[$i]->relation . "\t" .
            $auRec[$i]->type_name . "\t" .
            $outlet . "\t" .
            str_replace($remove, ' ', $auRec[$i]->retailer_location) . "\t" .
            str_replace($remove, ' ', $auRec[$i]->retailer_address) . "\t" .
            $orderType . "\t" .
            $order_by . "\t" .
            $status . "\t" .
            str_replace($remove, ' ', $auRec[$i]->comments) . "\t" .
            str_replace($remove, ' ', $auRec[$i]->tag_description) .
            "\t" . $date_of_delivery . "\t" . $auRec[$i]->photo_count . "\n";


    }

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Order List.xls\"");
    echo $data;
    exit;
}

if (isset($_GET['dynamic_export_item_color_wise_order_detail_list'])) {
    $data = " Date of Order\t Time of Order\t Order Number\t Total Invoice Amount\t Total Number Of Item\t " .
        $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\t" . $AliaseUsers['distributor'] . " Zone\t" . $AliaseUsers['distributor'] . " State\t " . $AliaseUsers['salesman'] . " Name\t " . $AliaseUsers['salesman'] . " Code\t " . $AliaseUsers['salesman'] . " Zone\t " . $AliaseUsers['salesman'] . " State\tReporting To\t " . $AliaseUsers['retailer'] . " Name\t " . $AliaseUsers['retailer'] . " Code\t " . $AliaseUsers['retailer'] . " Zone\t" . $AliaseUsers['retailer'] . " State\t" . $AliaseUsers['retailer'] . " District\t" . $AliaseUsers['retailer'] . " Market\t " . $AliaseUsers['retailer'] . " Address\t" . $AliaseUsers['retailer'] . " Group \t" . $AliaseUsers['retailer'] . " Channel\t" . $AliaseUsers['retailer'] . " Classification\t" . $AliaseUsers['retailer'] . " Type\t Display Outlet\t Comments\tRemarks\t Reason\t Order Type\tOrder Status\tOrder By\tSize Code\tSize Name\tColor Code\tColor Name\tItem Name\tItem Code\tItem Grade\tCategory\tBrand\tQuantity\tItem PTR Price\tItem Color Price\tTotal\t Delivery Date\n";


    $sort = " ORDER BY date_of_order desc,time_of_order desc";
    $queryConditions = '';
    if (isset($_SESSION['fil_from']) && !empty($_SESSION['fil_from'])) {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['fil_from'])) . "'";
    } else {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d') . "'";
    }
    if (isset($_SESSION['fil_to']) && !empty($_SESSION['fil_to'])) {
        $todate = " and o.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['fil_to'])) . "'";
    } else {
        $todate = " and o.date_of_order <= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['userLoginType'] == 3 && $_SESSION['distributorId'] != "" && $_SESSION['distributorId'] > 0) {
        $queryConditions .= " AND o.distributor_id=" . $_SESSION['distributorId'];
    } else if (isset($_SESSION['fil_distributor']) && !empty($_SESSION['fil_distributor']) && $_SESSION['fil_distributor'] > 0) {
        $queryConditions .= " AND o.distributor_id=" . $_SESSION['fil_distributor'];
    }

    if ($_SESSION['userLoginType'] == 7 && $_SESSION['stockistId'] != "" && $_SESSION['stockistId'] > 0) {
        $queryConditions .= " AND d.stockist_id=" . $_SESSION['stockistId'];

    } else if (isset($_SESSION['fil_stockist']) && !empty($_SESSION['fil_stockist']) && $_SESSION['fil_stockist'] > 0) {
        $queryConditions .= " AND d.stockist_id=" . $_SESSION['fil_stockist'];
    }
    $salesmanCnd = "";
    if ($_SESSION['userLoginType'] == 5) {
        $salesmanCnd = str_replace("s.", "o.", $salesman);
    }

    if (isset($_SESSION['fil_salesman']) && !empty($_SESSION['fil_salesman']) && $_SESSION['fil_salesman'] > 0) {
        $salesmanCnd = " AND o.salesman_id=" . $_SESSION['fil_salesman'];
    } else if (isset($_SESSION['fil_salesman_manager']) && ($_SESSION['fil_salesman_manager'] > 0)) {
        $salesmanManagerId = $_SESSION['fil_salesman_manager'];
        $account_id = $_SESSION['accountId'];
        $res = $_objAdmin->_getSelectList2('table_salesman_hierarchy_relationship AS SHR 
				LEFT JOIN table_salesman_hierarchy AS SH ON SH.hierarchy_id = SHR.hierarchy_id
				LEFT JOIN table_salesman AS s ON s.salesman_id = SHR.salesman_id', 's.salesman_id,SH.hierarchy_id,SH.sort_order', '', " SH.account_id=" . $account_id . " AND SHR.salesman_id = $salesmanManagerId ORDER BY SH.sort_order ASC ");

        if (is_array($res) && (count($res) > 0)) {
            $sortOrder = $res[0]->sort_order;
            $_objArrayList = new ArrayList();
            $getBottomUsersIdArr = $_objArrayList->getSalesmansBottomUsers(array($salesmanManagerId), $sortOrder, $account_id);

            if (is_array($getBottomUsersIdArr) && (count($getBottomUsersIdArr) > 0)) {
                $bottomUsersIds = implode(',', $getBottomUsersIdArr);
            }

            $salesmanCnd = " AND o.salesman_id IN($bottomUsersIds) ";
        }
    } else if (isset($_SESSION['fil_salesman_designation']) && ($_SESSION['fil_salesman_designation'] > 0)) {
        $_objArrayList = new ArrayList();
        $account_id = $_SESSION['accountId'];
        $getDesignationWiseBottomUsersIdArr = $_objArrayList->getDesignationWiseBottomUsers($_SESSION['fil_salesman_designation'], $account_id);

        if (is_array($getDesignationWiseBottomUsersIdArr) && (count($getDesignationWiseBottomUsersIdArr) > 0)) {
            $bottomUsersIds = implode(',', $getDesignationWiseBottomUsersIdArr);
            $salesmanCnd .= " AND o.salesman_id IN($bottomUsersIds) ";
        }
    } else {
        $salesmanCnd .= '';
    }
    //echo $bottomUsersIds; die;
    if (isset($_SESSION['fil_retailer']) && !empty($_SESSION['fil_retailer']) && $_SESSION['fil_retailer'] > 0) {
        $queryConditions .= " AND o.retailer_id=" . $_SESSION['fil_retailer'];
    }
    if (isset($_SESSION['fil_salesman_state']) && !empty($_SESSION['fil_salesman_state']) && $_SESSION['fil_salesman_state'] > 0) {
        $queryConditions .= " AND s.state=" . $_SESSION['fil_salesman_state'];
    }
    if (isset($_SESSION['fil_retailer_state']) && !empty($_SESSION['fil_retailer_state']) && $_SESSION['fil_retailer_state'] > 0) {
        $queryConditions .= " AND r.state=" . $_SESSION['fil_retailer_state'];
    }
    if (isset($_SESSION['fil_distributor_state']) && !empty($_SESSION['fil_distributor_state']) && $_SESSION['fil_distributor_state'] > 0) {
        $queryConditions .= " AND d.state=" . $_SESSION['fil_distributor_state'];
    }

    if (isset($_SESSION['fil_salesman_zone']) && !empty($_SESSION['fil_salesman_zone']) && $_SESSION['fil_salesman_zone'] > 0) {
        $queryConditions .= " AND zms.zone_id=" . $_SESSION['fil_salesman_zone'];
    }
    if (isset($_SESSION['fil_retailer_zone']) && !empty($_SESSION['fil_retailer_zone']) && $_SESSION['fil_retailer_zone'] > 0) {
        $queryConditions .= " AND zmr.zone_id=" . $_SESSION['fil_retailer_zone'];
    }
    if (isset($_SESSION['fil_distributor_zone']) && !empty($_SESSION['fil_distributor_zone']) && $_SESSION['fil_distributor_zone'] > 0) {
        $queryConditions .= " AND zmd.zone_id=" . $_SESSION['fil_distributor_zone'];
    }
    if (isset($_SESSION['fil_month']) && !empty($_SESSION['fil_month']) && isset($_SESSION['fil_year']) && !empty($_SESSION['fil_year'])) {
        $firstDate = date('Y-m-d', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
        $lastdate = date('Y-m-t', strtotime($_SESSION['fil_year'] . '-' . $_SESSION['fil_month'] . '-01'));
        $fromdate = " and o.date_of_order >= '" . $firstDate . "'";
        $todate = " and o.date_of_order <= '" . $lastdate . "'";
    }

    if (isset($_SESSION['fil_order_status']) && !empty($_SESSION['fil_order_status'])) {
        $queryConditions .= " AND o.order_status='" . $_SESSION['fil_order_status'] . "'";
    } else {
        //$queryConditions .=" and order_status IN('A','I') ";
    }
    if (isset($_SESSION['fil_order_type']) && !empty($_SESSION['fil_order_type'])) {
        $queryConditions .= " AND o.order_type='" . $_SESSION['fil_order_type'] . "'";
    } else {
        //$queryConditions .=" AND o.order_type !='Return'";
    }

    $queryConditions = $queryConditions . $salesmanCnd . $fromdate . $todate;
    $where = $queryConditions;

    $auRec = $_objAdmin->_getSelectList("table_order as o 
            left join table_order_detail as ord on o.order_type != 'No' and ord.order_id = o.order_id and ord.type = 1       
            left join table_item_wise_size_color as tod on tod.order_detail_id = ord.order_detail_id
            left join table_item_size_master as size on size.id = tod.size_id
            left join table_item_color_master as col on col.id = tod.color_id
            left join table_item as i on i.item_id = ord.item_id 
            left join table_retailer as r on o.retailer_id=r.retailer_id 
            left join table_salesman as s on o.salesman_id=s.salesman_id 
            left join table_salesman_hierarchy_relationship as shr on shr.salesman_id = s.salesman_id
            left join table_category as tc on tc.category_id = i.category_id
            left join table_brands as tb on tb.brand_id = i.brand_id
            left join table_salesman as s2 on s2.salesman_id=shr.rpt_user_id
            left join table_distributors as d on o.distributor_id=d.distributor_id 
            left join table_retailer_channel_master as cm on r.channel_id=cm.channel_id 
            LEFT JOIN table_retailer_group as rg ON rg.group_id = r.group_id
            left join table_retailer_type_master as rtm ON rtm.type_id=r.type_id
            left join table_relationship as rel ON rel.relationship_id=r.relationship_id 
            left join state as str on str.state_id=r.state 
            left join state as sts on sts.state_id=s.state 
            left join state as std on std.state_id=d.state 
            left join city as c on c.city_id=r.city 
            left join table_grade as tg on tg.grade_id = i.grade_id
            left join table_zone_state_mapping as zms on zms.state_id=s.state and zms.account_id = s.account_id
			left join table_zone as sz on sz.zone_id=zms.zone_id 
			left join table_zone_state_mapping as zmr on zmr.state_id=r.state and zmr.account_id = r.account_id
			left join table_zone as rz on rz.zone_id=zmr.zone_id
			left join table_zone_state_mapping as zmd on zmd.state_id=d.state and zmd.account_id = d.account_id
			left join table_zone as dz on dz.zone_id=zmd.zone_id",
        "o.order_id,o.retailer_id,o.order_type,o.order_status,
			o.date_of_order,o.time_of_order,o.acc_total_invoice_amount,o.order_by,
	r.retailer_name,r.retailer_code,
	r.retailer_address,r.retailer_location,cm.channel_name,r.display_outlet,
	s.salesman_name,s.employee_code,s2.salesman_name as rpt_to,d.distributor_name,d.distributor_code,
	sz.zone_name as sal_zone,rz.zone_name as ret_zone,dz.zone_name as dist_zone,str.state_name as ret_state,sts.state_name as sal_state,std.state_name as dist_state,c.city_name,i.item_code,i.item_name,ord.quantity,ord.price,ord.total,ord.remarks,rg.group_name,rtm.type_name,rel.relationship_code as relation,tg.grade_name,tc.category_name,tb.brand_name,o.delivery_date,o.comments,o.tag_description,size.item_size_code,size.item_size_name,col.item_color_code,col.item_color_name,tod.price as qtyPrice,tod.qty,ord.price as ptrPrice", '', $where . $sort, '');


    $remove = array("\n", "\r", ",", "\t");
    for ($i = 0; $i < count($auRec); $i++) {
        $orderType = '';


        if ($auRec[$i]->order_type == 'Yes') {
            $orderType = 'Sales Order';

            if ($auRec[$i]->order_status == 'A') {
                $status = "New Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }
            if ($auRec[$i]->order_status == 'C') {
                $status = "Cancelled";
            }
            $color = ($auRec[$i]->order_status == 'A') ? "A" : "P";
        }
        if ($auRec[$i]->order_type == 'No') {
            $orderType = 'No Order';

            $status = ($auRec[$i]->order_status == 'A') ? "No Order" : "Processed";
            $color = ($auRec[$i]->order_status == 'A') ? "I" : "P";
        }
        if ($auRec[$i]->order_type == 'Adhoc') {
            $orderType = 'Adhoc Order';

            if ($auRec[$i]->order_status == 'A') {
                $status = "New Adhoc Order";
            }
            if ($auRec[$i]->order_status == 'I') {
                $status = "Processed";
            }
            if ($auRec[$i]->order_status == 'D') {
                $status = "Dispatched";
            }
            if ($auRec[$i]->order_status == 'C') {
                $status = "Cancelled";
            }
            //$status=($auRec[$i]->order_status=='A')?"New Adhoc Order":"Processed";
            $color = ($auRec[$i]->order_status == 'A') ? "O" : "P";
        }

        if (strtolower($auRec[$i]->order_type) == 'return') {
            $orderType = 'Return Order';
        }

        // display oulet
        if ($auRec[$i]->display_outlet == 'Y') {
            $outlet = 'Yes';
        } elseif ($auRec[$i]->display_outlet == 'N') {
            $outlet = 'No';
        }
        switch ($auRec[$i]->order_by) {
            case 'S':
                $order_by = $AliaseUsers['salesman'];
                break;
            case "D":
                $order_by = $AliaseUsers['distributor'];
                break;
            case "R":
                $order_by = $AliaseUsers['retailer'];
                break;
            default :
                $order_by = '';
        }
        $auRec2 = $_objAdmin->_getSelectList2('table_order_detail', "count( distinct(item_id)) as total_item", '', " order_id = " . $auRec[$i]->order_id . " and type = 1");


        $total = (isset($auRec[$i]->qtyPrice) && !empty
            ($auRec[$i]->qtyPrice)) ? $auRec[$i]->qtyPrice :
            $auRec[$i]->ptrPrice;
        $ttl = $auRec[$i]->qty * $total;

        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);
        $date_of_delivery = $_objAdmin->_changeDate($auRec[$i]->delivery_date);
        $exp_date = !empty($_objAdmin->_changeDate($auRec[$i]->expiry_date)) ? $_objAdmin->_changeDate
        ($auRec[$i]->expiry_date) : '-';
        $mfg_date = !empty($_objAdmin->_changeDate($auRec[$i]->mfg_date)) ? $_objAdmin->_changeDate
        ($auRec[$i]->mfg_date) : '-';
        $data .= "" . $date_of_order . "\t" .
            $auRec[$i]->time_of_order . "\t" .
            $auRec[$i]->order_id . "\t" .
            $auRec[$i]->acc_total_invoice_amount . "\t" .
            $auRec2[0]->total_item . "\t" .
            $auRec[$i]->distributor_name . "\t" .
            $auRec[$i]->distributor_code . "\t" .
            $auRec[$i]->dist_zone . "\t" .
            $auRec[$i]->dist_state . "\t" .
            $auRec[$i]->salesman_name . "\t" .
            $auRec[$i]->employee_code . "\t" .
            $auRec[$i]->sal_zone . "\t" .
            $auRec[$i]->sal_state . "\t" .
            $auRec[$i]->rpt_to . "\t" .
            $auRec[$i]->retailer_name . "\t" .
            $auRec[$i]->retailer_code . "\t" .
            $auRec[$i]->ret_zone . "\t" .
            $auRec[$i]->ret_state . "\t" .
            $auRec[$i]->city_name . "\t" .
            str_replace($remove, ' ', $auRec[$i]->retailer_location) . "\t" .
            str_replace($remove, ' ', $auRec[$i]->retailer_address) . "\t" .
            $auRec[$i]->group_name . "\t" .
            $auRec[$i]->channel_name . "\t" .
            $auRec[$i]->relation . "\t" .
            $auRec[$i]->type_name . "\t" .
            $outlet . "\t" .
            str_replace($remove, ' ', $auRec[$i]->comments) . "\t" .
            str_replace($remove, ' ', $auRec[$i]->remarks) . "\t" .
            str_replace($remove, ' ', $auRec[$i]->tag_description) . "\t" .
            $orderType . "\t" .
            $status . "\t" .
            $order_by . "\t" .
            $auRec[$i]->item_size_code . "\t" .
            $auRec[$i]->item_size_name . "\t" .
            $auRec[$i]->item_color_code . "\t" .
            $auRec[$i]->item_color_name . "\t" .
            $auRec[$i]->item_name . "\t" .
            $auRec[$i]->item_code . "\t" .
            $auRec[$i]->grade_name . "\t" .
            $auRec[$i]->category_name . "\t" .
            $auRec[$i]->brand_name . "\t" .
            $auRec[$i]->qty . "\t" .
            $auRec[$i]->ptrPrice . "\t" .
            $auRec[$i]->qtyPrice . "\t" .
            $ttl . "\t" .
            $date_of_delivery . "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Order Item List.xls\"");
    echo $data;
    exit;


}

// Todo End : Jatin : 7 March 2024 : Export item wise order list


//Todo start : sudhanshu  12 march 2024 export retailer no order
if (isset($_GET['export_retailer_no_orders'])) {
    $data = "Date \t Time \t" . $AliaseUsers['retailer'] . " Name \t" . $AliaseUsers['retailer'] . " Code\t" .
        $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['salesman'] . " Code\tZone\tState\tDistrict \t City \t Reason \t Remark \n";
    $distributorId = "";
    $stateId = "";
    $location_id = '';
    if ($_SESSION['FromDate'] != '') {
        $fromdate = " ods.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['FromDate'])) . "'";
    } else {
        $fromdate = " ods.date_of_order >= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['ToDate'] != '') {
        $todate = " and ods.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToDate'])) . "'";
    } else {
        $todate = " and ods.date_of_order <= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['disID'] != '' & $_SESSION['disID'] != 'All') {
        $distributorId = " and d.retailer_id ='" . $_SESSION['disID'] . "'";
    } else if ($_SESSION['distributorId'] != "" && $_SESSION['distributorId'] != "0") {
        $distributorId = " and d.distributor_id='" . $_SESSION['distributorId'] . "'";
    }
    if ($_SESSION['Disstate'] != '') {
        $stateId = " and st.state_id='" . $_SESSION['Disstate'] . "'";
    }
    if ($_SESSION['Dislocation_id'] != '') {
        $location_id = " and ct.city_id='" . $_SESSION['Dislocation_id'] . "'";
    }
    $where = " $fromdate $todate $distributorId $stateId $location_id and d.retailer_name!='' and LOWER(ods.order_type) = 'no' ";
    $sort = 'ORDER BY ods.date_of_order DESC,ods.time_of_order DESC';
    $auRec = $_objAdmin->_getSelectList('table_order as ods
		left join table_retailer as d on d.retailer_id=ods.retailer_id 
		left join state as st on st.state_id=d.state 
		left join city as ct on ct.city_id=d.city
		left join table_location as loc on loc.location_id=d.location_id 
		LEFT JOIN table_zone_state_mapping as szsm on szsm.state_id = d.state and szsm.account_id = d.account_id
        LEFT JOIN table_zone as sz on sz.zone_id = szsm.zone_id  
		left join table_salesman as s on s.salesman_id=ods.salesman_id
		',
        "ods.order_id,ods.date_of_order,ods.time_of_order,ods.order_type,ods.reason,ods.tag_description as no_order_reason,ods.comments,d.retailer_id,d.retailer_name,d.retailer_code,st.state_id,st.state_name,ct.city_name,s.salesman_id,s.salesman_name,s.employee_code,sz.zone_name,loc.location_name", '', $where . $sort);
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . date("d M Y", strtotime($auRec[$i]->date_of_order)) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->time_of_order . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->zone_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->no_order_reason . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->comments . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['retailer'] . "_no_order_report.xls\"");
    echo $data;
    exit;
}
//Todo end : sudhanshu : 11 march 2024 export retailer no order


//Todo Start Sudhanshu 20 march 2024 export marketing material report
if (isset($_GET['export_marketing_material_report'])) {
    $data = "Activity Date \tActivity Time \t" . $AliaseUsers['salesman'] . " Code \t" . $AliaseUsers['salesman'] . " Name\t" .
        $AliaseUsers['retailer'] . " Code\t" . $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['retailer'] . " Group\t" . $AliaseUsers['retailer'] . " Channel\t" . $AliaseUsers['retailer'] . " Classification\t " . $AliaseUsers['retailer'] . " Type\t" . $AliaseUsers['distributor'] . " Code\t" . $AliaseUsers['distributor'] . " Name\tLead Code\tLead Name \tItem Code\tItem Name\tItem Grade\t Category\tBrand\tQuantity\t Photo Count \n";


    $salesman = $_SESSION['SalListFilters'];
//echo $salesman;die;
    if (strtolower($_SESSION['Filter_for']) == 'all' || $_SESSION['Filter_for'] == '') {

        $itemRec = $_objAdmin->_getSelectList2('table_market_item_order as mio
                            left join table_market_item_order_detail as dtl on dtl.market_item_order_id = mio.market_item_order_id
                            left join table_item as i on i.item_id = dtl.item_id
                            left join table_grade as bg on bg.grade_id=i.grade_id
                            left join table_category as c on c.category_id=i.category_id 
                            left join table_brands as b on b.brand_id=i.brand_id 
                            left join table_salesman as s on mio.salesman_id = s.salesman_id 
                            left join table_retailer as tr on mio.retailer_id = tr.retailer_id 
                            LEFT JOIN table_retailer_group as rg ON rg.group_id = tr.group_id
                            left join table_retailer_type_master as rtm ON rtm.type_id=tr.type_id
                            left join table_retailer_channel_master as rc ON rc.channel_id=tr.channel_id 
                            left join table_relationship as rel ON rel.relationship_id=tr.relationship_id
                            left join table_distributors as td on tr.distributor_id = td.distributor_id',
            'mio.*,s.salesman_name,tr.retailer_name,tr.retailer_code,s.employee_code,td.distributor_name ,td.distributor_code,rg.group_name,rtm.type_name,rc.channel_name,rel.relationship_code as relation,"retailer" as type,i.item_name,i.item_code,bg.grade_name,c.category_name,b.brand_name,dtl.quantity', '', " (mio.order_date BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromAttList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToAttList'])) . "') $salesman $order ORDER BY mio.market_item_order_id DESC");

        $disRec = $_objAdmin->_getSelectList2('table_distributor_market_item_order as mio 
                            left join table_distributor_market_item_order_detail as dtl on dtl.market_item_order_id = mio.market_item_order_id
                            left join table_item as i on i.item_id = dtl.item_id
                            left join table_grade as bg on bg.grade_id=i.grade_id
                            left join table_category as c on c.category_id=i.category_id 
                            left join table_brands as b on b.brand_id=i.brand_id 
                            left join table_salesman as s on mio.salesman_id = s.salesman_id 
                            left join table_distributors as d on mio.distributor_id = d.distributor_id 
                           ',
            'mio.*,s.salesman_name,s.employee_code,d.distributor_name ,d.distributor_code,"distributor" as type,i.item_name,i.item_code,bg.grade_name,c.category_name,b.brand_name,dtl.quantity', '', " (mio.order_date BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromAttList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToAttList'])) . "') $salesman $order ORDER BY mio.market_item_order_id DESC");

        $leadRec = $_objAdmin->_getSelectList2('table_lead_market_item_order as mio 
                            left join table_lead_market_item_order_detail as dtl on dtl.market_item_order_id = mio.market_item_order_id
                            left join table_item as i on i.item_id = dtl.item_id
                            left join table_grade as bg on bg.grade_id=i.grade_id
                            left join table_category as c on c.category_id=i.category_id 
                            left join table_brands as b on b.brand_id=i.brand_id 
                            left join table_salesman as s on mio.salesman_id = s.salesman_id 
                            left join table_lead as l on mio.lead_id = l.lead_id 
                         ',
            'mio.*,s.salesman_name,s.employee_code,l.lead_code,l.title as lead_name,"lead" as type,i.item_name,i.item_code,bg.grade_name,c.category_name,b.brand_name,dtl.quantity', '', " (mio.order_date BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromAttList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToAttList'])) . "') $salesman $order ORDER BY mio.market_item_order_id DESC");


        // create method for sort the order data by date and time
        function sortOrderArray($Array, $SortBy = array(), $Sort = SORT_DESC)
        {
            if (is_array($Array) && count($Array) > 0 && !empty($SortBy)) {
                $Map = array();
                foreach ($Array as $Key => $Val) {
                    $Sort_key = '';
                    foreach ($SortBy as $Key_key) {
                        $Sort_key .= $Val->$Key_key;
                    }
                    //   echo $Sort_key;
                    $Map[$Key] = $Sort_key;
                }

                // print_r($Map);die;
                arsort($Map, $Sort);
                $Sorted = array();
                foreach ($Map as $Key => $Val) {
                    //echo $Array[$Key];
                    $Sorted[] = $Array[$Key];
                }
                // print_r($Sorted);die;
                //  return array_reverse($Sorted);
                return $Sorted;
            }
            return $Array;
        }

        // end  method for sort the order data by date and time
        // now merge all data retailer , distributor and lead order data and change sequnece oder by date and time desc
        $orderArr = array();
        if (is_array($itemRec) && count($itemRec) > 0) {
            if (is_array($disRec) && count($disRec) > 0) {
                $orderArr = array_merge($itemRec, $disRec);
            }
            if ((is_array($disRec) && count($disRec) > 0) && (is_array($leadRec) && count($leadRec) > 0)) {
                $orderArr = array_merge($orderArr, $leadRec);
            }

            if ((is_array($disRec) && count($disRec) <= 0) && (is_array($leadRec) && count($leadRec) > 0)) {
                $orderArr = array_merge($itemRec, $leadRec);
            }

            if (count($orderArr) <= 0) {
                $orderArr = $itemRec;
            }

        }

        if (count($itemRec) <= 0 && is_array($disRec) && count($disRec) > 0) {
            if (is_array($leadRec) && count($leadRec) > 0) {
                $orderArr = array_merge($disRec, $leadRec);
            }

            if (count($orderArr) <= 0) {
                $orderArr = $disRec;
            }
        }

        if (count($itemRec) <= 0 && count($disRec) <= 0 && count($leadRec) > 0) {

            if (count($orderArr) <= 0) {
                $orderArr = $leadRec;
            }
        }

        $orderData = sortOrderArray($orderArr, array('order_date', 'order_time'));

    }

    if (strtolower($_SESSION['Filter_for']) == 'r') {

        $orderData = $_objAdmin->_getSelectList2('table_market_item_order as mio                          
                            left join table_market_item_order_detail as dtl on dtl.market_item_order_id = mio.market_item_order_id
                            left join table_item as i on i.item_id = dtl.item_id
                            left join table_grade as bg on bg.grade_id=i.grade_id
                            left join table_category as c on c.category_id=i.category_id 
                            left join table_brands as b on b.brand_id=i.brand_id
                            left join table_salesman as s on mio.salesman_id = s.salesman_id 
                            left join table_retailer as tr on mio.retailer_id = tr.retailer_id 
                            LEFT JOIN table_retailer_group as rg ON rg.group_id = tr.group_id
                            left join table_retailer_type_master as rtm ON rtm.type_id=tr.type_id
                            left join table_retailer_channel_master as rc ON rc.channel_id=tr.channel_id 
                            left join table_relationship as rel ON rel.relationship_id=tr.relationship_id
                            left join table_distributors as td on tr.distributor_id = td.distributor_id',
            'mio.*,s.salesman_name,s.employee_code,td.distributor_name ,td.distributor_code,rg.group_name,rtm.type_name,rc.channel_name,rel.relationship_code as relation,"retailer" as type,i.item_name,i.item_code,bg.grade_name,c.category_name,b.brand_name,dtl.quantity', '', " (mio.order_date BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromAttList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToAttList'])) . "') $salesman $order ORDER BY mio.market_item_order_id DESC");

    }

    if (strtolower($_SESSION['Filter_for']) == 'd') {
        $orderData = $_objAdmin->_getSelectList2('table_distributor_market_item_order as mio 
                            left join table_distributor_market_item_order_detail as dtl on dtl.market_item_order_id = mio.market_item_order_id
                            left join table_item as i on i.item_id = dtl.item_id
                            left join table_grade as bg on bg.grade_id=i.grade_id
                            left join table_category as c on c.category_id=i.category_id 
                            left join table_brands as b on b.brand_id=i.brand_id
                            left join table_salesman as s on mio.salesman_id = s.salesman_id 
                            left join table_distributors as d on mio.distributor_id = d.distributor_id 
                           ',
            'mio.*,s.salesman_name,s.employee_code,d.distributor_name ,d.distributor_code,"distributor" as type,i.item_name,i.item_code,bg.grade_name,c.category_name,b.brand_name,dtl.quantity', '', " (mio.order_date BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromAttList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToAttList'])) . "') $salesman $order ORDER BY mio.market_item_order_id DESC");

    }

    if (strtolower($_SESSION['Filter_for']) == 'l') {
        $orderData = $_objAdmin->_getSelectList2('table_lead_market_item_order as mio 
                            left join table_lead_market_item_order_detail as dtl on dtl.market_item_order_id = mio.market_item_order_id
                            left join table_item as i on i.item_id = dtl.item_id
                            left join table_grade as bg on bg.grade_id=i.grade_id
                            left join table_category as c on c.category_id=i.category_id 
                            left join table_brands as b on b.brand_id=i.brand_id
                            left join table_salesman as s on mio.salesman_id = s.salesman_id 
                            left join table_lead as l on mio.lead_id = l.lead_id 
                         ',
            'mio.*,s.salesman_name,s.employee_code,l.lead_code,l.title as lead_name,"lead" as type,i.item_name,i.item_code,bg.grade_name,c.category_name,b.brand_name,dtl.quantity', '', " (mio.order_date BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromAttList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToAttList'])) . "') $salesman $order ORDER BY mio.market_item_order_id DESC");


    }

    //echo "<pre>";print_r($orderData);die;

    if (is_array($orderData) && count($orderData) > 0) {
        foreach ($orderData as $key => $value) {
            $data .= '"' . $_objAdmin->_changeDate($value->order_date) . '"';
            $data .= "\t";
            $data .= '"' . $value->order_time . '"';
            $data .= "\t";
            $data .= '"' . $value->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $value->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . ($value->retailer_code != '') ? $value->retailer_code : '-' . '"';
            $data .= "\t";
            $data .= '"' . ($value->retailer_name != '') ? $value->retailer_name : '-' . '"';
            $data .= "\t";
            $data .= '"' . ($value->group_name != '') ? $value->group_name : '-' . '"';
            $data .= "\t";
            $data .= '"' . ($value->channel_name != '') ? $value->channel_name : '-' . '"';
            $data .= "\t";
            $data .= '"' . ($value->relation != '-') ? $value->relation : '-' . '"';
            $data .= "\t";
            $data .= '"' . ($value->type_name != '') ? $value->type_name : '-' . '"';
            $data .= "\t";
          
            $data .= '"' . ($value->distributor_name != '') ? $value->distributor_name : '-' . '"';
            $data .= "\t";
            $data .= '"' . ($value->distributor_code != '') ? $value->distributor_code : '-' . '"';
            $data .= "\t";
            $data .= '"' . ($value->lead_code != '') ? $value->lead_code : '-' . '"';
            $data .= "\t";
            $data .= '"' . ($value->lead_name != '') ? $value->lead_name : '-' . '"';
            $data .= "\t";
       
            $data .= '"' . ($value->item_code != '') ? $value->item_code : '-' . '"';
            $data .= "\t";
            $data .= '"' . ($value->item_name != '') ? $value->item_name : '-' . '"';
            $data .= "\t";
            $data .= '"' . ($value->grade_name != '') ? $value->grade_name : '-' . '"';
            $data .= "\t";
            $data .= '"' . $value->category_name . '"';
            $data .= "\t";
            $data .= '"' . $value->brand_name . '"';
            $data .= "\t";
            $data .= '"' . $value->quantity . '"';

            $data .= "\t";
            $data .= '"' . $value->photo_count . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"marketing material report.xls\"");
    echo $data;
    exit;
}
//Todo End sudhanshu  20 march 2024 export marketing material report

//Todo Start : Sudhanshu 26 march 2024 export stockist payment collection
if (isset($_GET['export_stockist_payment_transaction_list'])) {
    $data = "PMT Number\tPayment Date\tPayment Time\t" . $AliaseUsers['stockist'] . " Code\t" . $AliaseUsers['stockist'] . " Name\tPayment Reference Number\tPayment Amount\tAdjusted Amount\tPending Amount\tPayment Method\tCheque No.\tBank Detail\tPayment Remarks\tClearing Status\tStatus\tRemarks\n";
    if ($_SESSION['FromDisList'] != '') {
        $fromdate = date('Y-m-d', strtotime($_SESSION['FromDisList']));
    } else {
        $fromdate = date('Y-m-d');
    }
    if ($_SESSION['ToDisList'] != '') {
        $todate = date('Y-m-d', strtotime($_SESSION['ToDisList']));
    } else {
        $todate = date('Y-m-d');
    }

    if ($_SESSION['stockist_id'] != '' && $_SESSION['userLoginType'] != 7) {
        $disLogCond = " AND o.stockist_id='" . $_SESSION['stockist_id'] . "' ";
    }
    if ($_SESSION['userLoginType'] == 7) {
        $disLogCond = " AND o.stockist_id='" . $_SESSION['stockistId'] . "' ";
    }
    $where = " o.payment_date BETWEEN '" . $fromdate . "' AND '" . $todate . "' $disLogCond";
    $auRec = $_objAdmin->_getSelectList2('table_stockist_payment_transactions AS o
					LEFT JOIN table_stockist as s on s.stockist_id = o.stockist_id					
					LEFT JOIN table_payment_method as pp on pp.payment_method_id = o.payment_method_id', " o.*, s.stockist_name, s.stockist_code, pp.payment_method_desc", "", $where . $sort, '');
    $remove = array("\n", "\r\n", "\r", ",");
    for ($i = 0; $i < count($auRec); $i++) {
        $status = ($auRec[$i]->status == 'C') ? 'Cancelled' : '';
        $pending_amount = ROUND((($auRec[$i]->total_amount) - ($auRec[$i]->adjusted_amount)), 0);
        $data .= $auRec[$i]->payment_id;
        $data .= "\t";
        $data .= $_objAdmin->_changeDate($auRec[$i]->payment_date);
        $data .= "\t";
        $data .= $auRec[$i]->payment_time;
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->stockist_code);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->stockist_name);
        $data .= "\t";

        $data .= str_replace($remove, '', $auRec[$i]->payment_ref_no);
        $data .= "\t";
        $data .= $auRec[$i]->total_amount;
        $data .= "\t";
        $data .= $auRec[$i]->adjusted_amount;
        $data .= "\t";
        $data .= $pending_amount;
        $data .= "\t";
        $data .= $auRec[$i]->payment_method_desc;
        $data .= "\t";
        $data .= $auRec[$i]->cheque_no;
        $data .= "\t";
        $data .= $auRec[$i]->bank_details;
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->payment_remarks);
        $data .= "\t";
        $data .= $auRec[$i]->clearing_status;
        $data .= "\t";
        $data .= $status;
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->remarks);
        $data .= "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"payment_list.xls\"");
    echo $data;
    exit;
}
//Todo End :  Sudhanshu 26 march 2024 export stockist payment collection


// Todo Start :sudhanshu 28 march 2024 : Export Distributor stockist list
if (isset($_GET['export_distributor_stockist_list'])) {
    $data = "" . $AliaseUsers['distributor'] . " Name \t  " . $AliaseUsers['distributor'] . " Code \t " . $AliaseUsers['distributor'] . " Type \t Survey Status\t " . $AliaseUsers['stockist'] . " Name \t " . $AliaseUsers['stockist'] . " Code\t Country\t State \tDistrict \t City \t Address \tZipcode \t  Phone Number1 \t Phone Number2 \t Contact Person1 \t Contact Person Number1 \t Contact Person2 \t Contact Person Number2 \tUsername\t Email ID1 \t Email ID2\tDate of Birth\tGST No. \t Aadhar No. \t PAN No. \t Start Date\n";
    if ((intval($_SESSION['userLoginType']) == 7) && (intval($_SESSION['stockistId']) > 0)) {
        $distCondi = ' AND d.stockist_id = ' . intval($_SESSION['stockistId']);
    }
    $condi = " d.status ='A'  $distCondi GROUP BY d.distributor_id ORDER BY d.distributor_name ASC";

    $auRec = $_objAdmin->_getSelectList('table_distributors as d 
       
        left join table_web_users as w on w.distributor_id=d.distributor_id 
        left join country as con on con.country_id = d.country
        left join state as s on s.state_id=d.state 
        left join city as c on c.city_id=d.city 
        left join table_location as loc ON loc.location_id = d.location
       
        left join table_distributor_type_master as tm on tm.dis_type_id=d.distributor_type_id 
        left join table_stockist as st on st.stockist_id=d.stockist_id', "d.*,w.username,st.stockist_name,st.stockist_code,w.email_id,w.web_user_id,tm.dis_type_name,con.country_name,s.state_name,c.city_name,loc.location_name", '', $condi);

    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $surveyStatus = '';

            if (strtolower($auRec[$i]->survey_status) == 'c') {
                $surveyStatus = 'Surveyed';
            } elseif (strtolower($auRec[$i]->survey_status) == 'i') {
                $surveyStatus = 'Not Surveyed';
            } elseif (strtolower($auRec[$i]->survey_status) == 'n') {
                $surveyStatus = 'Rejected';
            } else {
                $surveyStatus = '';
            }


            $start_date = $_objAdmin->_changeDate($auRec[$i]->start_date);

            if ($auRec[$i]->status == 'I') {
                $end_date = $_objAdmin->_changeDate($auRec[$i]->end_date);
            } else {
                $end_date = '';
            }

            if ($auRec[$i]->distributor_dob == "0000-00-00") {
                $distributor_dob = "-";
            } else {
                $distributor_dob = $_objAdmin->_changeDate($auRec[$i]->distributor_dob);
            }
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";

            $data .= '"' . $auRec[$i]->type_name . '"';
            $data .= "\t";

            $data .= '"' . $surveyStatus . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->stockist_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->stockist_code . '"';

            $data .= "\t";
            $data .= '"' . $auRec[$i]->country_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_address . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->zipcode . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_phone_no . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_phone_no2 . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->contact_person . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->contact_number . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->contact_person2 . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->contact_number2 . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->username . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->email_id . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->email_id2 . '"';
            $data .= "\t";
            $data .= '"' . $distributor_dob . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->gst_no . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->aadhar_no . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->pan_no . '"';
            $data .= "\t";

            $data .= '"' . $start_date . '"';

            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['distributor'] . "_" . $AliaseUsers['stockist'] . "_list.xls\"");
    echo $data;
    exit;
}

// Todo Start :sudhanshu 28 march 2024 : Export Distributor stockist list

//Todo Start: Sudhanshu 01 April 2024  : export stockist CN/DN
if (isset($_GET['export_stockist_credit_debit_note'])) {
    $data = "Date\tCompany Name\tDocument No\t" . $AliaseUsers['stockist'] . " Code\t" . $AliaseUsers['stockist'] . " Name\tNote Type\tReason\tAmount\tDescription\tRemark\tPayment Adjustment\tNote Status\n";
    if ($_SESSION['userLoginType'] == 7 && $_SESSION['stockistId'] > 0) {
        $stockist_id = " AND o.stockist_id =" . $_SESSION['stockistId'];
    }
    if ($_SESSION['FromAttList'] != '') {
        $fromdate = date('Y-m-d', strtotime($_SESSION['FromAttList']));
    } else {
        $fromdate = date('Y-m-d');
    }
    if ($_SESSION['ToAttList'] != '') {
        $todate = date('Y-m-d', strtotime($_SESSION['ToAttList']));
    } else {
        $todate = date('Y-m-d');
    }
//    $sort = " ORDER BY O.date_of_note DESC,O.time_of_note desc";
//    // $where = $distributor_id;
//    $where = "  O.date_of_note BETWEEN '" . $fromdate . "' AND '" . $todate . "'  $stockist_id ";
//    $auRec = $_objAdmin->_getSelectList('table_stockist_credit_debit_note AS O
//  	LEFT JOIN table_account AS ac ON ac.account_id = O.account_id
//  	LEFT JOIN table_stockist AS S ON O.stockist_id = S.stockist_id
//  	left join table_cn_dn_reason_master AS T on T.reason_id = O.tag_id
//  	', " O.*, S.stockist_name, T.reason, ac.company_name, S.stockist_code  ", "", $where . $sort, '');

    $auRec = $_objAdmin->_getSelectList2("((SELECT o.invoice_id as id, '' as note_type,substr(o.bill_no, -10) as document_no
	,o.bill_date,o.due_date,
	o.acc_total_invoice_amount as total_amount, COALESCE(sum(p.received_amount), 0) as adjusted_amount,
	o.acc_total_invoice_amount-COALESCE(sum(p.received_amount), 0) AS pending_amount, o.bill_date as document_date,o.date_of_order as date ,o.time_of_order as time,ac.company_name,S.stockist_name,  'Sales return CN' as reason , S.stockist_code,o.remark as remarks,
	case when o.clearing_status ='' Then 'Unadjusted' 
	     when o.clearing_status ='Full' Then 'Fully Adjusted'
	     when o.clearing_status ='Partial Adjust' Then 'Partially Adjusted'
	     ELSE o.clearing_status 
	End as clearing_status
	FROM
	stockist_single_invoice_record as o
	left join table_stockist_payment_received as p on p.return_order_id = o.invoice_id
	LEFT JOIN table_account AS ac ON ac.account_id = o.account_id
	LEFT JOIN table_stockist AS S ON o.stockist_id = S.stockist_id
  	left join table_cn_dn_reason_master AS T on T.reason_id = o.tag_id
	WHERE o.order_type='Return'  AND o.invoice_status='A' and o.account_id = '" . $_SESSION['accountId'] . "'
	AND o.order_status='D' AND o.date_of_order BETWEEN '" . $fromdate . "' AND '" . $todate . "' $stockist_id
	 Group by o.invoice_id)

	Union

	(SELECT o.note_id as id, o.note_type  ,substr(o.document_no, -10) as document_no, o.date_of_note as bill_date,
	o.due_date, o.total_amount as total_amount, COALESCE(sum(p.received_amount), 0) as adjusted_amount,
	o.total_amount-COALESCE(sum(p.received_amount), 0) AS pending_amount, o.date_of_note as document_date,
	
	o.date_of_note as date, o.time_of_note as time,ac.company_name,S.stockist_name,  T.reason , S.stockist_code,o.remarks,case when o.clearing_status ='' Then 'Unadjusted' 
	     when o.clearing_status ='Full' Then 'Fully Adjusted'
	     when o.clearing_status ='Partial Adjust' Then 'Partially Adjusted'
	     ELSE o.clearing_status 
	End as clearing_status
	FROM
	table_stockist_credit_debit_note as o
	left join table_stockist_payment_received as p on p.credit_note_id = o.note_id
	LEFT JOIN table_account AS ac ON ac.account_id = o.account_id
	LEFT JOIN table_stockist AS S ON o.stockist_id = S.stockist_id
  	left join table_cn_dn_reason_master AS T on T.reason_id = o.tag_id
	WHERE  o.account_id = '" . $_SESSION['accountId'] . "' and o.date_of_note BETWEEN '" . $fromdate . "' AND '" . $todate . "' $stockist_id  Group by o.note_id)) as tm", "tm.*", $rp, '', ' ORDER BY tm.document_date ASC');

    $remove = array("\n", "\r\n", "\r", ",");
    for ($i = 0; $i < count($auRec); $i++) {
        if ($auRec[$i]->note_type == 'C') {
            $note_type = "Credit";
        } else if ($auRec[$i]->note_type == 'D') {
            $note_type = "Debit";
        } else {
            $note_type = "Sales Return";
        }
        $note_status = ($auRec[$i]->note_status == 'C') ? "Canceled Note" : "Active";
        $data .= $_objAdmin->_changeDate($auRec[$i]->date);
        $data .= "\t";
//        $data .= $auRec[$i]->time;
//        $data .= "\t";
        $data .= $auRec[$i]->company_name;
        $data .= "\t";
        $data .= $auRec[$i]->document_no;
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->stockist_code);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->stockist_name);
        $data .= "\t";

        $data .= $note_type;
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->reason);
        $data .= "\t";
        $data .= (ROUND($auRec[$i]->total_amount, 2));
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->description);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->remark);
        $data .= "\t";
        $data .= str_replace($remove, '', $auRec[$i]->clearing_status);
        $data .= "\t";
        $data .= $note_status;
        $data .= "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Stockist_Credit_Debit_Note.xls\"");
    echo $data;
    exit;
}
//Todo End : Sudhanshu 01 April 2024 : export stockistn CN/DN

//Todo Start Sudhanshu 01 April 2024 export distributor marketing material report
if (isset($_GET['export_dist_marketing_material_report'])) {
    $data = "Activity Date \tActivity Time \t" . $AliaseUsers['salesman'] . " Code \t" . $AliaseUsers['salesman'] . " Name\t" .
        $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\tItem Name\tItem Code\tItem Grade\t Category\tBrand\tQuantity\t Photo Count \n";


    $salesman = $_SESSION['SalListFilters'];


    $orderData = $_objAdmin->_getSelectList2('table_distributor_market_item_order as mio 
                            left join table_distributor_market_item_order_detail as dtl on dtl.market_item_order_id = mio.market_item_order_id
                            left join table_item as i on i.item_id = dtl.item_id
                            left join table_grade as bg on bg.grade_id=i.grade_id
                            left join table_category as c on c.category_id=i.category_id 
                            left join table_brands as b on b.brand_id=i.brand_id
                            left join table_salesman as s on mio.salesman_id = s.salesman_id 
                            left join table_distributors as d on mio.distributor_id = d.distributor_id 
                           ',
        'mio.*,s.salesman_name,s.employee_code,d.distributor_name ,d.distributor_code,"distributor" as type,i.item_name,i.item_code,bg.grade_name,c.category_name,b.brand_name,dtl.quantity', '', " (mio.order_date BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromAttList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToAttList'])) . "') $salesman $order ORDER BY mio.market_item_order_id DESC");


    //echo "<pre>";print_r($orderData);die;

    if (is_array($orderData) && count($orderData) > 0) {
        foreach ($orderData as $key => $value) {
            $data .= '"' . $_objAdmin->_changeDate($value->order_date) . '"';
            $data .= "\t";
            $data .= '"' . $value->order_time . '"';
            $data .= "\t";
            $data .= '"' . $value->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $value->salesman_name . '"';
            $data .= "\t";

            $data .= '"' . ($value->distributor_code != '') ? $value->distributor_code : '-' . '"';
            $data .= "\t";
            $data .= '"' . ($value->distributor_name != '') ? $value->distributor_name : '-' . '"';
            $data .= "\t";

            $data .= '"' . ($value->item_name != '') ? $value->item_name : '-' . '"';
            $data .= "\t";
            $data .= '"' . ($value->item_code != '') ? $value->item_code : '-' . '"';
            $data .= "\t";
            $data .= '"' . ($value->grade_name != '') ? $value->grade_name : '-' . '"';
            $data .= "\t";
            $data .= '"' . $value->category_name . '"';
            $data .= "\t";
            $data .= '"' . $value->brand_name . '"';
            $data .= "\t";
            $data .= '"' . $value->quantity . '"';

            $data .= "\t";
            $data .= '"' . $value->photo_count . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"distributor marketing material report.xls\"");
    echo $data;
    exit;
}
//Todo End sudhanshu  01 April 2024 export distributor marketing material report

//Todo Start Sudhanshu 01 April 2024 export lead marketing material report
if (isset($_GET['export_lead_marketing_material_report'])) {
    $data = "Activity Date \tActivity Time \t" . $AliaseUsers['salesman'] . " Code \t" . $AliaseUsers['salesman'] . " Name\tLead Code\tLead Name \tItem Name\tItem Code\tItem Grade\t Category\tBrand\tQuantity\t Photo Count \n";


    $salesman = $_SESSION['SalListFilters'];


    $orderData = $_objAdmin->_getSelectList2('table_lead_market_item_order as mio 
                            left join table_lead_market_item_order_detail as dtl on dtl.market_item_order_id = mio.market_item_order_id
                            left join table_item as i on i.item_id = dtl.item_id
                            left join table_grade as bg on bg.grade_id=i.grade_id
                            left join table_category as c on c.category_id=i.category_id 
                            left join table_brands as b on b.brand_id=i.brand_id
                            left join table_salesman as s on mio.salesman_id = s.salesman_id 
                            left join table_lead as l on mio.lead_id = l.lead_id 
                         ',
        'mio.*,s.salesman_name,s.employee_code,l.lead_code,l.title as lead_name,"lead" as type,i.item_name,i.item_code,bg.grade_name,c.category_name,b.brand_name,dtl.quantity', '', " (mio.order_date BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromAttList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToAttList'])) . "') $salesman $order ORDER BY mio.market_item_order_id DESC");


    //echo "<pre>";print_r($orderData);die;

    if (is_array($orderData) && count($orderData) > 0) {
        foreach ($orderData as $key => $value) {
            $data .= '"' . $_objAdmin->_changeDate($value->order_date) . '"';
            $data .= "\t";
            $data .= '"' . $value->order_time . '"';
            $data .= "\t";
            $data .= '"' . $value->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $value->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . ($value->lead_code != '') ? $value->lead_code : '-' . '"';
            $data .= "\t";
            $data .= '"' . ($value->lead_name != '') ? $value->lead_name : '-' . '"';
            $data .= "\t";
            $data .= '"' . ($value->item_name != '') ? $value->item_name : '-' . '"';
            $data .= "\t";
            $data .= '"' . ($value->item_code != '') ? $value->item_code : '-' . '"';
            $data .= "\t";
            $data .= '"' . ($value->grade_name != '') ? $value->grade_name : '-' . '"';
            $data .= "\t";
            $data .= '"' . $value->category_name . '"';
            $data .= "\t";
            $data .= '"' . $value->brand_name . '"';
            $data .= "\t";
            $data .= '"' . $value->quantity . '"';

            $data .= "\t";
            $data .= '"' . $value->photo_count . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Lead marketing material report.xls\"");
    echo $data;
    exit;
}
//Todo End sudhanshu 01 April 2024 export lead marketing material report

if (isset($_REQUEST['export_stockist_stock_summary'])) {
    $data = "Month\tYear\tStockist Name\tStockist Code\tItem Name\tItem Code\tOpening Stock\tReceived Qty\tReturn Qty\tDistributor Invoiced Qty\tDistributor Return Qty\tClosing Stock\n";

    if (isset($_SESSION['stockist_id']) && !empty($_SESSION['stockist_id'])) {
        $stockistcnd = " AND ssk.stockist_id =" . $_SESSION['stockist_id'];
    } else if ($_SESSION['userLoginType'] == 7 && $_SESSION['stockistId'] > 0) {
        $stockistcnd = " AND ssk.stockist_id =" . $_SESSION['stockistId'];
    }
    if (isset($_SESSION['monthYearCnd'])) {
        $monthYearCnd = $_SESSION['monthYearCnd'];
    }

    $where = " ssk.item_id !='' $stockistcnd ";
    $auRec = $_objAdmin->_getSelectList("view_stockist_stock as ssk
				left join table_stockist_stock_summary_month_wise as o on o.stockist_id=ssk.stockist_id AND o.item_id=ssk.item_id " . $monthYearCnd . "
				left join table_stockist s on ssk.stockist_id=s.stockist_id
				left join table_item as i on i.item_id=ssk.item_id
				left join table_brands as b on b.brand_id = i.brand_id",
        "o.id,ssk.stockist_id,ssk.item_id, s.stockist_name,s.stockist_code,i.item_name,
				i.item_code,b.brand_name,o.month,o.year,o.opening_stock,o.received_qty,o.return_qty,
				o.dist_invoiced_qty,o.dist_return_qty,o.closing_stock", '', $where, '');
    $_objArrList = new ArrayList();


    for ($i = 0; $i < count($auRec); $i++) {
        $opening_balance = $auRec[$i]->opening_stock;
        $rctval = $auRec[$i]->received_qty;
        $rctRetval = $auRec[$i]->return_qty;
        $invval = $auRec[$i]->dist_invoiced_qty;
        $invRetval = $auRec[$i]->dist_return_qty;
        $closing_balance = $auRec[$i]->closing_stock;
        if (empty($auRec[$i]->id) && empty($opening_balance) && empty($rctval) && empty($rctRetval) && empty($invval) && empty($invRetval) && empty($closing_balance)) {
            $lastlosingStock = $_objAdmin->getPreviousMonthClosingStock($auRec[$i]->stockist_id, $auRec[$i]->item_id, $_SESSION['maxMonth'], $_SESSION['maxyear']);
            $opening_balance = $lastlosingStock;
            $closing_balance = $lastlosingStock;
            $auRec[$i]->month = $_SESSION['maxMonth'];
            $auRec[$i]->year = $_SESSION['maxyear'];
        }
        $data .= '"' . $_objArrList->ARR_MONTHS[str_pad($auRec[$i]->month, 2, '0', STR_PAD_LEFT)] . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->year . '"';
        $data .= "\t";
        $data .= '"' . ucwords(addslashes($auRec[$i]->stockist_name)) . '"';
        $data .= "\t";
        $data .= '"' . ucwords(addslashes($auRec[$i]->stockist_code)) . '"';
        $data .= "\t";
        $data .= '"' . ucwords(addslashes($auRec[$i]->item_name)) . '"';
        $data .= "\t";
        $data .= '"' . ucwords(addslashes($auRec[$i]->item_code)) . '"';
        $data .= "\t";
        $data .= '"' . ROUND($opening_balance) . '"';
        $data .= "\t";
        $data .= '"' . ROUND($rctval) . '"';
        $data .= "\t";
        $data .= '"' . ROUND($rctRetval) . '"';
        $data .= "\t";
        $data .= '"' . ROUND($invval) . '"';
        $data .= "\t";
        $data .= '"' . ROUND($invRetval) . '"';
        $data .= "\t";
        $data .= '"' . ROUND($closing_balance) . '"';
        $data .= "\n";

    }

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['stockist'] . " Item Wise Monthly Stock Report.xls\"");
    echo $data;
    exit;
}

if (isset($_GET['export_salesman_distance_tracking_report'])) {
    $data = "" . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['salesman'] . " Code\tDate\tDistance Travelled\n";
//    echo '<pre>';
//    print_r($data);
//    print_r($_SESSION['Mapsal']);
//    echo '<br>';
//    print_r($_SESSION['Fromdate']);
//    echo '<br>';
//    print_r($_SESSION['Todate']);
//    echo '<br>';
//    die(' die here');
//    $getExpenseTypes = $_objAdmin->_getSelectList('table_salesman_tags as s','s.id,s.desc',''," ORDER BY s.id ASC ");
//
//    if(is_array($getExpenseTypes) && (count($getExpenseTypes) > 0)){
//        foreach ($getExpenseTypes as $key => $expType){
//            $data .= $expType->desc."\t";
//            $data .= $expType->desc.' Remark'."\t";
//        }
//    }
//    $data .= "Total Amount\tCreated on\n";
//
//    if ($_SESSION['FromallownceList'] != '') {
//        $fromdate = date('Y-m-d', strtotime($_SESSION['FromallownceList']));
//    } else {
//        $fromdate = date('Y-m-d');
//    }
//    if ($_SESSION['ToallownceList'] != '') {
//        $todate = date('Y-m-d', strtotime($_SESSION['ToallownceList']));
//    } else {
//        $todate = date('Y-m-d');
//    }
//    $salCond = '';
//    $_objArrayList = new ArrayList();
//    if(isset($_SESSION['allowncesalesmanID']) && !empty($_SESSION['allowncesalesmanID'])){
////        $salCond = " AND s.salesman_id = ".$_SESSION['allowncesalesmanID'];
//        $salArrList = $_SESSION['allowncesalesmanID'];
//        $filterby = '';
//        $salesman = $_objArrayList->getSalesmanConsolidatedList($salArrList, $filterby);
//        $salCond = $salesman;
//    }
//    else{
//        $salsList = $_objArrayList->SalesmanArrayList();
//        $salesman = $_objArrayList->getSalesCondition($salsList);
//        $salCond = $salesman;
//    }
//    $condi=	" sd.app_date BETWEEN '".$fromdate."' AND '".$todate."' $salCond  ORDER BY sd.created DESC ";
    //Todo Start Sudhanshu 08 April 2024
    $salsmanCond = "";
    if (isset($_SESSION['Mapsal']) && !empty($_SESSION['Mapsal']) && ($_SESSION['Mapsal'] != 'all')) {
        $salsmanCond = " AND a.salesman_id='" . $_SESSION['Mapsal'] . "' ";
    }

    //Todo End Sudhanshu 08 April 2024
    $auRec = $_objAdmin->_getSelectList2('table_activity as a', "COUNT(*) AS ttl", '', "  activity_type IN (3,5,11,12,13) and activity_date between '" . date('Y-m-d', strtotime($_SESSION['Fromdate'])) . "' and '" . date('Y-m-d', strtotime($_SESSION['Todate'])) . "' $salsmanCond and accuracy_level!=0 order by end_time asc");
    $locTrackdata = $_objAdmin->_getSelectList2('table_tracking_activity as a', "COUNT(*) AS ttl", '', "  app_date between '" . date('Y-m-d', strtotime($_SESSION['Fromdate'])) . "' and '" . date('Y-m-d', strtotime($_SESSION['Todate'])) . "' $salsmanCond and gps_accuracy!=0 and tracking_type='L' order by app_time asc");
    $rowCount1 = $auRec[0]->ttl;
    $rowCount2 = $locTrackdata[0]->ttl;
    $row = $rowCount1 + $rowCount2;
    if ($row <= 0) {
        $data .= "This " . $AliaseUsers['salesman'] . " has not worked during these period";
    } else {
        $auRec = array();
        $result = array();
        $locTrackdata = array();
        $result2 = $_objAdmin->_getSelectList2('table_activity as a
        LEFT JOIN table_salesman as s ON s.salesman_id=a.salesman_id', "DISTINCT activity_date,s.salesman_name,s.employee_code,s.salesman_id", '', "   activity_date between '" . date('Y-m-d', strtotime($_SESSION['Fromdate'])) . "' and '" . date('Y-m-d', strtotime($_SESSION['Todate'])) . "' AND s.account_id='" . $_SESSION['accountId'] . "' $salsmanCond and accuracy_level!=0  order by activity_date,end_time asc");
        $i = 0;
        $sum = array();
        foreach ($result2 as $key1 => $value1) {
            $salsmanCond = " AND a.salesman_id='" . $value1->salesman_id . "'";
            $result = $_objAdmin->_getSelectList2('table_activity as a', "lat,lng,end_time as app_time,accuracy_level", '', "  activity_type IN (3,5,11,12,13) and activity_date='" . $value1->activity_date . "' $salsmanCond and accuracy_level!=0  order by end_time asc");
            if (sizeof($result) <= 0 && sizeof($locTrackdata) > 0)
                $auRec = $locTrackdata;
            elseif (sizeof($result) > 0 && sizeof($locTrackdata) <= 0)
                $auRec = $result;
            else
                $auRec = array_merge($result, $locTrackdata);
            $salesSum = 0;
            foreach ($auRec as $key => $value) {
                $salesLat1 = $auRec[$key]->lat;
                if (isset($auRec[$key + 1]->lat))
                    $salesLat = $auRec[$key + 1]->lat;
                else
                    $salesLat = $auRec[$key]->lat;
                $salesLng1 = $auRec[$key]->lng;
                if (isset($auRec[$key + 1]->lng))
                    $salesLng = $auRec[$key + 1]->lng;
                else
                    $salesLng = $auRec[$key]->lng;
                $salesdistance = distance($salesLat1, $salesLng1, $salesLat, $salesLng, "K");
                if (!is_nan($salesdistance)) {
                    $salesSum = $salesSum + $salesdistance;
                }
            }
            $sum[$i] = $salesSum;
            $totalsum = $totalsum + $sum[$i];
            $i++;
        }
    }
    // $auSal = $_objAdmin->_getSelectList('table_salesman', "salesman_id,salesman_name,employee_code", '', " salesman_id='" . $_SESSION['Mapsal'] . "' ");
    $remove = array("\n", "\r\n", "\r", ",");
    $i = 0;
    foreach ($result2 as $key1 => $value1) {
        $activity_date = date("j M Y", strtotime($value1->activity_date));
        $distance = round($sum[$i], 2) . " km";
        $data .= '"' . $value1->salesman_name . '"';
        $data .= "\t";
        $data .= '"' . $value1->employee_code . '"';
        $data .= "\t";
        $data .= '"' . $activity_date . '"';
        $data .= "\t";
        $data .= '"' . $distance . '"';
        $data .= "\n";
        $i++;
    }
    $data .= '" "';
    $data .= "\t";
    $data .= '" "';
    $data .= "\t";
    $totalDistTravld = round($totalsum, 2) . " km";
    $data .= '" Total Distance Travelled "';
    $data .= "\t";
    $data .= '"' . $totalDistTravld . '"';
    $data .= "\n";
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"salesman_distance_report.xls\"");
    echo $data;
    exit;
}

/************Export distributor monthly item wise OB and CB stock by sachin on 18th April 2024**************************/

if (isset($_REQUEST['export_distributor_stock_summary'])) {
    $data = "Month\tYear\tDistributor Name\tDistributor Code\tItem Name\tItem Code\tOpening Stock\tReceived Qty\tReturn Qty\tRetailer Invoiced Qty\tRetailer Return Qty\tClosing Stock\n";

    if (isset($_SESSION['distributor_id']) && !empty($_SESSION['distributor_id'])) {
        $stockistcnd = " AND ssk.distributor_id =" . $_SESSION['distributor_id'];
    } else if ($_SESSION['userLoginType'] == 3 && $_SESSION['distributorId'] > 0) {
        $stockistcnd = " AND ssk.distributor_id =" . $_SESSION['distributorId'];
    }
    if (isset($_SESSION['monthYearCnd'])) {
        $monthYearCnd = $_SESSION['monthYearCnd'];
    }

    $where = " ssk.item_id !='' $stockistcnd ";
    $auRec = $_objAdmin->_getSelectList("view_distributor_stock as ssk
				left join table_distributor_stock_summary_month_wise as o on o.distributor_id=ssk.distributor_id AND o.item_id=ssk.item_id " . $monthYearCnd . "
				left join table_distributors d on ssk.distributor_id=d.distributor_id
				left join table_item as i on i.item_id=ssk.item_id
				left join table_brands as b on b.brand_id = i.brand_id",
        "o.id,ssk.distributor_id,ssk.item_id, d.distributor_name,d.distributor_code,i.item_name,
				i.item_code,b.brand_name,o.month,o.year,o.opening_stock,o.received_qty,o.return_qty,
				o.ret_invoiced_qty,o.ret_return_qty,o.closing_stock", '', $where, '');
    $_objArrList = new ArrayList();


    for ($i = 0; $i < count($auRec); $i++) {
        $opening_balance = $auRec[$i]->opening_stock;
        $rctval = $auRec[$i]->received_qty;
        $rctRetval = $auRec[$i]->return_qty;
        $invval = $auRec[$i]->ret_invoiced_qty;
        $invRetval = $auRec[$i]->ret_return_qty;
        $closing_balance = $auRec[$i]->closing_stock;
        if (empty($auRec[$i]->id) && empty($opening_balance) && empty($rctval) && empty($rctRetval) && empty($invval) && empty($invRetval) && empty($closing_balance)) {
            $lastlosingStock = $_objAdmin->getDistPreviousMonthClosingStock($auRec[$i]->distributor_id, $auRec[$i]->item_id, $_SESSION['maxMonth'], $_SESSION['maxyear']);
            $opening_balance = $lastlosingStock;
            $closing_balance = $lastlosingStock;
            $auRec[$i]->month = $_SESSION['maxMonth'];
            $auRec[$i]->year = $_SESSION['maxyear'];
        }
        $data .= '"' . $_objArrList->ARR_MONTHS[str_pad($auRec[$i]->month, 2, '0', STR_PAD_LEFT)] . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->year . '"';
        $data .= "\t";
        $data .= '"' . ucwords(addslashes($auRec[$i]->distributor_name)) . '"';
        $data .= "\t";
        $data .= '"' . ucwords(addslashes($auRec[$i]->distributor_code)) . '"';
        $data .= "\t";
        $data .= '"' . ucwords(addslashes($auRec[$i]->item_name)) . '"';
        $data .= "\t";
        $data .= '"' . ucwords(addslashes($auRec[$i]->item_code)) . '"';
        $data .= "\t";
        $data .= '"' . ROUND($opening_balance) . '"';
        $data .= "\t";
        $data .= '"' . ROUND($rctval) . '"';
        $data .= "\t";
        $data .= '"' . ROUND($rctRetval) . '"';
        $data .= "\t";
        $data .= '"' . ROUND($invval) . '"';
        $data .= "\t";
        $data .= '"' . ROUND($invRetval) . '"';
        $data .= "\t";
        $data .= '"' . ROUND($closing_balance) . '"';
        $data .= "\n";

    }

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['distributor'] . " Item Wise Monthly Stock Report.xls\"");
    echo $data;
    exit;
}

//Todo Start sudhanshu 19 April 2024 :  Export Share of Shelves List from pernod
if (isset($_GET['share_of_shelves_list'])) {
    $data = "Date\tTime\tSalesman Name\tSalesman Code\tZone\tRegion\tState\tRetailer Name\tRetailer Code \tDB Count\tActual Count\tAudit By\tAudit Date\n";
    $condi = '';
    if ($_SESSION['state'] > 0) {
        $condi .= " AND r.state ='" . $_SESSION['state'] . "'";
    }

    if ($_SESSION['zone'] > 0) {
        $condi .= " AND r.zone_id ='" . $_SESSION['zone'] . "'";
    }

    if ($_SESSION['region'] > 0) {
        $condi .= " AND r.region_id ='" . $_SESSION['region'] . "'";
    }

    if ($_SESSION['salID'] > 0) {
        $condi .= " AND ss.salesman_id ='" . $_SESSION['salID'] . "'";
    }

    if ($_SESSION['is_audited'] > 0) {
        if ($_SESSION['is_audited'] == 1) {
            $condi .= " AND ss.user_type !=''";
        } else {
            $condi .= " AND ss.user_type =''";
        }
    }

    if ($_SESSION['is_surveyed'] > 0) {
        if ($_SESSION['is_surveyed'] == 1) {
            $condi .= " AND r.survey_status='C' AND r.verified_by!='' ";
        } else if ($_SESSION['is_surveyed'] == 2) {
            $condi .= " AND ((r.survey_status='I') OR (r.survey_status='C' AND r.verified_by='')) ";
        } else if ($_SESSION['is_surveyed'] == 3) {
            $condi .= " AND r.survey_status='N' ";
        }
    }


    if (isset($_SESSION['fromDate']) && $_SESSION['fromDate'] != "") {
        $fromDate = date('Y-m-d', strtotime($_SESSION['fromDate']));
    } else {

        $fromDate = date('Y-m-d');
    }


    if (isset($_SESSION['toDate']) && $_SESSION['toDate'] != "") {
        $toDate = date('Y-m-d', strtotime($_SESSION['toDate']));
    } else {

        $toDate = date('Y-m-d');
    }

    $month = intval(date('m', strtotime($fromDate)));
    $year = intval(date('Y', strtotime($fromDate)));

    $where = "   ss.created_date BETWEEN '" . $fromDate . "' AND '" . $toDate . "' AND r.status='A' $salesman $condi ORDER BY ss.created_date DESC";

    $auRec = $_objAdmin->_getSelectList2('table_share_shelve_detail as ss
            left join table_retailer as r on r.retailer_id = ss.retailer_id
            left join table_salesman as s on s.salesman_id = ss.salesman_id
            left join table_region as reg on reg.region_id=r.region_id
            
            left join state as st on st.state_id=r.state
            left join table_zone_state_mapping as zmr on zmr.state_id=r.state and zmr.account_id = r.account_id
    left join table_zone as rz on rz.zone_id=zmr.zone_id
        ', "ss.*, r.retailer_name, r.retailer_code, s.salesman_name,s.employee_code, reg.region_name,rz.zone_name, st.state_name", "", $where, '');

    $remove = array("\n", "\r\n", "\r", ",");


    for ($i = 0; $i < count($auRec); $i++) {
        $audit_by = '';
        if ($auRec[$i]->user_type == 1) {
            $audit_by = $auRec[$i]->audit_by;
        } elseif ($auRec[$i]->user_type == 6) {
            $audit_by = $auRec[$i]->audit_by . '(Auditor)';
        } else {

            if ($auRec[$i]->user_type == 5) {
                $audit_by = $auRec[$i]->audit_by . '(Salesman)';
            } elseif ($auRec[$i]->user_type == 6) {
                $audit_by = '';
            }
        }

        $audit_date = '';
        if ($auRec[$i]->audit_date != '0000-00-00 00:00:00') {
            $audit_date = $_objAdmin->_changeDate($auRec[$i]->audit_date);
        }
        $Rec = $_objAdmin->_getSelectList2('table_share_shelve_detail as ssd 
        left join table_image as i on i.ref_id = ssd.id AND image_type = "39" 
        left join table_tags as t on t.tag_id = i.tag_id
        left join table_salesman as s on s.salesman_id = ssd.salesman_id 
        left join table_retailer as r on r.retailer_id = ssd .retailer_id', 'count(i.ref_id) as image_count', '', " ssd.id=" . $auRec[$i]->id);

        $data .= '"' . $_objAdmin->_changeDate($auRec[$i]->created_date) . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->created_time . '"';
        $data .= "\t";
        $data .= '"' . ucwords(str_replace($remove, '', $auRec[$i]->salesman_name)) . '"';
        $data .= "\t";
        $data .= '"' . ucwords(str_replace($remove, '', $auRec[$i]->employee_code)) . '"';
        $data .= "\t";
        $data .= '"' . ucwords(str_replace($remove, '', $auRec[$i]->zone_name)) . '"';
        $data .= "\t";
        $data .= '"' . ucwords(str_replace($remove, '', $auRec[$i]->region_name)) . '"';
        $data .= "\t";
        $data .= '"' . ucwords(str_replace($remove, '', $auRec[$i]->state_name)) . '"';
        $data .= "\t";
        $data .= '"' . ucwords(str_replace($remove, '', $auRec[$i]->retailer_name)) . '"';
        $data .= "\t";
        $data .= '"' . $auRec[$i]->retailer_code . '"';
        $data .= "\t";
        $data .= '"' . ucwords(str_replace($remove, '', $auRec[$i]->photo_count)) . '"';
        $data .= "\t";
        $data .= '"' . ucwords(str_replace($remove, '', $Rec[0]->image_count)) . '"';
        $data .= "\t";
        $data .= '"' . $audit_by . '"';
        $data .= "\t";
        $data .= '"' . $_objAdmin->_changeDate($audit_date) . '"';
        $data .= "\n";
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"share_shelves_list.xls\"");
    echo $data;
    exit;
}
//Todo End sudhanshu 19 April 2024 :  Export Share of Shelves List from pernod
//Todo Start: Sudhanshu: 03 May 2024 : Export stocksit & Distributor Mapping
if (isset($_GET['export_stockist_distributor_mapping'])) {
    $data = "" . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\t" . $AliaseUsers['stockist'] . " Name\t" . $AliaseUsers['stockist'] . " Code\tStockist Status\n";
    $auRec = $_objAdmin->_getSelectList('table_stockist_distributor_mapping as csm
LEFT JOIN table_stockist as s ON s.stockist_id = csm.stockist_id
LEFT join table_distributors as d on d.distributor_id=csm.distributor_id', "d.distributor_code,d.distributor_name,s.stockist_name,s.stockist_code,s.status ", '', " d.status='A' ORDER BY  d.distributor_name ASC");
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $distStatus = (strtolower($auRec[$i]->status) == 'a') ? 'Active' : 'Inactive';

            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->stockist_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->stockist_code . '"';
            $data .= "\t";
            $data .= '"' . $distStatus . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['distributor'] . " and " . $AliaseUsers['stockist'] . " Mapping List.xls\"");
    echo $data;
    exit;
}
//Todo End: Sudhanshu: 03 May 2024 : Export stocksit & Distributor Mapping
//Todo Start: Sudhanshu: 06 may 2024 :  export unproductive number of days

if (isset($_GET['export_unproductive_numbe_of_days'])) {
    $data = "Number of Days \tColor Code\n";
    $auRec = $_objAdmin->_getSelectList('table_unproductive_number_of_days', "*", '', '');
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . $auRec[$i]->number_of_days . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->color_code . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"unproductive_numbe_of_days.xls\"");
    echo $data;
    exit;
}
//Todo End: Sudhanshu: 06 may 2024 :  export unproductive number of days

//Todo Start: Jatin : 08 may 2024 :  export load out report

if (isset($_GET['export_load_out_stock'])) {
    $data = $AliaseUsers['salesman'] . " Name \t Category Name\t Item Name\t Item Code \tLot No\tItem Case Size\t " . $AliaseUsers['salesman'] . " Stock(in Cases)\t" . $AliaseUsers['salesman'] . " Stock(in Qty)\tCompany Stock(in Cases)\tCompany Stock(in Qty)\n";


    if (!empty($_SESSION['salesID']) && $_SESSION['salesID'] != 'All') {
        $condi = " tss.salesman_id ='" . $_SESSION['salesID'] . "' AND ";
    } else if ($_SESSION['salesID'] == 'All') {
        $condi = '';
    } else {
        $condi = " tss.salesman_id = '-1' and ";
    }
    $auRec = $_objAdmin->_getSelectList2('table_item_salesman_stock as tss
            LEFT JOIN table_category as c on c.category_id = tss.category_id
            LEFT JOIN table_item as i on i.item_id = tss.item_id
            LEFT JOIN table_item_case_relationship as rel on rel.item_id= tss.item_id
            LEFT JOIN table_cases as tc on tc.case_id = rel.case_id
            LEFT JOIN table_color as cc on cc.color_id = tss.attribute_value_id
            LEFT JOIN table_salesman as s on s.salesman_id = tss.salesman_id', "tss.category_id, tss.item_id, c.category_name, i.item_name,i.item_code, tc.case_size, cc.color_id, cc.color_code,tss.sal_stock_value,s.salesman_name", '', " $condi tss.sal_stock_value > 0 and i.status='A' order by tss.item_id ASC");

    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {

            if ($auRec[$i]->sal_stock_value != '') {
                $salCase = round(($auRec[$i]->sal_stock_value / $auRec[$i]->case_size), 2);
            } else {
                $salCase = 0;
            }

            $salStock = 0;
            $salCat = $_objAdmin->_getSelectList2('table_item_ndc_stock', "stock_value", '', " account_id ='" . $_SESSION['accountId'] . "' AND category_id='" . $auRec[$i]->category_id . "' AND item_id = '" . $auRec[$i]->item_id . "' AND color_id='" . $auRec[$i]->color_id . "'");
            if (is_array($salCat) && !empty($salCat)) {

                $salStock = round(($salCat[0]->stock_value / $auRec[$i]->case_size), 2);
            } else {
                $salStock = 0;
            }
            $dis_stock_value = 0;
            if ($_SESSION['salesID'] != "") {
                if ($salCat[0]->stock_value != "") {
                    $dis_stock_value = $salCat[0]->stock_value;
                } else {
                    $dis_stock_value = 0;
                }
            } else {
                $dis_stock_value = 0;
            }


            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->category_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->color_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->case_size . '"';
            $data .= "\t";
            $data .= '"' . $salCase . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->sal_stock_value . '"';
            $data .= "\t";
            $data .= '"' . $salStock . '"';
            $data .= "\t";
            $data .= '"' . $dis_stock_value . '"';

            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"load_out_report.xls\"");
    echo $data;
    exit;
}
//Todo End: Jatin : 08 may 2024 :  export load out report

//Todo Start: Sudhanshu: 10 may 2024 :  export merchandising facing reprot

if (isset($_GET['export_merchandising_facing_reprot'])) {
    $data = "" . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['salesman'] . " Code\t" . $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['retailer'] . " Code\t" . $AliaseUsers['retailer'] . " Type\t Activity Date\tPhoto Count\n";
    $condi = '';

    if ($_SESSION['SalFacing'] > 0) {
        $condi .= " AND s.salesman_id ='" . $_SESSION['SalFacing'] . "'";
    }

    if ($_SESSION['FromFacing'] != '') {
        $fromdate = date('Y-m-d', strtotime($_SESSION['FromFacing']));
    } else {
        $fromdate = date('Y-m-d');
    }
    if ($_SESSION['ToFacing'] != '') {
        $todate = date('Y-m-d', strtotime($_SESSION['ToFacing']));
    } else {
        $todate = date('Y-m-d');
    }
    $where = " mf.app_date BETWEEN '" . $fromdate . "' AND '" . $todate . "'  $condi";
    $auRec = $_objAdmin->_getSelectList('table_merchandising_facing as mf 
 LEFT JOIN table_retailer as r ON r.retailer_id = mf.retailer_id
  LEFT JOIN table_retailer_type_master as rt ON r.type_id = rt.type_id
 LEFT JOIN table_salesman as s ON s.salesman_id = mf.salesman_id', "mf.facing_id,mf.photo_count,mf.app_date,r.retailer_name,r.retailer_code,s.salesman_name,s.employee_code,rt.type_name", '', $where);

    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $activityDate = $_objAdmin->_changeDate($auRec[$i]->app_date);
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->type_name . '"';
            $data .= "\t";
            $data .= '"' . $activityDate . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->photo_count . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Brand Visibilty Facing Report.xls\"");
    echo $data;
    exit;
}


if (isset($_GET['export_merchandising_facing_details'])) {
    $data = "" . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['salesman'] . " Code\t" . $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['retailer'] . " Code\t" . $AliaseUsers['retailer'] . " Type\t Activity Date\tPhoto Count\tItem Name\tItem Code\tItem Category\tItem Brand\tItem Grade\tQuantity\tItem Photo Count\n";
    $condi = '';

    if ($_SESSION['SalFacing'] > 0) {
        $condi .= " AND s.salesman_id ='" . $_SESSION['SalFacing'] . "'";
    }

    if ($_SESSION['FromFacing'] != '') {
        $fromdate = date('Y-m-d', strtotime($_SESSION['FromFacing']));
    } else {
        $fromdate = date('Y-m-d');
    }
    if ($_SESSION['ToFacing'] != '') {
        $todate = date('Y-m-d', strtotime($_SESSION['ToFacing']));
    } else {
        $todate = date('Y-m-d');
    }
    $where = " mf.app_date BETWEEN '" . $fromdate . "' AND '" . $todate . "'  $condi";
    $auRec = $_objAdmin->_getSelectList('table_merchandising_facing as mf 
    LEFT JOIN table_merchandising_facing_details as mfd ON mfd.facing_id=mf.facing_id
    LEFT JOIN table_item as i ON mfd.item_id = i.item_id 
            left join table_category as c on i.category_id = c.category_id 
			left join table_brands as b on b.brand_id=i.brand_id 
            left join table_grade as gt on gt.grade_id=i.grade_id
 LEFT JOIN table_retailer as r ON r.retailer_id = mf.retailer_id
  LEFT JOIN table_retailer_type_master as rt ON r.type_id = rt.type_id
 LEFT JOIN table_salesman as s ON s.salesman_id = mf.salesman_id', "mf.facing_id,mf.photo_count,mf.app_date,r.retailer_name,r.retailer_code,s.salesman_name,s.employee_code,rt.type_name,mfd.quantity,mfd.photo_count as item_photo_count,i.item_name,i.item_code,b.brand_name,c.category_name,gt.grade_name,i.item_id", '', $where);

    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $activityDate = $_objAdmin->_changeDate($auRec[$i]->app_date);
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->type_name . '"';
            $data .= "\t";
            $data .= '"' . $activityDate . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->photo_count . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->category_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->brand_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->grade_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->quantity . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_photo_count . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Brand Visibilty Facing detail.xls\"");
    echo $data;
    exit;
}
//Todo End: Sudhanshu: 10 may 2024 :  export merchandising facing reprot

//Todo Start: Sudhanshu: 15 May 2024 : Export multiple address
if (isset($_GET['export_retailer_multiple_address'])) {
    $data = "" . $AliaseUsers['retailer'] . " Code\t" . $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['retailer'] . " Phone No\t State\tDistrict\tCity\tAddress\tZipcode\tAddress Status\n";
    $auRec = $_objAdmin->_getSelectList('table_retailer_address as ra
LEFT JOIN table_retailer as r ON r.retailer_id = ra.retailer_id
  left join state as s on s.state_id=r.state 
   left join city as c on c.city_id=r.city 
left join table_location as loc ON loc.location_id = r.location_id ', "r.retailer_name,r.retailer_code,r.retailer_phone_no,s.state_name,c.city_name,loc.location_name,ra.address,ra.status,ra.zipcode ", '', " ORDER BY  r.retailer_name ASC");
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $distStatus = (strtolower($auRec[$i]->status) == 'a') ? 'Active' : 'Inactive';

        
            $data .= '"' . trim($auRec[$i]->retailer_code) . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->retailer_name) . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->retailer_phone_no) . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->state_name) . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->city_name) . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->location_name) . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->address) . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->zipcode) . '"';
            $data .= "\t";
            $data .= '"' . $distStatus . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['retailer'] . " Address List.xls\"");
    echo $data;
    exit;
}

if (isset($_GET['export_distributor_multiple_address'])) {
    $data = "" . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\t" . $AliaseUsers['distributor'] . " Phone No\t State\tDistrict\tCity\tAddress\tZipcode\tAddress Status\n";
    $auRec = $_objAdmin->_getSelectList('table_distributor_address as a
LEFT JOIN table_distributors as d ON d.distributor_id = a.distributor_id
  left join state as s on s.state_id=d.state 
   left join city as c on c.city_id=d.city 
left join table_location as loc ON loc.location_id = d.location ', "d.distributor_name,d.distributor_code,d.distributor_phone_no,s.state_name,c.city_name,loc.location_name,a.address,a.status,a.zipcode ", '', " ORDER BY  d.distributor_name ASC");
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $distStatus = (strtolower($auRec[$i]->status) == 'a') ? 'Active' : 'Inactive';

            $data .= '"' . trim($auRec[$i]->distributor_name) . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->distributor_code) . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->distributor_phone_no) . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->state_name) . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->city_name) . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->location_name) . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->address) . '"';
            $data .= "\t";
            $data .= '"' . trim($auRec[$i]->zipcode) . '"';
            $data .= "\t";
            $data .= '"' . $distStatus . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['distributor'] . " Address List.xls\"");
    echo $data;
    exit;
}

if (isset($_GET['export_stockist_multiple_address'])) {
    $data = "" . $AliaseUsers['stockist'] . " Name\t" . $AliaseUsers['stockist'] . " Code\t" . $AliaseUsers['stockist'] . " Phone No\t State\tDistrict\tCity\tAddress\tZipcode\tAddress Status\n";
    $auRec = $_objAdmin->_getSelectList('table_stockist_address as a
LEFT JOIN table_stockist as d ON d.stockist_id = a.stockist_id
  left join state as s on s.state_id=d.state 
   left join city as c on c.city_id=d.city 
left join table_location as loc ON loc.location_id = d.location ', "d.stockist_name,d.stockist_code,d.stockist_phone_no,s.state_name,c.city_name,loc.location_name,a.address,a.status,a.zipcode ", '', " ORDER BY  d.stockist_name ASC");
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $distStatus = (strtolower($auRec[$i]->status) == 'a') ? 'Active' : 'Inactive';

            $data .= '"' . $auRec[$i]->stockist_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->stockist_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->stockist_phone_no . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->address . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->zipcode . '"';
            $data .= "\t";
            $data .= '"' . $distStatus . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['stockist'] . " Address List.xls\"");
    echo $data;
    exit;
}
//Todo End: Sudhanshu: 15 May 2024 :Export multiple address

//Todo Start : Sudhanshu 30 may 2024 : export distributor mapped salesman
if (isset($_GET['export_distributor_mapped_salesman'])) {
    //echo hello;exit;
    $remove = array("\n", "\r\n", "\r", "\t", ",", "-", "/", "_", ":", ";", "`", "!", "?", "'");

    $data = "  " . $AliaseUsers['distributor'] . " Name\t " . $AliaseUsers['distributor'] . " Code\t " . $AliaseUsers['salesman'] . " Name\n";

    $auRec = $_objAdmin->_getSelectList('table_distributors as d
           
        ', "distributor_id,distributor_name,distributor_code", '', " d.status='A' order by d.distributor_name ASC ");

    $mappedSal = $_objAdmin->_getSelectList('table_salesman_distributor_mapping  as sm		
		left join table_salesman AS s ON s.salesman_id = sm.salesman_id	',
        'GROUP_CONCAT(s.salesman_name," (",s.employee_code,")" SEPARATOR "|") as salesman_name,sm.distributor_id', '',
        ' s.status="A" GROUP BY sm.distributor_id');

    $directMappedSal = [];
    if (is_array($mappedSal) && count($mappedSal) > 0) {
        foreach ($mappedSal as $disStokist) {
            $directMappedSal[$disStokist->distributor_id] = $disStokist->salesman_name;
        }
    }

    $routDistSal = $_objAdmin->getRouteWiseDistributorMappedSalesman();
    $directDis = $_objAdmin->getDirectRouteDistributors();

    for ($i = 0; $i < count($auRec); $i++) {

        $salesman = '';
        if ($directMappedSal[$auRec[$i]->distributor_id] != '' && $routDistSal[$auRec[$i]->distributor_id] != '') {
            $salesman = $directMappedSal[$auRec[$i]->distributor_id] . '|' . $routDistSal[$auRec[$i]->distributor_id];
        }
        if ($directMappedSal[$auRec[$i]->distributor_id] != '' && $routDistSal[$auRec[$i]->distributor_id] == '') {
            $salesman = $directMappedSal[$auRec[$i]->distributor_id];
        }
        if ($directMappedSal[$auRec[$i]->distributor_id] == '' && $routDistSal[$auRec[$i]->distributor_id] != '') {
            $salesman = $routDistSal[$auRec[$i]->distributor_id];
        }
        if ($salesman != '') {
            if ($directDis[$auRec[$i]->distributor_id] != '') {
                $salesman = $salesman . '|' . $directDis[$auRec[$i]->distributor_id];
            }

        } else {
            $salesman = $directDis[$auRec[$i]->distributor_id];
        }

        $salsmans = explode('|', $salesman);

        $salesman = implode('|', array_unique($salsmans));

        $data .= "" . str_replace($remove, ' ', $auRec[$i]->distributor_name) . "\t" .
            str_replace($remove, ' ', $auRec[$i]->distributor_code) . "\t" .

            str_replace($remove, ' ', $salesman) . "\n";
    }

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['distributor'] . " Mapped " . $AliaseUsers['salesman'] . ".xls\"");
    echo $data;
    exit;
}
//Todo End : Sudhanshu 30 may 2024 : export distributor mapped salesman

// Todo Start : JAtin : 7 june 2024 : export retailer accept reject qty detail wise

if (isset($_GET['export_distributor_order_detail_list'])) {
    $data = "Date\t Time\t Order Number\tOrder Status\t Total Invoice Amount\t " . $AliaseUsers['distributor'] . " Code\t " .
        $AliaseUsers['distributor'] . " Name\tZone \tState\t City\t " . $AliaseUsers['salesman'] . " Code \t " .
        $AliaseUsers['salesman'] . " Name\t " . $AliaseUsers['retailer'] . " Code\t  " . $AliaseUsers['retailer'] . " Name\t " . $AliaseUsers['retailer'] . " Market\t" . $AliaseUsers['retailer'] . " Channel\tDisplay Outlet\tAddress\tOrder By\tOrder Status\tItem Name\tItem Code\tOrdered qty\tAccepted qty\tRejected qty\tPending Qty\n";

    $sort = " ORDER BY date_of_order desc,time_of_order desc";


    if ($_SESSION['FromDisList'] != '') {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['FromDisList'])) . "'";
    } else {
        $fromdate = " and o.date_of_order >= '" . date('Y-m-d') . "'";
    }
    if ($_SESSION['ToDisList'] != '') {
        $todate = " and o.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToDisList'])) . "'";
    } else {
        $todate = " and o.date_of_order <= '" . date('Y-m-d') . "'";
    }


    if ($_SESSION['distributorId'] != "A") {
        $disList = " o.distributor_id=" . $_SESSION['distributorId'] . " and";
    } else {
        $disList = "";
    }
    if ($_SESSION['OrderBy'] != '') {
        if ($_SESSION['OrderBy'] == 1) {
            $orderby = " and order_status IN('A','I') ";
        }
        if ($_SESSION['OrderBy'] == 2) {
            $orderby = " and o.order_status='A' ";
        }
        if ($_SESSION['OrderBy'] == 3) {
            $orderby = " and o.order_status='I' ";
        }
        if ($_SESSION['OrderBy'] == 4) {
            $orderby = " and o.order_status='D' ";
        }
    } else {
        $orderby = " and order_status IN('A','I') ";
    }
    //$where = " 1=1 ";
    if ($_SESSION['userLoginType'] == 7) {
        $stkList = " d.stockist_id=" . $_SESSION['stockistId'] . " and";
    } else {
        $stkList = "";
    }


    //Added condition for role based access at brand lavel.
    $RoleBrands = $_objAdmin->getUserRoleBrand();
    $orderIds = '';
    if (is_array($_SESSION['SalDisList']) && (count($_SESSION['SalDisList']) > 0)) {
        $salectedSalIds = implode(',', $_SESSION['SalDisList']);
        $salesman = " AND s.salesman_id IN(" . $salectedSalIds . ") ";
    } else if (!empty($RoleBrands)) {
        $salesman = "";
    } else {
//        $salesman = $_SESSION['salsInCondi'];
        $salesman = "";
    }
    if (!empty($RoleBrands)) {

        $brandWhere = " o.order_for='R' and o.order_status !='C' and o.order_type !='Return' and o.distributor_id !='' $fromdate $todate ";
        $orderIds = $_objAdmin->getBrandsOrder($RoleBrands, $brandWhere);
    }

    $where = " $disList $stkList and o.order_for='R' and o.order_status !='C' and r.new='' and o.order_type !='Return' and o.distributor_id!='' $salesman $orderIds $fromdate $todate $orderby and o.account_id =" . $_SESSION['accountId'];

    $auRec = $_objAdmin->_getSelectList('table_order as o 
    left join table_order_detail as det on det.order_id = o.order_id
    left join table_item as i on det.item_id=i.item_id 
    left join table_retailer as r on o.retailer_id=r.retailer_id 
    left join table_salesman as s on o.salesman_id=s.salesman_id 
    left join table_distributors as d on d.distributor_id=o.distributor_id 
    left join table_retailer_channel_master as cm on cm.channel_id=r.channel_id  
    left join state as st on st.state_id=d.state
    LEFT JOIN table_zone_state_mapping as szsm on szsm.state_id = d.state and szsm.account_id = d.account_id
    LEFT JOIN table_zone as sz on sz.zone_id = szsm.zone_id 
    left join city as c on c.city_id=d.city', "o.*,det.order_detail_id,det.quantity,r.retailer_name,r.retailer_code,
    r.retailer_address,r.retailer_location,cm.channel_name,r.display_outlet,s.employee_code ,s.salesman_name,d.distributor_code,d.distributor_name,st.state_name,c.city_name,sz.zone_name,i.item_name,i.item_code", '', $where . $sort, '');   //echo "<pre>";print_r($auRec);die;

    for ($i = 0; $i < count($auRec); $i++) {

        $pendingRec = $_objAdmin->_getSelectList2('table_order_accept_reject as c', "SUM(c.effected_qty) as pending_qty,(select sum(effected_qty) FROM table_order_accept_reject WHERE order_detail_id='" . $auRec[$i]->order_detail_id . "' and action='rej' ) as reject_qty,(select sum(effected_qty) FROM table_order_accept_reject WHERE order_detail_id='" . $auRec[$i]->order_detail_id . "' and action='act' ) as accept_qty",
            '', "order_detail_id=" . $auRec[$i]->order_detail_id . " ");

        $CheckOrderSts = $_objAdmin->_getSelectList2('table_order_accept_reject as c', "SUM(c.effected_qty) as total,(select sum(effected_qty) FROM table_order_accept_reject WHERE order_id='" . $auRec[$i]->order_id . "' and action='rej' ) as reject_qty",
            '', "order_id=" . $auRec[$i]->order_id . " ");

        $CheckOrderQuantity = $_objAdmin->_getSelectList2('`table_order` as o 
            inner join table_order_detail as odr on odr.order_id = o.order_id', "sum(odr.quantity) as total_odr_quantity",
            '', "o.order_id=" . $auRec[$i]->order_id . " and odr.order_detail_status NOT IN (6,4) group by o.order_id");


        if ($CheckOrderSts[0]->total <= 0) {
            $orderStatus = 'Fully Pending';
        } else if ($CheckOrderSts[0]->total == $CheckOrderSts[0]->reject_qty) {
            $orderStatus = 'Fully Rejected';
        } else if ($CheckOrderQuantity[0]->total_odr_quantity != $CheckOrderSts[0]->total) {
            $orderStatus = 'Partially Pending';
        } else {
            $orderStatus = 'Fully Accepted';
        }

        $pendingQty = $auRec[$i]->quantity - $pendingRec[0]->pending_qty;

        if ($auRec[$i]->order_status == 'A') {
            $status = "New Order";
            $color = "N";
        }
        if ($auRec[$i]->order_status == 'I') {
            $status = "Processed";
            $color = "I";
        }
        if ($auRec[$i]->order_status == 'D') {
            $status = "Dispatched";
            $color = "A";
        }
        if ($auRec[$i]->display_outlet == 'Y') {
            $outlet = 'Yes';
        } else if ($auRec[$i]->display_outlet == 'N') {
            $outlet = 'No';
        } else {
            $outlet = '';
        }
        switch ($auRec[$i]->order_by) {
            case 'S':
                $order_by = $AliaseUsers['salesman'];
                break;
            case "D":
                $order_by = $AliaseUsers['distributor'];
                break;
            case "R":
                $order_by = $AliaseUsers['retailer'];
                break;
            default :
                $order_by = '';
        }

        //$status=($auRec[$i]->order_status=='A')?"New Adhoc Order":"Processed";
        //$color=($auRec[$i]->order_status=='A')?"O":"P";
        //$status=($auRec[$i]->order_status=='A')?"New Order":"Processed";
        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);

        $data .= "" . $date_of_order . "\t" . $auRec[$i]->time_of_order . "\t" . $auRec[$i]->order_id . "\t" . $orderStatus . "\t" .
            $auRec[$i]->acc_total_invoice_amount . "\t" . $auRec[$i]->distributor_code . "\t" .
            $auRec[$i]->distributor_name . "\t" . $auRec[$i]->zone_name . "\t" . $auRec[$i]->state_name . "\t" .
            $auRec[$i]->city_name . "\t" .
            $auRec[$i]->employee_code . "\t" . $auRec[$i]->salesman_name . "\t" . $auRec[$i]->retailer_code . "\t" .
            $auRec[$i]->retailer_name . "\t" . str_replace($remove, ' ', $auRec[$i]->retailer_location) . "\t" .
            $auRec[$i]->channel_name . "\t" . $outlet . "\t" .
            $auRec[$i]->retailer_address . "\t" . $order_by . "\t" .
            $status . "\t" .
            $auRec[$i]->item_name . "\t" .
            $auRec[$i]->item_code . "\t" .
            $auRec[$i]->quantity . "\t" .
            $pendingRec[0]->accept_qty . "\t" .
            $pendingRec[0]->reject_qty . "\t" .
            $pendingQty .
            "\n";
    }

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['retailer'] . " Order List.xls\"");
    echo $data;
    exit;
}

// Todo End : JAtin : 7 june 2024 : export retailer accept reject qty detail wise

// Todo Start : JAtin : 28 June 2024 : Order Scheme Report
if (isset($_GET['export_scheme_order'])) {
    $data = "Date of Order\tOrder Number\tOrder By\tOrdered Qty\tOrder Amount\t" . $AliaseUsers['salesman'] . " Name\t"
        . $AliaseUsers['salesman'] . " Code\t" . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\t"
        . $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['retailer'] . " Code\t" . $AliaseUsers['retailer'] . " State\t"
        . $AliaseUsers['retailer'] . " District\t" . $AliaseUsers['retailer'] . " City\t Cancel Order \t";

    //    $where = " (s.start_date BETWEEN '".$_SESSION['FromOrderList']."'AND '".$_SESSION['ToOrderList']."') OR
//            (s.end_date BETWEEN '".$_SESSION['ToOrderList']."' AND '".$_SESSION['ToOrderList']."') OR
//            (s.start_date <= '".$_SESSION['FromOrderList']."' AND s.end_date >= '".$_SESSION['ToOrderList']."')";

    $where = " 
            ((s.start_date <= '" . $_SESSION['FromOrderList'] . "' AND s.end_date >= '" . $_SESSION['ToOrderList'] . "') 
						OR (s.start_date <= '" . $_SESSION['FromOrderList'] . "' AND (s.end_date >= '" . $_SESSION['FromOrderList'] . "' AND s.end_date <= '" . $_SESSION['ToOrderList'] . "')) 
						OR (s.start_date >= '" . $_SESSION['FromOrderList'] . "' AND (s.end_date >= '" . $_SESSION['ToOrderList'] . "' AND s.start_date <= '" . $_SESSION['ToOrderList'] . "'))
						OR (s.start_date >= '" . $_SESSION['FromOrderList'] . "' AND s.end_date <= '" . $_SESSION['ToOrderList'] . "' )
						)
            ";

    $getSchemeTypes = $_objAdmin->_getSelectList('table_discount as s left join table_discount_detail as 
            det on det.discount_id = s.discount_id', 'det.discount_desc', '', $where . " ORDER BY s.discount_id ASC ");

    if (is_array($getSchemeTypes) && (count($getSchemeTypes) > 0)) {
        foreach ($getSchemeTypes as $key => $expType) {
            $data .= $expType->discount_desc . "\t";
        }
    }
    $data .= "\n";

    if (isset($_SESSION['SalOrderList']) && $_SESSION['SalOrderList'] != '') {
        $ret = " and o.retailer_id ='" . $_SESSION['SalOrderList'] . "'";
    }
    if ($_SESSION['FromOrderList'] != '') {
        $fromdate = date('Y-m-d', strtotime($_SESSION['FromOrderList']));
    } else {
        $fromdate = date('Y-m-d');
    }
    if ($_SESSION['ToOrderList'] != '') {
        $todate = date('Y-m-d', strtotime($_SESSION['ToOrderList']));
    } else {
        $todate = date('Y-m-d');
    }

    $where = "   o.date_of_order BETWEEN '" . $fromdate . "' AND '" . $todate . "' $ret ";
    $ttlOrder = $_objAdmin->_getSelectList('table_order as o ', 'o.order_id', '', $where . " ORDER BY o.order_id ");

    if (is_array($ttlOrder) && (count($ttlOrder) > 0)) {
        foreach ($ttlOrder as $key => $expData) {
            $OrderArr[] = $expData->order_id;
        }
    }

    // To Get All Duration active scheme
    $where13 = "  (s.start_date BETWEEN '".$fromdate."'AND '".$todate."') OR 
            (s.end_date BETWEEN '".$todate."' AND '".$todate."') OR 
            (s.start_date <= '".$fromdate."' AND s.end_date >= '".$todate."')";

    $getSchemeTypes = $_objAdmin->_getSelectList('table_discount as s 
        left join table_discount_detail as det on det.discount_id = s.discount_id', 's.discount_id,det
        .discount_desc', '', $where13 . " ORDER BY s.discount_id ASC ");

    if (is_array($getSchemeTypes) && (count($getSchemeTypes) > 0)) {
        foreach ($getSchemeTypes as $key => $expData) {
            $expNameArr[] = $expData->discount_id;
        }
    }

    // To get All Scheme order
    if ((is_array($expNameArr) && count($expNameArr) > 0) && (is_array($OrderArr) && count($OrderArr) > 0)) {
        // To Get All Order detail Scheme order
        $where12 = "  o.discount_id in (" . implode(',', $expNameArr) . ") and o.order_id IN(" . implode(',', $OrderArr) . ")";
        $schmeOrder = $_objAdmin->_getSelectList('table_order as o', 'o.order_id as order_id,o.discount_id', '',
            $where12 . "  ");
        $OrderSchemeArr = [];
        if (is_array($schmeOrder) && (count($schmeOrder) > 0)) {
            foreach ($schmeOrder as $key => $expData) {
                $schemIds[$expData->order_id][$expData->discount_id] = $expData->discount_id;
                $OrderSchemeArr[] = $expData->order_id;
            }
        }


        // To Get All Order detail Scheme order
        $schmeDetailOrder = $_objAdmin->_getSelectList2('table_order_detail as o', 'o.discount_id, o.order_id as order_id',
            '', $where12);
        $OrderDetailArr = [];
        if (is_array($schmeDetailOrder) && (count($schmeDetailOrder) > 0)) {
            foreach ($schmeDetailOrder as $key => $expData) {
                $schemIds[$expData->order_id][$expData->discount_id] = $expData->discount_id;
                $OrderDetailArr[] = $expData->order_id;
            }
        }
        $finalOrderIds = array_merge($OrderSchemeArr, $OrderDetailArr);

    }
    if (is_array($finalOrderIds) && count($finalOrderIds) > 0) {
        $order_ids = implode(',', $finalOrderIds);
    } else {
        $order_ids = '-1';
    }

    $where = " o.order_id IN($order_ids) ";

    $auRec = $_objAdmin->_getSelectList('table_order as o 
            left join table_order_detail as ord on ord.order_id = o.order_id 
            left join table_retailer as r on o.retailer_id=r.retailer_id 
            left join table_distributors as d on o.distributor_id=d.distributor_id 
            left join state as st on st.state_id=r.state 
            left join table_salesman as s on s.salesman_id = o.salesman_id
            left join city as c on c.city_id=r.city 
            left join table_location as loc on loc.location_id = r.location_id
            ', "o.*,SUM(ord.acc_quantity) as total_ordered_qty,r.retailer_name,r.retailer_code,
            r.retailer_location,s.salesman_name,s.employee_code,
            d.distributor_name,d.distributor_code,st.state_name,c.city_name,loc.location_name", $rp, $where . " GROUP BY o.order_id  Order by o.order_id desc ");


    $remove = array("\n", "\r", ",", "\t");
    for ($i = 0; $i < count($auRec); $i++) {
        $orderType = '';


        switch ($auRec[$i]->order_by) {
            case 'salesman':
                $order_by = $AliaseUsers['salesman'];
                break;
            case "distributor":
                $order_by = $AliaseUsers['distributor'];
                break;
            case "retailer":
                $order_by = $AliaseUsers['retailer'];
                break;
            default :
                $order_by = '';
        }

        $cancelStatus = 'No';
        if ($auRec[$i]->order_status == 'C') {
            $cancelStatus = 'Yes';
        }
        $emptyValue ='-';
        $data .= "" . $_objAdmin->_changeDate($auRec[$i]->date_of_order) . "\t" .
            $auRec[$i]->order_id . "\t" .
            $order_by . "\t" .
            $auRec[$i]->total_ordered_qty . "\t" .
            $auRec[$i]->acc_total_invoice_amount . "\t" .
            $auRec[$i]->salesman_name . "\t" .
            $auRec[$i]->employee_code . "\t" .
            $auRec[$i]->distributor_name . "\t" .
            $auRec[$i]->distributor_code . "\t" .
            $auRec[$i]->retailer_name . "\t" .
            $auRec[$i]->retailer_code . "\t" .
            $auRec[$i]->state_name . "\t" .
            $auRec[$i]->city_name . "\t" .
            $auRec[$i]->location_name . "\t" .
            $cancelStatus . "\t";

        if (is_array($expNameArr) && (count($expNameArr) > 0)) {
            foreach ($expNameArr as $expTypeId => $expTypeName) {
                if (is_array($schemIds[$auRec[$i]->order_id]) && count
                    ($schemIds[$auRec[$i]->order_id]) > 0) {
                    if (isset($schemIds[$auRec[$i]->order_id][$expTypeName])) {
                        $data .= '"' . ucwords(addslashes('Yes')) . '"';
                        $data .= "\t";
                    } else {
                        $data .= '"' . addslashes($emptyValue) . '"';
                        $data .= "\t";
                    }
                } else {
                    $data .= '"' . addslashes($emptyValue) . '"';
                    $data .= "\t";
                }
            }
        }
        $data .= "\n";

    }

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Scheme Order List.xls\"");
    echo $data;
    exit;
}
// Todo Start : JAtin : 28 June 2024 : Order Scheme Report
// Todo Start : Sudhanshu : 04 july 2024 : export route assignment
// geeta
if (isset($_GET['export_customer_wise_route_assignment'])) {

    
    $days = 31;

    $monthName = date("F", mktime(0, 0, 0, $month, 10));
    for ($i = 1; $i <= $days; $i++) {

            $comma = "\t";


        $dayValue .= 'Day ' . $i . $comma;
    }
    $data = "".$AliaseUsers['salesman']." Name\t". $AliaseUsers['salesman']." Code\t". " Customer Name\t". " Customer Code\t ". " Year\t ". " Month\t ".$dayValue." \n";
    

    $_objArrayList = new ArrayList();
    $salsList = $_objArrayList->SalesmanArrayList();
    $salesman = $_objArrayList->getSalesCondition($salsList);
    
    $statusCondi = '';
                $condi = " s.status='A' $statusCondi $salesman  GROUP BY tr.month,tr.year,s.salesman_id,rr.retailer_id ORDER BY s.salesman_name ASC ";
              
                
$auRec = $_objAdmin->_getSelectList('table_salesman_retailer_assignment AS tr
LEFT JOIN table_salesman_retailer_assignment_details AS rr ON tr.route_schedule_id = rr.route_schedule_id
LEFT JOIN table_salesman AS s ON tr.salesman_id = s.salesman_id 
LEFT JOIN table_retailer as r ON rr.retailer_id = r.retailer_id 

', "tr.route_schedule_id,tr.month,tr.year,tr.status,r.*,s.salesman_name,s.employee_code ,GROUP_CONCAT(DISTINCT rr.assign_day) as visit_dates",''  ,$condi);


               
              /*  $auRec = $_objAdmin->_getSelectList2('table_salesman_retailer_assignment as rs
                left join table_salesman_retailer_assignment_details as rsd on rsd.route_schedule_id = rs.route_schedule_id        
        inner join table_retailer as r on r.retailer_id = rsd.retailer_id
        left join table_salesman as s on s.salesman_id = rs.salesman_id'  , "
        rs.salesman_id,rsd.retailer_id,GROUP_CONCAT(DISTINCT rsd.assign_day) as visit_dates, 
        r.retailer_name,s.employee_code,r.retailer_name, r.retailer_code, s.salesman_id, s.salesman_name",  '' , $condi); */
               
               
             /*   $auRec = $_objAdmin->_getSelectList('table_customer_wise_route_schedule as rp 
                left join table_salesman_retailer_assignment_details AS j ON rp.route_schedule_id = j.route_schedule_id 
                 LEFT JOIN table_retailer as r ON j.retailer_id = r.retailer_id 
                left join table_salesman as s on rp.salesman_id=s.salesman_id', "r.*,s.salesman_name,rp.created_date as createdate,GROUP_CONCAT(DISTINCT j.assign_day) as visit_dates,s.employee_code", '', $condi);
*/
       
   
//echo "<pre>";print_r($auRec);die;
    if (is_array($auRec) && count($auRec)>0) {
        for ($i = 0; $i < count($auRec); $i++) {
            $monthName =  date('F', mktime(0, 0, 0, $auRec[$i]->month, 10));
            $year = $auRec[$i]->year;
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $year . '"';
            $data .= "\t";
            $data .= '"' . $monthName . '"';
            $data .= "\t";
            $CheckVisiter = explode(',',$auRec[$i]->visit_dates);
            for($k = 1; $k <= $days; $k++){

             
               
                if (in_array($k, $CheckVisiter)) {
                    $data .= 'Yes';
                    $data .= "\t";
                }else{
                    $data .= '';
                    $data .= "\t";
                }

               
            }

            
            $data .= "\n";

        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"customer_wise_report.xls\"");
    echo $data;
    exit;



}

//geeta code
if (isset($_GET['export_route_assignment_by_month'])) {


 
    if (isset($_SESSION['dismonth']) && isset($_SESSION['disCyear']) && $_SESSION['dismonth'] != "" && $_SESSION['disCyear'] != "") {
 $days = cal_days_in_month(CAL_GREGORIAN,  $_SESSION['dismonth'], $_SESSION['disCyear']);
    }else{
        $days = 31;
    }
    $monthName = date("F", mktime(0, 0, 0, $month, 10));
    for ($i = 1; $i <= $days; $i++) {

            $comma = "\t";


        $dayValue .= 'Day ' . $i . $comma;
    }
   
    $data = "Route Name\t". "Route Id\t". " Salesman Name\t". " Salesman Code\t ". " Year\t ". " Month\t ".$dayValue." \n";
    

    $_objArrayList = new ArrayList();
    $salsList = $_objArrayList->SalesmanArrayList();
    $salesman = $_objArrayList->getSalesCondition($salsList);
    
 
            

                if (isset($_SESSION['dismonth']) && isset($_SESSION['disCyear']) && $_SESSION['dismonth'] != "" && $_SESSION['disCyear'] != "") {

                    $statusCondi  = " and tr.month='" . $_SESSION['dismonth'] . "' and tr.year='" . $_SESSION['disCyear'] . "'  ";
            
                   
            
                }else{
                    $statusCondi = '';
                }
           
                $_objArrayList = new ArrayList();
                $salsList = $_objArrayList->SalesmanArrayList();
                $salesman = $_objArrayList->getSalesCondition($salsList);
            
               
                $condi = " s.status='A' $statusCondi $salesman  GROUP BY rr.route_id,tr.month,tr.year,s.salesman_id ORDER BY s.salesman_name ASC ";
              
             


                
$auRec = $_objAdmin->_getSelectList('table_route_scheduled AS tr
LEFT JOIN table_route_schedule_details AS rr ON tr.route_schedule_id = rr.route_schedule_id
LEFT JOIN table_salesman AS s ON tr.salesman_id = s.salesman_id 
LEFT JOIN table_route AS r ON rr.route_id = r.route_id 

', "tr.route_schedule_id,tr.month,tr.year,tr.status,r.*,s.salesman_name,s.employee_code ,GROUP_CONCAT(DISTINCT rr.assign_day) as visit_dates",''  ,$condi);


               
              /*  $auRec = $_objAdmin->_getSelectList2('table_salesman_retailer_assignment as rs
                left join table_salesman_retailer_assignment_details as rsd on rsd.route_schedule_id = rs.route_schedule_id        
        inner join table_retailer as r on r.retailer_id = rsd.retailer_id
        left join table_salesman as s on s.salesman_id = rs.salesman_id'  , "
        rs.salesman_id,rsd.retailer_id,GROUP_CONCAT(DISTINCT rsd.assign_day) as visit_dates, 
        r.retailer_name,s.employee_code,r.retailer_name, r.retailer_code, s.salesman_id, s.salesman_name",  '' , $condi); */
               
               
             /*   $auRec = $_objAdmin->_getSelectList('table_customer_wise_route_schedule as rp 
                left join table_salesman_retailer_assignment_details AS j ON rp.route_schedule_id = j.route_schedule_id 
                 LEFT JOIN table_retailer as r ON j.retailer_id = r.retailer_id 
                left join table_salesman as s on rp.salesman_id=s.salesman_id', "r.*,s.salesman_name,rp.created_date as createdate,GROUP_CONCAT(DISTINCT j.assign_day) as visit_dates,s.employee_code", '', $condi);
*/
       
   
//echo "<pre>";print_r($auRec);die;
    if (is_array($auRec) && count($auRec)>0) {
        for ($i = 0; $i < count($auRec); $i++) {
            $monthName =  date('F', mktime(0, 0, 0, $auRec[$i]->month, 10));
            $year = $auRec[$i]->year;
            $data .= '"' . $auRec[$i]->route_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->route_id . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
           
            $data .= '"' . $year . '"';
            $data .= "\t";
            $data .= '"' . $monthName . '"';
            $data .= "\t";
            $CheckVisiter = explode(',',$auRec[$i]->visit_dates);
            for($k = 1; $k <= $days; $k++){

             
               
                if (in_array($k, $CheckVisiter)) {
                    $data .= 'Yes';
                    $data .= "\t";
                }else{
                    $data .= '';
                    $data .= "\t";
                }

               
            }

            
            $data .= "\n";

        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"route_month_wise_report.xls\"");
    echo $data;
    exit;



}

if (isset($_GET['export_customer_wise_route_assignmentbk'])) {

    $data = " " . $AliaseUsers['salesman'] . " Name \t " . $AliaseUsers['salesman'] . " Code \tYear\t Month \t Customer Name\t Customer Code \tSun\tMon\tTue\tWed\tThu\tFri\tSat\tStatus\n";
    $_objArrayList = new ArrayList();
    $salsList = $_objArrayList->SalesmanArrayList();
    $salesman = $_objArrayList->getSalesCondition($salsList);
    
    $statusCondi = '';
    if (isset($_SESSION['MasCustRoutPjp']) && $_SESSION['MasCustRoutPjp'] != 'all' && $_SESSION['MasCustRoutPjp'] != '') {
        $statusCondi = " AND r.status ='" . $_SESSION['MasCustRoutPjp'] . "'";
    }
  
    $condi = " s.status='A' $statusCondi $salesman group by j.id  ";
    $auRec = $_objAdmin->_getSelectList('table_customer_wise_route_schedule as r 
    left join table_customer_wise_route_schedule_by_day AS j ON r.route_schedule_id = j.route_schedule_id 
    left join table_salesman as s on r.salesman_id=s.salesman_id', "r.*,s.salesman_name,s.employee_code,j.Sun,
    j.Mon,j.Tue,j.Wed,j.Thu,j.Fri,j.Sat", '', $condi);

    $auRec1 = $_objAdmin->_getSelectList2('table_customer_wise_route_schedule_by_day AS j ', "j.*,j.Sun,
    j.Mon,j.Tue,j.Wed,j.Thu,j.Fri,j.Sat", '', ' j.status="A" ');
    $day = array();
    $routeArr = array();
    foreach ($auRec1 as $key => $val) {
        $day[] = $val->Sun;
        $day[] = $val->Mon;
        $day[] = $val->Tue;
        $day[] = $val->Wed;
        $day[] = $val->Thu;
        $day[] = $val->Fri;
        $day[] = $val->Sat;
        $routeArr[$val->route_schedule_id] = array_unique(array_filter($day));

        $retArr[$val->route_schedule_id]['Sun'][$val->Sun][] = $val->Sun;
        $retArr[$val->route_schedule_id]['Mon'][$val->Mon][] = $val->Mon;
        $retArr[$val->route_schedule_id]['Tue'][$val->Tue][] = $val->Tue;
        $retArr[$val->route_schedule_id]['Wed'][$val->Wed][] = $val->Wed;
        $retArr[$val->route_schedule_id]['Thu'][$val->Thu][] = $val->Thu;
        $retArr[$val->route_schedule_id]['Fri'][$val->Fri][] = $val->Fri;
        $retArr[$val->route_schedule_id]['Sat'][$val->Sat][] = $val->Sat;

    }

    function getRetId($data)
    {
        $_objAdmin = new Admin();
        if (!empty($data)) {
            foreach ($data as $key => $value) {
                if (!empty($value)) {
                    $auRec2 = $_objAdmin->_getSelectList('table_retailer', "retailer_name,retailer_code", '', "  retailer_id IN (" . $value . ") And status='A' ");
                }
            }
        }

        return $auRec2;
    }

    if (is_array($auRec)) {

        for ($i = 0; $i < count($auRec); $i++) {

            if (isset($auRec[$i]->Sun) && !empty($auRec[$i]->Sun)) {

                $retData = (isset($retArr[$auRec[$i]->route_schedule_id]['Sun'][$auRec[$i]->Sun]) && !empty
                    ($retArr[$auRec[$i]->route_schedule_id]['Sun'][$auRec[$i]->Sun])) ? getRetId
                ($retArr[$auRec[$i]->route_schedule_id]['Sun'][$auRec[$i]->Sun]) : '';

            } elseif (isset($auRec[$i]->Mon) && !empty($auRec[$i]->Mon)) {

                $retData = (isset($retArr[$auRec[$i]->route_schedule_id]['Mon'][$auRec[$i]->Mon]) && !empty
                    ($retArr[$auRec[$i]->route_schedule_id]['Mon'][$auRec[$i]->Mon])) ? getRetId
                ($retArr[$auRec[$i]->route_schedule_id]['Mon'][$auRec[$i]->Mon]) : '';

            } elseif (isset($auRec[$i]->Tue) && !empty($auRec[$i]->Tue)) {

                $retData = (isset($retArr[$auRec[$i]->route_schedule_id]['Tue'][$auRec[$i]->Tue]) && !empty
                    ($retArr[$auRec[$i]->route_schedule_id]['Tue'][$auRec[$i]->Tue])) ? getRetId
                ($retArr[$auRec[$i]->route_schedule_id]['Tue'][$auRec[$i]->Tue]) : '';

            } elseif (isset($auRec[$i]->Wed) && !empty($auRec[$i]->Wed)) {

                $retData = (isset($retArr[$auRec[$i]->route_schedule_id]['Wed'][$auRec[$i]->Wed]) && !empty
                    ($retArr[$auRec[$i]->route_schedule_id]['Wed'][$auRec[$i]->Wed])) ? getRetId
                ($retArr[$auRec[$i]->route_schedule_id]['Wed'][$auRec[$i]->Wed]) : '';

            } elseif (isset($auRec[$i]->Thu) && !empty($auRec[$i]->Thu)) {

                $retData = (isset($retArr[$auRec[$i]->route_schedule_id]['Thu'][$auRec[$i]->Thu]) && !empty
                    ($retArr[$auRec[$i]->route_schedule_id]['Thu'][$auRec[$i]->Thu])) ? getRetId
                ($retArr[$auRec[$i]->route_schedule_id]['Thu'][$auRec[$i]->Thu]) : '';

            } elseif (isset($auRec[$i]->Fri) && !empty($auRec[$i]->Fri)) {

                $retData = (isset($retArr[$auRec[$i]->route_schedule_id]['Fri'][$auRec[$i]->Fri]) && !empty
                    ($retArr[$auRec[$i]->route_schedule_id]['Fri'][$auRec[$i]->Fri])) ? getRetId
                ($retArr[$auRec[$i]->route_schedule_id]['Fri'][$auRec[$i]->Fri]) : '';

            } elseif (isset($auRec[$i]->Sat) && !empty($auRec[$i]->Sat)) {

                $retData = (isset($retArr[$auRec[$i]->route_schedule_id]['Sat'][$auRec[$i]->Sat]) && !empty
                    ($retArr[$auRec[$i]->route_schedule_id]['Sat'][$auRec[$i]->Sat])) ? getRetId
                ($retArr[$auRec[$i]->route_schedule_id]['Sat'][$auRec[$i]->Sat]) : '';

            }


            $status = ($auRec[$i]->status == 'A') ? "Active" : "Inactive";
            $Sun = in_array($auRec[$i]->Sun, $routeArr[$auRec[$i]->route_schedule_id]) ? 'yes' : '-';
            $Mon = in_array($auRec[$i]->Mon, $routeArr[$auRec[$i]->route_schedule_id]) ? 'yes' : '-';
            $Tue = in_array($auRec[$i]->Tue, $routeArr[$auRec[$i]->route_schedule_id]) ? 'yes' : '-';
            $Wed = in_array($auRec[$i]->Wed, $routeArr[$auRec[$i]->route_schedule_id]) ? 'yes' : '-';
            $Thu = in_array($auRec[$i]->Thu, $routeArr[$auRec[$i]->route_schedule_id]) ? 'yes' : '-';
            $Fri = in_array($auRec[$i]->Fri, $routeArr[$auRec[$i]->route_schedule_id]) ? 'yes' : '-';
            $Sat = in_array($auRec[$i]->Sat, $routeArr[$auRec[$i]->route_schedule_id]) ? 'yes' : '-';
            if ($auRec[$i]->created_date == '0000-00-00 00:00:00') {
                $created_dt = '';
            } else {
                $created_dt = $_objAdmin->_changeDate($auRec[$i]->created_date);
            }
            if ($auRec[$i]->last_updated == '0000-00-00 00:00:00') {
                $updated_dt = '';
            } else {
                $updated_dt = $_objAdmin->_changeDate($auRec[$i]->last_updated);
            }

            $monthName =  date('F', strtotime($auRec[$i]->created_date));
            $year = date('Y', strtotime($auRec[$i]->created_date));
            $data .= "" . $auRec[$i]->salesman_name .
                "\t" . $auRec[$i]->employee_code .
                "\t" . $year .
                "\t" . $monthName .
                "\t" . $retData[0]->retailer_name .
                "\t" . $retData[0]->retailer_code .
                "\t" . $Sun .
                "\t" . $Mon .
                "\t" . $Tue .
                "\t" . $Wed .
                "\t" . $Thu .
                "\t" . $Fri .
                "\t" . $Sat .
                "\t" . $status .
              
                "\n";
        }

    }
    //die;
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"customer_wise_".$AliaseUsers['route']."_assignment_list.xls\"");
    echo $data;
    exit;
}

//geeta

// Todo End : Sudhanshu : 04 july 2024 : export route assignment

// Todo Start : Sudhanshu : 08 july 2024 : export vehicle type

if (isset($_GET['export_vehicle_type_master'])) {
    $data = "Vehicle Type\tStatus\n";
    //$condi=	" 1=1";
    $auRec = $_objAdmin->_getSelectList('table_vehicle_type_master AS tr    
    ', "vehicle_type,status",''  ,'');


    if (is_array($auRec) && count($auRec)>0) {
        for ($i = 0; $i < count($auRec); $i++) {


            $status = ($auRec[$i]->status == 'A') ? "Active" : "Inactive";
            $data .= '"' . $auRec[$i]->vehicle_type . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\n";

        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"vehicle type master.xls\"");
    echo $data;
    exit;
}

// Todo End : Sudhanshu : 08 july 2024 : export vehicle type

// Todo Start : Sudhanshu : 09 july 2024 : export vehicle type designation mapping

if (isset($_GET['export_vehicle_type_designation_mapping'])) {
    $data = "Designation\tVehicle Type\tPer KM Cost\tStatus\n";
    //$condi=	" 1=1";
    $auRec = $_objAdmin->_getSelectList('table_vehicle_type_designatiom_mapping as vm
        LEFT join table_salesman_hierarchy as H ON H.hierarchy_id = vm.hierarchy_id
        LEFT join table_vehicle_type_master as vt ON vt.vehicle_type_id = vm.vehicle_type_id    
    ', "H.description as desi,vt.vehicle_type,vm.per_km_cost,vm.status,vm.mapping_id",''  ,' ORDER BY H.sort_order ASC');


    if (is_array($auRec) && count($auRec)>0) {
        for ($i = 0; $i < count($auRec); $i++) {


            $status = ($auRec[$i]->status == 'A') ? "Active" : "Inactive";
            $data .= '"' . $auRec[$i]->desi . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->vehicle_type . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->per_km_cost . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\n";

        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"vehicle type designation mapping.xls\"");
    echo $data;
    exit;
}

// Todo End : Sudhanshu : 09 july 2024 : export vehicle type designation mapping

// Todo Start : Sudhanshu : 12 july 2024 : export odometer report

if (isset($_GET['export_odometer_travel_expense_report'])) {
    $data = "Date\t".$AliaseUsers['salesman']." Name\t". $AliaseUsers['salesman']." Code\tVehicle Type\tPer KM Cost\tTotal Distance Travelled\tTotal Amount As Per Pepup\t Start Odometer Reading\tTime Of Start Odometer\tStart Remark\tTime of End Odometer\tEnd Odometer Reading\tEnd Remark\tTotal Distance(Gap of Odometer)\tPhoto Count\n";
    //$condi=	" 1=1";
    if ($_SESSION['odoFrom'] != '') {
        $fromdate = date('Y-m-d', strtotime($_SESSION['odoFrom']));
    } else {
        $fromdate = date('Y-m-d');
    }
    if ($_SESSION['odoTo'] != '') {
        $todate = date('Y-m-d', strtotime($_SESSION['odoTo']));
    } else {
        $todate = date('Y-m-d');
    }

    $salesman =  $_SESSION['SalIDs'];
    if ($_SESSION['allowncesalesmanID'] != '') {
        $salesman = " AND s.salesman_id = '" . $_SESSION['allowncesalesmanID'] . "'";
    }
    //$reqFor = "  AND (DATE(odo.start_date) BETWEEN '" . $fromdate . "' AND '" . $todate . "')  ";
    $reqFor = "  AND odo.start_date = '" . $fromdate . "' ";

    $where = " s.account_id = " . $_SESSION['accountId'] . " $reqFor  $salesman ";

    $auRec = $_objAdmin->_getSelectList('table_odometer_expense_allowance as odo
LEFT JOIN table_salesman as s on s.salesman_id = odo.salesman_id 
LEFT JOIN table_vehicle_type_designatiom_mapping AS vm ON vm.mapping_id = odo.vehicle_mapping_id
LEFT JOIN table_vehicle_type_master AS vt ON vm.vehicle_type_id = vt.vehicle_type_id
', "odo.*,s.salesman_name,s.employee_code,vm.per_km_cost,vt.vehicle_type",''  ,$where . ' ORDER BY odo.start_date desc');


    if (is_array($auRec) && count($auRec)>0) {
        for ($i = 0; $i < count($auRec); $i++) {

            $act_date = date('d M Y', strtotime($auRec[$i]->start_date));

            $start_time = date('H:i',$auRec[$i]->start_time);
            $end_time = date('H:i',$auRec[$i]->end_time);
            $total_distance = ($auRec[$i]->end_meter_reading !='')?($auRec[$i]->end_meter_reading-$auRec[$i]->start_meter_reading).' KM':'';
            //now get total trevel distance

            $salsmanCond = " AND a.salesman_id='".$auRec[$i]->salesman_id."'";
            $result =   $_objAdmin->_getSelectList2('table_activity as a',"lat,lng,end_time as app_time,accuracy_level,salesman_id",''," activity_type IN (3,5,11,12,13) and (lat !='' and lat !='0.0') and ( lng!='' and lng!='0.0') and activity_date='".$auRec[$i]->start_date."' and accuracy_level!=0 $salsmanCond ORDER BY end_time ASC");

            $total_travel_distance = 0;
            foreach ($result as $key => $value) {

                $salesLat1 = $result[$key]->lat;

                if(isset($result[$key+1]->lat))
                    $salesLat =  $result[$key+1]->lat;
                else
                    $salesLat = $result[$key]->lat;

                $salesLng1 = $result[$key]->lng;

                if(isset($result[$key+1]->lng))
                    $salesLng =  $result[$key+1]->lng;
                else
                    $salesLng = $result[$key]->lng;

                $salesdistance = distance($salesLat1, $salesLng1, $salesLat, $salesLng, "K");

                if(!is_nan($salesdistance)){

                    $total_travel_distance = $total_travel_distance + $salesdistance;
                }
            }

            $cost_by_pepup = (round($total_travel_distance,2)*$auRec[$i]->per_km_cost);


            $data .= '"' . $act_date . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->vehicle_type . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->per_km_cost . '"';
            $data .= "\t";
            $data .= '"' . round($total_travel_distance,2)." KM" . '"';
            $data .= "\t";
            $data .= '"' .$cost_by_pepup. '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->start_meter_reading . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->start_time . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->start_comment . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->end_time . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->end_meter_reading . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->end_comment . '"';
            $data .= "\t";
            $data .= '"' . $total_distance . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->photo_count . '"';
            $data .= "\n";

        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Odomter_travel_expense_report.xls\"");
    echo $data;
    exit;
}

// Todo End : Sudhanshu : 09 july 2024 : export odometer report

// Todo Start : Sudhanshu : 12 july 2024 : export KM report

if (isset($_GET['export_km_travel_expense_report'])) {
    $data = "Date\t".$AliaseUsers['salesman']." Name\t". $AliaseUsers['salesman']." Code\tVehicle Type\tPer KM Cost\tTotal Distance Travelled\tKM Distance Mentioned By User\tTotal Amount As Per Pepup\t  Comment\tPhoto Count\n";
    //$condi=	" 1=1";
    if ($_SESSION['odoFrom'] != '') {
        $fromdate = date('Y-m-d', strtotime($_SESSION['odoFrom']));
    } else {
        $fromdate = date('Y-m-d');
    }
    if ($_SESSION['odoTo'] != '') {
        $todate = date('Y-m-d', strtotime($_SESSION['odoTo']));
    } else {
        $todate = date('Y-m-d');
    }

    $salesman =  $_SESSION['SalIDs'];
    if ($_SESSION['allowncesalesmanID'] != '') {
        $salesman = " AND s.salesman_id = '" . $_SESSION['allowncesalesmanID'] . "'";
    }
    //$reqFor = "  AND (DATE(odo.start_date) BETWEEN '" . $fromdate . "' AND '" . $todate . "')  ";
    $reqFor = "  AND odo.app_date = '" . $fromdate . "' ";

    $where = " s.account_id = " . $_SESSION['accountId'] . " $reqFor  $salesman ";

    $auRec = $_objAdmin->_getSelectList('table_km_expense_allowance as odo
LEFT JOIN table_salesman as s on s.salesman_id = odo.salesman_id 
LEFT JOIN table_vehicle_type_designatiom_mapping AS vm ON vm.mapping_id = odo.vehicle_mapping_id
LEFT JOIN table_vehicle_type_master AS vt ON vm.vehicle_type_id = vt.vehicle_type_id
', "odo.*,s.salesman_name,s.employee_code,vm.per_km_cost,vt.vehicle_type",''  ,$where . ' ORDER BY odo.app_date desc');


    if (is_array($auRec) && count($auRec)>0) {
        for ($i = 0; $i < count($auRec); $i++) {

            $act_date = date('d M Y', strtotime($auRec[$i]->app_date));

            //now get total trevel distance

            $salsmanCond = " AND a.salesman_id='".$auRec[$i]->salesman_id."'";
            $result =   $_objAdmin->_getSelectList2('table_activity as a',"lat,lng,end_time as app_time,accuracy_level,salesman_id",''," activity_type IN (3,5,11,12,13) and (lat !='' and lat !='0.0') and ( lng!='' and lng!='0.0') and activity_date='".$auRec[$i]->app_date."' and accuracy_level!=0 $salsmanCond ORDER BY end_time ASC");

            $total_travel_distance = 0;
            foreach ($result as $key => $value) {

                $salesLat1 = $result[$key]->lat;

                if(isset($result[$key+1]->lat))
                    $salesLat =  $result[$key+1]->lat;
                else
                    $salesLat = $result[$key]->lat;

                $salesLng1 = $result[$key]->lng;

                if(isset($result[$key+1]->lng))
                    $salesLng =  $result[$key+1]->lng;
                else
                    $salesLng = $result[$key]->lng;

                $salesdistance = distance($salesLat1, $salesLng1, $salesLat, $salesLng, "K");

                if(!is_nan($salesdistance)){

                    $total_travel_distance = $total_travel_distance + $salesdistance;
                }
            }

            $cost_by_pepup = (round($total_travel_distance,2)*$auRec[$i]->per_km_cost);


            $data .= '"' . $act_date . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->vehicle_type . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->per_km_cost . '"';
            $data .= "\t";
            $data .= '"' . round($total_travel_distance,2)." KM" . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->travel_km . '"';
            $data .= "\t";
            $data .= '"' .$cost_by_pepup. '"';

            $data .= "\t";
            $data .= '"' . $auRec[$i]->comment . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->photo_count . '"';
            $data .= "\n";

        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"km_travel_expense_report.xls\"");
    echo $data;
    exit;
}



//New code by rohit for order approval report export

if (isset($_GET['export_approval_approval_repport'])) {

    
    $data = "Date\t"."Salesman Name\t"."Salesman Code\t"."Retailer name\t"."Retailer code\t"."Distributor name\t"."distributor code\t"."State\t"."district\t"."city\t"."Order ID\t"."No. of items\t"."Status\t"."Item name\t"."Item code\t"."Item category\t"."Brand\t"."Reason\t"."Ordered Qty\t"."Percentage discount\t"."Reject reason\t"."Price before discountt\t"."price after discount\t"."Total\n";


    $where = " o.order_status !='A'  and o.order_status !='R'";

    $auRec = $_objAdmin->_getSelectList(
        "table_order_request o   
    left join table_order_request_detail as ord on o.order_type != 'No' and ord.order_id = o.order_id and ord.type = 1
    left join table_item as i on i.item_id = ord.item_id 
    left join table_category as cat on cat.category_id = i.category_id 
    left join table_retailer as r on o.retailer_id=r.retailer_id 
    left join table_retailer_type_master as rtm ON rtm.type_id=r.type_id
    left join table_salesman as s on o.salesman_id=s.salesman_id
    left join table_salesman_hierarchy_relationship as shr on shr.salesman_id = s.salesman_id
    left join table_salesman as s2 on s2.salesman_id=shr.rpt_user_id
    left join table_distributors as d on o.distributor_id=d.distributor_id 
    left join state as st on st.state_id=r.state 
    left join city as c on c.city_id=r.city",
        "o.order_id,count(ord.item_id) as total_item,SUM(ord.acc_quantity) as total_ordered_qty,cat.category_name,count(ord.item_id) as total_item,SUM(ord.acc_quantity) as total_ordered_qty,o.retailer_id,o.order_type,o.order_status,o.date_of_order,o.time_of_order,o.acc_total_invoice_amount,o.updated_by_app,o.comments,o.tag_description,r.retailer_name,r.retailer_code,r.retailer_address,r.retailer_location,r.retailer_phone_no,r.lat as retlat,r.display_outlet,r.lng as retlng,s.salesman_name,s.employee_code,s2.salesman_name as rpt_to,d.distributor_name,d.distributor_code,st.state_name,c.city_name,o.delivery_date",
        '',
        $where.' GROUP BY o.order_id ',
        ''
    );





    
    if(is_array($auRec) || is_object($auRec))
    {
        foreach ($auRec as $key => $record) {
//             echo '<pre>';
//             print_r($record);
// exit;
            $status = "";
            switch ($record->order_status) {
                case 'A':
                    $status = "Approve";
                    break;
                case 'R':
                    $status = "Reject";
                    break;
                case 'P':
                $status = "Pending";
                    break;
                default:
                    $status = "Unknown";
                    break;
            }





            $data .= '"' . $record->date_of_order . '"';
            $data .= "\t";
            $data .= '"' . $record->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $record->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $record->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $record->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $record->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $record->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $record->state_name . '"';
            $data .= "\t";
            $data .= '"' . $record->retailer_location . '"';
            $data .= "\t";
            $data .= '"' . $record->city_name . '"';
            $data .= "\t";
            $data .= '"' . $record->order_id . '"';
            $data .= "\t";
            $data .= '"' . $record->total_item . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\t";
            $data .= '"' . $record->item_name . '"';
            $data .= "\t";
            $data .= '"' . $record->item_code . '"';
            $data .= "\t";
            $data .= '"' . $record->category_name . '"';
            $data .= "\t";
            $data .= '"' . $record->brand_name . '"';
            $data .= "\t";
            $data .= '"' . $record->must_sell_items_reason . '"';
            $data .= "\t";
            $data .= '"' . $record->quantity . '"';
            $data .= "\t";
            $data .= '"' . $record->discount_percentage . '"';
            $data .= "\t";
            $data .= '"' . $record->reason_remark . '"';
            $data .= "\t";
            $data .= '"' . $record->acc_quantity . '"';
            $data .= "\t";
            $data .= '"' . $record->price . '"';
            $data .= "\t";
            $data .= '"' . $record->acc_total . '"';
            
            $data .= "\n";

        }
    }

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"order_approval_report.xls\"");
    echo $data;
    exit;



}

//End of rohit code

// Todo End : Sudhanshu : 09 july 2024 : export KM report
if (isset($_GET['export_odometer_approval_report'])) {
    $data = "".$AliaseUsers['salesman']." Name\t". $AliaseUsers['salesman']." Code\t".$AliaseUsers['salesman']." Designation\tReporting To\tReporting To Designation\tActivity Date\t Start Odometer Reading\tEnd Odometer Reading\tStart Odometer Remark\tEnd Odometer Remark\tTotal Travel Distance\tManager Status\tKM Travelled Approved By Manager\tManager Remark\tManager Status Update Date\tAdmin Status\tKM Travelled Approved By Admin\tAdmin Remark\tAdmin Status Update Date\n";
    //$condi=	" 1=1";
    if ($_SESSION['FromallownceOdo'] != '') {
        $fromdate = date('Y-m-d', strtotime($_SESSION['FromallownceOdo']));
    } else {
        $fromdate = date('Y-m-d');
    }
    if ($_SESSION['ToallownceOdo'] != '') {
        $todate = date('Y-m-d', strtotime($_SESSION['ToallownceOdo']));
    } else {
        $todate = date('Y-m-d');
    }

    //$reqFor = "  AND (DATE(odo.start_date) BETWEEN '" . $fromdate . "' AND '" . $todate . "')  ";
    $reqFor = "  AND odo.start_date = '" . $fromdate . "'  ";
    $salesman = $_SESSION['HSalIds'];
    if ($_SESSION['allowncesalesmanID'] != '') {
        $salesman = " AND s.salesman_id = '" . $_SESSION['allowncesalesmanID'] . "'";
    }
    $where = " s.account_id = " . $_SESSION['accountId'] . " $reqFor  $salesman ";

    $auRec = $_objAdmin->_getSelectList('table_odometer_expense_allowance as odo
LEFT JOIN table_salesman as s on s.salesman_id = odo.salesman_id 
LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
LEFT JOIN table_salesman_hierarchy AS H2 ON H2.hierarchy_id = SH.rpt_hierarchy_id 
LEFT JOIN table_salesman AS s2 ON s2.salesman_id = SH.rpt_user_id 
LEFT JOIN table_vehicle_type_designatiom_mapping AS vm ON vm.mapping_id = odo.vehicle_mapping_id
LEFT JOIN table_vehicle_type_master AS vt ON vm.vehicle_type_id = vt.vehicle_type_id
', "odo.*,s.salesman_name,s.employee_code,H.description AS sal_desg,s2.salesman_name AS rpt_to, H2.description AS rpt_to_desg",''  ,$where . ' ORDER BY odo.start_date desc');


    if (is_array($auRec) && count($auRec)>0) {
        for ($i = 0; $i < count($auRec); $i++) {

            $act_date = date('d M Y', strtotime($auRec[$i]->start_date));

            $start_time = date('H:i',$auRec[$i]->start_time);
            $end_time = date('H:i',$auRec[$i]->end_time);
            $total_distance = ($auRec[$i]->end_meter_reading !='')?($auRec[$i]->end_meter_reading-$auRec[$i]->start_meter_reading):'';


            $admin_update_date ='';
            if($auRec[$i]->admin_update_date !='' && $auRec[$i]->admin_update_date !='0000-00-00 00:00:00'){
                $admin_update_date = $_objAdmin->_changeDate($auRec[$i]->admin_update_date);
            }

            $manager_update_date ='';
            if($auRec[$i]->manager_update_date !='' && $auRec[$i]->manager_update_date !='0000-00-00'){
                $manager_update_date = $_objAdmin->_changeDate($auRec[$i]->manager_update_date);
            }

            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->sal_desg . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->rpt_to . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->rpt_to_desg . '"';
            $data .= "\t";
            $data .= '"' . $act_date . '"';

            $data .= "\t";
            $data .= '"' . $auRec[$i]->start_meter_reading . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->end_meter_reading . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->start_comment . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->end_comment . '"';
            $data .= "\t";
            $data .= '"' . $total_distance . '"';
            $data .= "\t";
            $data .= '"' . ucfirst($auRec[$i]->manager_status) . '"';
            $data .= "\t";
            $data .= '"' . ucwords($auRec[$i]->approved_km_manager) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->manager_remark . '"';
            $data .= "\t";
            $data .= '"' . $manager_update_date . '"';
            $data .= "\t";
            $data .= '"' . ucfirst($auRec[$i]->admin_status) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->approved_km_admin . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->admin_remark . '"';
            $data .= "\t";
            $data .= '"' . $admin_update_date . '"';
            $data .= "\n";

        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Odomter_travel_expense_approval_report.xls\"");
    echo $data;
    exit;
}

if (isset($_GET['export_km_approval_report'])) {

    $data = "Date\t".$AliaseUsers['salesman']." Name\t". $AliaseUsers['salesman']." Code\t".$AliaseUsers['salesman']." Designation\tReporting To Designation\tReporting Persona Name\t Expense State\tExpense District\t Expense City\tVehicle Type\tKM Travelled (By User) \tExpense Amount\tComment\tDistance Travelled (By Pepup)\tExpense Amount As per Pepup\tManager Status\tKM Travelled Approved By Manager\tManager Remark\tManager Status Update Date\tAdmin Status\tKM Travelled Approved By Admin\tAdmin Remark\tAdmin Status Update Date\n";
    //$condi=	" 1=1";
    if ($_SESSION['FromallownceOdo'] != '') {
        $fromdate = date('Y-m-d', strtotime($_SESSION['FromallownceOdo']));
    } else {
        $fromdate = date('Y-m-d');
    }
    if ($_SESSION['ToallownceOdo'] != '') {
        $todate = date('Y-m-d', strtotime($_SESSION['ToallownceOdo']));
    } else {
        $todate = date('Y-m-d');
    }

    //$reqFor = "  AND (DATE(odo.start_date) BETWEEN '" . $fromdate . "' AND '" . $todate . "')  ";
    $reqFor = "  AND odo.app_date = '" . $fromdate . "'  ";
    $salesman = $_SESSION['HSalIds'];
    if ($_SESSION['allowncesalesmanID'] != '') {
        $salesman = " AND s.salesman_id = '" . $_SESSION['allowncesalesmanID'] . "'";
    }
    $where = " s.account_id = " . $_SESSION['accountId'] . " $reqFor  $salesman ";

    $auRec = $_objAdmin->_getSelectList('table_km_expense_allowance as odo
LEFT JOIN table_salesman as s on s.salesman_id = odo.salesman_id 
LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
LEFT JOIN table_salesman_hierarchy AS H2 ON H2.hierarchy_id = SH.rpt_hierarchy_id 
LEFT JOIN table_salesman AS s2 ON s2.salesman_id = SH.rpt_user_id
LEFT JOIN table_vehicle_type_designatiom_mapping AS vm ON vm.mapping_id = odo.vehicle_mapping_id
LEFT JOIN table_vehicle_type_master AS vt ON vm.vehicle_type_id = vt.vehicle_type_id 
LEFT JOIN state AS st ON odo.state = st.state_id 
LEFT JOIN city AS ct ON ct.city_id = odo.district 
LEFT JOIN table_location AS loc ON loc.location_id = odo.city
', "odo.*,s.salesman_name,s.employee_code,H.description AS sal_desg,s2.salesman_name AS rpt_to, H2.description AS rpt_to_desg,vt.vehicle_type,vm.per_km_cost,st.state_name,ct.city_name,loc.location_name",''  ,$where . ' ORDER BY odo.app_date desc');


    if (is_array($auRec) && count($auRec)>0) {
        for ($i = 0; $i < count($auRec); $i++) {

            $act_date = date('d M Y', strtotime($auRec[$i]->app_date));


            //now get total trevel distance

            $salsmanCond = " AND a.salesman_id='".$auRec[$i]->salesman_id."'";
            $result =   $_objAdmin->_getSelectList2('table_activity as a',"lat,lng,end_time as app_time,accuracy_level,salesman_id",''," activity_type IN (3,5,11,12,13) and (lat !='' and lat !='0.0') and ( lng!='' and lng!='0.0') and activity_date='".$auRec[$i]->app_date."' and accuracy_level!=0 $salsmanCond ORDER BY end_time ASC");

            $total_travel_distance = 0;
            foreach ($result as $key => $value) {

                $salesLat1 = $result[$key]->lat;

                if(isset($result[$key+1]->lat))
                    $salesLat =  $result[$key+1]->lat;
                else
                    $salesLat = $result[$key]->lat;

                $salesLng1 = $result[$key]->lng;

                if(isset($result[$key+1]->lng))
                    $salesLng =  $result[$key+1]->lng;
                else
                    $salesLng = $result[$key]->lng;

                $salesdistance = distance($salesLat1, $salesLng1, $salesLat, $salesLng, "K");

                if(!is_nan($salesdistance)){

                    $total_travel_distance = $total_travel_distance + $salesdistance;
                }
            }

            $cost_by_pepup = (round($total_travel_distance,2)*$auRec[$i]->per_km_cost);

            $cost_as_per_user = (round($auRec[$i]->travel_km,2)*$auRec[$i]->per_km_cost);

            $admin_approve_date = '';
            if($auRec[$i]->admin_update_date !='' && $auRec[$i]->admin_update_date !='0000-00-00 00:00:00'){
                $admin_approve_date = $_objAdmin->_changeDate($auRec[$i]->admin_update_date);
            }
            $manager_update_date = '';
            if($auRec[$i]->manager_update_date !='' && $auRec[$i]->manager_update_date !='0000-00-00 00:00:00'){
                $manager_update_date = $_objAdmin->_changeDate($auRec[$i]->manager_update_date);
            }
            $approved_km_manager ='';
            if($auRec[$i]->approved_km_manager !=''){
                $approved_km_manager = $auRec[$i]->approved_km_manager.' KM';
            }
            $approved_km_admin = '';
            if($auRec[$i]->approved_km_admin !=''){
                $approved_km_admin = $auRec[$i]->approved_km_admin.' KM';
            }
            $data .= '"' . $act_date . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->sal_desg . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->rpt_to_desg . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->rpt_to . '"';
            $data .= "\t";

            $data .= '"' . $auRec[$i]->state_name . '"';

            $data .= "\t";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->vehicle_type . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->travel_km . ' KM"';
            $data .= "\t";
            $data .= '"' . $cost_as_per_user . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->comment . '"';
            $data .= "\t";
            $data .= '"' . round($total_travel_distance,2) . ' KM"';
            $data .= "\t";
            $data .= '"' . $cost_by_pepup . '"';
            $data .= "\t";
            $data .= '"' . ucfirst($auRec[$i]->manager_status) . '"';
            $data .= "\t";
            $data .= '"' . ucwords($approved_km_manager) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->manager_remark . '"';
            $data .= "\t";
            $data .= '"' . $manager_update_date . '"';
            $data .= "\t";
            $data .= '"' . ucfirst($auRec[$i]->admin_status) . '"';
            $data .= "\t";
            $data .= '"' . $approved_km_admin . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->admin_remark . '"';
            $data .= "\t";
            $data .= '"' . $admin_approve_date . '"';
            $data .= "\n";

        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"km_travel_expense_approval_report.xls\"");
    echo $data;
    exit;
}
//Todo Start : sudhasnhu 18 july 2024 : distributor fulfillment
if (isset($_GET['export_distributor_fulfillment_list'])) {
    $data = "SR No\t" . $AliaseUsers['stockist'] . " Name \t" . $AliaseUsers['stockist'] . " Code\t" .
        $AliaseUsers['distributor'] . " Code\t " . $AliaseUsers['distributor'] . " Name\tItem Code \t Item Name\tInvoice Date\tInvoice No.\tInvoiced Quantity\tPrice To Distributor(Per Piece)\tInvoice Amount\tInvoice Type\n";

    if ($_SESSION['distributorId'] != "" && $_SESSION['distributorId'] != "0") {
        $dis = " and d.distributor_id='" . $_SESSION['distributorId'] . "'";
    }
    if ($_SESSION['stockistId'] != "" && $_SESSION['stockistId'] != "0") {
        //Todo Start : sudhanshu 09 may 2024 : multi stockist
        $_objArrayList = new ArrayList();
        $mapedDis = $_objArrayList->getDistributorMultiStockistMapped();
        if ($mapedDis != '') {
            $dis = " and d.distributor_id IN (" . $mapedDis . ")";
        }else{
            $dis = " and d.stockist_id =".$_SESSION['stockistId'];
        }
        //Todo End : sudhanshu 09 may 2024 : multi stockist
    }
    //Todo Start: Sudhanshu 10 may 2024 : add distributor filter
    if (isset($_SESSION['disId']) && $_SESSION['disId'] > 0) {
        $dis = " and d.distributor_id='" . $_SESSION['disId'] . "'";
    }
    //Todo Start: Sudhanshu 10 may 2024 : add distributor filter
    //Added condition for role based access at brand lavel.
    $RoleBrands = $_objAdmin->getUserRoleBrand();
    $brandCnd = '';
    if (!empty($RoleBrands)) {
        $brandCnd = " b.brand_id IN(" . $RoleBrands . ")";
    }
    $where = $brandCnd;

    $auRec = $_objAdmin->_getSelectList('table_item_dis_stk_inprocess AS s 
		LEFT JOIN table_item_case_relationship AS icr ON icr.item_id = s.item_id
		LEFT JOIN table_cases AS clr ON clr.case_id = icr.case_id
		LEFT JOIN table_category AS c ON c.category_id = s.category_id
		LEFT JOIN table_item AS i ON i.item_id = s.item_id
		 LEFT JOIN table_price AS p ON p.item_id = i.item_id
		left join table_brands as b on b.brand_id = i.brand_id
		LEFT JOIN table_distributors AS d ON d.distributor_id = s.distributor_id
		left join table_stockist as stk on stk.stockist_id = d.stockist_id
		LEFT JOIN table_color AS col ON col.color_id = s.color_id', "s.* ,d.distributor_name, d.distributor_code, c.category_name, 
		clr.case_size, i.item_name, i.item_code,col.color_code,p.dist_price,p.item_dp as item_mrp,stk.stockist_name,stk.stockist_code", "", $where . $dis . ' ORDER BY c.category_name ASC');
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {

            if( $auRec[$i]->bill_type =='Return'){
                $bill_type ='Return Invoice';
                } else {
                $bill_type ='Sales Invoice';
            }

            $data .= '"' . $auRec[$i]->sr_no . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->stockist_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->stockist_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_name. '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $_objAdmin->_changeDate($auRec[$i]->bill_date) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->bill_no . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->acpt_stock_value . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->price . '"';
            $data .= "\t";
            $data .= '"' . ($auRec[$i]->before_tax_amount) . '"';
            $data .= "\t";
            $data .= '"' . $bill_type . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Distributor_fulfillment_list.xls\"");
    echo $data;
    exit;
}
//Todo End : sudhasnhu 18 july 2024 : distributor fulfillment

// Todo Start : Jatin : 19 July 2024 : Export Item color master Image

if (isset($_REQUEST['export_item_color_size_bar_image'])) {
    $data = "Item Code\tItem Name\tItem Color Code\tItem Color Name\tStatus\n";

    $condi = "  ORDER BY id asc";
    $auRec = $_objAdmin->_getSelectList('table_item_color_image_master as mas 
    left join table_item_color_master as col on mas.color_id =col.id 
    left join table_item as i on i.item_id = mas.item_id
    ', "mas.*,col.item_color_code,col.item_color_name,i.item_code,i.item_name", '', $condi);
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $status = ($auRec[$i]->status == 'A') ? "Active" : " Inactive";

            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_color_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_color_name . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Item_Color_master_image.xls\"");
    echo $data;
    exit;
}

// Todo End : Jatin : 19 July 2024 : Export Item color master Image

if (isset($_GET['export_lead_checkin_checkout_report'])) {
    $data = "Salesman Name\tSalesman Code\t Lead Name\tLead Code\tLead Type\tLead Contact Person Name \t Lead Contact Ph.No\tState\tDistrict\tDate\tCheck In Time\tCheck Out Time\tTime Spent\n";
    $salCond = '';
    if (isset($_SESSION['SalAttList']) && $_SESSION['SalAttList'] > 0) {
        $salCond .= ' AND cc.salesman_id = "' . $_SESSION['SalAttList'] . '"';
    }
    if (isset($_SESSION['state']) && $_SESSION['state'] > 0) {
        $salCond .= ' AND r.state_id = "' . $_SESSION['state'] . '"';
    }

    if (isset($_SESSION['leadType']) && $_SESSION['leadType'] > 0) {
        $salCond .= ' AND ET.enquiry_type_id = "' . $_SESSION['leadType'] . '"';
    }
    if (!isset($_SESSION['FromAttList']) && empty($_SESSION['FromAttList'])) {
        $_SESSION['FromAttList'] = date('d M Y');
    }

    if (!isset($_SESSION['ToAttList']) && empty($_SESSION['ToAttList'])) {
        $_SESSION['ToAttList'] = date('d M Y');
    }


    if (isset($salesman) && !empty($salesman)) {
        $_SESSION['salesmanIdsCond'] = $salesman;
    }

    //getting checkin checkouts for above checkins
    $auRec = $_objAdmin->_getSelectList('table_lead_capture_checkin_out as cc
		LEFT JOIN table_activity as act1 ON act1.checkin_id = cc.id AND act1.activity_type = "128" AND act1.salesman_id = cc.salesman_id AND act1.lead_id = cc.lead_id AND act1.activity_date = cc.checkin_date
		LEFT JOIN table_activity as act2 ON act2.checkin_id = cc.id AND act2.activity_type = "129" AND act2.salesman_id = cc.salesman_id AND act2.lead_id = cc.lead_id AND act2.activity_date = cc.checkin_date
		LEFT JOIN table_salesman AS s ON s.salesman_id = cc.salesman_id
		LEFT JOIN table_lead as r ON r.lead_id = cc.lead_id
		left join table_enquiry_type as ET on ET.enquiry_type_id = r.lead_type_id
		LEFT JOIN state as st ON st.state_id = r.state_id
		LEFT JOIN city as ct ON ct.city_id = r.city_id',
        'cc.id as checkin_id,act1.activity_id as checkin_activity_id,act2.activity_id as checkout_activity_id,
		s.salesman_name,s.employee_code,r.title,r.lead_code,st.state_name,ct.city_name,cc.checkin_date,
		cc.checkin_time,cc.checkout_time,cc.lat,cc.lng,cc.checkout_lat,cc.checkout_lng,ET.enqury_type as lead_type,r.retailer_name,retailer_phone_no', '',
        " cc.checkin_date BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromAttList'])) . "' 
		AND '" . date('Y-m-d', strtotime($_SESSION['ToAttList'])) . "'  
		$salesman $salCond $checkinCond ORDER BY cc.checkin_date ASC, cc.lead_id ASC, cc.checkin_time ASC");


    if (is_array($auRec) && (count($auRec) > 0)) {
        foreach ($auRec as $key => $checkinData) {
            $checkin_date = date('d M Y', strtotime($checkinData->checkin_date));

            if (!empty($checkinData->checkout_time) && ($checkinData->checkout_time != '00:00:00')) {
                $checkinDateTime = date('Y-m-d H:i:s', strtotime($checkinData->checkin_date . ' ' . $checkinData->checkin_time));
                $checkoutDateTime = date('Y-m-d H:i:s', strtotime($checkinData->checkin_date . ' ' . $checkinData->checkout_time));
                $timeSpent = dateDifference($checkinDateTime, $checkoutDateTime);
            } else {
                $timeSpent = "-";
            }
            $data .= '"' . $checkinData->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->title . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->lead_code . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->lead_type . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->retailer_phone_no . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->state_name . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->city_name . '"';
            $data .= "\t";
            $data .= '"' . $checkin_date . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->checkin_time . '"';
            $data .= "\t";
            $data .= '"' . $checkinData->checkout_time . '"';
            $data .= "\t";
            $data .= '"' . $timeSpent . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"lead_check_in_out_report.xls\"");
    echo $data;
    exit;
}



if (isset($_GET['export_new_distributor_list'])) {
    $data = "".$AliaseUsers['distributor']." Name\tAdded By \t Added Date\tState\tDistrict \tCity\tAddress\tPhone Number\tContact Person\tContact Number\tDate of Birth\tDistributor Status\tApproval Status\n";

    if (isset($_SESSION['status_id']) && !empty($_SESSION['status_id'])) {
        $condi = " And r.new = " . $_SESSION['status_id'];
    }
    //Todo Start : sudhanshu 02 aug 2024 add date filter
    if ($_SESSION['FromDisList'] != '') {
        $fromdate = date('Y-m-d', strtotime($_SESSION['FromDisList']));
    } else {
        $fromdate = date('Y-m-d');
    }
    if ($_SESSION['ToDisList'] != '') {
        $todate = date('Y-m-d', strtotime($_SESSION['ToDisList']));
    } else {
        $todate = date('Y-m-d');
    }
    //Todo End : sudhanshu 02 aug 2024 add date filter

    $_objArrayList = new ArrayList();
    $salsList = $_objArrayList->SalesmanArrayList();
    $salesman = $_objArrayList->getSalesCondition($salsList);

    $where = " r.salesman_id >0 $condi AND  r.start_date BETWEEN '" . $fromdate . "' AND '" . $todate . "' AND r.account_id =" . $_SESSION['accountId'] .
        $salesman;

    //getting checkin checkouts for above checkins
    $auRec = $_objAdmin->_getSelectList('table_distributors as r 
			left join table_account as a on a.account_id=r.account_id 
			left join table_web_users as w on w.distributor_id=r.distributor_id 
			left join state as st on st.state_id=r.state 
			left join city as c on c.city_id=r.city 
			left join table_location as loc on loc.location_id = r.location 
			left join table_salesman as s on s.salesman_id=r.salesman_id', "r.*,w.username,w.email_id,w.web_user_id,w.status as loginStatus,st.state_name,c.city_name,loc.location_name,s.salesman_name", '', $where .  " ORDER BY r.start_date DESC, r.distributor_name ASC");


    if (is_array($auRec) && (count($auRec) > 0)) {
        for ($i = 0; $i < count($auRec); $i++) {

            //$checkin_date = date('d M Y', strtotime($checkinData->checkin_date));

            $start_date = $_objAdmin->_changeDate($auRec[$i]->start_date);
            if ($auRec[$i]->distributor_dob == "0000-00-00") {
                $retailer_dob = "";
            } else {
                $retailer_dob = $_objAdmin->_changeDate($auRec[$i]->distributor_dob);
            }

            $sts = ($auRec[$i]->status == 'A') ? "Active" : "Inactive";
            if($auRec[$i]->new == '1'){
                $approvalStatus = "Pending";
            }elseif ($auRec[$i]->new == '2'){
                $approvalStatus = "Rejected";
            }else{
                $approvalStatus = "Approved";
            }
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $start_date . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\t";
            $data .= '"' . ucwords(str_replace($remove, ' ', addslashes($auRec[$i]->distributor_address))) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_phone_no . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->contact_person . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->contact_number . '"';
            $data .= "\t";
            $data .= '"' . $retailer_dob . '"';
            $data .= "\t";
            $data .= '"' . $sts . '"';
            $data .= "\t";
            $data .= '"' . $approvalStatus . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"New Distribuors.xls\"");
    echo $data;
    exit;
}

// Todo Start : Jatin : 6 August 2024 : Export salesman load in load out Report

if(isset($_GET['export_salesman_load_in_out_report'])){
    $data = "Activity Date\tActivity Time\t ".$AliaseUsers['salesman']." Name\tCategory Name\tItem Name\tItem Code\tLot No.\tQuantity (in Cases)\tQuantity (in Pcs.)\tStock Action\n";

    if ($_SESSION['salesman_id'] != "") {
         $sal = " sta.salesman_id=" . $_SESSION['salesman_id'] . " and";
    }else{
        if($_SESSION['salesmanId'] !='' && $_SESSION['salesmanId'] > 0 ){
            $sal = " sta.salesman_id=" . $_SESSION['salesman_id'] . " and";
        }else{
            $sal = '';
        }

    }
    if ($_SESSION['FromAttList'] != '') {
        $fromdate = date('Y-m-d', strtotime($_SESSION['FromAttList']));
    } else {
        $fromdate = date('Y-m-d');
    }
    if ($_SESSION['ToAttList'] != '') {
        $todate = date('Y-m-d', strtotime($_SESSION['ToAttList']));
    } else {
        $todate = date('Y-m-d');
    }

    $_objArrayList = new ArrayList();
    $salsList = $_objArrayList->SalesmanArrayList();
    $salesman = $_objArrayList->getSalesCondition($salsList);

    $queryCondition = " $salesman  AND sta.date_of_app >='" . date('Y-m-d', strtotime($_SESSION['FromAttList'])) . "' and sta.date_of_app <='" . date('Y-m-d', strtotime($_SESSION['ToAttList'])) . "' ";

    function sortSyncArray($Array, $SortBy = array(), $Sort = SORT_ASC)
    {
        if (is_array($Array) && count($Array) > 0 && !empty($SortBy)) {
            $Map = array();
            foreach ($Array as $Key => $Val) {
                $Sort_key = '';
                foreach ($SortBy as $Key_key) {
                    $Sort_key .= $Val->$Key_key;
                }
                $Map[$Key] = $Sort_key;
            }
            asort($Map, $Sort);
            $Sorted = array();
            foreach ($Map as $Key => $Val) {
                $Sorted[] = $Array[$Key];
            }
            return $Sorted;
        }
        return $Array;
    }

    $auRes = $_objAdmin->_getSelectList('table_item_salesman_stock_activity as sta
                        left join table_salesman as s on s.salesman_id = sta.salesman_id
                        left join table_item as i on i.item_id = sta.item_id						
                        left join table_category as c on c.category_id = sta.category_id
                        left join table_category as c2 on c2.category_id = i.category_id
                        left join table_color as cl on cl.color_id = sta.attribute_value_id
						LEFT JOIN table_item_case_relationship as rel on rel.item_id= sta.item_id
						LEFT JOIN table_cases as tc on tc.case_id = rel.case_id
						', "sta.sal_stk_activity_id, 
						DATE_FORMAT(sta.created_datetime, '%Y-%m-%d') as activity_date,sta.time_of_app, i.item_id, 
						i.item_name, i.item_code, c.category_id, c.category_name as lo_li_category,c2.category_name as itm_dlvry_category,cl.color_code, s.salesman_name, s.employee_code,sta.status,sta.rec_stock_value,tc.case_size",
        '', " $queryCondition ORDER BY DATE_FORMAT(sta.created_datetime, '%Y-%m-%d'),sta.time_of_app ASC");

    $syncRec = $_objAdmin->_getSelectList2('table_sync_tracking_api as sta
                            left join table_salesman as s on s.salesman_id = sta.salesman_id', " sync_date as activity_date, sync_start_time as time_of_app,activity,s.salesman_name,'synce' as status", '', " sync_date >='" . date('Y-m-d', strtotime($_SESSION['FromAttList'])) . "' and sync_date <='" . date('Y-m-d', strtotime($_SESSION['ToAttList'])) . "'and sync_status='S' $salesman  ORDER BY sync_date ASC,sync_start_time ASC");


    if (count($syncRec) > 0 && !empty($syncRec)) {
        $array = array();
        $array = array_merge($auRes, $syncRec);
        $auRes = sortSyncArray($array, array('activity_date', 'time_of_app'));

    }

    if (is_array($auRes) && sizeof($auRes)) {
        foreach ($auRes as $result) {

            $status = '';
            $category = '';
            $rowColor = '';
            $calcFlag = false;
            if (strtolower($result->status) == 'li') {
                $status = 'Load In';
                $category = $result->lo_li_category;
                $rowColor = '';
            } elseif (strtolower($result->status) == 'lo') {
                $status = 'Load Out';
                $category = $result->lo_li_category;
                $rowColor = '';
            } elseif (strtolower($result->status) == 'd') {
                $status = 'Delivery';
                $category = $result->itm_dlvry_category;
                $rowColor = '';
            } elseif (strtolower($result->status) == 'si') {
                $status = 'Stock In (Edit Delivery)';
                $category = $result->itm_dlvry_category;
                $rowColor = '';
                $calcFlag = true;

            } elseif (strtolower($result->status) == 'so') {
                $status = 'Stock Out (Edit Delivery)';
                $category = $result->itm_dlvry_category;
                $rowColor = '';

            } elseif (strtolower($result->status) == 'synce') {
                $status = 'App Sync Process';
                $rowColor = 'rowColor';
            } else {
                $status = '';
                $category = '';
                $rowColor = '';
            }

            if ($calcFlag) {
                $lot_no = -round(($result->rec_stock_value / $result->case_size), 2);
            } else {
                $lot_no = round(($result->rec_stock_value / $result->case_size), 2);
            }

            if ($calcFlag) {
                $Quantity  = -$result->rec_stock_value;
            } else {
                $Quantity = $result->rec_stock_value;
            }
            $data .= '"' . $_objAdmin->_changeDate($result->activity_date) . '"';
            $data .= "\t";
            $data .= '"' . $result->time_of_app . '"';
            $data .= "\t";
            $data .= '"' . ucfirst($result->salesman_name) . '"';
            $data .= "\t";
            $data .= '"' . ucfirst($category) . '"';
            $data .= "\t";
            $data .= '"' . ucfirst($result->item_name) . '"';
            $data .= "\t";
            $data .= '"' . ucfirst($result->item_code) . '"';
            $data .= "\t";
            $data .= '"' . $result->color_code . '"';
            $data .= "\t";
            $data .= '"' . $lot_no . '"';
            $data .= "\t";
            $data .= '"' . $Quantity . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Load in Load Out.xls\"");
    echo $data;
    exit;
}

// Todo End : Jatin : 6 August 2024 : Export salesman load in load out Report

//Todo Start: sudhanshu : 13 August 2024 :  export delivery return load out report

if (isset($_GET['export_delivery_return_load_out_stock'])) {
    $data = $AliaseUsers['salesman'] . " Name \t Category Name\t Item Name\t Item Code \tLot No\tItem Case Size\t " . $AliaseUsers['salesman'] . " Stock(in Cases)\t" . $AliaseUsers['salesman'] . " Stock(in Qty)\tCompany Stock(in Cases)\tCompany Stock(in Qty)\n";


    if ($_SESSION['salesID'] != 'All') {
        $condi = " tss.salesman_id ='" . $_SESSION['salesID'] . "' AND ";
    }
    $auRec = $_objAdmin->_getSelectList('table_salesman_non_saleable_return_stock as tss
            LEFT JOIN table_category as c on c.category_id = tss.category_id
            LEFT JOIN table_item as i on i.item_id = tss.item_id
            LEFT JOIN table_item_case_relationship as rel on rel.item_id= tss.item_id
            LEFT JOIN table_cases as tc on tc.case_id = rel.case_id
            LEFT JOIN table_color as cc on cc.color_id = tss.batch_no
            LEFT JOIN table_salesman as s on s.salesman_id = tss.salesman_id
            ', "tss.category_id, tss.item_id, c.category_name, i.item_name,i.item_code, tc.case_size, cc.color_id, cc.color_code,tss.return_stock_value,s.salesman_name, tss.id", '', " $condi tss.return_stock_value > 0  and tss.is_saleable = 0 order by tss.item_id ASC");

    //echo "<pre>";print_r($auRec);die;
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {

            if ($auRec[$i]->return_stock_value != '') {
                $salCase = round(($auRec[$i]->return_stock_value / $auRec[$i]->case_size), 2);
            } else {
                $salCase = 0;
            }

            $salStock = 0;
            $salCat = $_objAdmin->_getSelectList2('table_item_ndc_stock', "stock_value", '', " account_id ='" . $_SESSION['accountId'] . "' AND category_id='" . $auRec[$i]->category_id . "' AND item_id = '" . $auRec[$i]->item_id . "' AND color_id='" . $auRec[$i]->color_id . "'");
            if (is_array($salCat) && !empty($salCat)) {

                $salStock = round(($salCat[0]->stock_value / $auRec[$i]->case_size), 2);
            } else {
                $salStock = 0;
            }
            $dis_stock_value = 0;
            if ($_SESSION['salesID'] != "") {
                if ($salCat[0]->stock_value != "") {
                    $dis_stock_value = $salCat[0]->stock_value;
                } else {
                    $dis_stock_value = 0;
                }
            } else {
                $dis_stock_value = 0;
            }


            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->category_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->color_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->case_size . '"';
            $data .= "\t";
            $data .= '"' . $salCase . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->return_stock_value . '"';
            $data .= "\t";
            $data .= '"' . $salStock . '"';
            $data .= "\t";
            $data .= '"' . $dis_stock_value . '"';

            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"delivery_return_load_out.xls\"");
    echo $data;
    exit;
}
//Todo End: sudhanshu : 13 August 2024 :  export delivery return load out report
//Todo Start: sudhanshu : 13 Aug : export Salesman expense approval  List
if (isset($_GET['export_salesman_expense_approval_list'])) {
    $data = "" . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['salesman'] . " Code\t" . $AliaseUsers['salesman'] . " Designation\tReporting to\t Reporting to Designation\tActivity Date\tExpense Date\tExpense Type\tExpense City\tExpense Amount\tRemark\tManager Status\tApproved By Manager\tManager Approved Amount\tManager Remark\tManager Status Updated On\tAdmin Status\tApproved By Admin\tAdmin Approved Amount\tAdmin Remark\tAdmin Status Updated On\tPhoto Count\n";
    if ($_SESSION['FromallownceList'] != '') {
        $fromdate = date('Y-m-d', strtotime($_SESSION['FromallownceList']));
    } else {
        $fromdate = date('Y-m-d');
    }
    if ($_SESSION['ToallownceList'] != '') {
        $todate = date('Y-m-d', strtotime($_SESSION['ToallownceList']));
    } else {
        $todate = date('Y-m-d');
    }

    if (isset($_SESSION['allowncesalesmanID']) && !empty($_SESSION['allowncesalesmanID'])) {
        $salCond = " AND sad.salesman_id = " . $_SESSION['allowncesalesmanID'];
    } else {
        $_objArrayList = new ArrayList();
        $salsList = $_objArrayList->SalesmanArrayList();
        $salesman = $_objArrayList->getSalesCondition($salsList);
        $salCond = $salesman;
    }
    $expType = '';
    if(isset($_SESSION['expenseType']) && !empty($_SESSION['expenseType'])){
        $expType = " AND samd.tada_id = '".$_SESSION['expenseType']."'";
    }
    $condi = " sad.account_id = " . $_SESSION['accountId'] . " AND DATE(sad.created) BETWEEN '" . $fromdate . "' AND '" . $todate . "' $salCondi $expType ORDER BY sad.created DESC";


    $auRec = $_objAdmin->_getSelectList2('table_salesman_allowance_mapping as samd
LEFT JOIN table_salesman_allowance_details as sad ON sad.allws_id = samd.allws_id
LEFT JOIN table_salesman as s on s.salesman_id = sad.salesman_id 
LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
LEFT JOIN table_salesman_hierarchy AS H2 ON H2.hierarchy_id = SH.rpt_hierarchy_id 
LEFT JOIN table_salesman AS s2 ON s2.salesman_id = SH.rpt_user_id 
LEFT JOIN table_salesman_tags as st ON st.id = samd.tada_id
LEFT JOIN table_location as ct ON ct.location_id = sad.city_id
LEFT JOIN table_salesman AS mngr ON mngr.salesman_id = samd.status_updated_by_mngr_id
LEFT JOIN table_salesman AS adm ON adm.salesman_id = samd.status_updated_by_admin_id',
        "sad.allws_id,samd.allwns_map_id,samd.tada_id,sad.salesman_id,s.salesman_name,s.employee_code,H.description AS sal_desg,s2.salesman_name AS rpt_to, 
        H2.description AS rpt_to_desg,sad.created as req_on_date,sad.app_date as req_for_date,st.desc as expense_type,ct.location_name,samd.allwns_amt,samd.remark,mngr.salesman_name as mngr_name,
        samd.mngr_apprvd_amt,samd.mngr_remark,samd.request_status,CONCAT(samd.status_updated_on_date,' ',samd.status_updated_on_time) as mngr_sts_updtd_on,samd.is_approved_by_admin,samd.status_updated_by_admin_id,adm.salesman_name as admin_name,samd.admin_apprvd_amt,samd.admin_remark,samd.admin_request_status,samd.admin_status_updated_on_date_time as admin_sts_updtd_on,photo_count", '',
        $condi, '');
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $actDate = date('d M Y', strtotime($auRec[$i]->req_on_date));
            $expDate = date('d M Y', strtotime($auRec[$i]->req_for_date));
            $mngr_sts_updtd_on = '';
            if ($auRec[$i]->mngr_sts_updtd_on != '0000-00-00 00:00:00') {
                $mngr_sts_updtd_on = date('d M Y H:i', strtotime($auRec[$i]->mngr_sts_updtd_on));
            }
            $admin_sts_updtd_on = '';
            if ($auRec[$i]->admin_sts_updtd_on != '0000-00-00 00:00:00') {
                $admin_sts_updtd_on = date('d M Y H:i', strtotime($auRec[$i]->admin_sts_updtd_on));
            }
            $mngr_apprvd_amt = '';
            if (intval($auRec[$i]->mngr_apprvd_amt) > 0) {
                $mngr_apprvd_amt = $auRec[$i]->mngr_apprvd_amt;
            }
            $admin_apprvd_amt = '';
            if (intval($auRec[$i]->admin_apprvd_amt) > 0) {
                $admin_apprvd_amt = $auRec[$i]->admin_apprvd_amt;
            }
            $adminName = '';
            if (intval($auRec[$i]->is_approved_by_admin) > 0) {
                if (intval($auRec[$i]->status_updated_by_admin_id) > 0) {
                    $adminName = $auRec[$i]->admin_name;
                } else {
                    $adminName = 'Admin';
                }
            }
            $auPhotoCount = $_objAdmin->_getSelectList('table_image', "count(image_id) as photo_count", '', "image_type IN('10') and ref_id='" . ($auRec[$i]->allws_id) . "' AND tag_id='" . $auRec[$i]->tada_id . "' ");

            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->des1 . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->rpt_to . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->des2 . '"';
            $data .= "\t";
            $data .= '"' . $actDate . '"';
            $data .= "\t";
            $data .= '"' .$expDate . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->expense_type . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->allwns_amt . '"';
            $data .= "\t";
            $data .= '"' . str_replace($remove, ' ', $auRec[$i]->remark) . '"';
            $data .= "\t";
            $data .= '"' . ucwords($auRec[$i]->request_status) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->mngr_name . '"';
            $data .= "\t";
            $data .= '"' . $mngr_apprvd_amt . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->mngr_remark . '"';
            $data .= "\t";
            $data .= '"' . $mngr_sts_updtd_on . '"';
            $data .= "\t";
            $data .= '"' . ucwords($auRec[$i]->admin_request_status) . '"';
            $data .= "\t";
            $data .= '"' . $adminName . '"';
            $data .= "\t";
            $data .= '"' . $admin_apprvd_amt . '"';
            $data .= "\t";
            $data .= '"' .str_replace($remove, ' ', $auRec[$i]->admin_remark) . '"';
            $data .= "\t";
            $data .= '"' . $admin_sts_updtd_on . '"';
            $data .= "\t";
            $data .= '"' . $auPhotoCount[0]->photo_count . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"salesman_expense_approval_list.xls\"");
    echo $data;
    exit;
}
//Todo End:  sudhanshu : 13 Aug : export Salesman expense approval  List

if (isset($_GET['export_delivery_return_report'])) {
    $data = "Date\tTime\t" . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['salesman'] . " Code\t" . $AliaseUsers['retailer_name'] . " Name\t".$AliaseUsers['retailer_name'] ." Code\tItem Name\t Item Code\tLot No.\tQuantity\tReturn Reason\tRemarks\tIs Saleable\n";

    if ($_SESSION['FromProductList'] != '') {
        $fromdate = "  D.activity_date  >= '" . date('Y-m-d', strtotime($_SESSION['FromProductList'])) . "' AND ";
    } else {
        $fromdate = " D.activity_date  >= '" . date('Y-m-d') . "' AND ";
    }
    if ($_SESSION['ToProductList'] != '') {
        $todate = " D.activity_date <= '" . date('Y-m-d', strtotime($_SESSION['ToProductList'])) . "' ";
    } else {
        $todate = "  D.activity_date <= '" . date('Y-m-d') . "'";
    }

    if (isset($_SESSION['SalOrderList']) && !empty($_SESSION['SalOrderList'])) {
        $salesman = " AND s.salesman_id = " . $_SESSION['SalOrderList'];
    } else {
        $_objArrayList = new ArrayList();
        $salsList = $_objArrayList->SalesmanArrayList();
        $salesman = $_objArrayList->getSalesCondition($salsList);

    }

    $where = " $fromdate $todate $salesman ORDER BY D.activity_date DESC, D.activity_time DESC";

    $auRec = $_objAdmin->_getSelectList('table_salesman_return_stock AS D 		
		LEFT JOIN table_item AS I ON D.item_id = I.item_id		
		LEFT JOIN table_color AS B ON D.batch_no = B.color_id		
		LEFT JOIN table_salesman AS s ON D.salesman_id = s.salesman_id
		LEFT JOIN table_retailer AS R ON D.retailer_id = R.retailer_id		
		left join table_delivery_return_reason as dr on D.reason_id=dr.id',
        "activity_date,activity_time,return_qty,s.salesman_name,s.employee_code,R.retailer_name,R.retailer_code,I.item_name,I.item_code,B.color_code,dr.reason,dr.is_saleable,D.remarks", '',
        $where, '');
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $delivery_date = $_objAdmin->_changeDate($auRec[$i]->activity_date);
            if($auRec[$i]->is_saleable == 1){
                $saleable = "Saleable";
            }else{
                $saleable = "Non Saleable";
            }
            $data .= '"' . $delivery_date . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->activity_time . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' .preg_replace('/[^A-Za-z0-9?!\s-,.%&#_()-+[]\/ ]/', '', str_replace($remove, '', $auRec[$i]->item_name)) . '"';
            $data .= "\t";
            $data .= '"' . preg_replace('/[^A-Za-z0-9?!\s-,.%&#_()-+[]\/ ]/', '', str_replace($remove, '', $auRec[$i]->item_code)) . '"';
            $data .= "\t";
            $data .= '"' .preg_replace('/[^A-Za-z0-9?!\s-,.%&#_()-+[]\/ ]/', '', str_replace($remove, '', $auRec[$i]->color_code)) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->return_qty . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->reason . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->remarks . '"';
            $data .= "\t";
            $data .= '"' . $saleable . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"delivery_return.xls\"");
    echo $data;
    exit;
}

// Todo Start : sudhanshu  : 20 aug 2024: Export Retailer Distritbutor
if (isset($_GET['export_retailer_distributor_mapping_list'])) {
    $data = "" . $AliaseUsers['retailer'] . " Name \t  " . $AliaseUsers['retailer'] . " Code \t " . $AliaseUsers['retailer'] . " Class \t " . $AliaseUsers['retailer'] . " Type \t " . $AliaseUsers['retailer'] . " Channel \tSurvey Status\t " . $AliaseUsers['distributor'] . " Name \t " . $AliaseUsers['distributor'] . " Code\t Display Outlet \t Country\t State \t District \t City\t Market \t Zipcode \t Address \t Phone Number1 \t Phone Number2 \t GST No. \t Aadhar No. \t PAN No. \t Contact Person1 \t Contact Person Number1 \t Contact Person2 \t Contact Person Number2 \t Email ID1 \t Email ID2\t Added By \tStart Date\n";
    if ((intval($_SESSION['userLoginType']) == 3) && (intval($_SESSION['distributorId']) > 0)) {
        $distCondi = ' AND r.distributor_id = ' . intval($_SESSION['distributorId']);
    }
    $condi = " r.new='' AND r.status ='A'  AND r.status!='D' $distCondi GROUP BY r.retailer_id ORDER BY r.retailer_name ASC";

    $auRec = $_objAdmin->_getSelectList('table_retailer as r 
		LEFT JOIN table_relationship as rr on rr.relationship_id=r.relationship_id 
		left join table_retailer_channel_master as cm on r.channel_id=cm.channel_id 
		LEFT JOIN table_salesman AS sm ON sm.salesman_id = r.salesman_id
        left join country as con on con.country_id = r.country
		left join state as s on r.state=s.state_id 
		left join table_web_users as w on w.retailer_id=r.retailer_id 
		left join city as c on r.city=c.city_id 
		left join table_location as loc ON loc.location_id = r.location_id
		left join table_retailer_type_master as tm on tm.type_id=r.type_id
		LEFT JOIN table_route_retailer AS RRR ON RRR.retailer_id = r.retailer_id
		LEFT JOIN table_route AS RT ON RT.route_id = RRR.route_id
		left join table_distributors as d on d.distributor_id=r.distributor_id ', "r.*,GROUP_CONCAT(RT.route_name SEPARATOR ',') AS routes,rr.relationship_code, sm.salesman_name, con.country_name,s.state_name,w.email_id,tm.type_name,d.distributor_name,d.distributor_code,c.city_name,cm.channel_name,loc.location_name", '', $condi);

    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $surveyStatus = '';

            if (strtolower($auRec[$i]->survey_status) == 'c') {
                $surveyStatus = 'Surveyed';
            } elseif (strtolower($auRec[$i]->survey_status) == 'i') {
                $surveyStatus = 'Not Surveyed';
            } elseif (strtolower($auRec[$i]->survey_status) == 'n') {
                $surveyStatus = 'Rejected';
            } else {
                $surveyStatus = '';
            }

            if ($auRec[$i]->display_outlet == 'Y') {
                $outlet = 'YES';
            } elseif ($auRec[$i]->display_outlet == 'N') {
                $outlet = 'No';
            } else {
                $outlet = '';
            }
            if ($auRec[$i]->new == '1') {
                $new = 'New Retailer';
            }

            $start_date = $_objAdmin->_changeDate($auRec[$i]->start_date);

            if ($auRec[$i]->status == 'I') {
                $end_date = $_objAdmin->_changeDate($auRec[$i]->end_date);
            } else {
                $end_date = '';
            }

            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->relationship_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->type_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->channel_name . '"';
            $data .= "\t";
            $data .= '"' . $surveyStatus . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $outlet . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->country_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_location . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->zipcode . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_address . '"';
            $data .= "\t";
//            $data .= '"' . $auRec[$i]->retailer_address2 . '"';
//            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_phone_no . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_phone_no2 . '"';
            $data .= "\t";
            // $data .= '"' . $auRec[$i]->retailer_leadline_no . '"';
            // $data .= "\t";
            $data .= '"' . $auRec[$i]->gst_no . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->aadhar_no . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->pan_no . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->contact_person . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->contact_number . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->contact_person2 . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->contact_number2 . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->email_id . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->email_id2 . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
//            $data .= "\t";
//            $data .= '"' . $new . '"';
//            $data .= "\t";
//            $data .= '"' . $auRec[$i]->status . '"';
//            $data .= "\t";
//            $data .= '"' . $auRec[$i]->routes . '"';
            $data .= "\t";
            $data .= '"' . $start_date . '"';
            // $data .= "\t";
            // $data .= '"' . $end_date . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"" . $AliaseUsers['retailer'] . "_" . $AliaseUsers['distributor'] . "_list.xls\"");
    echo $data;
    exit;
}
// Todo End : sudhanshu  : 20 aug 2024 : Export Retailer Distritbutor
if(isset($_GET['export_salesman_delivery_ladger_all_data'])){
    $data = "Activity Date\tActivity Time\t ".$AliaseUsers['salesman']." Name\t".$AliaseUsers['salesman']." Code\t".$AliaseUsers['distributor']." Name\t".$AliaseUsers['distributor']." Code\t".$AliaseUsers['retailer']." Name\t".$AliaseUsers['retailer']." Code\t Category Name\tItem Name\tItem Code\tBill No.\tStock Before Activity\tQuantity Added/Remove\tStock After Quantity\tActivity Type\n";

//    if ($_SESSION['salesman_id'] != "") {
//        $sal = " sta.salesman_id=" . $_SESSION['salesman_id'] . " and";
//    }else{
//        if($_SESSION['salesmanId'] !='' && $_SESSION['salesmanId'] > 0 ){
//            $sal = " sta.salesman_id=" . $_SESSION['salesman_id'] . " and";
//        }else{
//            $sal = '';
//        }
//
//    }
    if ($_SESSION['FromAttList'] != '') {
        $fromdate = date('Y-m-d', strtotime($_SESSION['FromAttList']));
    } else {
        $fromdate = date('Y-m-d');
    }
    if ($_SESSION['ToAttList'] != '') {
        $todate = date('Y-m-d', strtotime($_SESSION['ToAttList']));
    } else {
        $todate = date('Y-m-d');
    }

    $_objArrayList = new ArrayList();
    $salsList = $_objArrayList->SalesmanArrayList();
    $salesman = $_objArrayList->getSalesCondition($salsList);

    $queryCondition = "  sta.app_date >='" . date('Y-m-d', strtotime($_SESSION['FromAttList'])) . "' and sta.app_date <='" . date('Y-m-d', strtotime($_SESSION['ToAttList'])) . "' $salesman ";

    function sortSyncArray($Array, $SortBy = array(), $Sort = SORT_ASC)
    {
        if (is_array($Array) && count($Array) > 0 && !empty($SortBy)) {
            $Map = array();
            foreach ($Array as $Key => $Val) {
                $Sort_key = '';
                foreach ($SortBy as $Key_key) {
                    $Sort_key .= $Val->$Key_key;
                }
                $Map[$Key] = $Sort_key;
            }
            asort($Map, $Sort);
            $Sorted = array();
            foreach ($Map as $Key => $Val) {
                $Sorted[] = $Array[$Key];
            }
            return $Sorted;
        }
        return $Array;
    }

    $auRes = $_objAdmin->_getSelectList('table_salesman_stock_activity as sta
                        left join table_item_delivery as del on sta.delivery_id = del.order_id
                        left join table_salesman as s on s.salesman_id = sta.salesman_id
                        left join table_distributors as d on d.distributor_id = sta.distributor_id
                        left join table_retailer as r on r.retailer_id = sta.retailer_id
                        
                        left join table_item as i on i.item_id = sta.item_id						
                        left join table_category as c2 on c2.category_id = i.category_id
						LEFT JOIN table_item_case_relationship as rel on rel.item_id= sta.item_id
						LEFT JOIN table_cases as tc on tc.case_id = rel.case_id
						', " 
						DATE_FORMAT(sta.created_at, '%Y-%m-%d') as activity_date,sta.*,sta.app_time, i.item_id, 
						i.item_name, i.item_code, c2.category_name , s.salesman_name,d.distributor_name,r.retailer_name,r.retailer_code,d.distributor_code, s.employee_code,sta.stock_qty,sta.stock_before_activity,sta.stock_after_activity,tc.case_size,del.bill_no",
        '', " $queryCondition ORDER BY DATE_FORMAT(sta.created_at, '%Y-%m-%d') desc,sta.app_time ASC");

    $syncRec = $_objAdmin->_getSelectList('table_sync_tracking_api as sta
                            left join table_salesman as s on s.salesman_id = sta.salesman_id', " sync_date as activity_date, sync_start_time as app_time,activity,s.salesman_name,s.employee_code,'synce' as status", '', "  sync_date >='" . date('Y-m-d', strtotime($_SESSION['FromAttList'])) . "' and sync_date <='" . date('Y-m-d', strtotime($_SESSION['ToAttList'])) . "'and sync_status='S' $salesman  ORDER BY sync_date ASC,sync_start_time ASC");


    if (count($syncRec) > 0 && !empty($syncRec)) {
        $array = array();

        if(is_array($auRes) && count($auRes)> 0){
            $array = array_merge($auRes, $syncRec);
        }else{
            $array = $syncRec;
        }

        $auRes = sortSyncArray($array, array('activity_date', 'app_time'));

    }

   // echo "<pre>";print_r($auRes);die;
    if (is_array($auRes) && sizeof($auRes)) {
        foreach ($auRes as $result) {

            $status = '';
            $category = '';
            $rowColor = '';
            $calcFlag = false;
            if (strtolower($result->activity_type) == 'load_in') {
                $status = 'Load In';
                $qty_add = $result->stock_qty;
            } elseif (strtolower($result->activity_type) == 'load_out') {
                $status = 'Load Out';
                $qty_add = -$result->stock_qty;
            } elseif (strtolower($result->activity_type) == 'delivery') {
                $status = 'Delivery';
                $qty_add = -$result->stock_qty;
            }
            //Todo SUdhanshu 28 may 2024 : add edit delivery
            elseif (strtolower($result->activity_type) == 'delivery_edit') {
                $status = 'Edit Delivery';
                $qty_add = -$result->stock_qty;
            }
//            elseif (strtolower($result->activity_type) == 'delivery_return') {
//                $status = 'Delivery Return';
//                $qty_add = $result->stock_qty;
//            }
            //Todo SUdhanshu 28 may 2024 : add edit delivery
            elseif (strtolower($result->status) == 'synce') {
                $status = 'App Sync Process';
                $rowColor = " background-color : yellow; ";
                $qty_add = '';
                $rowColor = 'rowColor';
            } else {
                $status = '';
            }


            $data .= '"' . $_objAdmin->_changeDate($result->activity_date) . '"';
            $data .= "\t";
            $data .= '"' . $result->app_time . '"';
            $data .= "\t";
            $data .= '"' . ucfirst($result->salesman_name) . '"';
            $data .= "\t";
            $data .= '"' . ucfirst($result->employee_code) . '"';
            $data .= "\t";
            $data .= '"' . ucfirst($result->distributor_name) . '"';
            $data .= "\t";
            $data .= '"' . ucfirst($result->distributor_code) . '"';
            $data .= "\t";
            $data .= '"' . ucfirst($result->retailer_name) . '"';
            $data .= "\t";
            $data .= '"' . ucfirst($result->retailer_code) . '"';
            $data .= "\t";
            $data .= '"' . ucfirst($result->category_name) . '"';
            $data .= "\t";
            $data .= '"' . ucfirst($result->item_name) . '"';
            $data .= "\t";
            $data .= '"' . ucfirst($result->item_code) . '"';
            $data .= "\t";
            $data .= '"' . $result->bill_no . '"';
            $data .= "\t";
            $data .= '"' . $result->stock_before_activity . '"';
            $data .= "\t";
            $data .= '"' . $qty_add . '"';
            $data .= "\t";
            $data .= '"' . $result->stock_after_activity . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"Load in Load Out All Data.xls\"");
    echo $data;
    exit;
}


//Todo Start: Sudhanshu : 29 August 2024 : export Route Retailers List
if (isset($_GET['export_all_route_retailers_details'])) {
    $data = $AliaseUsers['route']." Id \t".$AliaseUsers['route']." Name\t" . $AliaseUsers['retailer'] . " Code\t" . $AliaseUsers['retailer'] . " Name\t". $AliaseUsers['distributor'] . " Code\t" . $AliaseUsers['distributor'] . " Name\t".$AliaseUsers['route']." Status\n";

    $condi = "  r.status = 'A' ORDER BY ro.route_name ASC, r.retailer_name ASC";
    $auRec = $_objAdmin->_getSelectList('table_route  as ro
LEFT JOIN table_route_retailer as rr ON ro.route_id = rr.route_id
LEFT JOIN table_retailer as r ON r.retailer_id = rr.retailer_id
LEFT JOIN table_distributors as d ON r.distributor_id = d.distributor_id
',
        "ro.route_id,ro.route_name,r.retailer_code,r.retailer_name,ro.status,d.distributor_code,d.distributor_name", '', $condi);
    $remove = array("\n", "\r\n", "\r", '"');
    if (is_array($auRec)) {

        for ($i = 0; $i < count($auRec); $i++) {
            $route_name = preg_replace('/[^a-zA-Z0-9-_\.,() ]/', ' ', str_replace($remove, ' ', $auRec[$i]->route_name));

            $status = ($auRec[$i]->status == 'A') ? 'Active' : 'Inactive';
            $data .= '"' . $auRec[$i]->route_id . '"';
            $data .= "\t";
            $data .= '"' . $route_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"".$AliaseUsers['route']."_retailer_list.xls\"");
    echo $data;
    exit;
}

if (isset($_GET['export_new_all_route_retailers_details'])) {
    $data = $AliaseUsers['route']." Name\t" . $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\t" . $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['retailer'] . " Code\t".$AliaseUsers['route']." Status\n";
    $remove = array("\n", "\r\n", "\r", '"', "\t");
    $route_name = 'No_Data_Found';
    $routeId = $_GET['routeId'];

    $condiRet = "  rr.retailer_id > 0 AND rr.distributor_id > 0 AND r.status = 'A' ORDER BY rr.distributor_id ASC";
    $auRec = $_objAdmin->_getSelectList('table_route as ro 
LEFT JOIN table_route_retailer as rr ON ro.route_id = rr.route_id
LEFT JOIN table_retailer as r ON r.retailer_id = rr.retailer_id
LEFT JOIN table_distributors as d on d.distributor_id=rr.distributor_id', "ro.route_id,ro.status,ro.route_name,rr.retailer_id,r.retailer_code,r.retailer_name,rr.distributor_id,d.distributor_code,d.distributor_name", '', $condiRet);

    if (is_array($auRec) && (count($auRec) > 0)) {
        for ($i = 0; $i < count($auRec); $i++) {

            $route_name = preg_replace('/[^a-zA-Z0-9-_\&,.|( )]/', '', str_replace($remove, '', $auRec[$i]->route_name));

            $status = ($auRec[$i]->status == 'A') ? 'Active' : 'Inactive';

            // $data .= '"' . $auRec[$i]->route_id . '"';
            // $data .= "\t";
            $data .= '"' . $route_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\n";

        }
    }

    $condiRet2 = "  rr.retailer_id > 0 AND (rr.distributor_id <= 0 OR rr.distributor_id IS NULL) AND r.status = 'A' ORDER BY rr.retailer_id ASC";

    $auRec = $_objAdmin->_getSelectList('table_route as ro 
LEFT JOIN table_route_retailer as rr ON ro.route_id = rr.route_id
LEFT JOIN table_retailer as r ON r.retailer_id = rr.retailer_id
LEFT JOIN table_distributors as d on d.distributor_id=r.distributor_id', "ro.route_name,rr.retailer_id,r.retailer_code,r.retailer_name,d.distributor_id,d.distributor_code,d.distributor_name,ro.status", '', $condiRet2);

    if (is_array($auRec) && (count($auRec) > 0)) {
        for ($i = 0; $i < count($auRec); $i++) {

            $status = ($auRec[$i]->status == 'A') ? 'Active' : 'Inactive';
            $route_name = preg_replace('/[^a-zA-Z0-9-_\&,.|( )]/', '', str_replace($remove, '', $auRec[$i]->route_name));

            // $data .= '"' . $auRec[$i]->route_id . '"';
            // $data .= "\t";
            $data .= '"' . $route_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\n";

        }
    }

    $condiRet3 = "  rr.distributor_id > 0 AND (rr.retailer_id <= 0 OR rr.retailer_id IS NULL) AND d.status = 'A' ORDER BY rr.distributor_id ASC";

    $auRec = $_objAdmin->_getSelectList('table_route as ro 
LEFT JOIN table_route_retailer as rr ON ro.route_id = rr.route_id
LEFT JOIN table_distributors as d on d.distributor_id=rr.distributor_id', "ro.route_name,d.distributor_code,d.distributor_name,ro.status", '', $condiRet3);

    if (is_array($auRec) && (count($auRec) > 0)) {
        $emptyValue = '-';
        for ($i = 0; $i < count($auRec); $i++) {
            $status = ($auRec[$i]->status == 'A') ? 'Active' : 'Inactive';
            $route_name = preg_replace('/[^a-zA-Z0-9-_\&,.|( )]/', '', str_replace($remove, '', $auRec[$i]->route_name));

            // $data .= '"' . $auRec[$i]->route_id . '"';
            // $data .= "\t";
            $data .= '"' . $route_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $emptyValue . '"';
            $data .= "\t";
            $data .= '"' . $emptyValue . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\n";

        }
    }

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"new_".$AliaseUsers['route']."_list.xls\"");
    echo $data;
    exit;
}

//Todo End: Sudhanshu : 29 August 2024 : export Route Retailers List

// GEETA Code

if (isset($_GET['export_all_schemeretailer'])) {
    $data = $AliaseUsers['retailer'] . " Code\t" . $AliaseUsers['retailer'] ."\n";

    $discountid=$_SESSION['schmeid'];

    $auRec = $_objAdmin->_getSelectList2('table_discount_party as p left join table_retailer as r on r.retailer_id=p.retailer_id', "r.retailer_name,r.retailer_code", '', " p.discount_id='" . $discountid . "'");
    
    if (is_array($auRec)) {

        for ($i = 0; $i < count($auRec); $i++) {
         
           
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"".$AliaseUsers['retailer']."_scheme_list.xls\"");
    echo $data;
    exit;
}

// geeta code

if (isset($_GET['export_new_all_route_data'])) {
    $data = "Route ID\t" . " Route Name\t" . " State\t" . " District\t" . " City\t" .  $AliaseUsers['distributor'] . " Name\t" . $AliaseUsers['distributor'] . " Code\t" . $AliaseUsers['retailer'] . " Name\t" . $AliaseUsers['retailer'] . " Code\t"." Status\n";
    $remove = array("\n", "\r\n", "\r", '"', "\t");
    $route_name = 'No_Data_Found';
    $routeId = $_GET['routeId'];

    $condiRet = "  rr.retailer_id > 0 AND rr.distributor_id > 0 AND r.status = 'A' ORDER BY rr.distributor_id ASC";
    $auRec = $_objAdmin->_getSelectList('table_route as ro 
LEFT JOIN table_route_retailer as rr ON ro.route_id = rr.route_id
LEFT JOIN table_retailer as r ON r.retailer_id = rr.retailer_id
LEFT JOIN table_distributors as d on d.distributor_id=rr.distributor_id
left join state as s1 on s1.state_id=d.state 
                    left join city as c on d.city=c.city_id 
                    left join table_location as loc on loc.location_id = d.location ', "s1.state_name,c.city_name, loc.location_name,ro.route_id,ro.status,ro.route_name,rr.retailer_id,r.retailer_code,r.retailer_name,rr.distributor_id,d.distributor_code,d.distributor_name", '', $condiRet);

    if (is_array($auRec) && (count($auRec) > 0)) {
        for ($i = 0; $i < count($auRec); $i++) {

       

/* if (is_array($stateArr) && (count($stateArr) > 0)) {

    foreach ($stateArr as $Svalue){

        $dataq = $_objAdmin->_getSelectList2('city as ct 
    LEFT JOIN state as st ON st.state_id = ct.state_id', "ct.city_id, st.state_id, ct.city_name, st.state_name", '', ' ct.status = "A" AND ct.state_id IN (' . $retDistUniqStateIds . ') AND ct.city_id IN(' . $retDistUniqDistrictIds . ') GROUP BY ct.city_id ORDER BY ct.city_name ASC');

        if (is_array($dataq) && (count($dataq) > 0)) {
            foreach ($dataq as $valueq){
                $districtname[]=$valueq->city_name;
                    }
        }
    }
        $districtnames = implode(',', $districtname);
    }
*/

   
   
    
            $route_name = preg_replace('/[^a-zA-Z0-9-_\&,.|( )]/', '', str_replace($remove, '', $auRec[$i]->route_name));

            $status = ($auRec[$i]->status == 'A') ? 'Active' : 'Inactive';

             $data .= '"' . $auRec[$i]->route_id . '"';
             $data .= "\t";
            $data .= '"' . $route_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\n";

        }
    }
 

    $condiRet2 = "  rr.retailer_id > 0 AND (rr.distributor_id <= 0 OR rr.distributor_id IS NULL) AND r.status = 'A' ORDER BY rr.retailer_id ASC";

    $auRec = $_objAdmin->_getSelectList('table_route as ro 
LEFT JOIN table_route_retailer as rr ON ro.route_id = rr.route_id
LEFT JOIN table_retailer as r ON r.retailer_id = rr.retailer_id
LEFT JOIN table_distributors as d on d.distributor_id=r.distributor_id
left join state as s1 on s1.state_id=d.state 
                    left join city as c on d.city=c.city_id 
                    left join table_location as loc on loc.location_id = d.location
', "s1.state_name,c.city_name, loc.location_name,ro.route_name,ro.route_id,rr.retailer_id,r.retailer_code,r.retailer_name,d.distributor_id,d.distributor_code,d.distributor_name,ro.status", '', $condiRet2);

    if (is_array($auRec) && (count($auRec) > 0)) {
        for ($i = 0; $i < count($auRec); $i++) {

          
        
            $status = ($auRec[$i]->status == 'A') ? 'Active' : 'Inactive';
            $route_name = preg_replace('/[^a-zA-Z0-9-_\&,.|( )]/', '', str_replace($remove, '', $auRec[$i]->route_name));

             $data .= '"' . $auRec[$i]->route_id . '"';
             $data .= "\t";
            $data .= '"' . $route_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
           
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\n";

        }
    }
   
    $condiRet3 = "  rr.distributor_id > 0 AND (rr.retailer_id <= 0 OR rr.retailer_id IS NULL) AND d.status = 'A' ORDER BY rr.distributor_id ASC";

    $auRec = $_objAdmin->_getSelectList('table_route as ro 
LEFT JOIN table_route_retailer as rr ON ro.route_id = rr.route_id
LEFT JOIN table_distributors as d on d.distributor_id=rr.distributor_id
left join state as s1 on s1.state_id=d.state 
                    left join city as c on d.city=c.city_id 
                    left join table_location as loc on loc.location_id = d.location', "s1.state_name,c.city_name, loc.location_name,ro.route_name,ro.route_id,d.distributor_code,d.distributor_name,ro.status", '', $condiRet3);

    if (is_array($auRec) && (count($auRec) > 0)) {
        $emptyValue = '-';
        for ($i = 0; $i < count($auRec); $i++) {

            $status = ($auRec[$i]->status == 'A') ? 'Active' : 'Inactive';
            $route_name = preg_replace('/[^a-zA-Z0-9-_\&,.|( )]/', '', str_replace($remove, '', $auRec[$i]->route_name));

             $data .= '"' . $auRec[$i]->route_id . '"';
             $data .= "\t";
            $data .= '"' . $route_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\t";
           
            $data .= '"' . $auRec[$i]->distributor_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->distributor_code . '"';
            $data .= "\t";
            $data .= '"' . $emptyValue . '"';
            $data .= "\t";
            $data .= '"' . $emptyValue . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\n";

        }
    }

    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"new_".$AliaseUsers['route']."_list.xls\"");
    echo $data;
    exit;
}

// GEETA end

//Todo Start : sudhanshu : 11 sept 2024 salesman survey feedback question master

if (isset($_GET['salesman_export_survey_feedback_master'])) {
    $data = " Serial Number \t Survey Code \t Survey Name\t Survey Start Date\tSurvey End Date\tDesignation\tState\t Created Date\tCompletion Status\t Status\n";
    //Todo Start : sudhanshu 12 june 2024 : add status filter
    $statusCondi = '';
    if (isset($_SESSION['MasSurFeed']) && $_SESSION['MasSurFeed'] != 'all' && $_SESSION['MasSurFeed'] != '') {
        $statusCondi = " AND sq.status ='" . $_SESSION['MasSurFeed'] . "'";
    }
    //Todo End : sudhanshu 12 june 2024 : add status filter

    $where = " sq.survey_id > 0 $statusCondi ";
    $auRec = $_objAdmin->_getSelectList('table_salesman_feedback_survey_master as sq 
    LEFT JOIN table_salesman_survey_designation_mapping as rtm ON rtm.survey_id = sq.survey_id and rtm.status="A"
    LEFT JOIN table_salesman_hierarchy as rt on rt.hierarchy_id = rtm.hierarchy_id
    LEFT JOIN table_salesman_survey_state_mapping as st ON st.survey_id = sq.survey_id and st.status="A"
    LEFT JOIN state as s ON s.state_id = st.state_id', "sq.*,GROUP_CONCAT(DISTINCT rt.description SEPARATOR '| ') as designation,GROUP_CONCAT(DISTINCT s.state_name SEPARATOR '| ') as states", $rp, $where . ' GROUP BY sq.survey_id,rtm.survey_id ' . $sort);


    if (is_array($auRec)) {

        for ($i = 0; $i < count($auRec); $i++) {
            $status = ($auRec[$i]->status == 'A') ? "Active" : "Inactive";
            $created_date = $_objAdmin->_changeDate($auRec[$i]->created_on);
            $updated_date = $_objAdmin->_changeDate($auRec[$i]->updated_on);

            $sts = $status;

            $cmpltedSts = (intval($auRec[$i]->is_verified) > 0) ? "Completed" : "Not Completed";

            $sortOrder = (($auRec[$i]->sort_order > 0) ? addslashes($auRec[$i]->sort_order) : '');

            //todo start : When Retailer Type, Distributor Type and State is defined as 'All'. In export details it is showing blank. : sudhanshu : 08 march 2024
            $retType = (isset($auRec[$i]->designation) && !empty($auRec[$i]->designation)) ? $auRec[$i]->designation : ((isset
                ($auRec[$i]->is_all_designation)
                && $auRec[$i]->is_all_designation > 0) ? 'All' : '');



            $retdisState = (isset($auRec[$i]->states) && !empty($auRec[$i]->states)) ? $auRec[$i]->states : ((isset
                ($auRec[$i]->is_all_state)
                && $auRec[$i]->is_all_state > 0) ? 'All' : '');


            //todo end :When Retailer Type, Distributor Type and State is defined as 'All'. In export details it is showing blank. : sudhanshu : 08 march 2024


            $sortOrder = $i + 1;
            $data .= '"' . $sortOrder . '"';
            $data .= "\t";

            $data .= '"' . $auRec[$i]->survey_code . '"';
            $data .= "\t";
            $data .= '"' . substr($auRec[$i]->survey_name, 0, 100) . '"';
            $data .= "\t";
            $data .= '"' . date('d M Y', strtotime($auRec[$i]->from_date)) . '"';
            $data .= "\t";
            $data .= '"' . date('d M Y', strtotime($auRec[$i]->to_date)) . '"';
            $data .= "\t";
            $data .= '"' . $retType . '"';
            $data .= "\t";

            $data .= '"' . $retdisState . '"';
            $data .= "\t";
            $data .= '"' . $created_date . '"';
            $data .= "\t";
            $data .= '"' . $cmpltedSts . '"';
            $data .= "\t";
            $data .= '"' . $sts . '"';

            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"salesman_survey_feedback_listing.xls\"");
    echo $data;
    exit;
}
//Todo End: sudhanshu : 11 sept 2024 salesman survey feedback question master

//Todo Start : sudhanshu : 11 sept 2024 salesman survey feedback question master detail

if (isset($_GET['salesman_export_survey_feedback_master_details'])) {
    $data = " Serial Number \t Survey Code \t Survey Name\t Survey Start Date\tSurvey End Date\tDesignation\t State\t Created Date\tCompletion Status\t Status\tSurvey Question\tQuestion Mandatory\tAns Type\tLabel\tOptions\tAns Type Mandatory\tAns Type Status\n";

    //Todo Start : sudhanshu 12 june 2024 : add status filter
    $statusCondi = '';
    if (isset($_SESSION['MasSurFeed']) && $_SESSION['MasSurFeed'] != 'all' && $_SESSION['MasSurFeed'] != '') {
        $statusCondi = " AND sq.status ='" . $_SESSION['MasSurFeed'] . "'";
    }
    //Todo End : sudhanshu 12 june 2024 : add status filter
    $where = " sq.survey_id > 0 $statusCondi ";
    $auRec = $_objAdmin->_getSelectList('table_salesman_feedback_survey_master as sq 
    LEFT JOIN table_salesman_feedback_survey_questions_master AS sqm ON sqm.survey_id = sq.survey_id
    LEFT JOIN table_salesman_feedback_survey_ans_type_group AS satg ON satg.question_id = sqm.question_id
    LEFT JOIN table_ans_type_master AS atm ON satg.ans_type_id = atm.ans_type_id
    LEFT JOIN table_salesman_question_ans_type_options as atp ON atp.group_id=satg.group_id
    LEFT JOIN table_salesman_survey_designation_mapping as rtm ON rtm.survey_id = sq.survey_id and rtm.status="A"
    LEFT JOIN table_salesman_hierarchy as rt on rt.hierarchy_id = rtm.hierarchy_id  
    
    LEFT JOIN table_salesman_survey_state_mapping as st ON st.survey_id = sq.survey_id and st.status="A"
    LEFT JOIN state as s ON s.state_id = st.state_id', "sq.*,GROUP_CONCAT(DISTINCT rt.description SEPARATOR '| ') as designation, GROUP_CONCAT(DISTINCT s.state_name SEPARATOR '| ') as states,sqm.question_desc,sqm.is_mandatory as que_mendatory,atm.ans_type_desc,satg.label,satg.is_mandatory as ans_mandatory,satg.status as ans_type_status,atp.option_description", $rp, $where . ' GROUP BY sq.survey_id,rtm.survey_id,satg.group_id,sqm.question_id,atp.option_id ' . $sort);


    if (is_array($auRec)) {

        for ($i = 0; $i < count($auRec); $i++) {
            $status = ($auRec[$i]->status == 'A') ? "Active" : "Inactive";
            $created_date = $_objAdmin->_changeDate($auRec[$i]->created_on);
            $updated_date = $_objAdmin->_changeDate($auRec[$i]->updated_on);

            $sts = $status;

            $cmpltedSts = (intval($auRec[$i]->is_verified) > 0) ? "Completed" : "Not Completed";

            $que_mendatory = (intval($auRec[$i]->que_mendatory) == 1) ? "Yes" : "No";
            $ans_type_mandatory = (intval($auRec[$i]->ans_mandatory) == 1) ? "Yes" : "No";
            $ans_type_status = ($auRec[$i]->ans_type_status == 'A') ? "Active" : "Inactive";

            //todo start : When Retailer Type, Distributor Type and State is defined as 'All'. In export details it is showing blank. : sudhanshu : 01 march 2024
            $retType = (isset($auRec[$i]->designation) && !empty($auRec[$i]->designation)) ? $auRec[$i]->designation : ((isset
                ($auRec[$i]->is_all_designation)
                && $auRec[$i]->is_all_designation > 0) ? 'All' : '');



            $retdisState = (isset($auRec[$i]->states) && !empty($auRec[$i]->states)) ? $auRec[$i]->states : ((isset
                ($auRec[$i]->is_all_state)
                && $auRec[$i]->is_all_state > 0) ? 'All' : '');

            //todo end :When Retailer Type, Distributor Type and State is defined as 'All'. In export details it is showing blank. : sudhanshu : 01 march 2024

            $sortOrder = (($auRec[$i]->sort_order > 0) ? addslashes($auRec[$i]->sort_order) : '');
            $sortOrder = $i + 1;
            $data .= '"' . $sortOrder . '"';
            $data .= "\t";

            $data .= '"' . $auRec[$i]->survey_code . '"';
            $data .= "\t";
            $data .= '"' . substr($auRec[$i]->survey_name, 0, 100) . '"';
            $data .= "\t";
            $data .= '"' . date('d M Y', strtotime($auRec[$i]->from_date)) . '"';
            $data .= "\t";
            $data .= '"' . date('d M Y', strtotime($auRec[$i]->to_date)) . '"';
            $data .= "\t";
            $data .= '"' . $retType . '"';
            $data .= "\t";
            $data .= '"' . $retdisState . '"';
            $data .= "\t";
            $data .= '"' . $created_date . '"';
            $data .= "\t";
            $data .= '"' . $cmpltedSts . '"';
            $data .= "\t";
            $data .= '"' . $sts . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->question_desc . '"';
            $data .= "\t";
            $data .= '"' . $que_mendatory . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->ans_type_desc . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->label . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->option_description . '"';
            $data .= "\t";
            $data .= '"' . $ans_type_mandatory . '"';
            $data .= "\t";
            $data .= '"' . $ans_type_status . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"salesman_survey_feedback_detail_listing.xls\"");
    echo $data;
    exit;
}
//Todo End: sudhanshu : 11 sept 2024 salesman survey feedback question master detail

// if (isset($_GET['export_qualtiy_check_report'])) {
//     $data = "Activity Date\t".$AliaseUsers['salesman']." Name\t". $AliaseUsers['salesman']." Code\t". $AliaseUsers['retailer']." Name\t". $AliaseUsers['retailer']." Code\tState\tDistrict\tCity\tBrand Name\t Hygiene\tLabelling Good Condition\tLabelling Good Condition Remark\tLiquid Good Condition \tLiquid Good Condition Remark\tSediment\tSediment Remark\n";
//     //$condi=	" 1=1";

//     if ($_SESSION['odoFrom'] != '') {
//         $fromdate = "  o.app_date  >= '" . date('Y-m-d', strtotime($_SESSION['odoFrom'])) . "' AND ";
//     } else {
//         $fromdate = " o.app_date  >= '" . date('Y-m-d') . "' AND ";
//     }
//     if ($_SESSION['odoTo'] != '') {
//         $todate = " o.app_date <= '" . date('Y-m-d', strtotime($_SESSION['odoTo'])) . "' ";
//     } else {
//         $todate = "  o.app_date <= '" . date('Y-m-d') . "'";
//     }



//     $salesman =  $_SESSION['SalIDs'];

//     if ($_SESSION['salId'] != '') {
//         $salesman = " AND s.salesman_id = '" . $_SESSION['salId'] . "'";
//     }
//     //$reqFor = "  AND (DATE(odo.start_date) BETWEEN '" . $fromdate . "' AND '" . $todate . "')  ";


//     $where = " $fromdate  $todate  $salesman ";

//     $auRec = $_objAdmin->_getSelectList('table_check_brand_quality as o
// LEFT JOIN table_salesman as s on s.salesman_id = o.salesman_id 
// LEFT JOIN table_retailer AS r ON o.retailer_id = r.retailer_id
// LEFT JOIN state AS st ON st.state_id = r.state
// LEFT JOIN city AS ct ON ct.city_id = r.city
// LEFT JOIN table_location AS loc ON loc.location_id = r.location_id
// LEFT JOIN table_check_brand_quality_detail AS od ON od.quality_id = o.quality_id
// LEFT JOIN table_brands as b on b.brand_id = od.brand_id 
// LEFT JOIN table_hygiene AS h ON od.hygiene_id = h.hygiene_id

// ', "o.app_date,od.*,s.salesman_name,s.employee_code,r.retailer_name,r.retailer_code,st.state_name,ct.city_name,loc.location_name,b.brand_name,h.description as hygiene",''  ,$where . ' ORDER BY o.app_date desc');


//     if (is_array($auRec) && count($auRec)>0) {
//         for ($i = 0; $i < count($auRec); $i++) {

//             $act_date = date('d M Y', strtotime($auRec[$i]->app_date));

//             if($auRec[$i]->labelling_condi == 1){
//                 $label = 'Yes';
//             }else{
//                 $label = 'No';
//             }
//             if($auRec[$i]->liquid_color == 1){
//                 $liquid_color = 'Yes';
//             }else{
//                 $liquid_color = 'No';
//             }
//             if($auRec[$i]->sediment == 1){
//                 $sediment = 'Yes';
//             }else{
//                 $sediment = 'No';
//             }


//             $data .= '"' . $act_date . '"';
//             $data .= "\t";
//             $data .= '"' . $auRec[$i]->salesman_name . '"';
//             $data .= "\t";
//             $data .= '"' . $auRec[$i]->employee_code . '"';
//             $data .= "\t";
//             $data .= '"' . $auRec[$i]->retailer_name . '"';
//             $data .= "\t";
//             $data .= '"' . $auRec[$i]->retailer_code . '"';
//             $data .= "\t";
//             $data .= '"' . $auRec[$i]->state_name . '"';
//             $data .= "\t";
//             $data .= '"' .$auRec[$i]->city_name. '"';
//             $data .= "\t";
//             $data .= '"' . $auRec[$i]->location_name . '"';
//             $data .= "\t";
//             $data .= '"' . $auRec[$i]->brand_name . '"';
//             $data .= "\t";
//             $data .= '"' . $auRec[$i]->hygiene . '"';
//             $data .= "\t";
//             $data .= '"' . $label . '"';
//             $data .= "\t";
//             $data .= '"' . $auRec[$i]->labelling_remark . '"';
//             $data .= "\t";
//             $data .= '"' . $liquid_color . '"';
//             $data .= "\t";
//             $data .= '"' . $auRec[$i]->liquid_remark . '"';
//             $data .= "\t";
//             $data .= '"' . $sediment . '"';
//             $data .= "\t";
//             $data .= '"' . $auRec[$i]->sediment_remark . '"';
//             $data .= "\n";

//         }
//     }
//     header("Content-type: application/octet-stream");
//     header("Content-Disposition: attachment; filename=\"quality_check_list.xls\"");
//     echo $data;
//     exit;
// }

if (isset($_GET['export_qualtiy_check_report'])) {
    $data = "Activity Date\t". $AliaseUsers['salesman']." Code\t".$AliaseUsers['salesman']." Name\t". $AliaseUsers['retailer']." Code\t". $AliaseUsers['retailer']." Name\tState\tDistrict\tCity\tBrand Name\tItem Code\tItem Name \t Hygiene\tLabelling Good Condition\tLabelling Good Condition Remark\tLiquid Good Condition \tLiquid Good Condition Remark\tSediment\tSediment Remark\n";
    //$condi=	" 1=1";

    if ($_SESSION['odoFrom'] != '') {
        $fromdate = "  o.app_date  >= '" . date('Y-m-d', strtotime($_SESSION['odoFrom'])) . "' AND ";
    } else {
        $fromdate = " o.app_date  >= '" . date('Y-m-d') . "' AND ";
    }
    if ($_SESSION['odoTo'] != '') {
        $todate = " o.app_date <= '" . date('Y-m-d', strtotime($_SESSION['odoTo'])) . "' ";
    } else {
        $todate = "  o.app_date <= '" . date('Y-m-d') . "'";
    }



    $salesman =  $_SESSION['SalIDs'];

    if ($_SESSION['salId'] != '') {
        $salesman = " AND s.salesman_id = '" . $_SESSION['salId'] . "'";
    }
    //$reqFor = "  AND (DATE(odo.start_date) BETWEEN '" . $fromdate . "' AND '" . $todate . "')  ";


    $where = " $fromdate  $todate  $salesman ";

    $auRec = $_objAdmin->_getSelectList('table_check_brand_quality as o
LEFT JOIN table_salesman as s on s.salesman_id = o.salesman_id 
LEFT JOIN table_retailer AS r ON o.retailer_id = r.retailer_id
LEFT JOIN state AS st ON st.state_id = r.state
LEFT JOIN city AS ct ON ct.city_id = r.city
LEFT JOIN table_location AS loc ON loc.location_id = r.location_id
LEFT JOIN table_check_brand_quality_detail AS od ON od.quality_id = o.quality_id
LEFT JOIN table_brands as b on b.brand_id = od.brand_id 
LEFT JOIN table_hygiene AS h ON od.hygiene_id = h.hygiene_id
LEFT JOIN table_item AS it ON od.item_id = it.item_id
LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
                LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
                LEFT JOIN table_salesman_hierarchy AS H2 ON H2.hierarchy_id = SH.rpt_hierarchy_id
              left JOIN table_salesman AS S2 ON S2.salesman_id = SH.rpt_user_id  
', "o.app_date,o.app_time,od.*,s.salesman_name,s.employee_code,r.retailer_name,r.retailer_code,st.state_name,ct.city_name,loc.location_name,b.brand_name,it.item_name,it.item_code,h.description as hygiene , S2.salesman_name as desc1",''  ,$where . " Group by o.quality_id ". ' ORDER BY o.app_date desc');


    if (is_array($auRec) && count($auRec)>0) {
        for ($i = 0; $i < count($auRec); $i++) {

            $act_date = date('d M Y G:i', strtotime($auRec[$i]->app_date ." ".$auRec[$i]->app_time));

            if($auRec[$i]->labelling_condi == 1){
                $label = 'Yes';
            }else{
                $label = 'No';
            }
            if($auRec[$i]->liquid_color == 1){
                $liquid_color = 'Yes';
            }else{
                $liquid_color = 'No';
            }
            if($auRec[$i]->sediment == 1){
                $sediment = 'Yes';
            }else{
                $sediment = 'No';
            }


            $data .= '"' . $act_date . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
        
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' .$auRec[$i]->city_name. '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->brand_name . '"';
            $data .= "\t";
          
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->hygiene . '"';
            $data .= "\t";
            $data .= '"' . $label . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->labelling_remark . '"';
            $data .= "\t";
            $data .= '"' . $liquid_color . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->liquid_remark . '"';
            $data .= "\t";
            $data .= '"' . $sediment . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->sediment_remark . '"';
            $data .= "\n";

        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"quality_check_list.xls\"");
    echo $data;
    exit;
}

if (isset($_GET['export_own_brand_promotion_report'])) {
    $data = "Activity Date\t". $AliaseUsers['salesman']." Code\t".$AliaseUsers['salesman']." Name\t". $AliaseUsers['retailer']." Code\t". $AliaseUsers['retailer']." Name\tState\tDistrict\tCity\tMarketing Item Code\tMarketing Item Name\tMarketing Item Category\tPromotion Available \tPromotion Communication \tRemark\n";
    //$condi=	" 1=1";

    if ($_SESSION['ownFrom'] != '') {
        $fromdate = "  o.app_date  >= '" . date('Y-m-d', strtotime($_SESSION['ownFrom'])) . "' AND ";
    } else {
        $fromdate = " o.app_date  >= '" . date('Y-m-d') . "' AND ";
    }
    if ($_SESSION['ownTo'] != '') {
        $todate = " o.app_date <= '" . date('Y-m-d', strtotime($_SESSION['ownTo'])) . "' ";
    } else {
        $todate = "  o.app_date <= '" . date('Y-m-d') . "'";
    }
    $retCond ='';
    if ($_SESSION['ownretId'] != '') {
        $retCond  = " AND r.retailer_id = '" . $_SESSION['ownretId'] . "'";
    }


    $salesman =  $_SESSION['SalIDs'];

    if ($_SESSION['ownSalId'] != '') {
        $salesman = " AND s.salesman_id = '" . $_SESSION['ownSalId'] . "'";
    }
    //$reqFor = "  AND (DATE(odo.start_date) BETWEEN '" . $fromdate . "' AND '" . $todate . "')  ";


    $where = " $fromdate  $todate  $salesman $retCond";

    $auRec = $_objAdmin->_getSelectList('table_own_brand_tracking as o
LEFT JOIN table_salesman as s on s.salesman_id = o.salesman_id 
LEFT JOIN table_retailer AS r ON o.retailer_id = r.retailer_id
LEFT JOIN state AS st ON st.state_id = r.state
LEFT JOIN city AS ct ON ct.city_id = r.city
LEFT JOIN table_location AS loc ON loc.location_id = r.location_id
LEFT JOIN table_own_brand_tracking_detail AS od ON od.tracking_id = o.tracking_id
LEFT JOIN table_item as i on i.item_id = od.item_id 
LEFT JOIN table_category as c on c.category_id = i.category_id 
LEFT JOIN table_promo_communication AS cm ON od.promo_communication_id = cm.promo_communication_id
LEFT JOIN table_promo_availbility AS pa ON od.promo_availbility_id = pa.promo_availbility_id LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
                LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
                LEFT JOIN table_salesman_hierarchy AS H2 ON H2.hierarchy_id = SH.rpt_hierarchy_id
              left JOIN table_salesman AS S2 ON S2.salesman_id = SH.rpt_user_id

', "o.app_date, o.tracking_id,od.*,s.salesman_name,s.employee_code,r.retailer_name,r.retailer_code,st.state_name,ct.city_name,loc.location_name,i.item_name,i.item_code,cm.description as promo_comm,pa.description as promo_availbility,c.category_name",''  ,$where ." GROUP BY o.tracking_id " . ' ORDER BY o.app_date desc,o.app_time desc');


    if (is_array($auRec) && count($auRec)>0) {
        for ($i = 0; $i < count($auRec); $i++) {

            $act_date = date('d M Y', strtotime($auRec[$i]->app_date));

            $data .= '"' . $act_date . '"';
            $data .= "\t";
           
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
        
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' .$auRec[$i]->city_name. '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\t";
           
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->category_name . '"';

            $data .= "\t";
            $data .= '"' . $auRec[$i]->promo_availbility . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->promo_comm . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->remark . '"';
            $data .= "\n";

        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"own_brand_tracking_list.xls\"");
    echo $data;
    exit;
}

// if (isset($_GET['export_competitor_brand_promotion_report'])) {
//     $data = "Activity Date\t".$AliaseUsers['salesman']." Name\t". $AliaseUsers['salesman']." Code\t". $AliaseUsers['retailer']." Name\t". $AliaseUsers['retailer']." Code\tState\tDistrict\tCity\tNo Brand Promotion Available\tCompetitor Brand\t Promotion Available\tPromotion Communication\tPromotion Title \tPromotion Scheme \tPromotion Start \tPromotion End \tRemark\n";
    
//     if ($_SESSION['cmpFrom'] != '') {
//         $fromdate = "  o.app_date  >= '" . date('Y-m-d', strtotime($_SESSION['cmpFrom'])) . "' AND ";
//     } else {
//         $fromdate = " o.app_date  >= '" . date('Y-m-d') . "' AND ";
//     }
//     if ($_SESSION['cmpTo'] != '') {
//         $todate = " o.app_date <= '" . date('Y-m-d', strtotime($_SESSION['cmpTo'])) . "' ";
//     } else {
//         $todate = "  o.app_date <= '" . date('Y-m-d') . "'";
//     }



//     $salesman =  $_SESSION['SalIDs'];

//     if ($_SESSION['cmpSalId'] != '') {
//         $salesman = " AND s.salesman_id = '" . $_SESSION['cmpSalId'] . "'";
//     }
//     //$reqFor = "  AND (DATE(odo.start_date) BETWEEN '" . $fromdate . "' AND '" . $todate . "')  ";

//     $retCond ='';
//     if ($_SESSION['retId'] != '') {
//         $retCond  = " AND r.retailer_id = '" . $_SESSION['retId'] . "'";
//     }
//     $where = " $fromdate  $todate  $salesman $retCond ";

//     $auRec = $_objAdmin->_getSelectList('table_competitor_brand_tracking as o
   
// LEFT JOIN table_salesman as s on s.salesman_id = o.salesman_id 
// LEFT JOIN table_retailer AS r ON o.retailer_id = r.retailer_id
// LEFT JOIN state AS st ON st.state_id = r.state
// LEFT JOIN city AS ct ON ct.city_id = r.city
// LEFT JOIN table_location AS loc ON loc.location_id = r.location_id
// LEFT JOIN table_competitor_brand_tracking_detail AS od ON od.tracking_id = o.tracking_id
// LEFT JOIN table_competitor_brand as b on b.competitor_brand_id = od.brand_id   
// LEFT JOIN table_promo_communication AS cm ON od.promo_communication_id = cm.promo_communication_id
// LEFT JOIN table_promo_availbility AS pa ON od.promo_availbility_id = pa.promo_availbility_id
// ', "o.app_date,o.no_brand_promotion,od.*,s.salesman_name,od.promotion_start_date,od.promotion_end_date,s.employee_code,r.retailer_name,r.retailer_code,st.state_name,ct.city_name,loc.location_name,b.description as brand_name,cm.description as promo_comm,pa.description as promo_availbility",''  ,$where . ' ORDER BY o.app_date desc,o.app_time desc');


//     if (is_array($auRec) && count($auRec)>0) {
//         for ($i = 0; $i < count($auRec); $i++) {

//             // $act_date = date('d-M-Y', strtotime($auRec[$i]->app_date));
//             $act_date = $auRec[$i]->app_date;

// print_r($act_date);
// die;
           
//             if($auRec[$i]->no_brand_promotion == 1){
//                 $promotion = "No Promotion";
//             }else{
//                 $promotion = "";
//             }
//             $data .= '"' . $act_date . '"';
//             $data .= "\t";
//             $data .= '"' . $auRec[$i]->salesman_name . '"';
//             $data .= "\t";
//             $data .= '"' . $auRec[$i]->employee_code . '"';
//             $data .= "\t";
//             $data .= '"' . $auRec[$i]->retailer_name . '"';
//             $data .= "\t";
//             $data .= '"' . $auRec[$i]->retailer_code . '"';
//             $data .= "\t";
//             $data .= '"' . $auRec[$i]->state_name . '"';
//             $data .= "\t";
//             $data .= '"' .$auRec[$i]->city_name. '"';
//             $data .= "\t";
//             $data .= '"' . $auRec[$i]->location_name . '"';
//             $data .= "\t";
//             $data .= '"' . $promotion . '"';
//             $data .= "\t";
//             $data .= '"' . $auRec[$i]->brand_name . '"';

//             $data .= "\t";
//             $data .= '"' . $auRec[$i]->promo_availbility . '"';

//             $data .= "\t";
//             $data .= '"' . $auRec[$i]->promo_comm . '"';
//             $data .= "\t";
//             $data .= '"' . $auRec[$i]->promotion_title . '"';
//             $data .= "\t";
//             $data .= '"' . $auRec[$i]->promotion_scheme . '"';
//             $data .= "\t";
//             $data .= '"' . date('d-M-Y', strtotime($auRec[$i]->promotion_start_date)) . '"';
//             $data .= "\t";
//             $data .= '"' . date('d-M-Y', strtotime($auRec[$i]->promotion_end_date))   . '"';
//             $data .= "\t";
//             $data .= '"' . $auRec[$i]->remark . '"';
//             $data .= "\n";

//         }

//     }

//     header("Content-type: application/octet-stream");
//     header("Content-Disposition: attachment; filename=\"competitor_brand_tracking_list.xls\"");
//     header("Pragma: no-cache");
//     header("Expires: 0");
   
//     echo $data;
//     exit;
// }

if (isset($_GET['export_competitor_brand_promotion_report'])) {
    // Set the headers for file download
    header("Content-Type: text/csv; charset=UTF-8");
    header("Content-Disposition: attachment; filename=\"competitor_brand_tracking_list.csv\"");  // Change to .csv
    header("Pragma: no-cache");
    header("Expires: 0");

    // Prepare the header row (use tabs for TSV, but for CSV, use commas)
    $data = "Activity Date," . $AliaseUsers['salesman'] . " Code," . $AliaseUsers['salesman'] . " Name," . $AliaseUsers['retailer'] . " Code," . $AliaseUsers['retailer'] . " Name,State,District,City,No Brand Promotion Available,Competitor Brand,Promotion Available,Promotion Communication,Promotion Title,Promotion Scheme,Promotion Start,Promotion End,Remark\n";

    // Set date range
    if ($_SESSION['cmpFrom'] != '') {
        $fromdate = "  o.app_date  >= '" . date('Y-m-d', strtotime($_SESSION['cmpFrom'])) . "' AND ";
    } else {
        $fromdate = " o.app_date  >= '" . date('Y-m-d') . "' AND ";
    }
    if ($_SESSION['cmpTo'] != '') {
        $todate = " o.app_date <= '" . date('Y-m-d', strtotime($_SESSION['cmpTo'])) . "' ";
    } else {
        $todate = "  o.app_date <= '" . date('Y-m-d') . "'";  // Default to today
    }

    // Salesman condition
    $salesman = $_SESSION['SalIDs'];
    if ($_SESSION['cmpSalId'] != '') {
        $salesman = " AND s.salesman_id = '" . $_SESSION['cmpSalId'] . "'";
    }

    // Retailer condition
    $retCond = '';
    if ($_SESSION['retId'] != '') {
        $retCond = " AND r.retailer_id = '" . $_SESSION['retId'] . "'";
    }

    // Combined WHERE condition
    $where = " $fromdate  $todate  $salesman $retCond ";

    // Fetch data
    $auRec = $_objAdmin->_getSelectList('table_competitor_brand_tracking as o
    LEFT JOIN table_salesman as s on s.salesman_id = o.salesman_id 
    LEFT JOIN table_retailer AS r ON o.retailer_id = r.retailer_id
    LEFT JOIN state AS st ON st.state_id = r.state
    LEFT JOIN city AS ct ON ct.city_id = r.city
    LEFT JOIN table_location AS loc ON loc.location_id = r.location_id
    LEFT JOIN table_competitor_brand_tracking_detail AS od ON od.tracking_id = o.tracking_id
    LEFT JOIN table_competitor_brand as b on b.competitor_brand_id = od.brand_id   
    LEFT JOIN table_promo_communication AS cm ON od.promo_communication_id = cm.promo_communication_id
    LEFT JOIN table_promo_availbility AS pa ON od.promo_availbility_id = pa.promo_availbility_id LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
                LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
                LEFT JOIN table_salesman_hierarchy AS H2 ON H2.hierarchy_id = SH.rpt_hierarchy_id
              left JOIN table_salesman AS S2 ON S2.salesman_id = SH.rpt_user_id
    ', "o.tracking_id,o.app_date,o.app_time,o.no_brand_promotion,od.*,s.salesman_name,od.promotion_start_date,od.promotion_end_date,s.employee_code,r.retailer_name,r.retailer_code,st.state_name,ct.city_name,loc.location_name,b.description as brand_name,cm.description as promo_comm,pa.description as promo_availbility", '' ,$where . " GROUP BY o.tracking_id". ' ORDER BY o.app_date desc,o.app_time desc');

    // echo "<pre>";
    // print_r($auRec);die;

    // Check if records are available
    if (is_array($auRec) && count($auRec) > 0) {
        for ($i = 0; $i < count($auRec); $i++) {
            $row = [];
            // Date format for Activity Date (ensure it’s wrapped in quotes for Excel compatibility)
            $act_date = '"' . date('d-M-Y G:i', strtotime($auRec[$i]->app_date ." ". $auRec[$i]->app_time)) . '"';  // Wrap date in double quotes for CSV

            // Promotion check
            $promotion = ($auRec[$i]->no_brand_promotion == 1) ? "No Promotion" : "";

            // Collect data into an array (quote values if needed)
            $row[] = $act_date;
            $row[] = '"' . $auRec[$i]->employee_code . '"';
            $row[] = '"' . $auRec[$i]->salesman_name . '"';
            $row[] = '"' . $auRec[$i]->retailer_code . '"';
            $row[] = '"' . $auRec[$i]->retailer_name . '"';
            $row[] = '"' . $auRec[$i]->state_name . '"';
            $row[] = '"' . $auRec[$i]->city_name . '"';
            $row[] = '"' . $auRec[$i]->location_name . '"';
            $row[] = '"' . $promotion . '"';
            $row[] = '"' . $auRec[$i]->brand_name . '"';
            $row[] = '"' . $auRec[$i]->promo_availbility . '"';
            $row[] = '"' . $auRec[$i]->promo_comm . '"';
            $row[] = '"' . $auRec[$i]->promotion_title . '"';
            $row[] = '"' . $auRec[$i]->promotion_scheme . '"';
            $row[] = '"' . date('d-M-Y', strtotime($auRec[$i]->promotion_start_date)) . '"';
            $row[] = '"' . date('d-M-Y', strtotime($auRec[$i]->promotion_end_date)) . '"';
            $row[] = '"' . $auRec[$i]->remark . '"';

            // Append the row to the data
            $data .= implode(",", $row) . "\n";  // Use commas for CSV format
        }
    }

    // Output the data
    echo $data;
    exit;
}



if (isset($_GET['export_visit_history_report'])) {
    $days = cal_days_in_month(CAL_GREGORIAN,  $_SESSION['dismonth'], $_SESSION['disCyear']);

    $monthName = date("F", mktime(0, 0, 0, $month, 10));
    for ($i = 1; $i <= $days; $i++) {

            $comma = "\t";


        $dayValue .= $_objAdmin->_changeDate($i . '-' . $_SESSION['dismonth'] . '-' . $_SESSION['disCyear']) . $comma;
    }
    $data = "".$AliaseUsers['salesman']." Name\t". $AliaseUsers['salesman']." Code\t". $AliaseUsers['retailer']." Name\t". $AliaseUsers['retailer']." Code\t ".$dayValue." Visit Status \tVisit Count\n";
    

    $salCondi = $salesman;
    if (isset($_SESSION['allowncesalesmanID']) && !empty($_SESSION['allowncesalesmanID']) && (intval($_SESSION['allowncesalesmanID']) > 0)) {
        $salesman = " AND s.salesman_id = " . $_SESSION['allowncesalesmanID'];

    }
    $where =' ';
    //$where = " sd.app_date BETWEEN '" . $fromdate . "' AND '" . $todate . "' $salCondi ";


    $featureList = $_objAdmin->getAccountFeaturesList($_SESSION['accountId']);
    if (isset($_SESSION['dismonth']) && isset($_SESSION['disCyear']) && $_SESSION['dismonth'] != "" && $_SESSION['disCyear'] != "") {



        $fromDate = date('Y-m-d', strtotime($_SESSION['disCyear'] . '-' . $_SESSION['dismonth']));

        $toDate = date('Y-m-t', strtotime($_SESSION['disCyear'] . '-' . $_SESSION['dismonth']));

    }
    if(in_array(94, $featureList)){
        if (isset($_SESSION['visitSts']) && $_SESSION['visitSts'] == 'V') {
            $havingCond  = " HAVING count(tcco.retailer_id) > 0 OR COUNT(tod.retailer_id) > 0 ";
        }elseif(isset($_SESSION['visitSts']) && $_SESSION['visitSts'] == 'N'){
            $havingCond  = " HAVING count(tcco.retailer_id) = 0 AND COUNT(tod.retailer_id) = 0 ";
        }else{
            $havingCond = '';
        }
        $where .= " AND trs.status='A' AND tr.status='A' and  trs.month='" . $_SESSION['dismonth'] . "' and  trs.year='" . date('Y', strtotime($_SESSION['disCyear'])) . "'  $salesman  GROUP BY s.salesman_id,r.retailer_id $havingCond ";
        $auRec = $_objAdmin->_getSelectList('table_route_scheduled  as trs 
		LEFT JOIN table_route_schedule_details as trsd on trs.route_schedule_id=trsd.route_schedule_id  
		LEFT JOIN table_route as tr on tr.route_id=trsd.route_id 
        LEFT JOIN table_route_retailer as rr ON rr.route_id = tr.route_id
        LEFT JOIN table_retailer as r ON rr.retailer_id = r.retailer_id 
        left join table_salesman as s on trs.salesman_id=s.salesman_id 
        LEFT JOIN table_capture_checkin_out tcco ON tcco.salesman_id = s.salesman_id AND tcco.retailer_id = r.retailer_id AND tcco.checkin_date BETWEEN"'.$fromDate.'" and "'.$toDate.'"
                LEFT JOIN table_order tod ON s.salesman_id = tod.salesman_id AND tod.retailer_id = r.retailer_id AND tod.date_of_order BETWEEN "'.$fromDate.'" and "'.$toDate.'"', "s.salesman_id,r.retailer_id,s.salesman_name,s.employee_code,r.retailer_name,r.retailer_code", $rp, $where . ' ' . $sort);


    }elseif (in_array(93, $featureList)){
        if (isset($_SESSION['visitSts']) && $_SESSION['visitSts'] == 'V') {
            $havingCond  = " HAVING count(tcco.retailer_id) > 0 OR COUNT(tod.retailer_id) > 0 ";
        }elseif(isset($_SESSION['visitSts']) && $_SESSION['visitSts'] == 'N'){
            $havingCond  = " HAVING count(tcco.retailer_id) = 0 AND COUNT(tod.retailer_id) = 0 ";
        }else{
            $havingCond = '';
        }

        $where .= " AND trs.from_date<='" . $fromDate . "' and trs.to_date>='" . $toDate . "' and trs.status='A' and r.retailer_name !=''  $salesman GROUP BY s.salesman_id,r.retailer_id $havingCond ";

        $auRec = $_objAdmin->_getSelectList('table_route_schedule  as trs 
		LEFT JOIN view_route_schedule_by_day as rsd on trs.route_schedule_id=rsd.route_schedule_id 
				LEFT JOIN table_route as tr on tr.route_id IN(rsd.all_routes_conct)
				LEFT JOIN table_route_retailer as rr ON rr.route_id = tr.route_id 
				LEFT JOIN table_retailer as r ON rr.retailer_id = r.retailer_id 
				left join table_salesman as s on trs.salesman_id=s.salesman_id
				LEFT JOIN table_capture_checkin_out tcco ON tcco.salesman_id = s.salesman_id AND tcco.retailer_id = r.retailer_id AND tcco.checkin_date BETWEEN"'.$fromDate.'" and "'.$toDate.'"
                LEFT JOIN table_order tod ON s.salesman_id = tod.salesman_id AND tod.retailer_id = r.retailer_id AND tod.date_of_order BETWEEN "'.$fromDate.'" and "'.$toDate.'"', "s.salesman_id,r.retailer_id,s.salesman_name,s.employee_code,r.retailer_name,r.retailer_code", $rp, $where . ' ' . $sort);


    }elseif (count($featureList) > 0 && in_array(95, $featureList)){
        if (isset($_SESSION['visitSts']) && $_SESSION['visitSts'] == 'V') {
            $havingCond  = " HAVING count(tcco.retailer_id) > 0 OR COUNT(tod.retailer_id) > 0 ";
        }elseif(isset($_SESSION['visitSts']) && $_SESSION['visitSts'] == 'N'){
            $havingCond  = " HAVING count(tcco.retailer_id) = 0 AND COUNT(tod.retailer_id) = 0 ";
        }else{
            $havingCond = '';
        }
        $where .= "   $salesman and rs.month='" . $_SESSION['dismonth'] . "' and rs.year='" . date('Y', strtotime($_SESSION['disCyear'])) . "'  and rs.status='A' and rsd.status='A' AND r.retailer_name !='' GROUP BY s.salesman_id,r.retailer_id $havingCond";

        $auRec = $_objAdmin->_getSelectList('table_salesman_retailer_assignment  as rs 
		left join table_salesman_retailer_assignment_details as rsd on rs.route_schedule_id=rsd.route_schedule_id 
				left join table_retailer as r on r.retailer_id=rsd.retailer_id
				left join table_salesman as s on rs.salesman_id=s.salesman_id
				LEFT JOIN table_capture_checkin_out tcco ON tcco.salesman_id = s.salesman_id AND tcco.retailer_id = r.retailer_id AND tcco.checkin_date BETWEEN"'.$fromDate.'" and "'.$toDate.'"
                LEFT JOIN table_order tod ON s.salesman_id = tod.salesman_id AND tod.retailer_id = r.retailer_id AND tod.date_of_order BETWEEN "'.$fromDate.'" and "'.$toDate.'"', "s.salesman_id,r.retailer_id,s.salesman_name,s.employee_code,r.retailer_name,r.retailer_code", $rp, $where . ' ' . $sort);

    }elseif(count($featureList) > 0 && in_array(119, $featureList)){
        if (isset($_SESSION['visitSts']) && $_SESSION['visitSts'] == 'V') {
            $havingCond  = " HAVING count(tcco.retailer_id) > 0 OR COUNT(tod.retailer_id) > 0 ";
        }elseif(isset($_SESSION['visitSts']) && $_SESSION['visitSts'] == 'N'){
            $havingCond  = " HAVING count(tcco.retailer_id) = 0 AND COUNT(tod.retailer_id) = 0 ";
        }else{
            $havingCond = '';
        }
        $where .= "  $salesman AND  DATE(rsd.created_date) <='" . $toDate . "' GROUP BY s.salesman_id,r.retailer_id $havingCond";
        $auRec = $_objAdmin->_getSelectList('table_customer_salesman_mapping  as rsd 		
				left join table_retailer as r on r.retailer_id=rsd.retailer_id
				left join table_salesman as s on rsd.salesman_id=s.salesman_id
				LEFT JOIN table_capture_checkin_out tcco ON tcco.salesman_id = s.salesman_id AND tcco.retailer_id = r.retailer_id AND tcco.checkin_date BETWEEN"'.$fromDate.'" and "'.$toDate.'"
                LEFT JOIN table_order tod ON s.salesman_id = tod.salesman_id AND tod.retailer_id = r.retailer_id AND tod.date_of_order BETWEEN "'.$fromDate.'" and "'.$toDate.'"', "s.salesman_id,r.retailer_id,s.salesman_name,s.employee_code,r.retailer_name,r.retailer_code", $rp, $where . ' ' . $sort);

    }elseif(in_array(186, $featureList)){
        if (isset($_SESSION['visitSts']) && $_SESSION['visitSts'] == 'V') {
            $havingCond  = " HAVING count(tcco.retailer_id) > 0 OR COUNT(tod.retailer_id) > 0 ";
        }elseif(isset($_SESSION['visitSts']) && $_SESSION['visitSts'] == 'N'){
            $havingCond  = " HAVING count(tcco.retailer_id) = 0 AND COUNT(tod.retailer_id) = 0 ";
        }else{
            $havingCond = '';
        }
        $where .= " AND rs.status='A'  and rs.from_date<='" . $fromDate . "' and rs.to_date>='" . $toDate . "'		
							$salesman AND r.retailer_name !='' GROUP BY s.salesman_id,r.retailer_id $havingCond ";
        $auRec = $_objAdmin->_getSelectList('table_customer_wise_route_schedule  as rs 
		left join view_customer_wise_route_schedule_by_day as rsd on rs.route_schedule_id=rsd.route_schedule_id
		LEFT JOIN table_retailer as r on r.retailer_id IN(rsd.all_ret_conct)
		left join table_salesman as s on rs.salesman_id=s.salesman_id
		LEFT JOIN table_capture_checkin_out tcco ON tcco.salesman_id = s.salesman_id AND tcco.retailer_id = r.retailer_id AND tcco.checkin_date BETWEEN"'.$fromDate.'" and "'.$toDate.'"
                LEFT JOIN table_order tod ON s.salesman_id = tod.salesman_id AND tod.retailer_id = r.retailer_id AND tod.date_of_order BETWEEN "'.$fromDate.'" and "'.$toDate.'"', "s.salesman_id,r.retailer_id,s.salesman_name,s.employee_code,r.retailer_name,r.retailer_code", $rp, $where . ' ' . $sort);

    }

    $checkCondi = " rs.checkin_date BETWEEN '" . $fromDate . "' AND '" . $toDate . "'		
							$salesman GROUP BY s.salesman_id,retailer_id,checkin_date";
    $auCheckin = $_objAdmin->_getSelectList('table_capture_checkin_out  as rs 
  left join table_salesman as s on rs.salesman_id=s.salesman_id
		', "count(retailer_id) as total_checkin,s.salesman_id,retailer_id,checkin_date", '', $checkCondi);

    $orderCondi = " o.date_of_order BETWEEN '" . $fromDate . "' AND '" . $toDate . "' AND order_type IN ('Yes','No')		
							$salesman GROUP BY s.salesman_id,retailer_id,date_of_order";
    $auOrder = $_objAdmin->_getSelectList('table_order  as o
  left join table_salesman as s on o.salesman_id=s.salesman_id 
		', "count(order_id) as total,s.salesman_id,retailer_id,date_of_order", '', $orderCondi);
    $orderArr = [];
    $checkinArr = [];
    if(is_array($auOrder) && count($auOrder) > 0){
        foreach ($auOrder as $orderData){
            $orderArr[$orderData->date_of_order][$orderData->salesman_id][$orderData->retailer_id] = $orderData->total;
        }
    }
    if(is_array($auCheckin) && count($auCheckin) > 0){
        foreach ($auCheckin as $checkData){
            $checkinArr[$checkData->checkin_date][$checkData->salesman_id][$checkData->retailer_id] = $checkData->total_checkin;
        }
    }
//echo "<pre>";print_r($orderArr);die;
    if (is_array($auRec) && count($auRec)>0) {
        for ($i = 0; $i < count($auRec); $i++) {

            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $totalVisit = 0;
            for($k = 1; $k <= $days; $k++){
                if($k < 10){
                    $dateVal = '0'.$k;
                }else{
                    $dateVal = $k;
                }
                $date = date('Y-m-d',strtotime($_SESSION['disCyear'].'-'.$_SESSION['dismonth'].'-'.$dateVal));
                if($checkinArr[$date][$auRec[$i]->salesman_id][$auRec[$i]->retailer_id] >0 || $orderArr[$date][$auRec[$i]->salesman_id][$auRec[$i]->retailer_id] > 0){
                    $totalVisit++;
                    $data .= '"' . '1' . '"';
                    $data .= "\t";
                }else{
                    $data .= '"' .'' . '"';
                    $data .= "\t";
                }
                if($totalVisit > 0){
                    $visitStatus = "Visited";
                    $visit = "1";
                }else{
                    $visitStatus = "Not Visited";
                    $visit = "";
                }



            }

            $data .= '"' .$visitStatus . '"';
            $data .= "\t";
            $data .= '"' . $totalVisit . '"';
            $data .= "\n";

        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"visit_history_report.xls\"");
    echo $data;
    exit;
}


if (isset($_GET['redemption_report'])) {
    // Set headers for Excel-compatible CSV file download
    header("Content-Type: application/vnd.ms-excel; charset=UTF-8");
    header("Content-Disposition: attachment; filename=redemption_report.csv");
    header("Pragma: no-cache");
    header("Expires: 0");

    // Output UTF-8 BOM for proper encoding in Excel
    echo "\xEF\xBB\xBF";

    // CSV file column headers
    $data = "Salesman Code,Salesman Name,Retailer Code,Retailer Name,Brand Name,Item Code,Item Name,UTC Name,UTC Quantity,Coupon Name,Coupon Quantity,Activity Date,Activity Time\n";

    $redemptionId = intval($_REQUEST['id']);

//  $salId = $_SESSION['SalIDs'];


    if ($_SESSION['SalIDs'] != '') {
        $salesman =  $_SESSION['SalIDs'];
    }

        // if( $salId != ""){
        //     $salesman =  $_SESSION['SalIDs'];
        // }
        // else{
        //     $salesman = "";
        // }

              if (isset($_SESSION['FromRedemptionList']) && $_SESSION['FromRedemptionList'] != '') {
            $fromdate = " tred.activity_date >= '" . date('Y-m-d', strtotime($_SESSION['FromRedemptionList'])) . "' AND ";
        } else {
            $fromdate = " tred.activity_date >= '" . date('Y-m-d') . "' AND ";
        }

        if (isset($_SESSION['ToRedemptionList']) && $_SESSION['ToRedemptionList'] != '') {
            $todate = " tred.activity_date <= '" . date('Y-m-d', strtotime($_SESSION['ToRedemptionList'])) . "' ";
        } else {
            $todate = " tred.activity_date <= '" . date('Y-m-d') . "'";
        }


           $where .= " $fromdate $todate $salesman";
    // Fetch redemption records
    $redemptionRec = $_objAdmin->_getSelectList(
        'table_redemption_detail trd 
         INNER JOIN table_redemption tred ON tred.id = trd.redemption_id
              JOIN table_salesman s ON s.salesman_id = tred.salesman_id 
             JOIN table_retailer tblrel ON tblrel.retailer_id = tred.retailer_id',
        "Distinct trd.redemption_id, s.salesman_id, tred.activity_date ", // Only select needed fields
        '',
        $where ,
        ''
    );
    
    // Check if redemptionRec is valid
    if ($redemptionRec) {
        // Extract redemption_id values from $redemptionRec
        $redemptionIds = array_map(function($rec) {
            return $rec->redemption_id;
        }, $redemptionRec);
    
        // Convert redemptionIds to a comma-separated string for use in the query
        $redemptionIdList = implode(',', $redemptionIds);


        // Fetch redemption details for all redemption_ids
        $redemptionDetails = $_objAdmin->_getSelectList(
            'table_redemption_detail trd
               JOIN table_redemption tred ON tred.id = trd.redemption_id
              JOIN table_salesman s ON s.salesman_id = tred.salesman_id
              JOIN table_retailer trel ON trel.retailer_id = tred.retailer_id
              JOIN table_brands tbb ON tbb.brand_id = trd.brand_id
               JOIN table_item tbl ON tbl.item_id = trd.item_id    
               JOIN table_utc_master tbu ON tbu.utc_id = trd.reference_id 
               JOIN table_coupon_master tbc ON tbc.coupon_id = trd.reference_id  LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
                LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
                LEFT JOIN table_salesman_hierarchy AS H2 ON H2.hierarchy_id = SH.rpt_hierarchy_id
              left JOIN table_salesman AS S2 ON S2.salesman_id = SH.rpt_user_id',
            "s.salesman_name,
             s.employee_code,
             trel.retailer_name,
             trel.retailer_code,
             tbl.item_name,
             tbl.item_code,
             tbb.brand_name,
             tbu.utc_name,            
             tbc.coupon_name,
             trd.qty, trd.type, tred.activity_date, tred.activity_time,
             trd.redemption_id ,S2.salesman_name as desc1",
            '',
            $where ."and trd.redemption_id IN ($redemptionIdList)
             AND (trd.type = 1 OR trd.type = 2)
             GROUP BY tred.id"
        );

        // Check if redemptionDetails were found
        if ($redemptionDetails) {
            // Loop through the fetched data to add to CSV
            foreach ($redemptionDetails as $detail) {
                $row = []; // Initialize row array to store each cell data

                // Add data to the row array
                $row[] = $detail->employee_code;         // Salesman Code
                $row[] = $detail->salesman_name;         // Salesman Name
                $row[] = $detail->retailer_code;         // Retailer Code
                $row[] = $detail->retailer_name;         // Retailer Name
                $row[] = $detail->brand_name;            // Brand Name
                $row[] = $detail->item_code;             // Item Code
                $row[] = $detail->item_name;             // Item Name

                // Check type for UTC Name and Coupon Name
                if ($detail->type == 1) {
                    // UTC case
                    $row[] = $detail->utc_name;            // UTC Name
                    $row[] = $detail->qty;                 // UTC Quantity
                    $row[] = "";                           // Empty for Coupon Name
                    $row[] = "";                           // Empty for Coupon Quantity
                } elseif ($detail->type == 2) {
                    // Coupon case
                    $row[] = "";                           // Empty for UTC Name
                    $row[] = "";                           // Empty for UTC Quantity
                    $row[] = $detail->coupon_name;         // Coupon Name
                    $row[] = $detail->qty;                 // Coupon Quantity
                }

                // Add activity date at the end
                $row[] = date('d M Y', strtotime($detail->activity_date)); // 
                $row[] = date('G:i', strtotime($detail->activity_time));
                // Activity Date

                // Append this row to the final data as CSV (implode with commas)
                $data .= implode(",", $row) . "\n";
            }
        } else {
            $data .= "No redemption details found\n";
        }
    } else {
        $data .= "No redemption records found\n";
    }
   
    // Output the data
    echo $data;
    exit;
}


//menu chaneg export by domar
if (isset($_GET['detailed_export_menu_change'])) {

    $data = "Activity Date \t Salesman Code \t Salesman Name \t Retailer Code \t Retailer Name \t State \t District \t City \t Menu Change Status \t Menu Date \t Item Code \t Item Name \t Category Name \t Brand Name\n";

    $sort = " ORDER BY mc.app_date DESC";
    if ($_SESSION['SalIDs'] != '') {
        $salesmanCondi =  $_SESSION['SalIDs'];
    }
    //  echo $salesmanCondi;die;
    if ($_SESSION['menuFrom'] != '') {
        $fromdate = " mc.app_date BETWEEN '" . date('Y-m-d', strtotime($_SESSION['menuFrom'])) . "' AND ";

        // echo $fromdate;die;
    } else {
        $fromdate = " mc.app_date   BETWEEN '" . date('Y-m-d') . "' AND ";
        // echo $fromdate;die;
    }
    if ($_SESSION['menuTo'] != '') {
        $todate = "'" . date('Y-m-d', strtotime($_SESSION['menuTo'])) . "' ";
    } else {
        $todate = "'" . date('Y-m-d') . "'";
    }


    $where = $fromdate . $todate . $salesmanCondi;

    // echo $where;die;

    $auRec = $_objAdmin->_getSelectList('table_menu_change AS mc 
        LEFT JOIN table_menu_change_item as mci ON mci.menu_id = mc.menu_id 
        LEFT JOIN table_salesman AS s ON s.salesman_id = mc.salesman_id 
        LEFT JOIN table_retailer as r ON r.retailer_id = mc.retailer_id 
        LEFT JOIN state AS st ON st.state_id = r.state 
        LEFT JOIN city AS ct ON ct.city_id = r.city 
        LEFT JOIN table_location AS l ON l.location_id = r.location_id 
        LEFT JOIN table_item AS i ON i.item_id = mci.item_id 
        LEFT JOIN table_brands AS b ON b.brand_id = i.brand_id 
        LEFT JOIN table_category AS c ON c.category_id = i.category_id LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
                LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
                LEFT JOIN table_salesman_hierarchy AS H2 ON H2.hierarchy_id = SH.rpt_hierarchy_id
              left JOIN table_salesman AS S2 ON S2.salesman_id = SH.rpt_user_id',
        "mc.app_date, s.employee_code, s.salesman_name ,r.retailer_code, r.retailer_name , st.state_name, ct.city_name , l.location_name , mc.menu_change , mc.menu_date , i.item_code , i.item_name , c.category_name ,b.brand_name ,S2.salesman_name as desc1", '', $where . " Group by mc.menu_id " . $sort, '');

    //    print_r($auRec);die;

    if (is_array($auRec)) {
        // echo "kdfj";
        for ($i = 0; $i < count($auRec); $i++) {

            if($auRec[$i]->menu_change == 1){
                $menu_change = "Yes";
            }else if($auRec[$i]->menu_change == 2 ){
                $menu_change = "No";
            }else if($auRec[$i]->menu_change == 3){
                $menu_change = "In future";
            }else{
                $menu_change = "";
            }

            $data .= '"' . date('d-M-Y', strtotime($auRec[$i]->app_date)) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\t";
            $data .= '"' . $menu_change . '"';
            $data .= "\t";
            $data .= '"' .  date('d-M-Y', strtotime($auRec[$i]->menu_date)) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->category_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->brand_name . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"detailed_export_menu_change.xls\"");
    echo $data;
    exit;
}


if (isset($_GET['summary_export_menu_change'])) {

    $data = "Activity Date \t Salesman Code \t Salesman Name \t Retailer Code \t Retailer Name \t State \t District \t City \t Menu Change Status \t Menu Date\tItem Count \n";

    $sort = " ORDER BY mc.app_date DESC";
    if ($_SESSION['SalIDs'] != '') {
        $salesmanCondi =  $_SESSION['SalIDs'];
    }
    //  echo $salesmanCondi;die;
    if ($_SESSION['menuFrom'] != '') {
        $fromdate = " mc.app_date BETWEEN '" . date('Y-m-d', strtotime($_SESSION['menuFrom'])) . "' AND ";

        // echo $fromdate;die;
    } else {
        $fromdate = " mc.app_date   BETWEEN '" . date('Y-m-d') . "' AND ";
        // echo $fromdate;die;
    }
    if ($_SESSION['menuTo'] != '') {
        $todate = "'" . date('Y-m-d', strtotime($_SESSION['menuTo'])) . "' ";
    } else {
        $todate = "'" . date('Y-m-d') . "'";
    }


    $where = $fromdate . $todate . $salesmanCondi;

    // echo $where;die;

    $auRec = $_objAdmin->_getSelectList('table_menu_change AS mc 
        LEFT JOIN table_menu_change_item as mci ON mci.menu_id = mc.menu_id 
        LEFT JOIN table_salesman AS s ON s.salesman_id = mc.salesman_id 
        LEFT JOIN table_retailer as r ON r.retailer_id = mc.retailer_id 
        LEFT JOIN state AS st ON st.state_id = r.state 
        LEFT JOIN city AS ct ON ct.city_id = r.city 
        LEFT JOIN table_location AS l ON l.location_id = r.location_id LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
                LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
                LEFT JOIN table_salesman_hierarchy AS H2 ON H2.hierarchy_id = SH.rpt_hierarchy_id
              left JOIN table_salesman AS S2 ON S2.salesman_id = SH.rpt_user_id      
       ',
        "mc.app_date, s.employee_code, s.salesman_name ,r.retailer_code, r.retailer_name , st.state_name, ct.city_name , l.location_name , mc.menu_change , mc.menu_date , count(mci.item_id) as total_item ,S2.salesman_name as desc1", '', $where. "Group by mc.menu_id" . $sort, '');
// echo "<pre>";
    //    print_r($auRec);die;

    if (is_array($auRec)) {
        // echo "kdfj";
        for ($i = 0; $i < count($auRec); $i++) {

            if($auRec[$i]->menu_change == 1){
                $menu_change = "Yes";
            }else if($auRec[$i]->menu_change == 2 ){
                $menu_change = "No";
            }else if($auRec[$i]->menu_change == 3){
                $menu_change = "In future";
            }else{
                $menu_change = "";
            }

            $data .= '"' . date('d-M-Y', strtotime($auRec[$i]->app_date)) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\t";
            $data .= '"' . $menu_change . '"';
            $data .= "\t";
            $data .= '"' . date('d-M-Y', strtotime($auRec[$i]->menu_date)) . '"';
            $data .= "\t";        
            $data .= '"' . $auRec[$i]->total_item . '"';
                      
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"summary_export_menu_change.xls\"");
    echo $data;
    exit;
}


/******************************************** Start Export Sub Category List ******************************************************************/
if (isset($_GET['export_subcategory'])) {
    $data = "Category Name\t Sub Category Name\t Sub Category Code\t Status\n";
   
    $statusCondi = '';
    if (isset($_SESSION['MasCat']) && $_SESSION['MasCat'] != 'all' && $_SESSION['MasCat'] != '') {
        $statusCondi = " AND cs.status ='" . $_SESSION['MasCat'] . "'";
    }
   
    $condi = " cs.account_id='" . $_SESSION['accountId'] . "' $statusCondi ORDER BY cs.subcategory_name";
    $auRec = $_objAdmin->_getSelectList('table_subcategory as cs INNER JOIN table_category as c on c.category_id = cs.category_id', "cs.*,c.category_name", '', $condi);
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            if ($auRec[$i]->status == 'A') {
                $status = "Active";
            } else {
                $status = "Inactive";
            }
            $data .= '"' . $auRec[$i]->category_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->subcategory_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->subcategory_code . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"subcategory_list.xls\"");
    echo $data;
    exit;
}
/******************************************** End Export Sub Category List ******************************************************************/


/******************************************** Product Display ******************************************************************/

// Todo start : Domar : 18-dec-2024 : Product display Report Export


if (isset($_GET['export_product_display_report'])) {
    $data = " Activity Date\tActivity Time\t" . $AliaseUsers['salesman'] . " Code\t " . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['retailer'] . " Code\t" . $AliaseUsers['retailer'] . " Name\t State\tDistrict\tCity\t Brand\tItem Code\tItem Name\tItem Ranking\tDisplay Position\tReasons of Not Available\n";
   
    $salCond =  $_SESSION['SaleId'];

    if ($_SESSION['FromAttList'] != '') {
        $fromdate = " pdr.app_date BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromAttList'])) . "' AND ";

        // echo $fromdate;die;
    } else {
        $fromdate = " pdr.app_date   BETWEEN '" . date('Y-m-d') . "' AND ";
        // echo $fromdate;die;
    }
    if ($_SESSION['ToAttList'] != '') {
        $todate = "'" . date('Y-m-d', strtotime($_SESSION['ToAttList'])) . "' ";
    } else {
        $todate = "'" . date('Y-m-d') . "'";
    }


    $where = $fromdate . $todate . $salCond;



// echo "<pre>";
//     print_r($salCond);
//     die();
  
    $auRec = $_objAdmin->_getSelectList('product_display_rank as pdr LEFT JOIN product_display_rank_details as pdrd on pdrd.display_id = pdr.display_id LEFT join table_salesman as s on s.salesman_id = pdr.salesman_id LEFT JOIN table_retailer as r ON r.retailer_id = pdr.retailer_id LEFT JOIN state as st on st.state_id = r.state LEFT JOIN city as ct ON ct.city_id = r.city LEFT JOIN table_location as l ON l.location_id = r.location_id LEFT JOIN table_item as i ON i.item_id = pdrd.item_id LEFT join table_item_ranking as ir on ir.item_rank_id = pdrd.item_rank_id LEFT join table_product_display_position_master as pdpm on pdpm.product_display_id = pdrd.display_position_id LEFT JOIN table_brands as b on b.brand_id = i.brand_id LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
                LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
                LEFT JOIN table_salesman_hierarchy AS H2 ON H2.hierarchy_id = SH.rpt_hierarchy_id
              left JOIN table_salesman AS S2 ON S2.salesman_id = SH.rpt_user_id  ', "pdr.* , s.salesman_name, s.employee_code, r.retailer_name, r.retailer_code , st.state_name, ct.city_name, l.location_name, i.item_name, i.item_code, ir.item_rank_name, pdrd.out_of_stock_desc, pdpm.display_position_name , b.brand_name", '', $where . " Group by pdr.display_id ");
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . date('d-M-Y', strtotime($auRec[$i]->app_date)) . '"';
            $data .= "\t";
            $data .= '"' . date('G:i', strtotime($auRec[$i]->app_time)). '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code. '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
      
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->brand_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_rank_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->display_position_name . '"';
            $data .= "\t";
            $data .= '"' . ucwords($auRec[$i]->out_of_stock_desc) . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"product_display_report_export.xls\"");
    echo $data;
    exit;
}

/******************************************** Product Display ******************************************************************/


// Todo start : Domar : 20-dec-2024 : Claim GRN Report Export


if (isset($_GET['export_claim_grn_report'])) {
    $data = " GRN Date\tGRN Time\t" . $AliaseUsers['salesman'] . " Code\t " . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['retailer'] . " Code\t" . $AliaseUsers['retailer'] . " Name\tItem Code\tItem Name\tState\tDistrict\tCity\tClaim Type\tClaim Request Date\tBrand Name\tAsset Name\tFOC Qty\tCash Amount\tClaim Remark\tGRN Remark\n";
   
    $salCond =  $_SESSION['SaleId'];
  
    $auRec = $_objAdmin->_getSelectList('table_claim as c LEFT join table_salesman as s ON s.salesman_id = c.salesman_id LEFT join table_retailer as r ON r.retailer_id = c.retailer_id LEFT JOIN state as st on st.state_id = r.state LEFT JOIN city as ct ON ct.city_id = r.city LEFT JOIN table_location as l ON l.location_id = r.location_id LEFT JOIN table_brands as b on b.brand_id = c.brand_id LEFT join table_asset_master as am ON am.asset_id = c.asset_id left join table_item as i on i.item_id = c.item_id LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
                LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
                LEFT JOIN table_salesman_hierarchy AS H2 ON H2.hierarchy_id = SH.rpt_hierarchy_id
              left JOIN table_salesman AS S2 ON S2.salesman_id = SH.rpt_user_id', "c.*, s.salesman_name, s.employee_code, r.retailer_name, r.retailer_code, st.state_name, ct.city_name, l.location_name, b.brand_name, am.asset_name,i.item_code,i.item_name ", '', $salCond . " GROUP BY c.claim_id " );

    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . date('d-M-Y', strtotime($auRec[$i]->app_date_time)) . '"';
            $data .= "\t";
            $data .= '"' . date('G:i', strtotime($auRec[$i]->app_date_time)) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code. '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->claim_type . '"';
            $data .= "\t";
            $data .= '"' . date('Y-m-d', strtotime($auRec[$i]->requested_at)) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->brand_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->asset_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->foc . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->cash . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->request_remark . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->grn_remark . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"claim_grn_report_export.xls\"");
    echo $data;
    exit;
}

// Todo start : Domar : 26-dec-2024 : PG Attendance & Sales Report Export


if (isset($_GET['export_pg_attendance_and_sales_report'])) {
    $data = " Activity Date\tActivity Time\t" . $AliaseUsers['salesman'] . " Code\t " . $AliaseUsers['salesman'] . " Name\t" . $AliaseUsers['retailer'] . " Code\t" . $AliaseUsers['retailer'] . " Name\tState\tDistrict\tCity\t Brand Name\tPG Name\tOutlet Traffic\t Sampling Cups\tItem Code\tItem Name\tItem Category\tItem sold\tUnit price\tRevenue of items\tFOC\tAmount Of FOC\tSampling\tConversion Rate \t Check-in Date \tCheck-in Time\t Check-out Date \tCheck-out Time\n";
    $from = date('Y-m-d', strtotime($_SESSION['FromOrderList']));
    $to = date('Y-m-d', strtotime($_SESSION['ToOrderList']));
if(isset($_SESSION['SalIDs'])){

    $salCond =  $_SESSION['SalIDs'] ;
}
  

// echo $salCond;die;
    $auRec = $_objAdmin->_getSelectList('table_pg_sales_attendance as pg LEFT JOIN table_salesman as s ON s.salesman_id = pg.salesman_id LEFT JOIN table_retailer as r ON r.retailer_id = pg.retailer_id LEFT JOIN state as st on st.state_id = r.state LEFT JOIN city as ct ON ct.city_id = r.city LEFT JOIN table_location as l ON l.location_id = r.location_id LEFT JOIN table_brands as b ON b.brand_id = pg.brand_id LEFT JOIN table_item as i on i.item_id = pg.item_id LEFT JOIN table_category as cat on cat.category_id = i.category_id LEFT JOIN table_tags as t ON t.tag_id = pg.foc_id LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
                LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
                LEFT JOIN table_salesman_hierarchy AS H2 ON H2.hierarchy_id = SH.rpt_hierarchy_id
              left JOIN table_salesman AS S2 ON S2.salesman_id = SH.rpt_user_id', "pg.*, s.employee_code, s.salesman_name , r.retailer_name, r.retailer_code, st.state_name, ct.city_name , l.location_name , b.brand_name, i.item_name, i.item_code, cat.category_name, t.tag_description as foc , S2.salesman_name as desc1", '', "t.tag_type = 10 And (Date(pg.created_on) >= '$from' And  Date(pg.created_on) <= '$to') ".$salCond ." Group by pg.id" );

    // echo "<pre>";
    // print_r($auRec);
    // die;
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . date('d-M-Y', strtotime($auRec[$i]->created_on)) . '"';
            $data .= "\t";
            $data .= '"' .  date('G:i', strtotime($auRec[$i]->created_on)). '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code. '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->brand_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->pg_name. '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->outlet_traffic . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->sampling_cups . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name. '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->category_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_sold . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->unit_price . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->revenue_item_sold . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->foc . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->amount_of_foc . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->sampling . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->conversion_rate . '"';
            $data .= "\t";
            $data .= '"' . date('d-M-Y', strtotime($auRec[$i]->checkin_date)) . '"';
            $data .= "\t";
            $data .= '"' . date('H:i', strtotime($auRec[$i]->checkin_time)) . '"';
            $data .= "\t";
            $data .= '"' . date('d-M-Y', strtotime($auRec[$i]->checkout_date)) . '"'; 
            $data .= "\t";
            $data .= '"' . date('H:i', strtotime($auRec[$i]->checkout_time)) . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"pg_attendance_and_sales_export.xls\"");
    echo $data;
    exit;

}

// Todo start : Domar : 05-nov-2024 : GWP export


if (isset($_GET['export_gwp_report'])) {
    $data = "Activity Date\tActivity Time\t " . $AliaseUsers['salesman'] . " Code\t " . $AliaseUsers['salesman'] . " Name\t " . $AliaseUsers['retailer'] . " Code\t " . $AliaseUsers['retailer'] . " Name\tBrand Name\tGWP Qty.\tAsset\tState\tDistrict\tCity\n";

    $salCond =  $_SESSION['SaleId'];

    $auRec = $_objAdmin->_getSelectList('table_gwp_transactions as gt
                LEFT JOIN table_gwp_transactions_details as gtd ON gtd.gwp_transaction_id = gt.gwp_transaction_id 
                LEFT JOIN table_salesman AS s ON s.salesman_id = gt.salesman_id 
                LEFT JOIN table_retailer as r ON r.retailer_id = gt.retailer_id 
                LEFT JOIN table_brands as b ON b.brand_id = gtd.brand_id 
                LEFT JOIN table_asset_master as a ON a.asset_id = gtd.asset_id 
                LEFT JOIN state as st on st.state_id = r.state
                LEFT JOIN city as c ON c.city_id = r.city 
                LEFT JOIN table_location as l ON l.location_id = r.location_id LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
                LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
                LEFT JOIN table_salesman_hierarchy AS H2 ON H2.hierarchy_id = SH.rpt_hierarchy_id
              left JOIN table_salesman AS S2 ON S2.salesman_id = SH.rpt_user_id',
                 'gt.*, s.employee_code, s.salesman_name, r.retailer_code, r.retailer_name, b.brand_name, gtd.gwp_quantity, a.asset_name, st.state_name, c.city_name, l.location_name ,S2.salesman_name as desc1', '',
              " gt.transaction_date BETWEEN '" . 
                    date('Y-m-d', strtotime($_SESSION['FromAttList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToAttList'])) . "'$salCond   GROUP BY gt.gwp_transaction_id ORDER BY s.salesman_name ASC, gt.transaction_date DESC");

    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            // $data .= '"' . $_objAdmin->_changeDate($auRec[$i]->mgb_date) . '"';
            // $data .= "\t";
            $data .= '"' . date('d M Y', strtotime($auRec[$i]->transaction_date)).'"';
            $data .= "\t";
            $data .= '"' . date('G:i', strtotime($auRec[$i]->transaction_time)) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->brand_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->gwp_quantity . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->asset_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"gwp_report.xls\"");
    echo $data;
    exit;
}





// Todo start : Domar : 06-nov-2024 : POSM Customer export


if (isset($_GET['export_posm_customer_report'])) {
    $data = "Activity Date\tActivity Time\t " . $AliaseUsers['salesman'] . " Code\t " . $AliaseUsers['salesman'] . " Name\t " . $AliaseUsers['retailer'] . " Code\t " . $AliaseUsers['retailer'] . " Name\tBrand Name\tPOSM Qty.\tAsset\tState\tDistrict\tCity\n";

    $salCond =  $_SESSION['SaleId'];

    $auRec = $_objAdmin->_getSelectList('posm_customer_transactions as pct LEFT JOIN posm_customer_transactions_details as pctd ON pctd.pctr_transaction_id = pct.pctr_transaction_id 
                LEFT JOIN table_salesman AS s ON s.salesman_id = pct.salesman_id 
                LEFT JOIN table_retailer as r ON r.retailer_id = pct.retailer_id 
                LEFT JOIN table_brands as b ON b.brand_id = pctd.brand_id 
                LEFT JOIN table_asset_master as a ON a.asset_id = pctd.asset_id 
               LEFT JOIN state as st on st.state_id = r.state
                LEFT JOIN city as c ON c.city_id = r.city 
                LEFT JOIN table_location as l ON l.location_id = r.location_id LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
                LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
                LEFT JOIN table_salesman_hierarchy AS H2 ON H2.hierarchy_id = SH.rpt_hierarchy_id
              left JOIN table_salesman AS S2 ON S2.salesman_id = SH.rpt_user_id',
        'pct.transaction_date, s.employee_code, s.salesman_name, r.retailer_code, r.retailer_name, b.brand_name, pctd.pctr_quantity, a.asset_name, st.state_name, c.city_name, l.location_name , pctd.image_url as in_image_url, pct.transaction_time, pctd.pctr_transaction_id ,S2.salesman_name as desc1  ', '',
        " pct.transaction_date BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromAttList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToAttList'])) . "' $salCond GROUP BY pct.pctr_transaction_id ORDER BY s.salesman_name ASC, pct.transaction_date DESC");

    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . date('d M Y', strtotime($auRec[$i]->transaction_date)) .'"';
            $data .= "\t";
            $data .= '"' . date('G:i', strtotime($auRec[$i]->transaction_time)) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->brand_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->pctr_quantity . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->asset_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"posm_customer_report.xls\"");
    echo $data;
    exit;
}




// Todo start : Domar : 06-nov-2024 : POSM Consumer export


if (isset($_GET['export_posm_consumer_report'])) {
    $data = "Activity Date\tActivity Time\t " . $AliaseUsers['salesman'] . " Code\t " . $AliaseUsers['salesman'] . " Name\t " . $AliaseUsers['retailer'] . " Code\t " . $AliaseUsers['retailer'] . " Name\tBrand Name\tPOSM\tCampaign\tPlacement\tState\tDistrict\tCity\n";

    $salCond =  $_SESSION['SaleId'];

    $auRec = $_objAdmin->_getSelectList('posm_consumer_transactions as pct LEFT JOIN posm_consumer_transactions_details as pctd ON pctd.pcr_transaction_id = pct.pcr_transaction_id 
                LEFT JOIN table_salesman AS s ON s.salesman_id = pct.salesman_id 
                LEFT JOIN table_retailer as r ON r.retailer_id = pct.retailer_id
                LEFT JOIN table_brands as b ON b.brand_id = pctd.brand_id 
                LEFT JOIN table_posm_master as pm on pm.posm_id= pctd.posm_id 
                LEFT JOIN table_placement_master as tpm on tpm.placement_id= pctd.placement_id
                LEFT JOIN table_campaign_master as cm on cm.campaign_id= pctd.campaign_id 
               LEFT JOIN state as st on st.state_id = r.state
                LEFT JOIN city as c ON c.city_id = r.city 
                LEFT JOIN table_location as l ON l.location_id = r.location_id LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
                LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
                LEFT JOIN table_salesman_hierarchy AS H2 ON H2.hierarchy_id = SH.rpt_hierarchy_id
              left JOIN table_salesman AS S2 ON S2.salesman_id = SH.rpt_user_id',
        'pct.transaction_date, s.employee_code, s.salesman_name, r.retailer_code, r.retailer_name, b.brand_name, st.state_name, c.city_name, l.location_name , pctd.image_url as in_image_url, pct.transaction_time, pctd.pcr_transaction_id , pm.posm_name , tpm.placement_name , cm.campaign_name ,S2.salesman_name as desc1', '',
        " pct.transaction_date BETWEEN '" . date('Y-m-d', strtotime($_SESSION['FromAttList'])) . "' AND '" . date('Y-m-d', strtotime($_SESSION['ToAttList'])) . "' $salCond GROUP BY pct.pcr_transaction_id ORDER BY s.salesman_name ASC, pct.transaction_date DESC");

    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . date('d M Y', strtotime($auRec[$i]->transaction_date)) . '"';
            $data .= "\t";
            $data .= '"' . date('G:i', strtotime($auRec[$i]->transaction_time)) . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->employee_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->salesman_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->retailer_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->brand_name . '"';
            $data .= "\t";

            $data .= '"' . $auRec[$i]->posm_name . '"';
            $data .= "\t";

            $data .= '"' . $auRec[$i]->campaign_name . '"';
            $data .= "\t";

            $data .= '"' . $auRec[$i]->placement_name . '"';
            $data .= "\t";

            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->city_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->location_name . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"posm_consumer_report.xls\"");
    echo $data;
    exit;
}

if (isset($_GET['export_state_and_item_ranking_mapping'])) {
    $data = "Item Code\tItem Name\tState Code\tState Name\tItem Rank Name\tStatus\n";
   
    $statusCondi = '';
    if (isset($_SESSION['MasAtte']) && $_SESSION['MasAtte'] != 'all' && $_SESSION['MasAtte'] != '') {
        $statusCondi = " sair.status ='" . $_SESSION['MasAtte'] . "'";
        $where = " $statusCondi ";
    }
  
    $auRec = $_objAdmin->_getSelectList('table_state_and_item_rank_mapping as sair LEFT JOIN table_item as i ON i.item_id = sair.item_id LEFT JOIN state as s ON s.state_id = sair.state_id LEFT JOIN table_item_ranking as ir ON ir.item_rank_id =  sair.item_rank_id ', "i.item_name, i.item_code, s.state_name, s.state_code, ir.item_rank_name, sair.* ", '', $where);
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->state_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_rank_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->status . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"state_and_item_ranking_mapping_export.xls\"");
    echo $data;
    exit;
}



// Export Retailer Channel Wise Item Price : 19-feb-2025

if (isset($_GET['export_ret_channel_item_price'])) {
    $data = "Item Code\tItem Name\tCategory\tBrand\tRetailer Channel\tPrice\tStatus\n";
   
    $statusCondi = '';
    if (isset($_SESSION['MasRetTypeItmPrice']) && $_SESSION['MasRetTypeItmPrice'] != 'all' && $_SESSION['MasRetTypeItmPrice'] != '') {
        $statusCondi = " rtim.status ='" . $_SESSION['MasRetTypeItmPrice'] . "'";
        $where = " $statusCondi ";
    }
  
    $auRec = $_objAdmin->_getSelectList('table_retailer_channel_item_price_mapping as    rtim left join table_item as i ON i.item_id = rtim.item_id
            left join table_retailer_channel_master as rt ON rt.channel_id = rtim.retailer_channel_id 
            left join table_category as c on i.category_id = c.category_id 
            left join table_brands as b on b.brand_id=i.brand_id ', "rtim.*,i.item_name,i.item_code,c.category_name,b.brand_name,rt.channel_name ", '', $where);
    if (is_array($auRec)) {
        for ($i = 0; $i < count($auRec); $i++) {
            if ($auRec[$i]->status == 'A') {
                $status = "Active";
            } else {
                $status = "Inactive";
            }
            $data .= '"' . $auRec[$i]->item_code . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->item_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->category_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->brand_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->channel_name . '"';
            $data .= "\t";
            $data .= '"' . $auRec[$i]->price . '"';
            $data .= "\t";
            $data .= '"' . $status . '"';
            $data .= "\n";
        }
    }
    header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"ret_channel_item_price_export.xls\"");
    echo $data;
    exit;
}





if (isset($_GET['export_disrtibutor_summary_repport'])) {
    $data = "Date\tTime\tOrder Number\tInvoice Amt\tDistributors Code\tDistributors Name\tZone\tState\tDistrict\tSalesmans Name\tSalesmans Code\tSalesman Designation\tManager Status\tApproved By Manager\tManager Remark\tManager Status Updated On\tAdmin Status\tApproved By Admin\tAdmin Remark\tAdmin Status Updated On\tOrder By\tMarket\tAddress\tOrder Status\n";
   
        $page = $_REQUEST['page'];
        $rp = $_REQUEST['rp'];
        $sortname = $_REQUEST['sortname'];
        $sortorder = $_REQUEST['sortorder'];
        $ordertime = ',time_of_order desc';
        if (!$sortname) $sortname = 'date_of_order';
        if (!$sortorder) $sortorder = 'desc';
        $sort = " ORDER BY $sortname $sortorder $ordertime";
        
        if (!$page) $page = 1;
        if (!$rp) $rp = 50;
        $start = (($page - 1) * $rp);
        $limit = "LIMIT $start, $rp";
        $query = $_REQUEST['query'];
        $qtype = $_REQUEST['qtype'];
        //$_objAdmin = new Admin();
        if ($_SESSION['FromallownceList'] != '') {
            $fromdate = " and o.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['FromallownceList'])) . "'";
        } else {
            $fromdate = " and o.date_of_order >= '" . date('Y-m-d') . "'";
        }
        if ($_SESSION['ToallownceList'] != '') {
            $todate = " and o.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToallownceList'])) . "'";
        } else {
            $todate = " and o.date_of_order <= '" . date('Y-m-d') . "'";
        }
        if ($_SESSION['distributorId'] != "" && $_SESSION['distributorId'] > 0) {
            $disList = " o.distributor_id=" . $_SESSION['distributorId'] . " and";
        } else {
            $disList = "";
        }
        if ($_SESSION['userLoginType'] == 7) {
            $stkList = " d.stockist_id=" . $_SESSION['stockistId'] . " and";
        } else {
            $stkList = "";
        }
        if ($_SESSION['OrderBy'] != '') {
            if ($_SESSION['OrderBy'] == 1) {
                $orderby = " and order_status IN('A','I') ";
            }
            if ($_SESSION['OrderBy'] == 2) {
                $orderby = " and o.order_status='A' ";
            }
            if ($_SESSION['OrderBy'] == 3) {
                $orderby = " and o.order_status='I' ";
            }
            if ($_SESSION['OrderBy'] == 4) {
                $orderby = " and o.order_status='D' ";
            }
        } else {
            $orderby = " and o.order_status IN('A','I') ";
        }

        $orderIds = '';
        if (is_array($_SESSION['SalDisList']) && (count($_SESSION['SalDisList']) > 0)) {
            $salectedSalIds = implode(',', $_SESSION['SalDisList']);
            $salesman = " AND s.salesman_id IN(" . $salectedSalIds . ") ";
        }

        if (!empty($RoleBrands)) {
            $brandWhere = " o.order_for='R' and o.order_status !='C' and o.order_type !='Return' and o.distributor_id !='' $fromdate $todate ";
            $orderIds = $_objAdmin->getBrandsOrder($RoleBrands, $brandWhere);
        }
           $where = "
             o.distributor_id!='' $orderIds $orderIds $salesman $fromdate $todate"; 
          

            if ($query) $where .= " AND $qtype LIKE '%$query%' ";
            $auRec = $_objAdmin->_getSelectList('table_distributor_order AS o 
            LEFT JOIN table_retailer AS r ON o.retailer_id = r.retailer_id 
            LEFT JOIN table_salesman AS s ON o.salesman_id = s.salesman_id 
            LEFT JOIN table_distributors_order_accept_reject_history AS dh ON dh.order_id = o.order_id
            LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
            LEFT JOIN table_salesman_allowance_details AS sad ON sad.salesman_id = s.salesman_id
            LEFT JOIN table_salesman_allowance_mapping AS samd ON sad.allws_id = samd.allws_id
            LEFT JOIN table_salesman AS adm ON adm.salesman_id = dh.admin_user_id
            
            LEFT JOIN table_web_users AS web_user ON web_user.web_user_id = dh.salesman_user_id
            LEFT JOIN table_salesman AS mngr ON mngr.salesman_id = web_user.salesman_id
            
            LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
            LEFT JOIN table_distributors AS d ON d.distributor_id = o.distributor_id 
            LEFT JOIN table_retailer_channel_master AS cm ON cm.channel_id = r.channel_id 
            LEFT JOIN state AS st ON st.state_id = d.state 
            LEFT JOIN table_zone_state_mapping AS szsm ON szsm.state_id = d.state AND szsm.account_id = d.account_id
            LEFT JOIN table_zone AS sz ON sz.zone_id = szsm.zone_id
            LEFT JOIN city AS c ON c.city_id = d.city',
                            "o.*, 
                    dh.salesman_user_id,
                    dh.admin_user_id,
                H.description AS sal_desg, 
              
                samd.request_status, 
                r.retailer_name, 
                mngr.salesman_name AS mngr_name, 
                samd.mngr_apprvd_amt, 
                samd.mngr_remark, 
                CONCAT(samd.status_updated_on_date, ' ', samd.status_updated_on_time) AS mngr_sts_updtd_on, 
                samd.admin_request_status, 
                adm.salesman_name AS admin_name, 
                samd.admin_apprvd_amt, 
                samd.admin_remark, 
                samd.admin_status_updated_on_date_time AS admin_sts_updtd_on, 
                r.retailer_code, 
                r.retailer_address, 
                r.retailer_location, 
                cm.channel_name, 
                r.display_outlet, 
                s.salesman_name, 
                s.employee_code, 
                d.distributor_name, 
                d.distributor_code, 
                st.state_name, 
                c.city_name, 
                sz.zone_name ", 
                            $rp, 
                            $where  . " GROUP BY 
                            o.order_id
                           ".$sort, 
                            '');


                            $admin_accept_amt=0;
                            $manager_accept_amt=0;
                            for ($j = 0; $j < count($auRec); $j++) {
                                $admin_accept_amt+=$auRec[$j]->accepted_amt_by_admin;
                                $manager_accept_amt+=$auRec[$j]->accepted_amt_by_manager;
                            }

                    if (is_array($auRec)) {
                        for ($i = 0; $i < count($auRec); $i++) {
                            $admin_status='';
                            $manager_status='';
                            if($auRec[$i]->adminStatus=='A')
                            {
                                $admin_status='Approved';
                            }
                            elseif($auRec[$i]->adminStatus=='R')
                            {
                                $admin_status='Rejected';
                            }

                            if($auRec[$i]->managerStatus=='A')
                            {
                                $manager_status='Approved';
                            }
                            elseif($auRec[$i]->managerStatus=='R')
                            {
                                $manager_status='Rejected';
                            }

                            $adminName = '';
                            if (intval($auRec[$i]->is_approved_by_admin) > 0) {
                                if (intval($auRec[$i]->admin_id) > 0) {
                                    $adminName = $auRec[$i]->admin_name;
                                } else {
                                    $adminName = 'Admin';
                                }
                            }

                            $admin_sts_updtd_on = '';
                            if ($auRec[$i]->admin_sts_updtd_on != '0000-00-00 00:00:00' && !empty($auRec[$i]->admin_sts_updtd_on)) {
                                $admin_sts_updtd_on = date('d M Y H:i', strtotime($auRec[$i]->admin_sts_updtd_on));
                            }

                            $admin_apprvd_amt = '';
                           

                            $mngr_sts_updtd_on = '';
                            if ($auRec[$i]->mngr_sts_updtd_on != '0000-00-00 00:00:00' && !empty($auRec[$i]->mngr_sts_updtd_on)) {
                                $mngr_sts_updtd_on = date('d M Y H:i', strtotime($auRec[$i]->mngr_sts_updtd_on));
                            }

                            $mngr_apprvd_amt = '';
                           

                            if ($auRec[$i]->order_status == 'A') {
                        $status = "New Order";
                        $color = "A";
                    }
                    if ($auRec[$i]->order_status == 'I') {
                        $status = "Processed";
                        $color = "I";
                    }
                    if ($auRec[$i]->order_status == 'D') {
                        $status = "Dispatched";
                        $color = "N";
                    }
                    if ($auRec[$i]->display_outlet == 'Y') {
                        $outlet = 'Yes';
                    } else if ($auRec[$i]->display_outlet == 'N') {
                        $outlet = 'No';
                    } else {
                        $outlet = '';
                    }


                    if($auRec[$i]->adminStatus=='A')
                    {
                        $status = "Approved";
                     
                    }
                    elseif($auRec[$i]->adminStatus=='R')
                    {
                        $status = "Rejected";
                    }

                    switch ($auRec[$i]->order_by) {
                        case 'S':
                            $order_by = $_objAdmin->AliaseUsers['salesman'];
                            break;
                        case "D":
                            $order_by = $_objAdmin->AliaseUsers['distributor'];
                            break;
                        case "R":
                            $order_by = $_objAdmin->AliaseUsers['retailer'];
                            break;
                        default :
                            $order_by = '';
                    }

                    $CheckOrderSts = $_objAdmin->_getSelectList2('table_order_accept_reject as c', "SUM(c.effected_qty) as total,(select sum(effected_qty) FROM table_order_accept_reject WHERE order_id='" . $auRec[$i]->order_id . "' and action='rej' ) as reject_qty",
                '', "order_id='" . $auRec[$i]->order_id . "' ");


                    $CheckOrderQuantity = $_objAdmin->_getSelectList2('table_order as o 
                    inner join table_order_detail as odr on odr.order_id = o.order_id', "sum(odr.quantity) as total_odr_quantity",
                        '', "o.order_id=" . $auRec[$i]->order_id . " and odr.order_detail_status NOt in (6,4) group by o.order_id");


                    $history_data  = $_objAdmin->_getSelectList2('table_distributors_order_accept_reject_history ', "adminStatus,managerStatus,manager_status_on,admin_status_on,rejected_reason_by_admin,rejected_reason_by_manager",
                        '', "order_id=" . $auRec[$i]->order_id); 
                        
                    $history_datas=$history_data[0];

                    if($history_datas->adminStatus=='A')
                    {
                        $admin_status='Approved';
                    }
                    elseif($history_datas->adminStatus=='R')
                    {
                        $admin_status='Rejected';
                    }

                    if($history_datas->managerStatus=='A')
                    {
                        $manager_status='Approved';
                    }
                    elseif($history_datas->managerStatus=='R')
                    {
                        $manager_status='Rejected';
                    }


                      

                    if ($auRec[$i]->order_status=='P') {
                        $orderStatus = 'Pending';
                        $color = 'I';
                    }
        
                    if ($history_datas->managerStatus=='R') {
                        $orderStatus = 'Rejected';
                        $color = 'I';
                    }
        
                    if ($ahistory_datas->managerStatus=='A') {
                        $orderStatus = 'Approved';
                        $color = 'I';
                    }
        
                    if($history_datas->adminStatus=='A')
                            {
                                $orderStatus = "Approved";
                             
                            }
                            elseif($history_datas->adminStatus=='R')
                            {
                                $orderStatus = "Rejected";
                            }
            
                            
            
                        $manager_status_on='';        
                        if(!empty($history_datas->manager_status_on) && $history_datas->manager_status_on !='0000-00-00')
                        {
                            $manager_status_on=date('d-M-Y',strtotime($history_datas->manager_status_on));
                        }   
                        
                        $admin_status_on='';
            
                        if(!empty($history_datas->admin_status_on) &&  $history_datas->admin_status_on !='0000-00-00')
                        {
                            $admin_status_on=date('d-M-Y',strtotime($history_datas->admin_status_on));
                        }

                        $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);

                        $data .= '"' . $date_of_order . '"';
                        $data .= "\t";
                        $data .= '"' . $auRec[$i]->time_of_order . '"';
                        $data .= "\t";
                        $data .= '"' . $auRec[$i]->order_id . '"';
                        $data .= "\t";
                        $data .= '"' . $auRec[$i]->acc_total_invoice_amount . '"';
                        $data .= "\t";
                        $data .= '"' . $auRec[$i]->distributor_code . '"';
                        $data .= "\t";
                        $data .= '"' . $auRec[$i]->distributor_name . '"';
                        $data .= "\t";
                        $data .= '"' . $auRec[$i]->zone_name . '"';
                        $data .= "\t";
                        $data .= '"' . $auRec[$i]->state_name . '"';
                        $data .= "\t";
                        $data .= '"' . $auRec[$i]->city_name . '"';
                        $data .= "\t";
                        $data .= '"' . $auRec[$i]->salesman_name . '"';
                        $data .= "\t";
                        $data .= '"' . $auRec[$i]->employee_code . '"';
                        $data .= "\t";
                        $data .= '"' . $auRec[$i]->sal_desg . '"';
                        $data .= "\t";
                        $data .= '"' . $manager_status. '"';
                        $data .= "\t";
                        $data .= '"' . $auRec[$i]->mngr_name . '"';
                        $data .= "\t";
                        $data .= '"' . $history_datas->rejected_reason_by_manager. '"';
                        $data .= "\t";
                        $data .= '"' . $manager_status_on . '"';
                        $data .= "\t";
                        $data .= '"' . $admin_status . '"';
                        $data .= "\t";
                        $data .= '"' . 'Admin' . '"';
                        $data .= "\t";
                        $data .= '"' . $history_datas->rejected_reason_by_admin . '"';
                        $data .= "\t";
                        $data .= '"' . $admin_status_on . '"';
                        $data .= "\t";
                        $data .= '"' . $order_by . '"';
                        $data .= "\t";
                        $data .= '"' . $auRec[$i]->retailer_location . '"';
                        $data .= "\t";
                        $data .= '"' . $auRec[$i]->retailer_address . '"';
                        $data .= "\t";
                        $data .= '"' . $orderStatus . '"';
                        $data .= "\n";

                }

            }

            header("Content-type: application/octet-stream");
    header("Content-Disposition: attachment; filename=\"distributors_summary_export.xls\"");
    echo $data;
    exit;
                    
            
  
}



if (isset($_GET['export_disrtibutor_detail_repport'])) {

    $data = "Date\tTime\tOrder Number\tInvoice Amt\tDistributors Code\tDistributors Name\tZone\tState\tDistrict\tSalesmans Name\tSalesmans Code\tSalesman Designation\tManager Status\tApproved By Manager\tManager Remark\tManager Status Updated On\tAdmin Status\tApproved By Admin\tAdmin Remark\tAdmin Status Updated On\tOrder By\tMarket\tAddress\tItem Name\tItem Code\tOrder Qty\tAccepted qty. by Admin\tRejected qty. by Admin\tAccepted qty. by Manager\tRejected qty. by Manager\tUpdate qty\tPrice\tTotal\tOrder Status\n";


    // $auRec = $_objAdmin1->_getSelectList2(
    //     'table_distributor_order as o
    //     LEFT JOIN table_distributor_order_detail as ord ON ord.order_id=o.order_id 
    //     LEFT JOIN table_item as itm ON itm.item_id=ord.item_id 
    //     LEFT JOIN table_salesman as s ON o.salesman_id=s.salesman_id 
    //     LEFT JOIN table_distributors as d ON d.distributor_id=o.distributor_id 
    //     ',
    //     "o.*, 
    //     s.salesman_name,
    //     d.distributor_name,
    //     d.contact_number,
    //     ord.order_detail_id,
    //     ord.price,
    //     o.reason_remark,
    //     ord.quantity,
    //     d.distributor_code,
    //     itm.item_id,
    //     itm.item_name,
    //     itm.item_code
    //    ",
    //     '',
    //     $where,
    //     ''
    // );

    $order_header_data=(array)$auRec[0];



   
        $page = $_REQUEST['page'];
        $rp = $_REQUEST['rp'];
        $sortname = $_REQUEST['sortname'];
        $sortorder = $_REQUEST['sortorder'];
        $ordertime = ',time_of_order desc';
        if (!$sortname) $sortname = 'date_of_order';
        if (!$sortorder) $sortorder = 'desc';
        $sort = " ORDER BY $sortname $sortorder $ordertime";
        
        if (!$page) $page = 1;
        if (!$rp) $rp = 50;
        $start = (($page - 1) * $rp);
        $limit = "LIMIT $start, $rp";
        $query = $_REQUEST['query'];
        $qtype = $_REQUEST['qtype'];
        //$_objAdmin = new Admin();
        if ($_SESSION['FromallownceList'] != '') {
            $fromdate = " and o.date_of_order >= '" . date('Y-m-d', strtotime($_SESSION['FromallownceList'])) . "'";
        } else {
            $fromdate = " and o.date_of_order >= '" . date('Y-m-d') . "'";
        }
        if ($_SESSION['ToallownceList'] != '') {
            $todate = " and o.date_of_order <= '" . date('Y-m-d', strtotime($_SESSION['ToallownceList'])) . "'";
        } else {
            $todate = " and o.date_of_order <= '" . date('Y-m-d') . "'";
        }
        if ($_SESSION['distributorId'] != "" && $_SESSION['distributorId'] > 0) {
            $disList = " o.distributor_id=" . $_SESSION['distributorId'] . " and";
        } else {
            $disList = "";
        }
        if ($_SESSION['userLoginType'] == 7) {
            $stkList = " d.stockist_id=" . $_SESSION['stockistId'] . " and";
        } else {
            $stkList = "";
        }
        if ($_SESSION['OrderBy'] != '') {
            if ($_SESSION['OrderBy'] == 1) {
                $orderby = " and order_status IN('A','I') ";
            }
            if ($_SESSION['OrderBy'] == 2) {
                $orderby = " and o.order_status='A' ";
            }
            if ($_SESSION['OrderBy'] == 3) {
                $orderby = " and o.order_status='I' ";
            }
            if ($_SESSION['OrderBy'] == 4) {
                $orderby = " and o.order_status='D' ";
            }
        } else {
            $orderby = " and o.order_status IN('A','I') ";
        }

        $orderIds = '';
        if (is_array($_SESSION['SalDisList']) && (count($_SESSION['SalDisList']) > 0)) {
            $salectedSalIds = implode(',', $_SESSION['SalDisList']);
            $salesman = " AND s.salesman_id IN(" . $salectedSalIds . ") ";
        }

        if (!empty($RoleBrands)) {
            $brandWhere = " o.order_for='R' and o.order_status !='C' and o.order_type !='Return' and o.distributor_id !='' $fromdate $todate ";
            $orderIds = $_objAdmin->getBrandsOrder($RoleBrands, $brandWhere);
        }
           $where = "
             o.distributor_id!='' $orderIds $orderIds $salesman $fromdate $todate"; 
          

            if ($query) $where .= " AND $qtype LIKE '%$query%' ";
            $auRec = $_objAdmin->_getSelectList('table_distributor_order AS o 
            LEFT JOIN table_distributor_order_detail as ord ON ord.order_id=o.order_id
            LEFT JOIN table_retailer AS r ON o.retailer_id = r.retailer_id 
            LEFT JOIN table_salesman AS s ON o.salesman_id = s.salesman_id 
            LEFT JOIN table_distributors_order_accept_reject_history AS dh ON dh.order_id = o.order_id
            LEFT JOIN table_salesman_hierarchy_relationship AS SH ON SH.salesman_id = s.salesman_id
            LEFT JOIN table_salesman_allowance_details AS sad ON sad.salesman_id = s.salesman_id
            LEFT JOIN table_salesman_allowance_mapping AS samd ON sad.allws_id = samd.allws_id
            LEFT JOIN table_salesman AS adm ON adm.salesman_id = dh.admin_user_id
            LEFT JOIN table_item as itm ON itm.item_id=ord.item_id 
            LEFT JOIN table_web_users AS web_user ON web_user.web_user_id = dh.salesman_user_id
            LEFT JOIN table_salesman AS mngr ON mngr.salesman_id = web_user.salesman_id
            
            LEFT JOIN table_salesman_hierarchy AS H ON H.hierarchy_id = SH.hierarchy_id
            LEFT JOIN table_distributors AS d ON d.distributor_id = o.distributor_id 
            LEFT JOIN table_retailer_channel_master AS cm ON cm.channel_id = r.channel_id 
            LEFT JOIN state AS st ON st.state_id = d.state 
            LEFT JOIN table_zone_state_mapping AS szsm ON szsm.state_id = d.state AND szsm.account_id = d.account_id
            LEFT JOIN table_zone AS sz ON sz.zone_id = szsm.zone_id
            LEFT JOIN city AS c ON c.city_id = d.city',
                            "o.*, 
                            ord.order_detail_id,
                            ord.price,
                    dh.salesman_user_id,
                    dh.admin_user_id,
                H.description AS sal_desg, 
              
                samd.request_status, 
                r.retailer_name, 
                mngr.salesman_name AS mngr_name, 
                samd.mngr_apprvd_amt, 
                samd.mngr_remark, 
                samd.admin_request_status, 
                adm.salesman_name AS admin_name, 
                samd.admin_apprvd_amt, 
                samd.admin_remark, 
                samd.admin_status_updated_on_date_time AS admin_sts_updtd_on, 
                r.retailer_code, 
                r.retailer_address, 
                r.retailer_location, 
                cm.channel_name, 
                r.display_outlet, 
                s.salesman_name, 
                s.employee_code, 
                d.distributor_name, 
                d.distributor_code, 
                st.state_name, 
                c.city_name, 
                sz.zone_name,
                itm.item_name,
                itm.item_code ", 
                            $rp, 
                            $where  . " GROUP BY 
                            ord.order_detail_id
                           ".$sort, 
                            '');


                            // $admin_accept_amt=0;
                            // $manager_accept_amt=0;
                            // for ($j = 0; $j < count($auRec); $j++) {
                            //     $admin_accept_amt+=$auRec[$j]->accepted_amt_by_admin;
                            //     $manager_accept_amt+=$auRec[$j]->accepted_amt_by_manager;
                            // }
                            // echo '<pre>';
        
                            $orderStatus='Pending';
                            $updated_qty=0;
                            if (is_array($auRec)) {
                                for ($i = 0; $i < count($auRec); $i++) {
                                        $order_detail_id=0;
                                        if(!empty($auRec[$i]->order_detail_id))
                                        {
                                            $order_detail_id=$auRec[$i]->order_detail_id;
                                           
                                        }
                                        $history_dat = $_objAdmin->_getSelectList2('table_distributors_order_accept_reject_history', "*", '', "order_detail_id=" . $order_detail_id);
                                        $history_datas=$history_dat[0];

                                    //    echo '<pre>calll<br>';
                                    //    print_r($history_datas);
                                  

                                    $admin_status='';
                                    $manager_status='';

                                     

                                    if($history_datas->adminStatus=='A')
                                    {
                                        $admin_status='Approved';
                                    }
                                    elseif($history_datas->adminStatus=='R')
                                    {
                                        $admin_status='Rejected';
                                    }

                                    if($history_datas->managerStatus=='A')
                                    {
                                        $manager_status='Approved';
                                    }
                                    elseif($history_datas->managerStatus=='R')
                                    {
                                        $manager_status='Rejected';
                                    }

    
                                   
                                    $adminName = '';
                                    if (intval($auRec[$i]->is_approved_by_admin) > 0) {
                                        if (intval($auRec[$i]->admin_id) > 0) {
                                            $adminName = $auRec[$i]->admin_name;
                                        } else {
                                            $adminName = 'Admin';
                                        }
                                    }

                                    $admin_sts_updtd_on = '';
                                    if ($auRec[$i]->admin_sts_updtd_on != '0000-00-00 00:00:00' && !empty($auRec[$i]->admin_sts_updtd_on)) {
                                        $admin_sts_updtd_on = date('d M Y H:i', strtotime($auRec[$i]->admin_sts_updtd_on));
                                    }
                                    // echo '<pre>';
                                    // print_r($history_datas); exit;
                                    $admin_apprvd_amt = 0;
                                    $rejected_qty_by_admin=0;
                                    if ($history_datas->accepted_qty_by_admin > 0) {
                                        $admin_apprvd_amt = $history_datas->accepted_qty_by_admin;
                                    }

                                    if ($history_datas->rejected_qty_by_admin > 0) {
                                        $rejected_qty_by_admin = $history_datas->rejected_qty_by_admin;
                                    }

                                    $mngr_sts_updtd_on = '';
                                    if ($auRec[$i]->mngr_sts_updtd_on != '0000-00-00 00:00:00' && !empty($auRec[$i]->mngr_sts_updtd_on)) {
                                        $mngr_sts_updtd_on = date('d M Y H:i', strtotime($auRec[$i]->mngr_sts_updtd_on));
                                    }

                                    $mngr_apprvd_amt = '';
                                    if (intval($history_datas->mngr_apprvd_amt) > 0) {
                                        $mngr_apprvd_amt = $history_datas->mngr_apprvd_amt;
                                    }

                                    if ($auRec[$i]->order_status == 'A') {
                                        $status = "New Order";
                                        $color = "A";
                                    }
                                    if ($auRec[$i]->order_status == 'I') {
                                        $status = "Processed";
                                        $color = "I";
                                    }
                                    if ($auRec[$i]->order_status == 'D') {
                                        $status = "Dispatched";
                                        $color = "N";
                                    }
                                    if ($auRec[$i]->display_outlet == 'Y') {
                                        $outlet = 'Yes';
                                    } else if ($auRec[$i]->display_outlet == 'N') {
                                        $outlet = 'No';
                                    } else {
                                        $outlet = '';
                                    }

                                    switch ($auRec[$i]->order_by) {
                                        case 'S':
                                            $order_by = $_objAdmin->AliaseUsers['salesman'];
                                            break;
                                        case "D":
                                            $order_by = $_objAdmin->AliaseUsers['distributor'];
                                            break;
                                        case "R":
                                            $order_by = $_objAdmin->AliaseUsers['retailer'];
                                            break;
                                        default :
                                            $order_by = '';
                                    }
                
                                    $CheckOrderSts = $_objAdmin->_getSelectList2('table_order_accept_reject as c', "SUM(c.effected_qty) as total,(select sum(effected_qty) FROM table_order_accept_reject WHERE order_id='" . $auRec[$i]->order_id . "' and action='rej' ) as reject_qty",
                                '', "order_id='" . $auRec[$i]->order_id . "' ");
                
                
                                    $CheckOrderQuantity = $_objAdmin->_getSelectList2('table_order as o 
                                    inner join table_order_detail as odr on odr.order_id = o.order_id', "sum(odr.quantity) as total_odr_quantity",
                                        '', "o.order_id=" . $auRec[$i]->order_id . " and odr.order_detail_status NOt in (6,4) group by o.order_id");
                
                
                                      

                                        if ($auRec[$i]->order_status=='P' && $history_datas->managerStatus=='' && $history_datas->adminStatus=='') {
                                            $orderStatus = 'Pending';
                                            $color = 'I';
                                        } 

                                   

                                       if(!empty($history_datas))
                                       {

                                       
                                        
                                        if($history_datas->adminStatus=='A')
                                        {
                                            $orderStatus = "Approved";
                                            
                                        }
                                        elseif($history_datas->adminStatus=='R')
                                        {
                                           
                                            $orderStatus = "Rejected";
                                        }
                                        elseif ($history_datas->managerStatus=='R') {
                                            $orderStatus = 'Rejected';
                                            $color = 'I';
                                       
                                        }
                                        elseif ($history_datas->managerStatus=='A') {
                                            $orderStatus = 'Approved';
                                            $color = 'I';
                                        }

                                       
                                    }
                                    else{
                                        $orderStatus = 'Pending';
                                    }

                                    $date_of_order = $_objAdmin->_changeDate($auRec[$i]->date_of_order);

                                    if($admin_apprvd_amt>0)
                                    {
                                        $updated_qty=$admin_apprvd_amt;
                                    }
                                    elseif($rejected_qty_by_admin>0)
                                    {
                                        $updated_qty=$rejected_qty_by_admin;
                                    }
                                    else{
                                        $updated_qty=0;
                                    }

                                    $manager_status_on='';        
                                    if(!empty($history_datas->manager_status_on) && $history_datas->manager_status_on !='0000-00-00')
                                    {
                                        $manager_status_on=date('d-M-Y',strtotime($history_datas->manager_status_on));
                                    }   
                                    
                                    $admin_status_on='';
                        
                                    if(!empty($history_datas->admin_status_on) &&  $history_datas->admin_status_on !='0000-00-00')
                                    {
                                        $admin_status_on=date('d-M-Y',strtotime($history_datas->admin_status_on));
                                    }

                                  //  echo $auRec[$i]->item_name.' ad '.$history_datas->adminStatus.' mg '.$history_datas->managerStatus.' sts '.$orderStatus.'<br>';
                                   

                                    $data .= '"' . $date_of_order . '"';
                                    $data .= "\t";
                                    $data .= '"' . $auRec[$i]->time_of_order . '"';
                                    $data .= "\t";
                                    $data .= '"' . $auRec[$i]->order_id . '"';
                                    $data .= "\t";
                                    $data .= '"' . $auRec[$i]->acc_total_invoice_amount . '"';
                                    $data .= "\t";
                                    $data .= '"' . $auRec[$i]->distributor_code . '"';
                                    $data .= "\t";
                                    $data .= '"' . $auRec[$i]->distributor_name . '"';
                                    $data .= "\t";
                                    $data .= '"' . $auRec[$i]->zone_name . '"';
                                    $data .= "\t";
                                    $data .= '"' . $auRec[$i]->state_name . '"';
                                    $data .= "\t";
                                    $data .= '"' . $auRec[$i]->city_name . '"';
                                    $data .= "\t";
                                    $data .= '"' . $auRec[$i]->salesman_name . '"';
                                    $data .= "\t";
                                    $data .= '"' . $auRec[$i]->employee_code . '"';
                                    $data .= "\t";
                                    $data .= '"' . $auRec[$i]->sal_desg . '"';
                                    $data .= "\t";
                                    $data .= '"' . $manager_status. '"';
                                    $data .= "\t";
                                    $data .= '"' . $auRec[$i]->mngr_name . '"';
                                    $data .= "\t";
                                    $data .= '"' . $history_datas->rejected_reason_by_manager . '"';
                                    $data .= "\t";
                                    $data .= '"' . $manager_status_on . '"';
                                    $data .= "\t";
                                    $data .= '"' . $admin_status . '"';
                                    $data .= "\t";
                                    $data .= '"' . 'Admin' . '"';
                                    $data .= "\t";
                                    $data .= '"' . $history_datas->rejected_reason_by_admin . '"';
                                    $data .= "\t";
                                    $data .= '"' . $admin_status_on . '"';
                                    $data .= "\t";
                                    $data .= '"' . $order_by . '"';
                                    $data .= "\t";
                                    $data .= '"' . $auRec[$i]->retailer_location . '"';
                                    $data .= "\t";
                                    $data .= '"' . $auRec[$i]->retailer_address . '"';
                                    $data .= "\t";
                                    $data .= '"' . $auRec[$i]->item_name . '"';
                                    $data .= "\t";
                                    $data .= '"' . $auRec[$i]->item_code . '"';
                                    $data .= "\t";
                                    $data .= '"' . $auRec[$i]->quantity . '"';
                                    $data .= "\t";
                                    $data .= '"' . $admin_apprvd_amt . '"';
                                    $data .= "\t";
                                    $data .= '"' . $rejected_qty_by_admin . '"';
                                    $data .= "\t";
                                    $data .= '"' . $history_datas->accepted_qty_by_manager . '"';
                                    $data .= "\t";
                                    $data .= '"' . $history_datas->rejected_qty_by_manager . '"';
                                    $data .= "\t";
                                    $data .= '"' . $updated_qty . '"';
                                    $data .= "\t";
                                    $data .= '"' . $prices . '"';
                                    $data .= "\t";
                                    $data .= '"' . $auRec[$i]->price . '"';
                                    $data .= "\t";
                                    $data .= '"' . $orderStatus . '"';
                                    $data .= "\n";



                                }

                            }

                            header("Content-type: application/octet-stream");
                            header("Content-Disposition: attachment; filename=\"distributors_accept_reject_order_details_export.xls\"");
                            echo $data;
                            exit;                  

}





?>





